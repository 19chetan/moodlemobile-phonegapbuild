{"version":3,"sources":["../../src/providers/sites.ts","../../src/providers/logger.ts","../../src/providers/utils/utils.ts","../../src/providers/utils/dom.ts","../../src/providers/app.ts","../../src/providers/utils/text.ts","../../src/core/course/providers/course.ts","../../src/providers/events.ts","../../src/core/constants.ts","../../src/providers/file.ts","../../src/components/components.module.ts","../../src/core/course/providers/helper.ts","../../src/core/courses/providers/courses.ts","../../src/providers/filepool.ts","../../src/directives/directives.module.ts","../../src/providers/utils/url.ts","../../src/core/contentlinks/classes/base-handler.ts","../../src/providers/utils/mimetype.ts","../../src/core/contentlinks/providers/helper.ts","../../src/core/contentlinks/providers/delegate.ts","../../src/core/user/providers/user-delegate.ts","../../src/core/siteplugins/providers/siteplugins.ts","../../src/configconstants.ts","../../src/core/login/providers/helper.ts","../../src/providers/utils/time.ts","../../src/core/course/providers/module-prefetch-delegate.ts","../../src/core/course/providers/module-delegate.ts","../../src/core/user/providers/user.ts","../../src/providers/init.ts","../../src/classes/delegate.ts","../../src/addon/messages/providers/messages.ts","../../src/core/mainmenu/providers/delegate.ts","../../src/providers/config.ts","../../src/providers/local-notifications.ts","../../src/core/grades/providers/grades.ts","../../src/core/course/providers/format-delegate.ts","../../src/core/user/providers/user-profile-field-delegate.ts","../../src/core/siteplugins/components/plugin-content/plugin-content.ts","../../src/pipes/pipes.module.ts","../../src/core/course/components/components.module.ts","../../src/core/fileuploader/providers/helper.ts","../../src/providers/lang.ts","../../src/core/contentlinks/classes/module-index-handler.ts","../../src/core/course/providers/options-delegate.ts","../../src/core/course/classes/module-prefetch-handler.ts","../../src/addon/mod/page/providers/page.ts","../../src/addon/mod/resource/providers/resource.ts","../../src/core/siteplugins/classes/base-handler.ts","../../src/addon/competency/providers/competency.ts","../../src/providers/plugin-file-delegate.ts","../../src/core/course/classes/main-resource-component.ts","../../src/addon/mod/book/providers/book.ts","../../src/addon/badges/providers/badges.ts","../../src/addon/pushnotifications/providers/delegate.ts","../../src/providers/ws.ts","../../src/core/sitehome/providers/sitehome.ts","../../src/providers/file-helper.ts","../../src/core/fileuploader/providers/fileuploader.ts","../../src/addon/mod/folder/providers/folder.ts","../../src/addon/mod/resource/providers/helper.ts","../../src/addon/mod/url/providers/url.ts","../../src/core/emulator/providers/capture-helper.ts","webpack:///electron (ignored)?d36e","../../src/components/split-view/split-view.ts","../../src/addon/files/providers/files.ts","../../src/core/courses/providers/my-overview.ts","../../src/core/siteplugins/components/module-index/module-index.ts","../../src/providers/db.ts","webpack:///electron (ignored)?751c","../../src/components/dynamic-component/dynamic-component.ts","../../src/core/fileuploader/providers/delegate.ts","../../src/addon/messages/providers/messages-offline.ts","../../src/core/course/components/unsupported-module/unsupported-module.ts","../../src/addon/mod/page/providers/helper.ts","../../src/addon/mod/url/providers/helper.ts","../../src/core/compile/providers/compile.ts","../../src/core/course/formats/singleactivity/components/singleactivity.ts","../../src/core/siteplugins/components/course-option/course-option.ts","../../src/core/siteplugins/components/course-format/course-format.ts","../../src/addon/calendar/providers/calendar.ts","../../src/core/user/components/components.module.ts","../../src/core/grades/providers/helper.ts","../../src/addon/competency/providers/helper.ts","../../src/addon/messages/providers/sync.ts","../../src/addon/mod/book/components/index/index.ts","../../src/addon/mod/folder/components/index/index.ts","../../src/addon/mod/page/components/index/index.ts","../../src/addon/mod/resource/components/index/index.ts","../../src/addon/mod/url/components/index/index.ts","../../src/addon/pushnotifications/providers/pushnotifications.ts","../../src/core/sharedfiles/providers/sharedfiles.ts","../../src/core/sharedfiles/providers/helper.ts","../../src/core/settings/providers/delegate.ts","../../node_modules/@angular/core/esm5 lazy","../../src/app/app.module.ts","../../src lazy","../../src/classes/sqlitedb.ts","../../src/providers/sites-factory.ts","../../src/classes/interceptor.ts","../../src/directives/external-content.ts","../../src/directives/link.ts","../../src/components/context-menu/context-menu.ts","../../src/components/context-menu/context-menu-popover.ts","../../src/components/tabs/tabs.ts","../../src/providers/groups.ts","../../src/addon/competency/components/course/course.ts","../../src/classes/base-sync.ts","../../src/providers/sync.ts","../../src/classes/cache.ts","../../src/core/course/providers/default-format.ts","../../src/addon/mod/book/providers/prefetch-handler.ts","../../src/addon/mod/book/components/toc-popover/toc-popover.ts","../../src/addon/mod/folder/providers/helper.ts","../../src/addon/mod/page/providers/prefetch-handler.ts","../../src/addon/mod/resource/providers/prefetch-handler.ts","../../src/core/grades/components/course/course.ts","../../src/core/user/components/participants/participants.ts","../../src/core/compile/components/compile-html/compile-html.ts","../../src/core/contentlinks/contentlinks.module.ts","../../src/core/course/course.module.ts","../../src/core/course/formats/singleactivity/providers/handler.ts","../../src/core/courses/courses.module.ts","../../src/core/fileuploader/fileuploader.module.ts","../../src/core/grades/grades.module.ts","../../src/core/login/login.module.ts","../../src/core/mainmenu/mainmenu.module.ts","../../src/core/sharedfiles/sharedfiles.module.ts","../../src/core/sitehome/sitehome.module.ts","../../src/core/user/user.module.ts","../../src/core/emulator/emulator.module.ts","../../src/core/emulator/providers/file-transfer.ts","webpack:///electron (ignored)?d75f","../../src/core/siteplugins/classes/call-ws-click-directive.ts","../../src/core/siteplugins/classes/call-ws-directive.ts","../../src/core/siteplugins/components/user-profile-field/user-profile-field.ts","../../src/providers/cron.ts","../../src/addon/userprofilefield/checkbox/component/checkbox.ts","../../src/addon/userprofilefield/datetime/component/datetime.ts","../../src/addon/userprofilefield/menu/component/menu.ts","../../src/addon/userprofilefield/text/component/text.ts","../../src/addon/userprofilefield/textarea/component/textarea.ts","../../src/addon/messages/providers/user-add-contact-handler.ts","../../src/addon/messages/providers/user-block-contact-handler.ts","../../src/core/courses/components/components.module.ts","../../src/addon/calendar/providers/helper.ts","../../src/core/sitehome/components/components.module.ts","../../src/core/grades/components/components.module.ts","../../src/core/mainmenu/providers/mainmenu.ts","../../src/core/siteplugins/components/components.module.ts","../../src/core/user/providers/helper.ts","../../src/classes/animations.ts","../../src/components/course-picker-menu/course-picker-menu-popover.ts","../../src/addon/competency/components/components.module.ts","../../src/addon/files/providers/helper.ts","../../src/addon/mod/book/components/components.module.ts","../../src/core/course/components/format/format.ts","../../src/addon/mod/folder/components/components.module.ts","../../src/addon/mod/page/components/components.module.ts","../../src/addon/mod/resource/components/components.module.ts","../../src/addon/mod/url/components/components.module.ts","../../src/app/main.ts","../../src/directives/auto-focus.ts","../../node_modules/moment/locale ^/.//.*$","../../src/core/emulator/classes/sqlitedb.ts","../../src/directives/download-file.ts","../../src/classes/site.ts","../../src/directives/format-text.ts","../../src/directives/keep-keyboard.ts","../../src/directives/user-link.ts","../../src/directives/auto-rows.ts","../../src/directives/long-press.ts","../../src/pipes/bytes-to-size.ts","../../src/pipes/create-links.ts","../../src/pipes/date-day-or-time.ts","../../src/pipes/duration.ts","../../src/pipes/format-date.ts","../../src/pipes/no-tags.ts","../../src/pipes/seconds-to-hms.ts","../../src/pipes/time-ago.ts","../../src/pipes/to-locale-string.ts","../../src/components/loading/loading.ts","../../src/components/mark-required/mark-required.ts","../../src/components/input-errors/input-errors.ts","../../src/components/show-password/show-password.ts","../../src/components/iframe/iframe.ts","../../src/components/progress-bar/progress-bar.ts","../../src/components/empty-box/empty-box.ts","../../src/components/search-box/search-box.ts","../../src/components/file/file.ts","../../src/components/context-menu/context-menu-item.ts","../../src/components/chrono/chrono.ts","../../src/components/local-file/local-file.ts","../../src/components/site-picker/site-picker.ts","../../src/components/tabs/tab.ts","../../src/components/rich-text-editor/rich-text-editor.ts","../../src/components/navbar-buttons/navbar-buttons.ts","../../src/components/send-message-form/send-message-form.ts","../../src/core/course/components/module/module.ts","../../src/core/course/components/module-completion/module-completion.ts","../../src/core/course/components/module-description/module-description.ts","../../src/addon/mod/book/components/navigation-arrows/navigation-arrows.ts","../../src/core/courses/components/course-progress/course-progress.ts","../../src/core/courses/components/course-list-item/course-list-item.ts","../../src/core/courses/components/overview-events/overview-events.ts","../../src/core/sitehome/components/index/index.ts","../../src/core/sitehome/components/all-course-list/all-course-list.ts","../../src/core/sitehome/components/categories/categories.ts","../../src/core/sitehome/components/course-search/course-search.ts","../../src/core/sitehome/components/enrolled-course-list/enrolled-course-list.ts","../../src/core/sitehome/components/news/news.ts","../../src/core/user/components/user-profile-field/user-profile-field.ts","../../src/core/compile/components/compile-html/compile-html.module.ts","../../src/core/course/formats/singleactivity/singleactivity.module.ts","../../src/core/course/formats/social/social.module.ts","../../src/core/course/formats/social/providers/handler.ts","../../src/core/course/formats/topics/topics.module.ts","../../src/core/course/formats/topics/providers/handler.ts","../../src/core/course/formats/weeks/weeks.module.ts","../../src/core/course/formats/weeks/providers/handler.ts","../../src/core/courses/providers/mainmenu-handler.ts","../../src/core/courses/providers/course-link-handler.ts","../../src/core/courses/providers/courses-index-link-handler.ts","../../src/core/courses/providers/my-overview-link-handler.ts","../../src/core/fileuploader/providers/album-handler.ts","../../src/core/fileuploader/providers/audio-handler.ts","../../src/core/fileuploader/providers/camera-handler.ts","../../src/core/fileuploader/providers/file-handler.ts","../../src/core/fileuploader/providers/video-handler.ts","../../src/core/grades/providers/mainmenu-handler.ts","../../src/core/grades/providers/course-option-handler.ts","../../src/core/grades/providers/user-link-handler.ts","../../src/core/grades/providers/overview-link-handler.ts","../../src/core/grades/providers/user-handler.ts","../../src/core/sharedfiles/providers/upload-handler.ts","../../src/core/sitehome/providers/mainmenu-handler.ts","../../src/core/sitehome/providers/index-link-handler.ts","../../src/core/user/providers/user-handler.ts","../../src/core/user/providers/user-link-handler.ts","../../src/core/user/providers/course-option-handler.ts","../../src/core/user/providers/participants-link-handler.ts","../../src/core/emulator/providers/camera.ts","../../src/core/emulator/providers/clipboard.ts","../../src/core/emulator/providers/file.ts","../../src/core/emulator/providers/globalization.ts","../../src/core/emulator/providers/inappbrowser.ts","../../src/core/emulator/classes/inappbrowserobject.ts","../../src/core/emulator/providers/local-notifications.ts","../../src/core/emulator/providers/media-capture.ts","../../src/core/emulator/providers/network.ts","../../src/core/emulator/providers/zip.ts","../../util (ignored)","../../src/core/emulator/providers/helper.ts","../../electron (ignored)","../../src/core/contentlinks/classes/module-grade-handler.ts","../../src/core/course/directives/directives.module.ts","../../src/core/course/directives/download-module-main-file.ts","../../src/core/siteplugins/directives/directives.module.ts","../../src/core/siteplugins/directives/call-ws.ts","../../src/core/siteplugins/directives/call-ws-new-content.ts","../../src/core/siteplugins/directives/call-ws-on-load.ts","../../src/core/siteplugins/directives/new-content.ts","../../src/app/app.component.ts","../../src/providers/file-session.ts","../../src/providers/update-manager.ts","../../src/core/settings/settings.module.ts","../../src/core/siteplugins/siteplugins.module.ts","../../src/core/siteplugins/providers/helper.ts","../../src/core/siteplugins/classes/course-format-handler.ts","../../src/core/siteplugins/classes/course-option-handler.ts","../../src/core/siteplugins/classes/module-handler.ts","../../src/core/siteplugins/classes/module-prefetch-handler.ts","../../src/core/siteplugins/classes/main-menu-handler.ts","../../src/core/siteplugins/classes/user-handler.ts","../../src/core/siteplugins/classes/user-profile-field-handler.ts","../../src/core/compile/compile.module.ts","../../src/addon/badges/badges.module.ts","../../src/addon/badges/providers/user-handler.ts","../../src/addon/badges/providers/mybadges-link-handler.ts","../../src/addon/badges/providers/badge-link-handler.ts","../../src/addon/calendar/calendar.module.ts","../../src/addon/calendar/providers/mainmenu-handler.ts","../../src/addon/competency/competency.module.ts","../../src/addon/competency/providers/course-option-handler.ts","../../src/addon/competency/providers/mainmenu-handler.ts","../../src/addon/competency/providers/user-handler.ts","../../src/addon/userprofilefield/userprofilefield.module.ts","../../src/addon/userprofilefield/checkbox/checkbox.module.ts","../../src/addon/userprofilefield/checkbox/providers/handler.ts","../../src/addon/userprofilefield/datetime/datetime.module.ts","../../src/addon/userprofilefield/datetime/providers/handler.ts","../../src/addon/userprofilefield/menu/menu.module.ts","../../src/addon/userprofilefield/menu/providers/handler.ts","../../src/addon/userprofilefield/text/text.module.ts","../../src/addon/userprofilefield/text/providers/handler.ts","../../src/addon/userprofilefield/textarea/textarea.module.ts","../../src/addon/userprofilefield/textarea/providers/handler.ts","../../src/addon/files/files.module.ts","../../src/addon/files/providers/mainmenu-handler.ts","../../src/addon/mod/book/book.module.ts","../../src/addon/mod/book/providers/module-handler.ts","../../src/addon/mod/book/providers/link-handler.ts","../../src/addon/mod/label/label.module.ts","../../src/addon/mod/label/providers/module-handler.ts","../../src/addon/mod/label/providers/link-handler.ts","../../src/addon/mod/resource/resource.module.ts","../../src/addon/mod/resource/providers/module-handler.ts","../../src/addon/mod/resource/providers/link-handler.ts","../../src/addon/mod/resource/providers/pluginfile-handler.ts","../../src/addon/mod/folder/folder.module.ts","../../src/addon/mod/folder/providers/module-handler.ts","../../src/addon/mod/folder/providers/prefetch-handler.ts","../../src/addon/mod/folder/providers/link-handler.ts","../../src/addon/mod/folder/providers/pluginfile-handler.ts","../../src/addon/mod/page/page.module.ts","../../src/addon/mod/page/providers/module-handler.ts","../../src/addon/mod/page/providers/link-handler.ts","../../src/addon/mod/page/providers/pluginfile-handler.ts","../../src/addon/mod/url/url.module.ts","../../src/addon/mod/url/providers/module-handler.ts","../../src/addon/mod/url/providers/link-handler.ts","../../src/addon/messages/messages.module.ts","../../src/addon/messages/providers/mainmenu-handler.ts","../../src/addon/messages/providers/user-send-message-handler.ts","../../src/addon/messages/providers/discussion-link-handler.ts","../../src/addon/messages/providers/index-link-handler.ts","../../src/addon/messages/providers/sync-cron-handler.ts","../../src/addon/messages/providers/settings-handler.ts","../../src/addon/pushnotifications/pushnotifications.module.ts","../../src/addon/remotethemes/remotethemes.module.ts","../../src/addon/remotethemes/providers/remotethemes.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from './app';\nimport { CoreEventsProvider } from './events';\nimport { CoreLoggerProvider } from './logger';\nimport { CoreSitesFactoryProvider } from './sites-factory';\nimport { CoreTextUtilsProvider } from './utils/text';\nimport { CoreUrlUtilsProvider } from './utils/url';\nimport { CoreConstants } from '@core/constants';\nimport { CoreConfigConstants } from '../configconstants';\nimport { CoreSite } from '@classes/site';\nimport { SQLiteDB } from '@classes/sqlitedb';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n/**\n * Response of checking if a site exists and its configuration.\n */\nexport interface CoreSiteCheckResponse {\n    /**\n     * Code to identify the authentication method to use.\n     * @type {number}\n     */\n    code: number;\n\n    /**\n     * Site url to use (might have changed during the process).\n     * @type {string}\n     */\n    siteUrl: string;\n\n    /**\n     * Service used.\n     * @type {string}\n     */\n    service: string;\n\n    /**\n     * Code of the warning message to show to the user.\n     * @type {string}\n     */\n    warning?: string;\n\n    /**\n     * Site public config (if available).\n     * @type {any}\n     */\n    config?: any;\n}\n\n/**\n * Response of getting user token.\n */\nexport interface CoreSiteUserTokenResponse {\n    /**\n     * User token.\n     * @type {string}\n     */\n    token: string;\n\n    /**\n     * Site URL to use.\n     * @type {string}\n     */\n    siteUrl: string;\n\n    /**\n     * User private token.\n     * @type {string}\n     */\n    privateToken?: string;\n}\n\n/**\n * Site's basic info.\n */\nexport interface CoreSiteBasicInfo {\n    /**\n     * Site ID.\n     * @type {string}\n     */\n    id: string;\n\n    /**\n     * Site URL.\n     * @type {string}\n     */\n    siteUrl: string;\n\n    /**\n     * User's full name.\n     * @type {string}\n     */\n    fullName: string;\n\n    /**\n     * Site's name.\n     * @type {string}\n     */\n    siteName: string;\n\n    /**\n     * User's avatar.\n     * @type {string}\n     */\n    avatar: string;\n\n    /**\n     * Badge to display in the site.\n     * @type {number}\n     */\n    badge?: number;\n}\n\n/*\n * Service to manage and interact with sites.\n * It allows creating tables in the databases of all sites. Each service or component should be responsible of creating\n * their own database tables. Example:\n *\n * constructor(sitesProvider: CoreSitesProvider) {\n *     this.sitesProvider.createTableFromSchema(this.tableSchema);\n *\n * This provider will automatically create the tables in the databases of all the instantiated sites, and also to the\n * databases of sites instantiated from now on.\n*/\n@Injectable()\nexport class CoreSitesProvider {\n    // Variables for the database.\n    protected SITES_TABLE = 'sites';\n    protected CURRENT_SITE_TABLE = 'current_site';\n    protected appTablesSchema = [\n        {\n            name: this.SITES_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'TEXT',\n                    primaryKey: true\n                },\n                {\n                    name: 'siteUrl',\n                    type: 'TEXT',\n                    notNull: true\n                },\n                {\n                    name: 'token',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'info',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'privateToken',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'config',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'loggedOut',\n                    type: 'INTEGER'\n                }\n            ]\n        },\n        {\n            name: this.CURRENT_SITE_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'INTEGER',\n                    primaryKey: true\n                },\n                {\n                    name: 'siteId',\n                    type: 'TEXT',\n                    notNull: true,\n                    unique: true\n                }\n            ]\n        }\n    ];\n\n    // Constants to validate a site version.\n    protected VALID_VERSION = 1;\n    protected LEGACY_APP_VERSION = 0;\n    protected INVALID_VERSION = -1;\n\n    protected logger;\n    protected services = {};\n    protected sessionRestored = false;\n    protected currentSite: CoreSite;\n    protected sites: { [s: string]: CoreSite } = {};\n    protected appDB: SQLiteDB;\n    protected siteTablesSchemas = []; // Schemas for site tables. Other providers can add schemas in here.\n\n    constructor(logger: CoreLoggerProvider, private http: HttpClient, private sitesFactory: CoreSitesFactoryProvider,\n            private appProvider: CoreAppProvider, private translate: TranslateService, private urlUtils: CoreUrlUtilsProvider,\n            private eventsProvider: CoreEventsProvider,  private textUtils: CoreTextUtilsProvider) {\n        this.logger = logger.getInstance('CoreSitesProvider');\n\n        this.appDB = appProvider.getDB();\n        this.appDB.createTablesFromSchema(this.appTablesSchema);\n    }\n\n    /**\n     * Get the demo data for a certain \"name\" if it is a demo site.\n     *\n     * @param {string} name Name of the site to check.\n     * @return {any} Site data if it's a demo site, undefined otherwise.\n     */\n    getDemoSiteData(name: string): any {\n        const demoSites = CoreConfigConstants.demo_sites;\n        if (typeof demoSites != 'undefined' && typeof demoSites[name] != 'undefined') {\n            return demoSites[name];\n        }\n    }\n\n    /**\n     * Check if a site is valid and if it has specifics settings for authentication (like force to log in using the browser).\n     * It will test both protocols if the first one fails: http and https.\n     *\n     * @param {string} siteUrl URL of the site to check.\n     * @param {string} [protocol=https://] Protocol to use first.\n     * @return {Promise<CoreSiteCheckResponse>} A promise resolved when the site is checked.\n     */\n    checkSite(siteUrl: string, protocol: string = 'https://'): Promise<CoreSiteCheckResponse> {\n        // The formatURL function adds the protocol if is missing.\n        siteUrl = this.urlUtils.formatURL(siteUrl);\n\n        if (!this.urlUtils.isHttpURL(siteUrl)) {\n            return Promise.reject(this.translate.instant('core.login.invalidsite'));\n        } else if (!this.appProvider.isOnline()) {\n            return Promise.reject(this.translate.instant('core.networkerrormsg'));\n        } else {\n            return this.checkSiteWithProtocol(siteUrl, protocol).catch((error) => {\n                // Do not continue checking if a critical error happened.\n                if (error.critical) {\n                    return Promise.reject(error.error);\n                }\n\n                // Retry with the other protocol.\n                protocol = protocol == 'https://' ? 'http://' : 'https://';\n\n                return this.checkSiteWithProtocol(siteUrl, protocol).catch((secondError) => {\n                    // Site doesn't exist.\n                    if (secondError.error) {\n                        return Promise.reject(secondError.error);\n                    } else if (error.error) {\n                        return Promise.reject(error.error);\n                    }\n\n                    return Promise.reject(this.translate.instant('core.login.checksiteversion'));\n                });\n            });\n        }\n    }\n\n    /**\n     * Helper function to check if a site is valid and if it has specifics settings for authentication.\n     *\n     * @param {string} siteUrl URL of the site to check.\n     * @param {string} protocol Protocol to use.\n     * @return {Promise<CoreSiteCheckResponse>} A promise resolved when the site is checked.\n     */\n    checkSiteWithProtocol(siteUrl: string, protocol: string): Promise<CoreSiteCheckResponse> {\n        let publicConfig;\n\n        // Now, replace the siteUrl with the protocol.\n        siteUrl = siteUrl.replace(/^http(s)?\\:\\/\\//i, protocol);\n\n        return this.siteExists(siteUrl).catch((error) => {\n            // Do not continue checking if WS are not enabled.\n            if (error.errorcode && error.errorcode == 'enablewsdescription') {\n                return rejectWithCriticalError(error.error, error.errorcode);\n            }\n\n            // Site doesn't exist. Try to add or remove 'www'.\n            const treatedUrl = this.urlUtils.addOrRemoveWWW(siteUrl);\n\n            return this.siteExists(treatedUrl).then(() => {\n                // Success, use this new URL as site url.\n                siteUrl = treatedUrl;\n            }).catch((secondError) => {\n                // Do not continue checking if WS are not enabled.\n                if (secondError.errorcode && secondError.errorcode == 'enablewsdescription') {\n                    return rejectWithCriticalError(secondError.error, secondError.errorcode);\n                }\n\n                error = secondError || error;\n\n                return Promise.reject({ error: typeof error == 'object' ? error.error : error });\n            });\n        }).then(() => {\n            // Create a temporary site to check if local_mobile is installed.\n            const temporarySite = this.sitesFactory.makeSite(undefined, siteUrl);\n\n            return temporarySite.checkLocalMobilePlugin().then((data) => {\n                data.service = data.service || CoreConfigConstants.wsservice;\n                this.services[siteUrl] = data.service; // No need to store it in DB.\n\n                if (data.coreSupported ||\n                    (data.code != CoreConstants.LOGIN_SSO_CODE && data.code != CoreConstants.LOGIN_SSO_INAPP_CODE)) {\n                    // SSO using local_mobile not needed, try to get the site public config.\n                    return temporarySite.getPublicConfig().then((config): any => {\n                        publicConfig = config;\n\n                        // Check that the user can authenticate.\n                        if (!config.enablewebservices) {\n                            return rejectWithCriticalError(this.translate.instant('core.login.webservicesnotenabled'));\n                        } else if (!config.enablemobilewebservice) {\n                            return rejectWithCriticalError(this.translate.instant('core.login.mobileservicesnotenabled'));\n                        } else if (config.maintenanceenabled) {\n                            let message = this.translate.instant('core.sitemaintenance');\n                            if (config.maintenancemessage) {\n                                message += config.maintenancemessage;\n                            }\n\n                            return rejectWithCriticalError(message);\n                        }\n\n                        // Everything ok.\n                        if (data.code === 0) {\n                            data.code = config.typeoflogin;\n                        }\n\n                        return data;\n                    }, (error): any => {\n                        // Error, check if not supported.\n                        if (error.available === 1) {\n                            // Service supported but an error happened. Return error.\n                            return Promise.reject({ error: error.error });\n                        }\n\n                        return data;\n                    });\n                }\n\n                return data;\n            }).then((data) => {\n                siteUrl = temporarySite.getURL();\n\n                return { siteUrl: siteUrl, code: data.code, warning: data.warning, service: data.service, config: publicConfig };\n            });\n        });\n\n        // Return a rejected promise with a \"critical\" error.\n        function rejectWithCriticalError(message: string, errorCode?: string): Promise<never> {\n            return Promise.reject({\n                error: message,\n                errorcode: errorCode,\n                critical: true\n            });\n        }\n    }\n\n    /**\n     * Check if a site exists.\n     *\n     * @param  {string} siteUrl URL of the site to check.\n     * @return {Promise} A promise to be resolved if the site exists.\n     */\n    siteExists(siteUrl: string): Promise<void> {\n        const data: any = {};\n\n        if (!this.appProvider.isMobile()) {\n            // Send fake parameters for CORS. This is only needed in browser.\n            data.username = 'a';\n            data.password = 'b';\n            data.service = 'c';\n        }\n\n        const promise = this.http.post(siteUrl + '/login/token.php', data).timeout(CoreConstants.WS_TIMEOUT).toPromise();\n\n        return promise.catch((error) => {\n            return Promise.reject(error.message);\n        }).then((data: any) => {\n            if (data.errorcode && (data.errorcode == 'enablewsdescription' || data.errorcode == 'requirecorrectaccess')) {\n                return Promise.reject({ errorcode: data.errorcode, error: data.error });\n            } else if (data.error && data.error == 'Web services must be enabled in Advanced features.') {\n                return Promise.reject({ errorcode: 'enablewsdescription', error: data.error });\n            }\n            // Other errors are not being checked because invalid login will be always raised and we cannot differ them.\n        });\n    }\n\n    /**\n     * Gets a user token from the server.\n     *\n     * @param {string} siteUrl The site url.\n     * @param {string} username User name.\n     * @param {string} password Password.\n     * @param {string} [service] Service to use. If not defined, it will be searched in memory.\n     * @param {boolean} [retry] Whether we are retrying with a prefixed URL.\n     * @return {Promise<CoreSiteUserTokenResponse>} A promise resolved when the token is retrieved.\n     */\n    getUserToken(siteUrl: string, username: string, password: string, service?: string, retry?: boolean)\n            : Promise<CoreSiteUserTokenResponse> {\n        if (!this.appProvider.isOnline()) {\n            return Promise.reject(this.translate.instant('core.networkerrormsg'));\n        }\n\n        if (!service) {\n            service = this.determineService(siteUrl);\n        }\n\n        const params = {\n                username: username,\n                password: password,\n                service: service\n            },\n            promise = this.http.post(siteUrl + '/login/token.php', params).timeout(CoreConstants.WS_TIMEOUT).toPromise();\n\n        return promise.then((data: any): any => {\n            if (typeof data == 'undefined') {\n                return Promise.reject(this.translate.instant('core.cannotconnect'));\n            } else {\n                if (typeof data.token != 'undefined') {\n                    return { token: data.token, siteUrl: siteUrl, privateToken: data.privatetoken };\n                } else {\n                    if (typeof data.error != 'undefined') {\n                        // We only allow one retry (to avoid loops).\n                        if (!retry && data.errorcode == 'requirecorrectaccess') {\n                            siteUrl = this.urlUtils.addOrRemoveWWW(siteUrl);\n\n                            return this.getUserToken(siteUrl, username, password, service, true);\n                        } else if (typeof data.errorcode != 'undefined') {\n                            return Promise.reject({ error: data.error, errorcode: data.errorcode });\n                        } else {\n                            return Promise.reject(data.error);\n                        }\n                    } else {\n                        return Promise.reject(this.translate.instant('core.login.invalidaccount'));\n                    }\n                }\n            }\n        }, () => {\n            return Promise.reject(this.translate.instant('core.cannotconnect'));\n        });\n    }\n\n    /**\n     * Add a new site to the site list and authenticate the user in this site.\n     *\n     * @param {string} siteUrl The site url.\n     * @param {string} token User's token.\n     * @param {string} [privateToken=''] User's private token.\n     * @return {Promise<any>} A promise resolved when the site is added and the user is authenticated.\n     */\n    newSite(siteUrl: string, token: string, privateToken: string = ''): Promise<any> {\n        // Create a \"candidate\" site to fetch the site info.\n        const candidateSite = this.sitesFactory.makeSite(undefined, siteUrl, token, undefined, privateToken);\n\n        return candidateSite.fetchSiteInfo().then((info) => {\n            const result = this.isValidMoodleVersion(info);\n            if (result == this.VALID_VERSION) {\n                // Set site ID and info.\n                const siteId = this.createSiteID(info.siteurl, info.username);\n                candidateSite.setId(siteId);\n                candidateSite.setInfo(info);\n\n                // Try to get the site config.\n                return this.getSiteConfig(candidateSite).then((config) => {\n                    candidateSite.setConfig(config);\n                    // Add site to sites list.\n                    this.addSite(siteId, siteUrl, token, info, privateToken, config);\n                    // Turn candidate site into current site.\n                    this.currentSite = candidateSite;\n                    this.sites[siteId] = candidateSite;\n                    // Store session.\n                    this.login(siteId);\n                    this.eventsProvider.trigger(CoreEventsProvider.SITE_ADDED, {}, siteId);\n\n                    if (this.siteTablesSchemas.length) {\n                        // Create tables in the site's database.\n                        candidateSite.getDb().createTablesFromSchema(this.siteTablesSchemas);\n                    }\n\n                    return siteId;\n                });\n            } else if (result == this.LEGACY_APP_VERSION) {\n                return Promise.reject(this.translate.instant('core.login.legacymoodleversion'));\n            } else {\n                return Promise.reject(this.translate.instant('core.login.invalidmoodleversion'));\n            }\n        });\n    }\n\n    /**\n     * Create a site ID based on site URL and username.\n     *\n     * @param {string} siteUrl The site url.\n     * @param {string} username Username.\n     * @return {string} Site ID.\n     */\n    createSiteID(siteUrl: string, username: string): string {\n        return <string> Md5.hashAsciiStr(siteUrl + username);\n    }\n\n    /**\n     * Function for determine which service we should use (default or extended plugin).\n     *\n     * @param {string} siteUrl The site URL.\n     * @return {string} The service shortname.\n     */\n    determineService(siteUrl: string): string {\n        // We need to try siteUrl in both https or http (due to loginhttps setting).\n\n        // First http://\n        siteUrl = siteUrl.replace('https://', 'http://');\n        if (this.services[siteUrl]) {\n            return this.services[siteUrl];\n        }\n\n        // Now https://\n        siteUrl = siteUrl.replace('http://', 'https://');\n        if (this.services[siteUrl]) {\n            return this.services[siteUrl];\n        }\n\n        // Return default service.\n        return CoreConfigConstants.wsservice;\n    }\n\n    /**\n     * Check for the minimum required version.\n     *\n     * @param {any} info Site info.\n     * @return {number} Either VALID_VERSION, LEGACY_APP_VERSION or INVALID_VERSION.\n     */\n    protected isValidMoodleVersion(info: any): number {\n        if (!info) {\n            return this.INVALID_VERSION;\n        }\n\n        const version24 = 2012120300, // Moodle 2.4 version.\n            release24 = '2.4',\n            version31 = 2016052300,\n            release31 = '3.1';\n\n        // Try to validate by version.\n        if (info.version) {\n            const version = parseInt(info.version, 10);\n            if (!isNaN(version)) {\n                if (version >= version31) {\n                    return this.VALID_VERSION;\n                } else if (version >= version24) {\n                    return this.LEGACY_APP_VERSION;\n                } else {\n                    return this.INVALID_VERSION;\n                }\n            }\n        }\n\n        // We couldn't validate by version number. Let's try to validate by release number.\n        if (info.release) {\n            const matches = info.release.match(/^([\\d|\\.]*)/);\n            if (matches && matches.length > 1) {\n                if (matches[1] >= release31) {\n                    return this.VALID_VERSION;\n                } else if (matches[1] >= release24) {\n                    return this.LEGACY_APP_VERSION;\n                } else {\n                    return this.INVALID_VERSION;\n                }\n            }\n        }\n\n        // Couldn't validate it.\n        return this.INVALID_VERSION;\n    }\n\n    /**\n     * Check if site info is valid. If it's not, return error message.\n     *\n     * @param {any} info Site info.\n     * @return {any} True if valid, object with error message to show and its params if not valid.\n     */\n    protected validateSiteInfo(info: any): any {\n        if (!info.firstname || !info.lastname) {\n            const moodleLink = `<a core-link href=\"${info.siteurl}\">${info.siteurl}</a>`;\n\n            return { error: 'core.requireduserdatamissing', params: { $a: moodleLink } };\n        }\n\n        return true;\n    }\n\n    /**\n     * Saves a site in local DB.\n     *\n     * @param {string} id Site ID.\n     * @param {string} siteUrl Site URL.\n     * @param {string} token User's token in the site.\n     * @param {any} info Site's info.\n     * @param {string} [privateToken=''] User's private token.\n     * @param {any} [config] Site config (from tool_mobile_get_config).\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    addSite(id: string, siteUrl: string, token: string, info: any, privateToken: string = '', config?: any): Promise<any> {\n        const entry = {\n            id: id,\n            siteUrl: siteUrl,\n            token: token,\n            info: info ? JSON.stringify(info) : info,\n            privateToken: privateToken,\n            config: config ? JSON.stringify(config) : config,\n            loggedOut: 0\n        };\n\n        return this.appDB.insertOrUpdateRecord(this.SITES_TABLE, entry, { id: id });\n    }\n\n    /**\n     * Login a user to a site from the list of sites.\n     *\n     * @param {string} siteId ID of the site to load.\n     * @return {Promise}      Promise to be resolved when the site is loaded.\n     */\n    loadSite(siteId: string): Promise<any> {\n        this.logger.debug(`Load site ${siteId}`);\n\n        return this.getSite(siteId).then((site) => {\n            this.currentSite = site;\n            this.login(siteId);\n\n            if (site.isLoggedOut()) {\n                // Logged out, nothing else to do.\n                return;\n            }\n\n            // Check if local_mobile was installed to Moodle.\n            return site.checkIfLocalMobileInstalledAndNotUsed().then(() => {\n                // Local mobile was added. Throw invalid session to force reconnect and create a new token.\n                this.eventsProvider.trigger(CoreEventsProvider.SESSION_EXPIRED, {}, siteId);\n            }, () => {\n                // Update site info. We don't block the UI.\n                this.updateSiteInfo(siteId);\n            });\n        });\n    }\n\n    /**\n     * Get current site.\n     *\n     * @return {CoreSite} Current site.\n     */\n    getCurrentSite(): CoreSite {\n        return this.currentSite;\n    }\n\n    /**\n     * Get the site home ID of the current site.\n     *\n     * @return {number} Current site home ID.\n     */\n    getCurrentSiteHomeId(): number {\n        if (this.currentSite) {\n            return this.currentSite.getSiteHomeId();\n        } else {\n            return 1;\n        }\n    }\n\n    /**\n     * Get current site ID.\n     *\n     * @return {string} Current site ID.\n     */\n    getCurrentSiteId(): string {\n        if (this.currentSite) {\n            return this.currentSite.getId();\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Get current site User ID.\n     *\n     * @return {number} Current site User ID.\n     */\n    getCurrentSiteUserId(): number {\n        if (this.currentSite) {\n            return this.currentSite.getUserId();\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * Check if the user is logged in a site.\n     *\n     * @return {boolean} Whether the user is logged in a site.\n     */\n    isLoggedIn(): boolean {\n        return typeof this.currentSite != 'undefined' && typeof this.currentSite.token != 'undefined' &&\n            this.currentSite.token != '';\n    }\n\n    /**\n     * Delete a site from the sites list.\n     *\n     * @param {string} siteId ID of the site to delete.\n     * @return {Promise<any>} Promise to be resolved when the site is deleted.\n     */\n    deleteSite(siteId: string): Promise<any> {\n        this.logger.debug(`Delete site ${siteId}`);\n\n        if (typeof this.currentSite != 'undefined' && this.currentSite.id == siteId) {\n            this.logout();\n        }\n\n        return this.getSite(siteId).then((site: CoreSite) => {\n            return site.deleteDB().then(() => {\n                // Site DB deleted, now delete the app from the list of sites.\n                delete this.sites[siteId];\n\n                return this.appDB.deleteRecords(this.SITES_TABLE, { id: siteId }).then(() => {\n                    // Site deleted from sites list, now delete the folder.\n                    return site.deleteFolder();\n                }, () => {\n                    // DB remove shouldn't fail, but we'll go ahead even if it does.\n                    return site.deleteFolder();\n                }).then(() => {\n                    this.eventsProvider.trigger(CoreEventsProvider.SITE_DELETED, site, siteId);\n                });\n            });\n        });\n    }\n\n    /**\n     * Check if there are sites stored.\n     *\n     * @return {Promise<boolean>} Promise resolved with true if there are sites and false if there aren't.\n     */\n    hasSites(): Promise<boolean> {\n        return this.appDB.countRecords(this.SITES_TABLE).then((count) => {\n            return count > 0;\n        });\n    }\n\n    /**\n     * Returns a site object.\n     *\n     * @param {string} [siteId] The site ID. If not defined, current site (if available).\n     * @return {Promise<CoreSite>} Promise resolved with the site.\n     */\n    getSite(siteId?: string): Promise<CoreSite> {\n        if (!siteId) {\n            return this.currentSite ? Promise.resolve(this.currentSite) : Promise.reject(null);\n        } else if (this.currentSite && this.currentSite.getId() == siteId) {\n            return Promise.resolve(this.currentSite);\n        } else if (typeof this.sites[siteId] != 'undefined') {\n            return Promise.resolve(this.sites[siteId]);\n        } else {\n            // Retrieve and create the site.\n            return this.appDB.getRecord(this.SITES_TABLE, { id: siteId }).then((data) => {\n                return this.makeSiteFromSiteListEntry(data);\n            });\n        }\n    }\n\n    /**\n     * Create a site from an entry of the sites list DB. The new site is added to the list of \"cached\" sites: this.sites.\n     *\n     * @param {any} entry Site list entry.\n     * @return {CoreSite} Created site.\n     */\n    makeSiteFromSiteListEntry(entry: any): CoreSite {\n        let site,\n            info = entry.info,\n            config = entry.config;\n\n        // Parse info and config.\n        info = info ? this.textUtils.parseJSON(info) : info;\n        config = config ? this.textUtils.parseJSON(config) : config;\n\n        site = this.sitesFactory.makeSite(entry.id, entry.siteUrl, entry.token,\n            info, entry.privateToken, config, entry.loggedOut == 1);\n        this.sites[entry.id] = site;\n        if (this.siteTablesSchemas.length) {\n            // Create tables in the site's database.\n            site.getDb().createTablesFromSchema(this.siteTablesSchemas);\n        }\n\n        return site;\n    }\n\n    /**\n     * Returns if the site is the current one.\n     *\n     * @param {string|CoreSite} [site] Site object or siteId to be compared. If not defined, use current site.\n     * @return {boolean} Whether site or siteId is the current one.\n     */\n    isCurrentSite(site: string | CoreSite): boolean {\n        if (!site || !this.currentSite) {\n            return !!this.currentSite;\n        }\n\n        const siteId = typeof site == 'object' ? site.getId() : site;\n\n        return this.currentSite.getId() === siteId;\n    }\n\n    /**\n     * Returns the database object of a site.\n     *\n     * @param {string} [siteId] The site ID. If not defined, current site (if available).\n     * @return {Promise<SQLiteDB>} Promise resolved with the database.\n     */\n    getSiteDb(siteId: string): Promise<SQLiteDB> {\n        return this.getSite(siteId).then((site) => {\n            return site.getDb();\n        });\n    }\n\n    /**\n     * Returns the site home ID of a site.\n     *\n     * @param  {number} [siteId] The site ID. If not defined, current site (if available).\n     * @return {Promise}         Promise resolved with site home ID.\n     */\n    getSiteHomeId(siteId?: string): Promise<number> {\n        return this.getSite(siteId).then((site) => {\n            return site.getSiteHomeId();\n        });\n    }\n\n    /**\n     * Get the list of sites stored.\n     *\n     * @param {String[]} [ids] IDs of the sites to get. If not defined, return all sites.\n     * @return {Promise<CoreSiteBasicInfo[]>} Promise resolved when the sites are retrieved.\n     */\n    getSites(ids?: string[]): Promise<CoreSiteBasicInfo[]> {\n        return this.appDB.getAllRecords(this.SITES_TABLE).then((sites) => {\n            const formattedSites = [];\n            sites.forEach((site) => {\n                if (!ids || ids.indexOf(site.id) > -1) {\n                    // Parse info.\n                    const siteInfo = site.info ? this.textUtils.parseJSON(site.info) : site.info,\n                        basicInfo: CoreSiteBasicInfo = {\n                            id: site.id,\n                            siteUrl: site.siteUrl,\n                            fullName: siteInfo && siteInfo.fullname,\n                            siteName: siteInfo && siteInfo.sitename,\n                            avatar: siteInfo && siteInfo.userpictureurl\n                        };\n                    formattedSites.push(basicInfo);\n                }\n            });\n\n            return formattedSites;\n        });\n    }\n\n    /**\n     * Get the list of IDs of sites stored.\n     *\n     * @return {Promise<string[]>} Promise resolved when the sites IDs are retrieved.\n     */\n    getSitesIds(): Promise<string[]> {\n        return this.appDB.getAllRecords(this.SITES_TABLE).then((sites) => {\n            return sites.map((site) => {\n                return site.id;\n            });\n        });\n    }\n\n    /**\n     * Login the user in a site.\n     *\n     * @param {string} siteid ID of the site the user is accessing.\n     * @return {Promise<void>} Promise resolved when current site is stored.\n     */\n    login(siteId: string): Promise<void> {\n        const entry = {\n            id: 1,\n            siteId: siteId\n        };\n\n        return this.appDB.insertOrUpdateRecord(this.CURRENT_SITE_TABLE, entry, { id: 1 }).then(() => {\n            this.eventsProvider.trigger(CoreEventsProvider.LOGIN, {}, siteId);\n        });\n    }\n\n    /**\n     * Logout the user.\n     *\n     * @return {Promise<any>} Promise resolved when the user is logged out.\n     */\n    logout(): Promise<any> {\n        if (!this.currentSite) {\n            // Already logged out.\n            return Promise.resolve();\n        }\n\n        const siteId = this.currentSite.getId(),\n            siteConfig = this.currentSite.getStoredConfig(),\n            promises = [];\n\n        this.currentSite = undefined;\n\n        if (siteConfig && siteConfig.tool_mobile_forcelogout == '1') {\n            promises.push(this.setSiteLoggedOut(siteId, true));\n        }\n\n        promises.push(this.appDB.deleteRecords(this.CURRENT_SITE_TABLE, { id: 1 }));\n\n        return Promise.all(promises).finally(() => {\n            this.eventsProvider.trigger(CoreEventsProvider.LOGOUT, {}, siteId);\n        });\n    }\n\n    /**\n     * Restores the session to the previous one so the user doesn't has to login everytime the app is started.\n     *\n     * @return {Promise<any>} Promise resolved if a session is restored.\n     */\n    restoreSession(): Promise<any> {\n        if (this.sessionRestored) {\n            return Promise.reject(null);\n        }\n\n        this.sessionRestored = true;\n\n        return this.appDB.getRecord(this.CURRENT_SITE_TABLE, { id: 1 }).then((currentSite) => {\n            const siteId = currentSite.siteId;\n            this.logger.debug(`Restore session in site ${siteId}`);\n\n            return this.loadSite(siteId);\n        });\n    }\n\n    /**\n     * Mark or unmark a site as logged out so the user needs to authenticate again.\n     *\n     * @param {string} siteId ID of the site.\n     * @param {boolean} loggedOut True to set the site as logged out, false otherwise.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    setSiteLoggedOut(siteId: string, loggedOut: boolean): Promise<any> {\n        return this.getSite(siteId).then((site) => {\n            const newValues = {\n                token: '', // Erase the token for security.\n                loggedOut: loggedOut ? 1 : 0\n            };\n\n            site.setLoggedOut(loggedOut);\n\n            return this.appDB.updateRecords(this.SITES_TABLE, newValues, { id: siteId });\n        });\n    }\n\n    /**\n     * Updates a site's token.\n     *\n     * @param {string} siteUrl Site's URL.\n     * @param {string} username Username.\n     * @param {string} token User's new token.\n     * @param {string} [privateToken=''] User's private token.\n     * @return {Promise<any>} A promise resolved when the site is updated.\n     */\n    updateSiteToken(siteUrl: string, username: string, token: string, privateToken: string = ''): Promise<any> {\n        const siteId = this.createSiteID(siteUrl, username);\n\n        return this.updateSiteTokenBySiteId(siteId, token, privateToken);\n    }\n\n    /**\n     * Updates a site's token using siteId.\n     *\n     * @param {string} siteId Site Id.\n     * @param {string} token User's new token.\n     * @param {string} [privateToken=''] User's private token.\n     * @return {Promise<any>} A promise resolved when the site is updated.\n     */\n    updateSiteTokenBySiteId(siteId: string, token: string, privateToken: string = ''): Promise<any> {\n        return this.getSite(siteId).then((site) => {\n            const newValues = {\n                token: token,\n                privateToken: privateToken,\n                loggedOut: 0\n            };\n\n            site.token = token;\n            site.privateToken = privateToken;\n            site.setLoggedOut(false); // Token updated means the user authenticated again, not logged out anymore.\n\n            return this.appDB.updateRecords(this.SITES_TABLE, newValues, { id: siteId });\n        });\n    }\n\n    /**\n     * Updates a site's info.\n     *\n     * @param {string} siteid Site's ID.\n     * @return {Promise<any>} A promise resolved when the site is updated.\n     */\n    updateSiteInfo(siteId: string): Promise<any> {\n        return this.getSite(siteId).then((site) => {\n            return site.fetchSiteInfo().then((info) => {\n                site.setInfo(info);\n\n                // Try to get the site config.\n                return this.getSiteConfig(site).catch(() => {\n                    // Error getting config, keep the current one.\n                }).then((config) => {\n                    const newValues: any = {\n                        info: JSON.stringify(info),\n                        loggedOut: site.isLoggedOut() ? 1 : 0\n                    };\n\n                    if (typeof config != 'undefined') {\n                        site.setConfig(config);\n                        newValues.config = JSON.stringify(config);\n                    }\n\n                    return this.appDB.updateRecords(this.SITES_TABLE, newValues, { id: siteId }).finally(() => {\n                        this.eventsProvider.trigger(CoreEventsProvider.SITE_UPDATED, {}, siteId);\n                    });\n                });\n            });\n        });\n    }\n\n    /**\n     * Updates a site's info.\n     *\n     * @param {string} siteUrl  Site's URL.\n     * @param {string} username Username.\n     * @return {Promise<any>} A promise to be resolved when the site is updated.\n     */\n    updateSiteInfoByUrl(siteUrl: string, username: string): Promise<any> {\n        const siteId = this.createSiteID(siteUrl, username);\n\n        return this.updateSiteInfo(siteId);\n    }\n\n    /**\n     * Get the site IDs a URL belongs to.\n     * Someone can have more than one account in the same site, that's why this function returns an array of IDs.\n     *\n     * @param {string} url URL to check.\n     * @param {boolean} [prioritize] True if it should prioritize current site. If the URL belongs to current site then it won't\n     *                               check any other site, it will only return current site.\n     * @param {string} [username] If set, it will return only the sites where the current user has this username.\n     * @return {Promise<string[]>} Promise resolved with the site IDs (array).\n     */\n    getSiteIdsFromUrl(url: string, prioritize?: boolean, username?: string): Promise<string[]> {\n        // If prioritize is true, check current site first.\n        if (prioritize && this.currentSite && this.currentSite.containsUrl(url)) {\n            if (!username || this.currentSite.getInfo().username == username) {\n                return Promise.resolve([this.currentSite.getId()]);\n            }\n        }\n\n        // Check if URL has http(s) protocol.\n        if (!url.match(/^https?:\\/\\//i)) {\n            // URL doesn't have http(s) protocol. Check if it has any protocol.\n            if (this.urlUtils.isAbsoluteURL(url)) {\n                // It has some protocol. Return empty array.\n                return Promise.resolve([]);\n            } else {\n                // No protocol, probably a relative URL. Return current site.\n                if (this.currentSite) {\n                    return Promise.resolve([this.currentSite.getId()]);\n                } else {\n                    return Promise.resolve([]);\n                }\n            }\n        }\n\n        return this.appDB.getAllRecords(this.SITES_TABLE).then((siteEntries) => {\n            const ids = [];\n            siteEntries.forEach((site) => {\n                if (!this.sites[site.id]) {\n                    this.makeSiteFromSiteListEntry(site);\n                }\n\n                if (this.sites[site.id].containsUrl(url)) {\n                    if (!username || this.sites[site.id].getInfo().username == username) {\n                        ids.push(site.id);\n                    }\n                }\n            });\n\n            return ids;\n        }).catch(() => {\n            // Shouldn't happen.\n            return [];\n        });\n    }\n\n    /**\n     * Get the site ID stored in DB as current site.\n     *\n     * @return {Promise<string>} Promise resolved with the site ID.\n     */\n    getStoredCurrentSiteId(): Promise<string> {\n        return this.appDB.getRecord(this.CURRENT_SITE_TABLE, { id: 1 }).then((currentSite) => {\n            return currentSite.siteId;\n        });\n    }\n\n    /**\n     * Get the public config of a certain site.\n     *\n     * @param {string} siteUrl URL of the site.\n     * @return {Promise<any>} Promise resolved with the public config.\n     */\n    getSitePublicConfig(siteUrl: string): Promise<any> {\n        const temporarySite = this.sitesFactory.makeSite(undefined, siteUrl);\n\n        return temporarySite.getPublicConfig();\n    }\n\n    /**\n     * Get site config.\n     *\n     * @param {any} site The site to get the config.\n     * @return {Promise<any>} Promise resolved with config if available.\n     */\n    protected getSiteConfig(site: CoreSite): Promise<any> {\n        if (!site.wsAvailable('tool_mobile_get_config')) {\n            // WS not available, cannot get config.\n            return Promise.resolve();\n        }\n\n        return site.getConfig(undefined, true);\n    }\n\n    /**\n     * Check if a certain feature is disabled in a site.\n     *\n     * @param {string} name Name of the feature to check.\n     * @param {string} [siteId] The site ID. If not defined, current site (if available).\n     * @return {Promise<boolean>} Promise resolved with true if disabled.\n     */\n    isFeatureDisabled(name: string, siteId?: string): Promise<boolean> {\n        return this.getSite(siteId).then((site) => {\n            return site.isFeatureDisabled(name);\n        });\n    }\n\n    /**\n     * Create a table in all the sites databases.\n     *\n     * @param {any} table Table schema.\n     */\n    createTableFromSchema(table: any): void {\n        this.createTablesFromSchema([table]);\n    }\n\n    /**\n     * Create several tables in all the sites databases.\n     *\n     * @param {any[]} tables List of tables schema.\n     */\n    createTablesFromSchema(tables: any[]): void {\n        // Add the tables to the list of schemas. This list is to create all the tables in new sites.\n        this.siteTablesSchemas = this.siteTablesSchemas.concat(tables);\n\n        // Now create these tables in current sites.\n        for (const id in this.sites) {\n            this.sites[id].getDb().createTablesFromSchema(tables);\n        }\n    }\n\n    /**\n     * Check if a WS is available in the current site, if any.\n     *\n     * @param {string} method WS name.\n     * @param {boolean} [checkPrefix=true] When true also checks with the compatibility prefix.\n     * @return {boolean} Whether the WS is available.\n     */\n    wsAvailableInCurrentSite(method: string, checkPrefix: boolean = true): boolean {\n        const site = this.getCurrentSite();\n\n        return site && site.wsAvailable(method, checkPrefix);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sites.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport * as moment from 'moment';\n\n/**\n * Helper service to display messages in the console.\n *\n * @description\n * This service is meant to improve log messages, adding a timestamp and a name to all log messages.\n *\n * In your class constructor, call getInstance to configure your class name:\n * this.logger = logger.getInstance('InitPage');\n *\n * Then you can call the log function you want to use in this logger instance.\n */\n@Injectable()\nexport class CoreLoggerProvider {\n    /** Whether the logging is enabled. */\n    enabled = true;\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Get a logger instance for a certain class, service or component.\n     *\n     * @param {string} className Name to use in the messages.\n     * @return {ant} Instance.\n     */\n    getInstance(className: string): any {\n        className = className || '';\n\n        return {\n            log: this.prepareLogFn(console.log.bind(console), className),\n            info: this.prepareLogFn(console.info.bind(console), className),\n            warn: this.prepareLogFn(console.warn.bind(console), className),\n            debug: this.prepareLogFn(console.debug.bind(console), className),\n            error: this.prepareLogFn(console.error.bind(console), className)\n        };\n    }\n\n    /**\n     * Prepare a logging function, concatenating the timestamp and class name to all messages.\n     *\n     * @param {Function} logFn Log function to use.\n     * @param {string} className Name to use in the messages.\n     * @return {Function} Prepared function.\n     */\n    private prepareLogFn(logFn: Function, className: string): Function {\n        // Return our own function that will call the logging function with the treated message.\n        return (...args): void => {\n            if (this.enabled) {\n                const now = moment().format('l LTS');\n                args[0] = now + ' ' + className + ': ' + args[0]; // Prepend timestamp and className to the original message.\n                logFn.apply(null, args);\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/logger.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { InAppBrowser, InAppBrowserObject } from '@ionic-native/in-app-browser';\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { CoreAppProvider } from '../app';\nimport { CoreDomUtilsProvider } from './dom';\nimport { CoreEventsProvider } from '../events';\nimport { CoreLoggerProvider } from '../logger';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreLangProvider } from '../lang';\nimport { CoreWSError } from '../ws';\n\n/**\n * Deferred promise. It's similar to the result of $q.defer() in AngularJS.\n */\nexport interface PromiseDefer {\n    /**\n     * The promise.\n     * @type {Promise<any>}\n     */\n    promise?: Promise<any>;\n\n    /**\n     * Function to resolve the promise.\n     *\n     * @param {any} [value] The resolve value.\n     */\n    resolve?: (value?: any) => void; // Function to resolve the promise.\n\n    /**\n     * Function to reject the promise.\n     *\n     * @param {any} [reason] The reject param.\n     */\n    reject?: (reason?: any) => void;\n}\n\n/*\n * \"Utils\" service with helper functions.\n */\n@Injectable()\nexport class CoreUtilsProvider {\n    protected logger;\n    protected iabInstance: InAppBrowserObject;\n\n    constructor(private iab: InAppBrowser, private appProvider: CoreAppProvider, private clipboard: Clipboard,\n            private domUtils: CoreDomUtilsProvider, logger: CoreLoggerProvider, private translate: TranslateService,\n            private platform: Platform, private langProvider: CoreLangProvider, private eventsProvider: CoreEventsProvider) {\n        this.logger = logger.getInstance('CoreUtilsProvider');\n    }\n\n    /**\n     * Similar to Promise.all, but if a promise fails this function's promise won't be rejected until ALL promises have finished.\n     *\n     * @param {Promise<any>[]} promises Promises.\n     * @return {Promise<any>} Promise resolved if all promises are resolved and rejected if at least 1 promise fails.\n     */\n    allPromises(promises: Promise<any>[]): Promise<any> {\n        if (!promises || !promises.length) {\n            return Promise.resolve();\n        }\n\n        return new Promise((resolve, reject): void => {\n            const total = promises.length;\n            let count = 0,\n                error;\n\n            promises.forEach((promise) => {\n                promise.catch((err) => {\n                    error = err;\n                }).finally(() => {\n                    count++;\n\n                    if (count === total) {\n                        // All promises have finished, reject/resolve.\n                        if (error) {\n                            reject(error);\n                        } else {\n                            resolve();\n                        }\n                    }\n                });\n            });\n        });\n    }\n\n    /**\n     * Converts an array of objects to an object, using a property of each entry as the key.\n     * E.g. [{id: 10, name: 'A'}, {id: 11, name: 'B'}] => {10: {id: 10, name: 'A'}, 11: {id: 11, name: 'B'}}\n     *\n     * @param {any[]} array The array to convert.\n     * @param {string} propertyName The name of the property to use as the key.\n     * @param {any} [result] Object where to put the properties. If not defined, a new object will be created.\n     * @return {any} The object.\n     */\n    arrayToObject(array: any[], propertyName: string, result?: any): any {\n        result = result || {};\n        array.forEach((entry) => {\n            result[entry[propertyName]] = entry;\n        });\n\n        return result;\n    }\n\n    /**\n     * Compare two objects. This function won't compare functions and proto properties, it's a basic compare.\n     * Also, this will only check if itemA's properties are in itemB with same value. This function will still\n     * return true if itemB has more properties than itemA.\n     *\n     * @param {any} itemA First object.\n     * @param {any} itemB Second object.\n     * @param {number} [maxLevels=0] Number of levels to reach if 2 objects are compared.\n     * @param {number} [level=0] Current deep level (when comparing objects).\n     * @param {boolean} [undefinedIsNull=true] True if undefined is equal to null. Defaults to true.\n     * @return {boolean} Whether both items are equal.\n     */\n    basicLeftCompare(itemA: any, itemB: any, maxLevels: number = 0, level: number = 0, undefinedIsNull: boolean = true): boolean {\n        if (typeof itemA == 'function' || typeof itemB == 'function') {\n            return true; // Don't compare functions.\n        } else if (typeof itemA == 'object' && typeof itemB == 'object') {\n            if (level >= maxLevels) {\n                return true; // Max deep reached.\n            }\n\n            let equal = true;\n            for (const name in itemA) {\n                const value = itemA[name];\n                if (name == '$$hashKey') {\n                    // Ignore $$hashKey property since it's a \"calculated\" property.\n                    return;\n                }\n\n                if (!this.basicLeftCompare(value, itemB[name], maxLevels, level + 1)) {\n                    equal = false;\n                }\n            }\n\n            return equal;\n        } else {\n            if (undefinedIsNull && (\n                (typeof itemA == 'undefined' && itemB === null) || (itemA === null && typeof itemB == 'undefined'))) {\n                return true;\n            }\n\n            // We'll treat \"2\" and 2 as the same value.\n            const floatA = parseFloat(itemA),\n                floatB = parseFloat(itemB);\n\n            if (!isNaN(floatA) && !isNaN(floatB)) {\n                return floatA == floatB;\n            }\n\n            return itemA === itemB;\n        }\n    }\n\n    /**\n     * Blocks leaving a view.\n     */\n    blockLeaveView(): void {\n        // @todo\n    }\n\n    /**\n     * Close the InAppBrowser window.\n     *\n     * @param {boolean} [closeAll] Desktop only. True to close all secondary windows, false to close only the \"current\" one.\n     */\n    closeInAppBrowser(closeAll?: boolean): void {\n        if (this.iabInstance) {\n            this.iabInstance.close();\n            if (closeAll && this.appProvider.isDesktop()) {\n                require('electron').ipcRenderer.send('closeSecondaryWindows');\n            }\n        }\n    }\n\n    /**\n     * Clone a variable. It should be an object, array or primitive type.\n     *\n     * @param {any} source The variable to clone.\n     * @return {any} Cloned variable.\n     */\n    clone(source: any): any {\n        if (Array.isArray(source)) {\n            // Clone the array and all the entries.\n            const newArray = [];\n            for (let i = 0; i < source.length; i++) {\n                newArray[i] = this.clone(source[i]);\n            }\n\n            return newArray;\n        } else if (typeof source == 'object' && source !== null) {\n            // Clone the object and all the subproperties.\n            const newObject = {};\n            for (const name in source) {\n                newObject[name] = this.clone(source[name]);\n            }\n\n            return newObject;\n        } else {\n            // Primitive type or unknown, return it as it is.\n            return source;\n        }\n    }\n\n    /**\n     * Copy properties from one object to another.\n     *\n     * @param {any} from Object to copy the properties from.\n     * @param {any} to Object where to store the properties.\n     * @param {boolean} [clone=true] Whether the properties should be cloned (so they are different instances).\n     */\n    copyProperties(from: any, to: any, clone: boolean = true): void {\n        for (const name in from) {\n            if (clone) {\n                to[name] = this.clone(from[name]);\n            } else {\n                to[name] = from[name];\n            }\n        }\n    }\n\n    /**\n     * Copies a text to clipboard and shows a toast message.\n     *\n     * @param {string} text Text to be copied\n     * @return {Promise<any>} Promise resolved when text is copied.\n     */\n    copyToClipboard(text: string): Promise<any> {\n        return this.clipboard.copy(text).then(() => {\n            // Show toast using ionicLoading.\n            return this.domUtils.showToast('core.copiedtoclipboard', true);\n        }).catch(() => {\n            // Ignore errors.\n        });\n    }\n\n    /**\n     * Empties an array without losing its reference.\n     *\n     * @param {any[]} array Array to empty.\n     */\n    emptyArray(array: any[]): void {\n        array.length = 0; // Empty array without losing its reference.\n    }\n\n    /**\n     * Removes all properties from an object without losing its reference.\n     *\n     * @param {object} object Object to remove the properties.\n     */\n    emptyObject(object: object): void {\n        for (const key in object) {\n            if (object.hasOwnProperty(key)) {\n                delete object[key];\n            }\n        }\n    }\n\n    /**\n     * Execute promises one depending on the previous.\n     *\n     * @param {any[]} orderedPromisesData Data to be executed including the following values:\n     *                                 - func: Function to be executed.\n     *                                 - context: Context to pass to the function. This allows using \"this\" inside the function.\n     *                                 - params: Array of data to be sent to the function.\n     *                                 - blocking: Boolean. If promise should block the following.\n     * @return {Promise<any>} Promise resolved when all promises are resolved.\n     */\n    executeOrderedPromises(orderedPromisesData: any[]): Promise<any> {\n        const promises = [];\n        let dependency = Promise.resolve();\n\n        // Execute all the processes in order.\n        for (const i in orderedPromisesData) {\n            const data = orderedPromisesData[i];\n            let promise;\n\n            // Add the process to the dependency stack.\n            promise = dependency.finally(() => {\n                let prom;\n\n                try {\n                    prom = data.func.apply(data.context, data.params || []);\n                } catch (e) {\n                    this.logger.error(e.message);\n\n                    return;\n                }\n\n                return prom;\n            });\n            promises.push(promise);\n\n            // If the new process is blocking, we set it as the dependency.\n            if (data.blocking) {\n                dependency = promise;\n            }\n        }\n\n        // Return when all promises are done.\n        return this.allPromises(promises);\n    }\n\n    /**\n     * Flatten an object, moving subobjects' properties to the first level using dot notation. E.g.:\n     * {a: {b: 1, c: 2}, d: 3} -> {'a.b': 1, 'a.c': 2, d: 3}\n     *\n     * @param {object} obj Object to flatten.\n     * @return {object} Flatten object.\n     */\n    flattenObject(obj: object): object {\n        const toReturn = {};\n\n        for (const name in obj) {\n            if (!obj.hasOwnProperty(name)) {\n                continue;\n            }\n\n            const value = obj[name];\n            if (typeof value == 'object' && !Array.isArray(value)) {\n                const flatObject = this.flattenObject(value);\n                for (const subName in flatObject) {\n                    if (!flatObject.hasOwnProperty(subName)) {\n                        continue;\n                    }\n\n                    toReturn[name + '.' + subName] = flatObject[subName];\n                }\n            } else {\n                toReturn[name] = value;\n            }\n        }\n\n        return toReturn;\n    }\n\n    /**\n     * Given an array of strings, return only the ones that match a regular expression.\n     *\n     * @param {string[]} array Array to filter.\n     * @param {RegExp} regex RegExp to apply to each string.\n     * @return {string[]} Filtered array.\n     */\n    filterByRegexp(array: string[], regex: RegExp): string[] {\n        if (!array || !array.length) {\n            return [];\n        }\n\n        return array.filter((entry) => {\n            const matches = entry.match(regex);\n\n            return matches && matches.length;\n        });\n    }\n\n    /**\n     * Filter the list of site IDs based on a isEnabled function.\n     *\n     * @param {string[]} siteIds Site IDs to filter.\n     * @param {Function} isEnabledFn Function to call for each site. Must return true or a promise resolved with true if enabled.\n     *                    It receives a siteId param and all the params sent to this function after 'checkAll'.\n     * @param {boolean} [checkAll] True if it should check all the sites, false if it should check only 1 and treat them all\n     *                   depending on this result.\n     * @param {any} ...args All the params sent after checkAll will be passed to isEnabledFn.\n     * @return {Promise<string[]>} Promise resolved with the list of enabled sites.\n     */\n    filterEnabledSites(siteIds: string[], isEnabledFn: Function, checkAll?: boolean, ...args: any[]): Promise<string[]> {\n        const promises = [],\n            enabledSites = [];\n\n        for (const i in siteIds) {\n            const siteId = siteIds[i];\n            if (checkAll || !promises.length) {\n                promises.push(Promise.resolve(isEnabledFn.apply(isEnabledFn, [siteId].concat(args))).then((enabled) => {\n                    if (enabled) {\n                        enabledSites.push(siteId);\n                    }\n                }));\n            }\n        }\n\n        return this.allPromises(promises).catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            if (!checkAll) {\n                // Checking 1 was enough, so it will either return all the sites or none.\n                return enabledSites.length ? siteIds : [];\n            } else {\n                return enabledSites;\n            }\n        });\n    }\n\n    /**\n     * Given a float, prints it nicely. Localized floats must not be used in calculations!\n     * Based on Moodle's format_float.\n     *\n     * @param {any} float The float to print.\n     * @return {string} Locale float.\n     */\n    formatFloat(float: any): string {\n        if (typeof float == 'undefined') {\n            return '';\n        }\n\n        const localeSeparator = this.translate.instant('core.decsep');\n\n        // Convert float to string.\n        float += '';\n\n        return float.replace('.', localeSeparator);\n    }\n\n    /**\n     * Returns a tree formatted from a plain list.\n     * List has to be sorted by depth to allow this function to work correctly. Errors can be thrown if a child node is\n     * processed before a parent node.\n     *\n     * @param {any[]} list List to format.\n     * @param {string} [parentFieldName=parent] Name of the parent field to match with children.\n     * @param {string} [idFieldName=id] Name of the children field to match with parent.\n     * @param {number} [rootParentId=0] The id of the root.\n     * @param {number} [maxDepth=5] Max Depth to convert to tree. Children found will be in the last level of depth.\n     * @return {any[]} Array with the formatted tree, children will be on each node under children field.\n     */\n    formatTree(list: any[], parentFieldName: string = 'parent', idFieldName: string = 'id', rootParentId: number = 0,\n            maxDepth: number = 5): any[] {\n        const map = {},\n            mapDepth = {},\n            tree = [];\n        let parent,\n            id;\n\n        list.forEach((node, index): void => {\n            id = node[idFieldName];\n            parent = node[parentFieldName];\n            node.children = [];\n\n            // Use map to look-up the parents.\n            map[id] = index;\n            if (parent != rootParentId) {\n                const parentNode = list[map[parent]];\n                if (parentNode) {\n                    if (mapDepth[parent] == maxDepth) {\n                        // Reached max level of depth. Proceed with flat order. Find parent object of the current node.\n                        const parentOfParent = parentNode[parentFieldName];\n                        if (parentOfParent) {\n                            // This element will be the child of the node that is two levels up the hierarchy\n                            // (i.e. the child of node.parent.parent).\n                            list[map[parentOfParent]].children.push(node);\n                            // Assign depth level to the same depth as the parent (i.e. max depth level).\n                            mapDepth[id] = mapDepth[parent];\n                            // Change the parent to be the one that is two levels up the hierarchy.\n                            node.parent = parentOfParent;\n                        }\n                    } else {\n                        parentNode.children.push(node);\n                        // Increase the depth level.\n                        mapDepth[id] = mapDepth[parent] + 1;\n                    }\n                }\n            } else {\n                tree.push(node);\n\n                // Root elements are the first elements in the tree structure, therefore have the depth level 1.\n                mapDepth[id] = 1;\n            }\n        });\n\n        return tree;\n    }\n\n    /**\n     * Get country name based on country code.\n     *\n     * @param {string} code Country code (AF, ES, US, ...).\n     * @return {string} Country name. If the country is not found, return the country code.\n     */\n    getCountryName(code: string): string {\n        const countryKey = 'assets.countries.' + code,\n            countryName = this.translate.instant(countryKey);\n\n        return countryName !== countryKey ? countryName : code;\n    }\n\n    /**\n     * Get list of countries with their code and translated name.\n     *\n     * @return {Promise<any>} Promise resolved with the list of countries.\n     */\n    getCountryList(): Promise<any> {\n        // Get the current language.\n        return this.langProvider.getCurrentLanguage().then((lang) => {\n            // Get the full list of translations. Create a promise to convert the observable into a promise.\n            return new Promise((resolve, reject): void => {\n                const observer = this.translate.getTranslation(lang).subscribe((table) => {\n                    resolve(table);\n                    observer.unsubscribe();\n                }, (err) => {\n                    reject(err);\n                    observer.unsubscribe();\n                });\n            });\n        }).then((table) => {\n            const countries = {};\n\n            for (const name in table) {\n                if (name.indexOf('assets.countries.') === 0) {\n                    const code = name.replace('assets.countries.', '');\n                    countries[code] = table[name];\n                }\n            }\n\n            return countries;\n        });\n    }\n\n    /**\n     * Given a list of files, check if there are repeated names.\n     *\n     * @param {any[]} files List of files.\n     * @return {string|boolean} String with error message if repeated, false if no repeated.\n     */\n    hasRepeatedFilenames(files: any[]): string | boolean {\n        if (!files || !files.length) {\n            return false;\n        }\n\n        const names = [];\n\n        // Check if there are 2 files with the same name.\n        for (let i = 0; i < files.length; i++) {\n            const name = files[i].filename || files[i].name;\n            if (names.indexOf(name) > -1) {\n                return this.translate.instant('core.filenameexist', { $a: name });\n            } else {\n                names.push(name);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Gets the index of the first string that matches a regular expression.\n     *\n     * @param {string[]} array Array to search.\n     * @param {RegExp} regex RegExp to apply to each string.\n     * @return {number} Index of the first string that matches the RegExp. -1 if not found.\n     */\n    indexOfRegexp(array: string[], regex: RegExp): number {\n        if (!array || !array.length) {\n            return -1;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n            const entry = array[i],\n                matches = entry.match(regex);\n\n            if (matches && matches.length) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Return true if the param is false (bool), 0 (number) or \"0\" (string).\n     *\n     * @param {any} value Value to check.\n     * @return {boolean} Whether the value is false, 0 or \"0\".\n     */\n    isFalseOrZero(value: any): boolean {\n        return typeof value != 'undefined' && (value === false || value === 'false' || parseInt(value, 10) === 0);\n    }\n\n    /**\n     * Return true if the param is true (bool), 1 (number) or \"1\" (string).\n     *\n     * @param {any} value Value to check.\n     * @return {boolean} Whether the value is true, 1 or \"1\".\n     */\n    isTrueOrOne(value: any): boolean {\n        return typeof value != 'undefined' && (value === true || value === 'true' || parseInt(value, 10) === 1);\n    }\n\n    /**\n     * Create a \"fake\" WS error for local errors.\n     *\n     * @param {string} message The message to include in the error.\n     * @param {boolean} [needsTranslate] If the message needs to be translated.\n     * @return {CoreWSError} Fake WS error.\n     */\n    createFakeWSError(message: string, needsTranslate?: boolean): CoreWSError {\n        if (needsTranslate) {\n            message = this.translate.instant(message);\n        }\n\n        return {\n            message: message\n        };\n    }\n\n    /**\n     * Given an error returned by a WS call, check if the error is generated by the app or it has been returned by the WebSwervice.\n     *\n     * @param {any} error Error to check.\n     * @return {boolean} Whether the error was returned by the WebService.\n     */\n    isWebServiceError(error: any): boolean {\n        return typeof error.errorcode == 'undefined';\n    }\n\n    /**\n     * Merge two arrays, removing duplicate values.\n     *\n     * @param {any[]} array1 The first array.\n     * @param {any[]} array2 The second array.\n     * @param [key] Key of the property that must be unique. If not specified, the whole entry.\n     * @return {any[]} Merged array.\n     */\n    mergeArraysWithoutDuplicates(array1: any[], array2: any[], key?: string): any[] {\n        return this.uniqueArray(array1.concat(array2), key);\n    }\n\n    /**\n     * Open a file using platform specific method.\n     *\n     * node-webkit: Using the default application configured.\n     * Android: Using the WebIntent plugin.\n     * iOs: Using handleDocumentWithURL.\n     *\n     * @param {string} path The local path of the file to be open.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    openFile(path: string): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            if (this.appProvider.isDesktop()) {\n                // It's a desktop app, send an event so the file is opened.\n                // Opening the file from here (renderer process) doesn't focus the opened app, that's why an event is needed.\n                // Use sendSync so we can receive the result.\n                if (require('electron').ipcRenderer.sendSync('openItem', path)) {\n                    resolve();\n                } else {\n                    reject(this.translate.instant('core.erroropenfilenoapp'));\n                }\n            } else if ((<any> window).plugins) {\n                // @todo\n                reject('TODO');\n            } else {\n                // Changing _blank for _system may work in cordova 2.4 and onwards.\n                this.logger.log('Opening external file using window.open()');\n                window.open(path, '_blank');\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * Open a URL using InAppBrowser.\n     * Do not use for files, refer to {@link openFile}.\n     *\n     * @param {string} url The URL to open.\n     * @param {any} [options] Override default options passed to InAppBrowser.\n     * @return {InAppBrowserObject} The opened window.\n     */\n    openInApp(url: string, options?: any): InAppBrowserObject {\n        if (!url) {\n            return;\n        }\n\n        options = options || {};\n\n        if (!options.enableViewPortScale) {\n            options.enableViewPortScale = 'yes'; // Enable zoom on iOS.\n        }\n\n        if (!options.location && this.platform.is('ios') && url.indexOf('file://') === 0) {\n            // The URL uses file protocol, don't show it on iOS.\n            // In Android we keep it because otherwise we lose the whole toolbar.\n            options.location = 'no';\n        }\n\n        this.iabInstance = this.iab.create(url, '_blank', options);\n\n        if (this.appProvider.isDesktop() || this.appProvider.isMobile()) {\n            // Trigger global events when a url is loaded or the window is closed. This is to make it work like in Ionic 1.\n            const loadStartSubscription = this.iabInstance.on('loadstart').subscribe((event) => {\n                this.eventsProvider.trigger(CoreEventsProvider.IAB_LOAD_START, event);\n            });\n            const exitSubscription = this.iabInstance.on('exit').subscribe((event) => {\n                loadStartSubscription.unsubscribe();\n                exitSubscription.unsubscribe();\n                this.eventsProvider.trigger(CoreEventsProvider.IAB_EXIT, event);\n            });\n        }\n\n        return this.iabInstance;\n    }\n\n    /**\n     * Open a URL using a browser.\n     * Do not use for files, refer to {@link openFile}.\n     *\n     * @param {string} url The URL to open.\n     */\n    openInBrowser(url: string): void {\n        if (this.appProvider.isDesktop()) {\n            // It's a desktop app, use Electron shell library to open the browser.\n            const shell = require('electron').shell;\n            if (!shell.openExternal(url)) {\n                // Open browser failed, open a new window in the app.\n                window.open(url, '_system');\n            }\n        } else {\n            window.open(url, '_system');\n        }\n    }\n\n    /**\n     * Open an online file using platform specific method.\n     * Specially useful for audio and video since they can be streamed.\n     *\n     * node-webkit: Using the default application configured.\n     * Android: Using the WebIntent plugin.\n     * iOS: Using the window.open method (InAppBrowser)\n     *      We don't use iOS quickview framework because it doesn't support streaming.\n     *\n     * @param {string} url The URL of the file.\n     * @return {Promise<void>} Promise resolved when opened.\n     */\n    openOnlineFile(url: string): Promise<void> {\n        return new Promise<void>((resolve, reject): void => {\n            // @todo\n            reject('TODO');\n        });\n    }\n\n    /**\n     * Converts an object into an array, losing the keys.\n     *\n     * @param {object} obj Object to convert.\n     * @return {any[]} Array with the values of the object but losing the keys.\n     */\n    objectToArray(obj: object): any[] {\n        return Object.keys(obj).map((key) => {\n            return obj[key];\n        });\n    }\n\n    /**\n     * Converts an object into an array of objects, where each entry is an object containing\n     * the key and value of the original object.\n     * For example, it can convert {size: 2} into [{name: 'size', value: 2}].\n     *\n     * @param {object} obj Object to convert.\n     * @param {string} keyName Name of the properties where to store the keys.\n     * @param {string} valueName Name of the properties where to store the values.\n     * @param {boolean} [sort] True to sort keys alphabetically, false otherwise.\n     * @return {any[]} Array of objects with the name & value of each property.\n     */\n    objectToArrayOfObjects(obj: object, keyName: string, valueName: string, sort?: boolean): any[] {\n        // Get the entries from an object or primitive value.\n        const getEntries = (elKey, value): any[] | any => {\n            if (typeof value == 'object') {\n                // It's an object, return at least an entry for each property.\n                const keys = Object.keys(value);\n                let entries = [];\n\n                keys.forEach((key) => {\n                    const newElKey = elKey ? elKey + '[' + key + ']' : key;\n                    entries = entries.concat(getEntries(newElKey, value[key]));\n                });\n\n                return entries;\n            } else {\n                // Not an object, return a single entry.\n                const entry = {};\n                entry[keyName] = elKey;\n                entry[valueName] = value;\n\n                return entry;\n            }\n        };\n\n        if (!obj) {\n            return [];\n        }\n\n        // \"obj\" will always be an object, so \"entries\" will always be an array.\n        const entries = <any[]> getEntries('', obj);\n        if (sort) {\n            return entries.sort((a, b) => {\n                return a.name >= b.name ? 1 : -1;\n            });\n        }\n\n        return entries;\n    }\n\n    /**\n     * Converts an array of objects into an object with key and value. The opposite of objectToArrayOfObjects.\n     * For example, it can convert [{name: 'size', value: 2}] into {size: 2}.\n     *\n     * @param {object[]} objects List of objects to convert.\n     * @param {string} keyName Name of the properties where the keys are stored.\n     * @param {string} valueName Name of the properties where the values are stored.\n     * @param [keyPrefix] Key prefix if neededs to delete it.\n     * @return {object} Object.\n     */\n    objectToKeyValueMap(objects: object[], keyName: string, valueName: string, keyPrefix?: string): object {\n        if (!objects) {\n            return;\n        }\n\n        const prefixSubstr = keyPrefix ? keyPrefix.length : 0,\n            mapped = {};\n        objects.forEach((item) => {\n            const key = prefixSubstr > 0 ? item[keyName].substr(prefixSubstr) : item[keyName];\n            mapped[key] = item[valueName];\n        });\n\n        return mapped;\n    }\n\n    /**\n     * Similar to AngularJS $q.defer().\n     *\n     * @return {PromiseDefer} The deferred promise.\n     */\n    promiseDefer(): PromiseDefer {\n        const deferred: PromiseDefer = {};\n        deferred.promise = new Promise((resolve, reject): void => {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n\n        return deferred;\n    }\n\n    /**\n     * Given a promise, returns true if it's rejected or false if it's resolved.\n     *\n     * @param {Promise<any>} promise Promise to check\n     * @return {Promise<boolean>} Promise resolved with boolean: true if the promise is rejected or false if it's resolved.\n     */\n    promiseFails(promise: Promise<any>): Promise<boolean> {\n        return promise.then(() => {\n            return false;\n        }).catch(() => {\n            return true;\n        });\n    }\n\n    /**\n     * Given a promise, returns true if it's resolved or false if it's rejected.\n     *\n     * @param {Promise<any>} promise Promise to check\n     * @return {Promise<boolean>} Promise resolved with boolean: true if the promise it's resolved or false if it's rejected.\n     */\n    promiseWorks(promise: Promise<any>): Promise<boolean> {\n        return promise.then(() => {\n            return true;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    /**\n     * Tests to see whether two arrays or objects have the same value at a particular key.\n     * Missing values are replaced by '', and the values are compared with ===.\n     * Booleans and numbers are cast to string before comparing.\n     *\n     * @param {any} obj1 The first object or array.\n     * @param {any} obj2 The second object or array.\n     * @param {string} key Key to check.\n     * @return {boolean} Whether the two objects/arrays have the same value (or lack of one) for a given key.\n     */\n    sameAtKeyMissingIsBlank(obj1: any, obj2: any, key: string): boolean {\n        let value1 = typeof obj1[key] != 'undefined' ? obj1[key] : '',\n            value2 = typeof obj2[key] != 'undefined' ? obj2[key] : '';\n\n        if (typeof value1 == 'number' || typeof value1 == 'boolean') {\n            value1 = '' + value1;\n        }\n        if (typeof value2 == 'number' || typeof value2 == 'boolean') {\n            value2 = '' + value2;\n        }\n\n        return value1 === value2;\n    }\n\n    /**\n     * Stringify an object, sorting the properties. It doesn't sort arrays, only object properties. E.g.:\n     * {b: 2, a: 1} -> '{\"a\":1,\"b\":2}'\n     *\n     * @param {object} obj Object to stringify.\n     * @return {string} Stringified object.\n     */\n    sortAndStringify(obj: object): string {\n        return JSON.stringify(this.sortProperties(obj));\n    }\n\n    /**\n     * Given an object, sort its properties and the properties of all the nested objects.\n     *\n     * @param {object} obj The object to sort. If it isn't an object, the original value will be returned.\n     * @return {object} Sorted object.\n     */\n    sortProperties(obj: object): object {\n        if (typeof obj == 'object' && !Array.isArray(obj)) {\n            // It's an object, sort it.\n            return Object.keys(obj).sort().reduce((accumulator, key) => {\n                // Always call sort with the value. If it isn't an object, the original value will be returned.\n                accumulator[key] = this.sortProperties(obj[key]);\n\n                return accumulator;\n            }, {});\n        } else {\n            return obj;\n        }\n    }\n\n    /**\n     * Sum the filesizes from a list of files checking if the size will be partial or totally calculated.\n     *\n     * @param {any[]} files List of files to sum its filesize.\n     * @return {{size: number, total: boolean}} File size and a boolean to indicate if it is the total size or only partial.\n     */\n    sumFileSizes(files: any[]): { size: number, total: boolean } {\n        const result = {\n            size: 0,\n            total: true\n        };\n\n        files.forEach((file) => {\n            if (typeof file.filesize == 'undefined') {\n                // We don't have the file size, cannot calculate its total size.\n                result.total = false;\n            } else {\n                result.size += file.filesize;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Converts locale specific floating point/comma number back to standard PHP float value.\n     * Do NOT try to do any math operations before this conversion on any user submitted floats!\n     * Based on Moodle's unformat_float function.\n     *\n     * @param {any} localeFloat Locale aware float representation.\n     * @return {any} False if bad format, empty string if empty value or the parsed float if not.\n     */\n    unformatFloat(localeFloat: any): any {\n        // Bad format on input type number.\n        if (typeof localeFloat == 'undefined') {\n            return false;\n        }\n\n        // Empty (but not zero).\n        if (localeFloat == null) {\n            return '';\n        }\n\n        // Convert float to string.\n        localeFloat += '';\n        localeFloat = localeFloat.trim();\n\n        if (localeFloat == '') {\n            return '';\n        }\n\n        const localeSeparator = this.translate.instant('core.decsep');\n\n        localeFloat = localeFloat.replace(' ', ''); // No spaces - those might be used as thousand separators.\n        localeFloat = localeFloat.replace(localeSeparator, '.');\n\n        localeFloat = parseFloat(localeFloat);\n        // Bad format.\n        if (isNaN(localeFloat)) {\n            return false;\n        }\n\n        return localeFloat;\n    }\n\n    /**\n     * Return an array without duplicate values.\n     *\n     * @param {any[]} array The array to treat.\n     * @param [key] Key of the property that must be unique. If not specified, the whole entry.\n     * @return {any[]} Array without duplicate values.\n     */\n    uniqueArray(array: any[], key?: string): any[] {\n        const filtered = [],\n            unique = [],\n            len = array.length;\n\n        for (let i = 0; i < len; i++) {\n            const entry = array[i],\n                value = key ? entry[key] : entry;\n\n            if (unique.indexOf(value) == -1) {\n                unique.push(value);\n                filtered.push(entry);\n            }\n        }\n\n        return filtered;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/utils/utils.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport {\n    LoadingController, Loading, ToastController, Toast, AlertController, Alert, Platform, Content,\n    ModalController\n} from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreTextUtilsProvider } from './text';\nimport { CoreAppProvider } from '../app';\nimport { CoreConfigProvider } from '../config';\nimport { CoreUrlUtilsProvider } from './url';\nimport { CoreConstants } from '@core/constants';\n\n/*\n * \"Utils\" service with helper functions for UI, DOM elements and HTML code.\n */\n@Injectable()\nexport class CoreDomUtilsProvider {\n    // List of input types that support keyboard.\n    protected INPUT_SUPPORT_KEYBOARD = ['date', 'datetime', 'datetime-local', 'email', 'month', 'number', 'password',\n        'search', 'tel', 'text', 'time', 'url', 'week'];\n    protected INSTANCE_ID_ATTR_NAME = 'core-instance-id';\n\n    protected element = document.createElement('div'); // Fake element to use in some functions, to prevent creating it each time.\n    protected matchesFn: string; // Name of the \"matches\" function to use when simulating a closest call.\n    protected instances: {[id: string]: any} = {}; // Store component/directive instances by id.\n    protected lastInstanceId = 0;\n\n    constructor(private translate: TranslateService, private loadingCtrl: LoadingController, private toastCtrl: ToastController,\n            private alertCtrl: AlertController, private textUtils: CoreTextUtilsProvider, private appProvider: CoreAppProvider,\n            private platform: Platform, private configProvider: CoreConfigProvider, private urlUtils: CoreUrlUtilsProvider,\n            private modalCtrl: ModalController) { }\n\n    /**\n     * Wraps a message with core-format-text if the message contains HTML tags.\n     * @todo Finish the adaptation\n     *\n     * @param {string} message Message to wrap.\n     * @return {string} Result message.\n     */\n    private addFormatTextIfNeeded(message: string): string {\n        // @todo\n        if (this.textUtils.hasHTMLTags(message)) {\n            return '<core-format-text watch=\"true\">' + message + '</core-format-text>';\n        }\n\n        return message;\n    }\n\n    /**\n     * Equivalent to element.closest(). If the browser doesn't support element.closest, it will\n     * traverse the parents to achieve the same functionality.\n     * Returns the closest ancestor of the current element (or the current element itself) which matches the selector.\n     *\n     * @param {HTMLElement} element DOM Element.\n     * @param {string} selector Selector to search.\n     * @return {Element} Closest ancestor.\n     */\n    closest(element: HTMLElement, selector: string): Element {\n        // Try to use closest if the browser supports it.\n        if (typeof element.closest == 'function') {\n            return element.closest(selector);\n        }\n\n        if (!this.matchesFn) {\n            // Find the matches function supported by the browser.\n            ['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'].some((fn) => {\n                if (typeof document.body[fn] == 'function') {\n                    this.matchesFn = fn;\n\n                    return true;\n                }\n\n                return false;\n            });\n\n            if (!this.matchesFn) {\n                return;\n            }\n        }\n\n        // Traverse parents.\n        while (element) {\n            if (element[this.matchesFn](selector)) {\n                return element;\n            }\n            element = element.parentElement;\n        }\n    }\n\n    /**\n     * If the download size is higher than a certain threshold shows a confirm dialog.\n     *\n     * @param {any} size Object containing size to download and a boolean to indicate if its totally or partialy calculated.\n     * @param {string} [message] Code of the message to show. Default: 'core.course.confirmdownload'.\n     * @param {string} [unknownMessage] ID of the message to show if size is unknown.\n     * @param {number} [wifiThreshold] Threshold to show confirm in WiFi connection. Default: CoreWifiDownloadThreshold.\n     * @param {number} [limitedThreshold] Threshold to show confirm in limited connection. Default: CoreDownloadThreshold.\n     * @param {boolean} [alwaysConfirm] True to show a confirm even if the size isn't high, false otherwise.\n     * @return {Promise<void>} Promise resolved when the user confirms or if no confirm needed.\n     */\n    confirmDownloadSize(size: any, message?: string, unknownMessage?: string, wifiThreshold?: number, limitedThreshold?: number,\n            alwaysConfirm?: boolean): Promise<void> {\n        wifiThreshold = typeof wifiThreshold == 'undefined' ? CoreConstants.WIFI_DOWNLOAD_THRESHOLD : wifiThreshold;\n        limitedThreshold = typeof limitedThreshold == 'undefined' ? CoreConstants.DOWNLOAD_THRESHOLD : limitedThreshold;\n\n        if (size.size < 0 || (size.size == 0 && !size.total)) {\n            // Seems size was unable to be calculated. Show a warning.\n            unknownMessage = unknownMessage || 'core.course.confirmdownloadunknownsize';\n\n            return this.showConfirm(this.translate.instant(unknownMessage));\n        } else if (!size.total) {\n            // Filesize is only partial.\n            const readableSize = this.textUtils.bytesToSize(size.size, 2);\n\n            return this.showConfirm(this.translate.instant('core.course.confirmpartialdownloadsize', { size: readableSize }));\n        } else if (size.size >= wifiThreshold || (this.appProvider.isNetworkAccessLimited() && size.size >= limitedThreshold)) {\n            message = message || 'core.course.confirmdownload';\n            const readableSize = this.textUtils.bytesToSize(size.size, 2);\n\n            return this.showConfirm(this.translate.instant(message, { size: readableSize }));\n        } else if (alwaysConfirm) {\n            return this.showConfirm(this.translate.instant('core.areyousure'));\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Extract the downloadable URLs from an HTML code.\n     *\n     * @param {string} html HTML code.\n     * @return {string[]} List of file urls.\n     */\n    extractDownloadableFilesFromHtml(html: string): string[] {\n        const urls = [];\n        let elements;\n\n        this.element.innerHTML = html;\n        elements = this.element.querySelectorAll('a, img, audio, video, source, track');\n\n        for (let i = 0; i < elements.length; i++) {\n            const element = elements[i];\n            let url = element.tagName === 'A' ? element.href : element.src;\n\n            if (url && this.urlUtils.isDownloadableUrl(url) && urls.indexOf(url) == -1) {\n                urls.push(url);\n            }\n\n            // Treat video poster.\n            if (element.tagName == 'VIDEO' && element.getAttribute('poster')) {\n                url = element.getAttribute('poster');\n                if (url && this.urlUtils.isDownloadableUrl(url) && urls.indexOf(url) == -1) {\n                    urls.push(url);\n                }\n            }\n        }\n\n        return urls;\n    }\n\n    /**\n     * Extract the downloadable URLs from an HTML code and returns them in fake file objects.\n     *\n     * @param {string} html HTML code.\n     * @return {any[]} List of fake file objects with file URLs.\n     */\n    extractDownloadableFilesFromHtmlAsFakeFileObjects(html: string): any[] {\n        const urls = this.extractDownloadableFilesFromHtml(html);\n\n        // Convert them to fake file objects.\n        return urls.map((url) => {\n            return {\n                fileurl: url\n            };\n        });\n    }\n\n    /**\n     * Search all the URLs in a CSS file content.\n     *\n     * @param {string} code CSS code.\n     * @return {string[]} List of URLs.\n     */\n    extractUrlsFromCSS(code: string): string[] {\n        // First of all, search all the url(...) occurrences that don't include \"data:\".\n        const urls = [],\n            matches = code.match(/url\\(\\s*[\"']?(?!data:)([^)]+)\\)/igm);\n\n        if (!matches) {\n            return urls;\n        }\n\n        // Extract the URL form each match.\n        matches.forEach((match) => {\n            const submatches = match.match(/url\\(\\s*['\"]?([^'\"]*)['\"]?\\s*\\)/im);\n            if (submatches && submatches[1]) {\n                urls.push(submatches[1]);\n            }\n        });\n\n        return urls;\n    }\n\n    /**\n     * Focus an element and open keyboard.\n     *\n     * @param {HTMLElement} el HTML element to focus.\n     */\n    focusElement(el: HTMLElement): void {\n        if (el && el.focus) {\n            el.focus();\n            if (this.platform.is('android') && this.supportsInputKeyboard(el)) {\n                // On some Android versions the keyboard doesn't open automatically.\n                this.appProvider.openKeyboard();\n            }\n        }\n    }\n\n    /**\n     * Formats a size to be used as width/height of an element.\n     * If the size is already valid (like '500px' or '50%') it won't be modified.\n     * Returned size will have a format like '500px'.\n     *\n     * @param {any} size Size to format.\n     * @return {string} Formatted size. If size is not valid, returns an empty string.\n     */\n    formatPixelsSize(size: any): string {\n        if (typeof size == 'string' && (size.indexOf('px') > -1 || size.indexOf('%') > -1)) {\n            // It seems to be a valid size.\n            return size;\n        }\n\n        size = parseInt(size, 10);\n        if (!isNaN(size)) {\n            return size + 'px';\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns the contents of a certain selection in a DOM element.\n     *\n     * @param {HTMLElement} element DOM element to search in.\n     * @param {string} selector Selector to search.\n     * @return {string} Selection contents. Undefined if not found.\n     */\n    getContentsOfElement(element: HTMLElement, selector: string): string {\n        if (element) {\n            const selected = element.querySelector(selector);\n            if (selected) {\n                return selected.innerHTML;\n            }\n        }\n    }\n\n    /**\n     * Get the data from a form. It will only collect elements that have a name.\n     *\n     * @param {HTMLFormElement} form The form to get the data from.\n     * @return {any} Object with the data. The keys are the names of the inputs.\n     */\n    getDataFromForm(form: HTMLFormElement): any {\n        if (!form || !form.elements) {\n            return {};\n        }\n\n        const data = {};\n\n        for (let i = 0; i < form.elements.length; i++) {\n            const element: any = form.elements[i],\n                name = element.name || '';\n\n            // Ignore submit inputs.\n            if (!name || element.type == 'submit' || element.tagName == 'BUTTON') {\n                return;\n            }\n\n            // Get the value.\n            if (element.type == 'checkbox') {\n                data[name] = !!element.checked;\n            } else if (element.type == 'radio') {\n                if (element.checked) {\n                    data[name] = element.value;\n                }\n            } else {\n                data[name] = element.value;\n            }\n        }\n\n        return data;\n    }\n\n    /**\n     * Returns height of an element.\n     *\n     * @param {any} element DOM element to measure.\n     * @param {boolean} [usePadding] Whether to use padding to calculate the measure.\n     * @param {boolean} [useMargin] Whether to use margin to calculate the measure.\n     * @param {boolean} [useBorder] Whether to use borders to calculate the measure.\n     * @param {boolean} [innerMeasure] If inner measure is needed: padding, margin or borders will be substracted.\n     * @return {number} Height in pixels.\n     */\n    getElementHeight(element: any, usePadding?: boolean, useMargin?: boolean, useBorder?: boolean,\n            innerMeasure?: boolean): number {\n        return this.getElementMeasure(element, false, usePadding, useMargin, useBorder, innerMeasure);\n    }\n\n    /**\n     * Returns height or width of an element.\n     *\n     * @param {any} element DOM element to measure.\n     * @param {boolean} [getWidth] Whether to get width or height.\n     * @param {boolean} [usePadding] Whether to use padding to calculate the measure.\n     * @param {boolean} [useMargin] Whether to use margin to calculate the measure.\n     * @param {boolean} [useBorder] Whether to use borders to calculate the measure.\n     * @param {boolean} [innerMeasure] If inner measure is needed: padding, margin or borders will be substracted.\n     * @return {number} Measure in pixels.\n     */\n    getElementMeasure(element: any, getWidth?: boolean, usePadding?: boolean, useMargin?: boolean, useBorder?: boolean,\n            innerMeasure?: boolean): number {\n\n        const offsetMeasure = getWidth ? 'offsetWidth' : 'offsetHeight',\n            measureName = getWidth ? 'width' : 'height',\n            clientMeasure = getWidth ? 'clientWidth' : 'clientHeight',\n            priorSide = getWidth ? 'Left' : 'Top',\n            afterSide = getWidth ? 'Right' : 'Bottom';\n        let measure = element[offsetMeasure] || element[measureName] || element[clientMeasure] || 0;\n\n        // Measure not correctly taken.\n        if (measure <= 0) {\n            const style = getComputedStyle(element);\n            if (style && style.display == '') {\n                element.style.display = 'inline-block';\n                measure = element[offsetMeasure] || element[measureName] || element[clientMeasure] || 0;\n                element.style.display = '';\n            }\n        }\n\n        if (usePadding || useMargin || useBorder) {\n            const computedStyle = getComputedStyle(element);\n            let surround = 0;\n\n            if (usePadding) {\n                surround += parseInt(computedStyle['padding' + priorSide], 10) + parseInt(computedStyle['padding' + afterSide], 10);\n            }\n            if (useMargin) {\n                surround += parseInt(computedStyle['margin' + priorSide], 10) + parseInt(computedStyle['margin' + afterSide], 10);\n            }\n            if (useBorder) {\n                surround += parseInt(computedStyle['border' + priorSide], 10) + parseInt(computedStyle['border' + afterSide], 10);\n            }\n            if (innerMeasure) {\n                measure = measure > surround ? measure - surround : 0;\n            } else {\n                measure += surround;\n            }\n        }\n\n        return measure;\n\n    }\n\n    /**\n     * Returns width of an element.\n     *\n     * @param {any} element DOM element to measure.\n     * @param {boolean} [usePadding] Whether to use padding to calculate the measure.\n     * @param {boolean} [useMargin] Whether to use margin to calculate the measure.\n     * @param {boolean} [useBorder] Whether to use borders to calculate the measure.\n     * @param {boolean} [innerMeasure] If inner measure is needed: padding, margin or borders will be substracted.\n     * @return {number} Width in pixels.\n     */\n    getElementWidth(element: any, usePadding?: boolean, useMargin?: boolean, useBorder?: boolean,\n            innerMeasure?: boolean): number {\n        return this.getElementMeasure(element, true, usePadding, useMargin, useBorder, innerMeasure);\n    }\n\n    /**\n     * Retrieve the position of a element relative to another element.\n     *\n     * @param {HTMLElement} container Element to search in.\n     * @param {string} [selector] Selector to find the element to gets the position.\n     * @param {string} [positionParentClass] Parent Class where to stop calculating the position. Default scroll-content.\n     * @return {number[]} positionLeft, positionTop of the element relative to.\n     */\n    getElementXY(container: HTMLElement, selector?: string, positionParentClass?: string): number[] {\n        let element: HTMLElement = <HTMLElement> (selector ? container.querySelector(selector) : container),\n            offsetElement,\n            positionTop = 0,\n            positionLeft = 0;\n\n        if (!positionParentClass) {\n            positionParentClass = 'scroll-content';\n        }\n\n        if (!element) {\n            return null;\n        }\n\n        while (element) {\n            positionLeft += (element.offsetLeft - element.scrollLeft + element.clientLeft);\n            positionTop += (element.offsetTop - element.scrollTop + element.clientTop);\n\n            offsetElement = element.offsetParent;\n            element = element.parentElement;\n\n            // Every parent class has to be checked but the position has to be got form offsetParent.\n            while (offsetElement != element && element) {\n                // If positionParentClass element is reached, stop adding tops.\n                if (element.className.indexOf(positionParentClass) != -1) {\n                    element = null;\n                } else {\n                    element = element.parentElement;\n                }\n            }\n\n            // Finally, check again.\n            if (element && element.className.indexOf(positionParentClass) != -1) {\n                element = null;\n            }\n        }\n\n        return [positionLeft, positionTop];\n    }\n\n    /**\n     * Given an error message, return a suitable error title.\n     *\n     * @param {string} message The error message.\n     * @return {string} Title.\n     */\n    private getErrorTitle(message: string): string {\n        if (message == this.translate.instant('core.networkerrormsg') ||\n            message == this.translate.instant('core.fileuploader.errormustbeonlinetoupload')) {\n            return '<span class=\"core-icon-with-badge\"><i class=\"icon ion-wifi\"></i>\\\n                <i class=\"icon ion-alert-circled core-icon-badge\"></i></span>';\n        }\n\n        return this.textUtils.decodeHTML(this.translate.instant('core.error'));\n    }\n\n    /**\n     * Retrieve component/directive instance.\n     * Please use this function only if you cannot retrieve the instance using parent/child methods: ViewChild (or similar)\n     * or Angular's injection.\n     *\n     * @param {Element} element The root element of the component/directive.\n     * @return {any} The instance, undefined if not found.\n     */\n    getInstanceByElement(element: Element): any {\n        const id = element.getAttribute(this.INSTANCE_ID_ATTR_NAME);\n\n        return this.instances[id];\n    }\n\n    /**\n     * Check if an element is outside of screen (viewport).\n     *\n     * @param {HTMLElement} scrollEl The element that must be scrolled.\n     * @param {HTMLElement} element DOM element to check.\n     * @return {boolean} Whether the element is outside of the viewport.\n     */\n    isElementOutsideOfScreen(scrollEl: HTMLElement, element: HTMLElement): boolean {\n        const elementRect = element.getBoundingClientRect();\n        let elementMidPoint,\n            scrollElRect,\n            scrollTopPos = 0;\n\n        if (!elementRect) {\n            return false;\n        }\n\n        elementMidPoint = Math.round((elementRect.bottom + elementRect.top) / 2);\n\n        scrollElRect = scrollEl.getBoundingClientRect();\n        scrollTopPos = (scrollElRect && scrollElRect.top) || 0;\n\n        return elementMidPoint > window.innerHeight || elementMidPoint < scrollTopPos;\n    }\n\n    /**\n     * Check if rich text editor is enabled.\n     *\n     * @return {Promise<boolean>} Promise resolved with boolean: true if enabled, false otherwise.\n     */\n    isRichTextEditorEnabled(): Promise<boolean> {\n        if (this.isRichTextEditorSupported()) {\n            return this.configProvider.get(CoreConstants.SETTINGS_RICH_TEXT_EDITOR, true);\n        }\n\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Check if rich text editor is supported in the platform.\n     *\n     * @return {boolean} Whether it's supported.\n     */\n    isRichTextEditorSupported(): boolean {\n        // Disabled just for iOS.\n        return !this.platform.is('ios');\n    }\n\n    /**\n     * Move children from one HTMLElement to another.\n     *\n     * @param {HTMLElement} oldParent The old parent.\n     * @param {HTMLElement} newParent The new parent.\n     * @return {Node[]} List of moved children.\n     */\n    moveChildren(oldParent: HTMLElement, newParent: HTMLElement): Node[] {\n        const movedChildren: Node[] = [];\n\n        while (oldParent.childNodes.length > 0) {\n            const child = oldParent.childNodes[0];\n            movedChildren.push(child);\n\n            newParent.appendChild(child);\n        }\n\n        return movedChildren;\n    }\n\n    /**\n     * Search and remove a certain element from inside another element.\n     *\n     * @param {HTMLElement} element DOM element to search in.\n     * @param {string} selector Selector to search.\n     */\n    removeElement(element: HTMLElement, selector: string): void {\n        if (element) {\n            const selected = element.querySelector(selector);\n            if (selected) {\n                selected.remove();\n            }\n        }\n    }\n\n    /**\n     * Search and remove a certain element from an HTML code.\n     *\n     * @param {string} html HTML code to change.\n     * @param {string} selector Selector to search.\n     * @param {boolean} [removeAll] True if it should remove all matches found, false if it should only remove the first one.\n     * @return {string} HTML without the element.\n     */\n    removeElementFromHtml(html: string, selector: string, removeAll?: boolean): string {\n        let selected;\n\n        this.element.innerHTML = html;\n\n        if (removeAll) {\n            selected = this.element.querySelectorAll(selector);\n            for (let i = 0; i < selected.length; i++) {\n                selected[i].remove();\n            }\n        } else {\n            selected = this.element.querySelector(selector);\n            if (selected) {\n                selected.remove();\n            }\n        }\n\n        return this.element.innerHTML;\n    }\n\n    /**\n     * Remove a component/directive instance using the DOM Element.\n     *\n     * @param {Element} element The root element of the component/directive.\n     */\n    removeInstanceByElement(element: Element): void {\n        const id = element.getAttribute(this.INSTANCE_ID_ATTR_NAME);\n        delete this.instances[id];\n    }\n\n    /**\n     * Remove a component/directive instance using the ID.\n     *\n     * @param {string} id The ID to remove.\n     */\n    removeInstanceById(id: string): void {\n        delete this.instances[id];\n    }\n\n    /**\n     * Search for certain classes in an element contents and replace them with the specified new values.\n     *\n     * @param {HTMLElement} element DOM element.\n     * @param {any} map Mapping of the classes to replace. Keys must be the value to replace, values must be\n     *            the new class name. Example: {'correct': 'core-question-answer-correct'}.\n     */\n    replaceClassesInElement(element: HTMLElement, map: any): void {\n        for (const key in map) {\n            const foundElements = element.querySelectorAll('.' + key);\n\n            for (let i = 0; i < foundElements.length; i++) {\n                const foundElement = foundElements[i];\n                foundElement.className = foundElement.className.replace(key, map[key]);\n            }\n        }\n    }\n\n    /**\n     * Given an HTML, search all links and media and tries to restore original sources using the paths object.\n     *\n     * @param {string} html HTML code.\n     * @param {object} paths Object linking URLs in the html code with the real URLs to use.\n     * @param {Function} [anchorFn] Function to call with each anchor. Optional.\n     * @return {string} Treated HTML code.\n     */\n    restoreSourcesInHtml(html: string, paths: object, anchorFn?: Function): string {\n        let media,\n            anchors;\n\n        this.element.innerHTML = html;\n\n        // Treat elements with src (img, audio, video, ...).\n        media = this.element.querySelectorAll('img, video, audio, source, track');\n        media.forEach((media: HTMLElement) => {\n            let newSrc = paths[this.textUtils.decodeURIComponent(media.getAttribute('src'))];\n\n            if (typeof newSrc != 'undefined') {\n                media.setAttribute('src', newSrc);\n            }\n\n            // Treat video posters.\n            if (media.tagName == 'VIDEO' && media.getAttribute('poster')) {\n                newSrc = paths[this.textUtils.decodeURIComponent(media.getAttribute('poster'))];\n                if (typeof newSrc !== 'undefined') {\n                    media.setAttribute('poster', newSrc);\n                }\n            }\n        });\n\n        // Now treat links.\n        anchors = this.element.querySelectorAll('a');\n        anchors.forEach((anchor: HTMLElement) => {\n            const href = this.textUtils.decodeURIComponent(anchor.getAttribute('href')),\n                newUrl = paths[href];\n\n            if (typeof newUrl != 'undefined') {\n                anchor.setAttribute('href', newUrl);\n\n                if (typeof anchorFn == 'function') {\n                    anchorFn(anchor, href);\n                }\n            }\n        });\n\n        return this.element.innerHTML;\n    }\n\n    /**\n     * Scroll to a certain element.\n     *\n     * @param {Content} content The content that must be scrolled.\n     * @param {HTMLElement} element The element to scroll to.\n     * @param {string} [scrollParentClass] Parent class where to stop calculating the position. Default scroll-content.\n     * @return {boolean} True if the element is found, false otherwise.\n     */\n    scrollToElement(content: Content, element: HTMLElement, scrollParentClass?: string): boolean {\n        const position = this.getElementXY(element, undefined, scrollParentClass);\n        if (!position) {\n            return false;\n        }\n\n        content.scrollTo(position[0], position[1]);\n\n        return true;\n    }\n\n    /**\n     * Scroll to a certain element using a selector to find it.\n     *\n     * @param {Content} content The content that must be scrolled.\n     * @param {string} selector Selector to find the element to scroll to.\n     * @param {string} [scrollParentClass] Parent class where to stop calculating the position. Default scroll-content.\n     * @return {boolean} True if the element is found, false otherwise.\n     */\n    scrollToElementBySelector(content: Content, selector: string, scrollParentClass?: string): boolean {\n        const position = this.getElementXY(content.getScrollElement(), selector, scrollParentClass);\n        if (!position) {\n            return false;\n        }\n\n        content.scrollTo(position[0], position[1]);\n\n        return true;\n    }\n\n    /**\n     * Search for an input with error (core-input-error directive) and scrolls to it if found.\n     *\n     * @param {Content} content The content that must be scrolled.\n     * @param [scrollParentClass] Parent class where to stop calculating the position. Default scroll-content.\n     * @return {boolean} True if the element is found, false otherwise.\n     */\n    scrollToInputError(content: Content, scrollParentClass?: string): boolean {\n        if (!content) {\n            return false;\n        }\n\n        return this.scrollToElementBySelector(content, '.core-input-error', scrollParentClass);\n    }\n\n    /**\n     * Show an alert modal with a button to close it.\n     *\n     * @param {string} title Title to show.\n     * @param {string} message Message to show.\n     * @param {string} [buttonText] Text of the button.\n     * @param {number} [autocloseTime] Number of milliseconds to wait to close the modal. If not defined, modal won't be closed.\n     * @return {Alert} The alert modal.\n     */\n    showAlert(title: string, message: string, buttonText?: string, autocloseTime?: number): Alert {\n        const alert = this.alertCtrl.create({\n            title: title,\n            message: this.addFormatTextIfNeeded(message), // Add format-text to handle links.\n            buttons: [buttonText || this.translate.instant('core.ok')]\n        });\n\n        alert.present();\n\n        if (autocloseTime > 0) {\n            setTimeout(() => {\n                alert.dismiss();\n            }, autocloseTime);\n        }\n\n        return alert;\n    }\n\n    /**\n     * Show an alert modal with a button to close it, translating the values supplied.\n     *\n     * @param {string} title Title to show.\n     * @param {string} message Message to show.\n     * @param {string} [buttonText] Text of the button.\n     * @param {number} [autocloseTime] Number of milliseconds to wait to close the modal. If not defined, modal won't be closed.\n     * @return {Alert} The alert modal.\n     */\n    showAlertTranslated(title: string, message: string, buttonText?: string, autocloseTime?: number): Alert {\n        title = title ? this.translate.instant(title) : title;\n        message = message ? this.translate.instant(message) : message;\n        buttonText = buttonText ? this.translate.instant(buttonText) : buttonText;\n\n        return this.showAlert(title, message, buttonText, autocloseTime);\n    }\n\n    /**\n     * Show a confirm modal.\n     *\n     * @param {string} message Message to show in the modal body.\n     * @param {string} [title] Title of the modal.\n     * @param {string} [okText] Text of the OK button.\n     * @param {string} [cancelText] Text of the Cancel button.\n     * @param {any} [options] More options. See https://ionicframework.com/docs/api/components/alert/AlertController/\n     * @return {Promise<void>} Promise resolved if the user confirms and rejected if he cancels.\n     */\n    showConfirm(message: string, title?: string, okText?: string, cancelText?: string, options?: any): Promise<void> {\n        return new Promise<void>((resolve, reject): void => {\n            options = options || {};\n\n            options.message = this.addFormatTextIfNeeded(message); // Add format-text to handle links.\n            options.title = title;\n            if (!title) {\n                options.cssClass = 'core-nohead';\n            }\n            options.buttons = [\n                {\n                    text: cancelText || this.translate.instant('core.cancel'),\n                    role: 'cancel',\n                    handler: (): void => {\n                        reject();\n                    }\n                },\n                {\n                    text: okText || this.translate.instant('core.ok'),\n                    handler: (): void => {\n                        resolve();\n                    }\n                }\n            ];\n\n            this.alertCtrl.create(options).present();\n        });\n    }\n\n    /**\n     * Show an alert modal with an error message.\n     *\n     * @param {any} error Message to show.\n     * @param {boolean} [needsTranslate] Whether the error needs to be translated.\n     * @param {number} [autocloseTime] Number of milliseconds to wait to close the modal. If not defined, modal won't be closed.\n     * @return {Alert} The alert modal.\n     */\n    showErrorModal(error: any, needsTranslate?: boolean, autocloseTime?: number): Alert {\n        if (typeof error == 'object') {\n            // We received an object instead of a string. Search for common properties.\n            if (typeof error.content != 'undefined') {\n                error = error.content;\n            } else if (typeof error.body != 'undefined') {\n                error = error.body;\n            } else if (typeof error.message != 'undefined') {\n                error = error.message;\n            } else if (typeof error.error != 'undefined') {\n                error = error.error;\n            } else {\n                // No common properties found, just stringify it.\n                error = JSON.stringify(error);\n            }\n\n            // Try to remove tokens from the contents.\n            const matches = error.match(/token\"?[=|:]\"?(\\w*)/, '');\n            if (matches && matches[1]) {\n                error = error.replace(new RegExp(matches[1], 'g'), 'secret');\n            }\n        }\n\n        const message = this.textUtils.decodeHTML(needsTranslate ? this.translate.instant(error) : error);\n\n        return this.showAlert(this.getErrorTitle(message), message, undefined, autocloseTime);\n    }\n\n    /**\n     * Show an alert modal with an error message. It uses a default message if error is not a string.\n     *\n     * @param {any} error Message to show.\n     * @param {any} [defaultError] Message to show if the error is not a string.\n     * @param {boolean} [needsTranslate] Whether the error needs to be translated.\n     * @param {number} [autocloseTime] Number of milliseconds to wait to close the modal. If not defined, modal won't be closed.\n     * @return {Alert} The alert modal.\n     */\n    showErrorModalDefault(error: any, defaultError: any, needsTranslate?: boolean, autocloseTime?: number): Alert {\n        if (error != CoreConstants.DONT_SHOW_ERROR) {\n            if (error && typeof error != 'string') {\n                error = error.message || error.error;\n            }\n            error = typeof error == 'string' ? error : defaultError;\n\n            return this.showErrorModal(error, needsTranslate, autocloseTime);\n        }\n    }\n\n    /**\n     * Show an alert modal with the first warning error message. It uses a default message if error is not a string.\n     *\n     * @param {any} warnings Warnings returned.\n     * @param {any} [defaultError] Message to show if the error is not a string.\n     * @param {boolean} [needsTranslate] Whether the error needs to be translated.\n     * @param {number} [autocloseTime] Number of milliseconds to wait to close the modal. If not defined, modal won't be closed.\n     * @return {Alert} The alert modal.\n     */\n    showErrorModalFirstWarning(warnings: any, defaultError: any, needsTranslate?: boolean, autocloseTime?: number): Alert {\n        const error = warnings && warnings.length && warnings[0].message;\n\n        return this.showErrorModalDefault(error, defaultError, needsTranslate, autocloseTime);\n    }\n\n    /**\n     * Displays a loading modal window.\n     *\n     * @param {string} [text] The text of the modal window. Default: core.loading.\n     * @param {boolean} [needsTranslate] Whether the 'text' needs to be translated.\n     * @return {Loading} Loading modal instance.\n     * @description\n     * Usage:\n     *     let modal = domUtils.showModalLoading(myText);\n     *     ...\n     *     modal.dismiss();\n     */\n    showModalLoading(text?: string, needsTranslate?: boolean): Loading {\n        if (!text) {\n            text = this.translate.instant('core.loading');\n        } else if (needsTranslate) {\n            text = this.translate.instant(text);\n        }\n\n        const loader = this.loadingCtrl.create({\n            content: text\n        });\n\n        loader.present();\n\n        return loader;\n    }\n\n    /**\n     * Show a prompt modal to input some data.\n     *\n     * @param {string} message Modal message.\n     * @param {string} [title] Modal title.\n     * @param {string} [placeholder] Placeholder of the input element. By default, \"Password\".\n     * @param {string} [type] Type of the input element. By default, password.\n     * @return {Promise<any>} Promise resolved with the input data if the user clicks OK, rejected if cancels.\n     */\n    showPrompt(message: string, title?: string, placeholder?: string, type: string = 'password'): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            this.alertCtrl.create({\n                message: this.addFormatTextIfNeeded(message), // Add format-text to handle links.\n                title: title,\n                inputs: [\n                    {\n                        name: 'promptinput',\n                        placeholder: placeholder || this.translate.instant('core.login.password'),\n                        type: type\n                    }\n                ],\n                buttons: [\n                    {\n                        text: this.translate.instant('core.cancel'),\n                        role: 'cancel',\n                        handler: (): void => {\n                            reject();\n                        }\n                    },\n                    {\n                        text: this.translate.instant('core.ok'),\n                        handler: (data): void => {\n                            resolve(data.promptinput);\n                        }\n                    }\n                ]\n            }).present();\n        });\n    }\n\n    /**\n     * Displays an autodimissable toast modal window.\n     *\n     * @param {string} text The text of the toast.\n     * @param {boolean} [needsTranslate] Whether the 'text' needs to be translated.\n     * @param {number} [duration=2000] Duration in ms of the dimissable toast.\n     * @param {string} [cssClass=\"\"] Class to add to the toast.\n     * @return {Toast} Toast instance.\n     */\n    showToast(text: string, needsTranslate?: boolean, duration: number = 2000, cssClass: string = ''): Toast {\n        if (needsTranslate) {\n            text = this.translate.instant(text);\n        }\n\n        const loader = this.toastCtrl.create({\n            message: text,\n            duration: duration,\n            position: 'bottom',\n            cssClass: cssClass,\n            dismissOnPageChange: true\n        });\n\n        loader.present();\n\n        return loader;\n    }\n\n    /**\n     * Stores a component/directive instance.\n     *\n     * @param {Element} element The root element of the component/directive.\n     * @param {any} instance The instance to store.\n     * @return {string} ID to identify the instance.\n     */\n    storeInstanceByElement(element: Element, instance: any): string {\n        const id = String(this.lastInstanceId++);\n\n        element.setAttribute(this.INSTANCE_ID_ATTR_NAME, id);\n        this.instances[id] = instance;\n\n        return id;\n    }\n\n    /**\n     * Check if an element supports input via keyboard.\n     *\n     * @param {any} el HTML element to check.\n     * @return {boolean} Whether it supports input using keyboard.\n     */\n    supportsInputKeyboard(el: any): boolean {\n        return el && !el.disabled && (el.tagName.toLowerCase() == 'textarea' ||\n            (el.tagName.toLowerCase() == 'input' && this.INPUT_SUPPORT_KEYBOARD.indexOf(el.type) != -1));\n    }\n\n    /**\n     * Converts HTML formatted text to DOM element.\n     * @param  {string}      text HTML text.\n     * @return {HTMLCollection}      Same text converted to HTMLCollection.\n     */\n    toDom(text: string): HTMLCollection {\n        const element = document.createElement('div');\n        element.innerHTML = text;\n\n        return element.children;\n    }\n\n    /**\n     * View an image in a new page or modal.\n     *\n     * @param {string} image URL of the image.\n     * @param {string} title Title of the page or modal.\n     * @param {string} [component] Component to link the image to if needed.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     */\n    viewImage(image: string, title?: string, component?: string, componentId?: string | number): void {\n        if (image) {\n            const params: any = {\n                    title: title,\n                    image: image,\n                    component: component,\n                    componentId: componentId\n                },\n                modal = this.modalCtrl.create('CoreViewerImagePage', params);\n            modal.present();\n        }\n\n    }\n\n    /**\n     * Wrap an HTMLElement with another element.\n     *\n     * @param {HTMLElement} el The element to wrap.\n     * @param {HTMLElement} wrapper Wrapper.\n     */\n    wrapElement(el: HTMLElement, wrapper: HTMLElement): void {\n        // Insert the wrapper before the element.\n        el.parentNode.insertBefore(wrapper, el);\n        // Now move the element into the wrapper.\n        wrapper.appendChild(el);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/utils/dom.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform, App, NavController } from 'ionic-angular';\nimport { Keyboard } from '@ionic-native/keyboard';\nimport { Network } from '@ionic-native/network';\n\nimport { CoreDbProvider } from './db';\nimport { CoreLoggerProvider } from './logger';\nimport { SQLiteDB } from '@classes/sqlitedb';\n\n/**\n * Data stored for a redirect to another page/site.\n */\nexport interface CoreRedirectData {\n    /**\n     * ID of the site to load.\n     * @type {string}\n     */\n    siteId?: string;\n\n    /**\n     * Name of the page to redirect to.\n     * @type {string}\n     */\n    page?: string;\n\n    /**\n     * Params to pass to the page.\n     * @type {any}\n     */\n    params?: any;\n\n    /**\n     * Timestamp when this redirect was last modified.\n     * @type {number}\n     */\n    timemodified?: number;\n}\n\n/**\n * Factory to provide some global functionalities, like access to the global app database.\n * @description\n * Each service or component should be responsible of creating their own database tables. Example:\n *\n * constructor(appProvider: CoreAppProvider) {\n *     this.appDB = appProvider.getDB();\n *     this.appDB.createTableFromSchema(this.tableSchema);\n * }\n */\n@Injectable()\nexport class CoreAppProvider {\n    protected DBNAME = 'MoodleMobile';\n    protected db: SQLiteDB;\n    protected logger;\n    protected ssoAuthenticationPromise: Promise<any>;\n    protected isKeyboardShown = false;\n\n    constructor(dbProvider: CoreDbProvider, private platform: Platform, private keyboard: Keyboard, private appCtrl: App,\n            private network: Network, logger: CoreLoggerProvider) {\n        this.logger = logger.getInstance('CoreAppProvider');\n        this.db = dbProvider.getDB(this.DBNAME);\n\n        this.keyboard.onKeyboardShow().subscribe((data) => {\n            this.isKeyboardShown = true;\n\n        });\n        this.keyboard.onKeyboardHide().subscribe((data) => {\n            this.isKeyboardShown = false;\n        });\n    }\n\n    /**\n     * Check if the browser supports mediaDevices.getUserMedia.\n     *\n     * @return {boolean} Whether the function is supported.\n     */\n    canGetUserMedia(): boolean {\n        return !!(navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n    }\n\n    /**\n     * Check if the browser supports MediaRecorder.\n     *\n     * @return {boolean} Whether the function is supported.\n     */\n    canRecordMedia(): boolean {\n        return !!(<any> window).MediaRecorder;\n    }\n\n    /**\n     * Closes the keyboard.\n     */\n    closeKeyboard(): void {\n        if (this.isMobile()) {\n            this.keyboard.close();\n        }\n    }\n\n    /**\n     * Get the application global database.\n     *\n     * @return {SQLiteDB} App's DB.\n     */\n    getDB(): SQLiteDB {\n        return this.db;\n    }\n\n    /**\n     * Get the app's root NavController.\n     *\n     * @return {NavController} Root NavController.\n     */\n    getRootNavController(): NavController {\n        // Function getRootNav is deprecated. Get the first root nav, there should always be one.\n        return this.appCtrl.getRootNavs()[0];\n    }\n\n    /**\n     * Checks if the app is running in a desktop environment (not browser).\n     *\n     * @return {boolean} Whether the app is running in a desktop environment (not browser).\n     */\n    isDesktop(): boolean {\n        const process = (<any> window).process;\n\n        return !!(process && process.versions && typeof process.versions.electron != 'undefined');\n    }\n\n    /**\n     * Check if the keyboard is visible.\n     *\n     * @return {boolean} Whether keyboard is visible.\n     */\n    isKeyboardVisible(): boolean {\n        return this.isKeyboardShown;\n    }\n\n    /**\n     * Check if the app is running in a Linux environment.\n     *\n     * @return {boolean} Whether it's running in a Linux environment.\n     */\n    isLinux(): boolean {\n        if (!this.isDesktop()) {\n            return false;\n        }\n\n        try {\n            return require('os').platform().indexOf('linux') === 0;\n        } catch (ex) {\n            return false;\n        }\n    }\n\n    /**\n     * Check if the app is running in a Mac OS environment.\n     *\n     * @return {boolean} Whether it's running in a Mac OS environment.\n     */\n    isMac(): boolean {\n        if (!this.isDesktop()) {\n            return false;\n        }\n\n        try {\n            return require('os').platform().indexOf('darwin') === 0;\n        } catch (ex) {\n            return false;\n        }\n    }\n\n    /**\n     * Checks if the app is running in a mobile or tablet device (Cordova).\n     *\n     * @return {boolean} Whether the app is running in a mobile or tablet device.\n     */\n    isMobile(): boolean {\n        return this.platform.is('cordova');\n    }\n\n    /**\n     * Checks if the current window is wider than a mobile.\n     *\n     * @return {boolean} Whether the app the current window is wider than a mobile.\n     */\n    isWide(): boolean {\n        return this.platform.width() > 768;\n    }\n\n    /**\n     * Returns whether we are online.\n     *\n     * @return {boolean} Whether the app is online.\n     */\n    isOnline(): boolean {\n        let online = this.network.type !== null && this.network.type != Connection.NONE && this.network.type != Connection.UNKNOWN;\n        // Double check we are not online because we cannot rely 100% in Cordova APIs. Also, check it in browser.\n        if (!online && navigator.onLine) {\n            online = true;\n        }\n\n        return online;\n    }\n\n    /**\n     * Check if device uses a limited connection.\n     *\n     * @return {boolean} Whether the device uses a limited connection.\n     */\n    isNetworkAccessLimited(): boolean {\n        const type = this.network.type;\n        if (type === null) {\n            // Plugin not defined, probably in browser.\n            return false;\n        }\n\n        const limited = [Connection.CELL_2G, Connection.CELL_3G, Connection.CELL_4G, Connection.CELL];\n\n        return limited.indexOf(type) > -1;\n    }\n\n    /**\n     * Check if the app is running in a Windows environment.\n     *\n     * @return {boolean} Whether it's running in a Windows environment.\n     */\n    isWindows(): boolean {\n        if (!this.isDesktop()) {\n            return false;\n        }\n\n        try {\n            return require('os').platform().indexOf('win') === 0;\n        } catch (ex) {\n            return false;\n        }\n    }\n\n    /**\n     * Open the keyboard.\n     */\n    openKeyboard(): void {\n        // Open keyboard is not supported in desktop and in iOS.\n        if (this.isMobile() && !this.platform.is('ios')) {\n            this.keyboard.show();\n        }\n    }\n\n    /**\n     * Start an SSO authentication process.\n     * Please notice that this function should be called when the app receives the new token from the browser,\n     * NOT when the browser is opened.\n     */\n    startSSOAuthentication(): void {\n        let cancelTimeout,\n            resolvePromise;\n\n        this.ssoAuthenticationPromise = new Promise((resolve, reject): void => {\n            resolvePromise = resolve;\n\n            // Resolve it automatically after 10 seconds (it should never take that long).\n            cancelTimeout = setTimeout(() => {\n                this.finishSSOAuthentication();\n            }, 10000);\n        });\n\n        // Store the resolve function in the promise itself.\n        (<any> this.ssoAuthenticationPromise).resolve = resolvePromise;\n\n        // If the promise is resolved because finishSSOAuthentication is called, stop the cancel promise.\n        this.ssoAuthenticationPromise.then(() => {\n            clearTimeout(cancelTimeout);\n        });\n    }\n\n    /**\n     * Finish an SSO authentication process.\n     */\n    finishSSOAuthentication(): void {\n        if (this.ssoAuthenticationPromise) {\n            (<any> this.ssoAuthenticationPromise).resolve && (<any> this.ssoAuthenticationPromise).resolve();\n            this.ssoAuthenticationPromise = undefined;\n        }\n    }\n\n    /**\n     * Check if there's an ongoing SSO authentication process.\n     *\n     * @return {boolean} Whether there's a SSO authentication ongoing.\n     */\n    isSSOAuthenticationOngoing(): boolean {\n        return !!this.ssoAuthenticationPromise;\n    }\n\n    /**\n     * Returns a promise that will be resolved once SSO authentication finishes.\n     *\n     * @return {Promise<any>} Promise resolved once SSO authentication finishes.\n     */\n    waitForSSOAuthentication(): Promise<any> {\n        return this.ssoAuthenticationPromise || Promise.resolve();\n    }\n\n    /**\n     * Retrieve redirect data.\n     *\n     * @return {CoreRedirectData} Object with siteid, state, params and timemodified.\n     */\n    getRedirect(): CoreRedirectData {\n        if (localStorage && localStorage.getItem) {\n            try {\n                const data: CoreRedirectData = {\n                    siteId: localStorage.getItem('mmCoreRedirectSiteId'),\n                    page: localStorage.getItem('mmCoreRedirectState'),\n                    params: localStorage.getItem('mmCoreRedirectParams'),\n                    timemodified: parseInt(localStorage.getItem('mmCoreRedirectTime'), 10)\n                };\n\n                if (data.params) {\n                    data.params = JSON.parse(data.params);\n                }\n\n                return data;\n            } catch (ex) {\n                this.logger.error('Error loading redirect data:', ex);\n            }\n        }\n\n        return {};\n    }\n\n    /**\n     * Store redirect params.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} page Page to go.\n     * @param {any} params Page params.\n     */\n    storeRedirect(siteId: string, page: string, params: any): void {\n        if (localStorage && localStorage.setItem) {\n            try {\n                localStorage.setItem('mmCoreRedirectSiteId', siteId);\n                localStorage.setItem('mmCoreRedirectState', page);\n                localStorage.setItem('mmCoreRedirectParams', JSON.stringify(params));\n                localStorage.setItem('mmCoreRedirectTime', String(Date.now()));\n            } catch (ex) {\n                // Ignore errors.\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/app.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { ModalController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreLangProvider } from '../lang';\n\n/*\n * \"Utils\" service with helper functions for text.\n*/\n@Injectable()\nexport class CoreTextUtilsProvider {\n    protected element = document.createElement('div'); // Fake element to use in some functions, to prevent creating it each time.\n\n    constructor(private translate: TranslateService, private langProvider: CoreLangProvider, private modalCtrl: ModalController) { }\n\n    /**\n     * Given a list of sentences, build a message with all of them wrapped in <p>.\n     *\n     * @param {string[]} messages Messages to show.\n     * @return {string} Message with all the messages.\n     */\n    buildMessage(messages: string[]): string {\n        let result = '';\n\n        messages.forEach((message) => {\n            if (message) {\n                result += `<p>${message}</p>`;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Convert size in bytes into human readable format\n     *\n     * @param {number} bytes Number of bytes to convert.\n     * @param {number} [precision=2] Number of digits after the decimal separator.\n     * @return {string} Size in human readable format.\n     */\n    bytesToSize(bytes: number, precision: number = 2): string {\n\n        if (typeof bytes == 'undefined' || bytes < 0) {\n            return this.translate.instant('core.notapplicable');\n        }\n\n        if (precision < 0) {\n            precision = 2;\n        }\n\n        const keys = ['core.sizeb', 'core.sizekb', 'core.sizemb', 'core.sizegb', 'core.sizetb'],\n            units = this.translate.instant(keys);\n        let pos = 0;\n\n        if (bytes >= 1024) {\n            while (bytes >= 1024) {\n                pos++;\n                bytes = bytes / 1024;\n            }\n            // Round to \"precision\" decimals if needed.\n            bytes = Number(Math.round(parseFloat(bytes + 'e+' + precision)) + 'e-' + precision);\n        }\n\n        return this.translate.instant('core.humanreadablesize', { size: bytes, unit: units[keys[pos]] });\n    }\n\n    /**\n     * Clean HTML tags.\n     *\n     * @param {string} text The text to be cleaned.\n     * @param {boolean} [singleLine] True if new lines should be removed (all the text in a single line).\n     * @return {string} Clean text.\n     */\n    cleanTags(text: string, singleLine?: boolean): string {\n        if (!text) {\n            return '';\n        }\n\n        // First, we use a regexpr.\n        text = text.replace(/(<([^>]+)>)/ig, '');\n        // Then, we rely on the browser. We need to wrap the text to be sure is HTML.\n        this.element.innerHTML = text;\n        text = this.element.textContent;\n        // Recover or remove new lines.\n        text = this.replaceNewLines(text, singleLine ? ' ' : '<br>');\n\n        return text;\n    }\n\n    /**\n     * Concatenate two paths, adding a slash between them if needed.\n     *\n     * @param {string} leftPath Left path.\n     * @param {string} rightPath Right path.\n     * @return {string} Concatenated path.\n     */\n    concatenatePaths(leftPath: string, rightPath: string): string {\n        if (!leftPath) {\n            return rightPath;\n        } else if (!rightPath) {\n            return leftPath;\n        }\n\n        const lastCharLeft = leftPath.slice(-1),\n            firstCharRight = rightPath.charAt(0);\n\n        if (lastCharLeft === '/' && firstCharRight === '/') {\n            return leftPath + rightPath.substr(1);\n        } else if (lastCharLeft !== '/' && firstCharRight !== '/') {\n            return leftPath + '/' + rightPath;\n        } else {\n            return leftPath + rightPath;\n        }\n    }\n\n    /**\n     * Count words in a text.\n     *\n     * @param {string} text Text to count.\n     * @return {number} Number of words.\n     */\n    countWords(text: string): number {\n        // Clean HTML scripts and tags.\n        text = text.replace(/<script[^>]*>([\\S\\s]*?)<\\/script>/gmi, '');\n        text = text.replace(/<\\/?(?!\\!)[^>]*>/gi, '');\n        // Decode HTML entities.\n        text = this.decodeHTMLEntities(text);\n        // Replace underscores (which are classed as word characters) with spaces.\n        text = text.replace(/_/gi, ' ');\n\n        // This RegEx will detect any word change including Unicode chars. Some languages without spaces won't be counted fine.\n        return text.match(/\\S+/gi).length;\n    }\n\n    /**\n     * Decode an escaped HTML text. This implementation is based on PHP's htmlspecialchars_decode.\n     *\n     * @param {string|number} text Text to decode.\n     * @return {string} Decoded text.\n     */\n    decodeHTML(text: string | number): string {\n        if (typeof text == 'undefined' || text === null || (typeof text == 'number' && isNaN(text))) {\n            return '';\n        } else if (typeof text != 'string') {\n            return '' + text;\n        }\n\n        return text\n            .replace(/&amp;/g, '&')\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&quot;/g, '\"')\n            .replace(/&#039;/g, '')\n            .replace(/&nbsp;/g, ' ');\n    }\n\n    /**\n     * Decode HTML entities in a text. Equivalent to PHP html_entity_decode.\n     *\n     * @param {string} text Text to decode.\n     * @return {string} Decoded text.\n     */\n    decodeHTMLEntities(text: string): string {\n        if (text) {\n            this.element.innerHTML = text;\n            text = this.element.textContent;\n            this.element.textContent = '';\n        }\n\n        return text;\n    }\n\n    /**\n     * Same as Javascript's decodeURI, but if an exception is thrown it will return the original URI.\n     *\n     * @param {string} uri URI to decode.\n     * @return {string} Decoded URI, or original URI if an exception is thrown.\n     */\n    decodeURI(uri: string): string {\n        try {\n            return decodeURI(uri);\n        } catch (ex) {\n            // Error, use the original URI.\n        }\n\n        return uri;\n    }\n\n    /**\n     * Same as Javascript's decodeURIComponent, but if an exception is thrown it will return the original URI.\n     *\n     * @param {string} uri URI to decode.\n     * @return {string} Decoded URI, or original URI if an exception is thrown.\n     */\n    decodeURIComponent(uri: string): string {\n        try {\n            return decodeURIComponent(uri);\n        } catch (ex) {\n            // Error, use the original URI.\n        }\n\n        return uri;\n    }\n\n    /**\n     * Escapes some characters in a string to be used as a regular expression.\n     *\n     * @param {string} text Text to escape.\n     * @return {string} Escaped text.\n     */\n    escapeForRegex(text: string): string {\n        if (!text) {\n            return '';\n        }\n\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    /**\n     * Escape an HTML text. This implementation is based on PHP's htmlspecialchars.\n     *\n     * @param {string|number} text Text to escape.\n     * @return {string} Escaped text.\n     */\n    escapeHTML(text: string | number): string {\n        if (typeof text == 'undefined' || text === null || (typeof text == 'number' && isNaN(text))) {\n            return '';\n        } else if (typeof text != 'string') {\n            return '' + text;\n        }\n\n        return text\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#039;');\n    }\n\n    /**\n     * Shows a text on a new page.\n     *\n     * @param {string} title Title of the new state.\n     * @param {string} text Content of the text to be expanded.\n     * @param {string} [component] Component to link the embedded files to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     */\n    expandText(title: string, text: string, component?: string, componentId?: string | number): void {\n        if (text.length > 0) {\n            const params: any = {\n                title: title,\n                content: text,\n                component: component,\n                componentId: componentId\n            };\n\n            // Open a modal with the contents.\n            params.isModal = true;\n\n            const modal = this.modalCtrl.create('CoreViewerTextPage', params);\n            modal.present();\n        }\n    }\n\n    /**\n     * Formats a text, in HTML replacing new lines by correct html new lines.\n     *\n     * @param {string} text Text to format.\n     * @return {string} Formatted text.\n     */\n    formatHtmlLines(text: string): string {\n        const hasHTMLTags = this.hasHTMLTags(text);\n        if (text.indexOf('<p>') == -1) {\n            // Wrap the text in <p> tags.\n            text = '<p>' + text + '</p>';\n        }\n\n        if (!hasHTMLTags) {\n            // The text doesn't have HTML, replace new lines for <br>.\n            return this.replaceNewLines(text, '<br>');\n        }\n\n        return text;\n    }\n\n    /**\n     * Formats a text, treating multilang tags and cleaning HTML if needed.\n     *\n     * @param {string} text Text to format.\n     * @param {boolean} [clean] Whether HTML tags should be removed.\n     * @param {boolean} [singleLine] Whether new lines should be removed. Only valid if clean is true.\n     * @param {number} [shortenLength] Number of characters to shorten the text.\n     * @return {Promise<string>} Promise resolved with the formatted text.\n     */\n    formatText(text: string, clean?: boolean, singleLine?: boolean, shortenLength?: number): Promise<string> {\n        return this.treatMultilangTags(text).then((formatted) => {\n            if (clean) {\n                formatted = this.cleanTags(formatted, singleLine);\n            }\n            if (shortenLength > 0) {\n                formatted = this.shortenText(formatted, shortenLength);\n            }\n\n            return formatted;\n        });\n    }\n\n    /**\n     * Get the pluginfile URL to replace @@PLUGINFILE@@ wildcards.\n     *\n     * @param {any[]} files Files to extract the URL from. They need to have the URL in a 'url' or 'fileurl' attribute.\n     * @return {string} Pluginfile URL, undefined if no files found.\n     */\n    getTextPluginfileUrl(files: any[]): string {\n        if (files && files.length) {\n            const fileURL = files[0].url || files[0].fileurl;\n\n            // Remove text after last slash (encoded or not).\n            return fileURL.substr(0, Math.max(fileURL.lastIndexOf('/'), fileURL.lastIndexOf('%2F')));\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Check if a text contains HTML tags.\n     *\n     * @param {string} text Text to check.\n     * @return {boolean} Whether it has HTML tags.\n     */\n    hasHTMLTags(text: string): boolean {\n        return /<[a-z][\\s\\S]*>/i.test(text);\n    }\n\n    /**\n     * Check if a text contains Unicode long chars.\n     * Using as threshold Hex value D800\n     *\n     * @param {string} text Text to check.\n     * @return {boolean} True if has Unicode chars, false otherwise.\n     */\n    hasUnicode(text: string): boolean {\n        for (let x = 0; x < text.length; x++) {\n            if (text.charCodeAt(x) > 55295) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if an object has any long Unicode char.\n     *\n     * @param {object} data Object to be checked.\n     * @return {boolean} If the data has any long Unicode char on it.\n     */\n    hasUnicodeData(data: object): boolean {\n        for (const el in data) {\n            if (typeof data[el] == 'object') {\n                if (this.hasUnicodeData(data[el])) {\n                    return true;\n                }\n            } else if (typeof data[el] == 'string' && this.hasUnicode(data[el])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Same as Javascript's JSON.parse, but it will handle errors.\n     *\n     * @param {string} json JSON text.\n     * @param {any} [defaultValue] Default value t oreturn if the parse fails. Defaults to the original value.\n     * @param {Function} [logErrorFn] An error to call with the exception to log the error. If not supplied, no error.\n     * @return {any} JSON parsed as object or what it gets.\n     */\n    parseJSON(json: string, defaultValue?: any, logErrorFn?: Function): any {\n        try {\n            return JSON.parse(json);\n        } catch (ex) {\n            // Error, log the error if needed.\n            if (logErrorFn) {\n                logErrorFn(ex);\n            }\n        }\n\n        // Error parsing, return the default value or the original value.\n        return typeof defaultValue != 'undefined' ? defaultValue : json;\n    }\n\n    /**\n     * Replace all characters that cause problems with files in Android and iOS.\n     *\n     * @param {string} text Text to treat.\n     * @return {string} Treated text.\n     */\n    removeSpecialCharactersForFiles(text: string): string {\n        return text.replace(/[#:\\/\\?\\\\]+/g, '_');\n    }\n\n    /**\n     * Replace all the new lines on a certain text.\n     *\n     * @param {string} text The text to be treated.\n     * @param {string} newValue Text to use instead of new lines.\n     * @return {string} Treated text.\n     */\n    replaceNewLines(text: string, newValue: string): string {\n        return text.replace(/(?:\\r\\n|\\r|\\n)/g, newValue);\n    }\n\n    /**\n     * Replace @@PLUGINFILE@@ wildcards with the real URL in a text.\n     *\n     * @param {string} Text to treat.\n     * @param {any[]} files Files to extract the pluginfile URL from. They need to have the URL in a url or fileurl attribute.\n     * @return {string} Treated text.\n     */\n    replacePluginfileUrls(text: string, files: any[]): string {\n        if (text) {\n            const fileURL = this.getTextPluginfileUrl(files);\n            if (fileURL) {\n                return text.replace(/@@PLUGINFILE@@/g, fileURL);\n            }\n        }\n\n        return text;\n    }\n\n    /**\n     * Replace pluginfile URLs with @@PLUGINFILE@@ wildcards.\n     *\n     * @param {string} text Text to treat.\n     * @param {any[]} files Files to extract the pluginfile URL from. They need to have the URL in a url or fileurl attribute.\n     * @return {string} Treated text.\n     */\n    restorePluginfileUrls(text: string, files: any[]): string {\n        if (text) {\n            const fileURL = this.getTextPluginfileUrl(files);\n            if (fileURL) {\n                return text.replace(new RegExp(this.escapeForRegex(fileURL), 'g'), '@@PLUGINFILE@@');\n            }\n        }\n\n        return text;\n    }\n\n    /**\n     * Rounds a number to use a certain amout of decimals or less.\n     * Difference between this function and float's toFixed:\n     * 7.toFixed(2) -> 7.00\n     * roundToDecimals(7, 2) -> 7\n     *\n     * @param {number} num Number to round.\n     * @param {number} [decimals=2] Number of decimals. By default, 2.\n     * @return {number} Rounded number.\n     */\n    roundToDecimals(num: number, decimals: number = 2): number {\n        const multiplier = Math.pow(10, decimals);\n\n        return Math.round(num * multiplier) / multiplier;\n    }\n\n    /**\n     * Add quotes to HTML characters.\n     *\n     * Returns text with HTML characters (like \"<\", \">\", etc.) properly quoted.\n     * Based on Moodle's s() function.\n     *\n     * @param {string} text Text to treat.\n     * @return {string} Treated text.\n     */\n    s(text: string): string {\n        if (!text) {\n            return '';\n        }\n\n        return this.escapeHTML(text).replace(/&amp;#(\\d+|x[0-9a-f]+);/i, '&#$1;');\n    }\n\n    /**\n     * Shortens a text to length and adds an ellipsis.\n     *\n     * @param {string} text The text to be shortened.\n     * @param {number} length The desired length.\n     * @return {string} Shortened text.\n     */\n    shortenText(text: string, length: number): string {\n        if (text.length > length) {\n            text = text.substr(0, length);\n\n            // Now, truncate at the last word boundary (if exists).\n            const lastWordPos = text.lastIndexOf(' ');\n            if (lastWordPos > 0) {\n                text = text.substr(0, lastWordPos);\n            }\n            text += '&hellip;';\n        }\n\n        return text;\n    }\n\n    /**\n     * Strip Unicode long char of a given text.\n     * Using as threshold Hex value D800\n     *\n     * @param {string} text Text to check.\n     * @return {string} Without the Unicode chars.\n     */\n    stripUnicode(text: string): string {\n        let stripped = '';\n        for (let x = 0; x < text.length; x++) {\n            if (text.charCodeAt(x) <= 55295) {\n                stripped += text.charAt(x);\n            }\n        }\n\n        return stripped;\n    }\n\n    /**\n     * Treat the multilang tags from a HTML code, leaving only the current language.\n     *\n     * @param {string} text The text to be treated.\n     * @return {Promise<string>} Promise resolved with the formatted text.\n     */\n    treatMultilangTags(text: string): Promise<string> {\n        if (!text) {\n            return Promise.resolve('');\n        }\n\n        return this.langProvider.getCurrentLanguage().then((language) => {\n            // Match the current language.\n            const anyLangRegEx = /<(?:lang|span)[^>]+lang=\"[a-zA-Z0-9_-]+\"[^>]*>(.*?)<\\/(?:lang|span)>/g;\n            let currentLangRegEx = new RegExp('<(?:lang|span)[^>]+lang=\"' + language + '\"[^>]*>(.*?)<\\/(?:lang|span)>', 'g');\n\n            if (!text.match(currentLangRegEx)) {\n                // Current lang not found. Try to find the first language.\n                const matches = text.match(anyLangRegEx);\n                if (matches && matches[0]) {\n                    language = matches[0].match(/lang=\"([a-zA-Z0-9_-]+)\"/)[1];\n                    currentLangRegEx = new RegExp('<(?:lang|span)[^>]+lang=\"' + language + '\"[^>]*>(.*?)<\\/(?:lang|span)>', 'g');\n                } else {\n                    // No multi-lang tag found, stop.\n                    return text;\n                }\n            }\n            // Extract contents of current language.\n            text = text.replace(currentLangRegEx, '$1');\n            // Delete the rest of languages\n            text = text.replace(anyLangRegEx, '');\n\n            return text;\n        });\n    }\n\n    /**\n     * If a number has only 1 digit, add a leading zero to it.\n     *\n     * @param {string|number} num Number to convert.\n     * @return {string} Number with leading zeros.\n     */\n    twoDigits(num: string | number): string {\n        if (num < 10) {\n            return '0' + num;\n        } else {\n            return '' + num; // Convert to string for coherence.\n        }\n    }\n\n    /**\n     * Make a string's first character uppercase.\n     *\n     * @param {string} text Text to treat.\n     * @return {string} Treated text.\n     */\n    ucFirst(text: string): string {\n        return text.charAt(0).toUpperCase() + text.slice(1);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/utils/text.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSiteWSPreSets } from '@classes/site';\nimport { CoreConstants } from '../../constants';\n\n/**\n * Service that provides some features regarding a course.\n */\n@Injectable()\nexport class CoreCourseProvider {\n    static ALL_SECTIONS_ID = -1;\n    static ACCESS_GUEST = 'courses_access_guest';\n    static ACCESS_DEFAULT = 'courses_access_default';\n\n    protected ROOT_CACHE_KEY = 'mmCourse:';\n\n    // Variables for database.\n    protected COURSE_STATUS_TABLE = 'course_status';\n    protected courseStatusTableSchema = {\n        name: this.COURSE_STATUS_TABLE,\n        columns: [\n            {\n                name: 'id',\n                type: 'INTEGER',\n                primaryKey: true\n            },\n            {\n                name: 'status',\n                type: 'TEXT',\n                notNull: true\n            },\n            {\n                name: 'previous',\n                type: 'TEXT'\n            },\n            {\n                name: 'updated',\n                type: 'INTEGER'\n            },\n            {\n                name: 'downloadTime',\n                type: 'INTEGER'\n            },\n            {\n                name: 'previousDownloadTime',\n                type: 'INTEGER'\n            }\n        ]\n    };\n\n    protected logger;\n    protected CORE_MODULES = [\n        'assign', 'assignment', 'book', 'chat', 'choice', 'data', 'database', 'date', 'external-tool',\n        'feedback', 'file', 'folder', 'forum', 'glossary', 'ims', 'imscp', 'label', 'lesson', 'lti', 'page', 'quiz',\n        'resource', 'scorm', 'survey', 'url', 'wiki', 'workshop'\n    ];\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private eventsProvider: CoreEventsProvider,\n            private utils: CoreUtilsProvider, private timeUtils: CoreTimeUtilsProvider, private translate: TranslateService) {\n        this.logger = logger.getInstance('CoreCourseProvider');\n\n        this.sitesProvider.createTableFromSchema(this.courseStatusTableSchema);\n    }\n\n    /**\n     * Check if module completion could have changed. If it could have, trigger event. This function must be used,\n     * for example, after calling a \"module_view\" WS since it can change the module completion.\n     *\n     * @param {number} courseId Course ID.\n     * @param {any} completion Completion status of the module.\n     */\n    checkModuleCompletion(courseId: number, completion: any): void {\n        if (completion && completion.tracking === 2 && completion.state === 0) {\n            this.invalidateSections(courseId).finally(() => {\n                this.eventsProvider.trigger(CoreEventsProvider.COMPLETION_MODULE_VIEWED, { courseId: courseId });\n            });\n        }\n    }\n\n    /**\n     * Clear all courses status in a site.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<void>} Promise resolved when all status are cleared.\n     */\n    clearAllCoursesStatus(siteId?: string): Promise<void> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            this.logger.debug('Clear all course status for site ' + site.id);\n\n            return site.getDb().deleteRecords(this.COURSE_STATUS_TABLE).then(() => {\n                this.triggerCourseStatusChanged(-1, CoreConstants.NOT_DOWNLOADED, site.id);\n            });\n        });\n    }\n\n    /**\n     * Get completion status of all the activities in a course for a certain user.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {number} [userId] User ID. If not defined, current user.\n     * @return {Promise<any>} Promise resolved with the completion statuses: object where the key is module ID.\n     */\n    getActivitiesCompletionStatus(courseId: number, siteId?: string, userId?: number): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            this.logger.debug(`Getting completion status for user ${userId} in course ${courseId}`);\n\n            const params = {\n                    courseid: courseId,\n                    userid: userId\n                },\n                preSets = {\n                    cacheKey: this.getActivitiesCompletionCacheKey(courseId, userId)\n                };\n\n            return site.read('core_completion_get_activities_completion_status', params, preSets).then((data) => {\n                if (data && data.statuses) {\n                    return this.utils.arrayToObject(data.statuses, 'cmid');\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for activities completion WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} userId User ID.\n     * @return {string} Cache key.\n     */\n    protected getActivitiesCompletionCacheKey(courseId: number, userId: number): string {\n        return this.ROOT_CACHE_KEY + 'activitiescompletion:' + courseId + ':' + userId;\n    }\n\n    /**\n     * Get the data stored for a course.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the data.\n     */\n    getCourseStatusData(courseId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.getDb().getRecord(this.COURSE_STATUS_TABLE, { id: courseId }).then((entry) => {\n                if (!entry) {\n                    return Promise.reject(null);\n                }\n\n                return entry;\n            });\n        });\n    }\n\n    /**\n     * Get a course status.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<string>} Promise resolved with the status.\n     */\n    getCourseStatus(courseId: number, siteId?: string): Promise<string> {\n        return this.getCourseStatusData(courseId, siteId).then((entry) => {\n            return entry.status || CoreConstants.NOT_DOWNLOADED;\n        }).catch(() => {\n            return CoreConstants.NOT_DOWNLOADED;\n        });\n    }\n\n    /**\n     * Get a module from Moodle.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {number} [courseId] The course ID. Recommended to speed up the process and minimize data usage.\n     * @param {number} [sectionId] The section ID.\n     * @param {boolean} [preferCache] True if shouldn't call WS if data is cached, false otherwise.\n     * @param {boolean} [ignoreCache] True if it should ignore cached data (it will always fail in offline or server down).\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the module.\n     */\n    getModule(moduleId: number, courseId?: number, sectionId?: number, preferCache?: boolean, ignoreCache?: boolean,\n            siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        let promise;\n\n        if (!courseId) {\n            // No courseId passed, try to retrieve it.\n            promise = this.getModuleBasicInfo(moduleId, siteId).then((module) => {\n                return module.course;\n            });\n        } else {\n            promise = Promise.resolve(courseId);\n        }\n\n        return promise.then((cid) => {\n            courseId = cid;\n\n            // Get the site.\n            return this.sitesProvider.getSite(siteId);\n        }).then((site) => {\n            // We have courseId, we can use core_course_get_contents for compatibility.\n            this.logger.debug(`Getting module ${moduleId} in course ${courseId}`);\n\n            const params = {\n                    courseid: courseId,\n                    options: [\n                        {\n                            name: 'cmid',\n                            value: moduleId\n                        }\n                    ]\n                },\n                preSets: any = {\n                    cacheKey: this.getModuleCacheKey(moduleId),\n                    omitExpires: preferCache\n                };\n\n            if (!preferCache && ignoreCache) {\n                preSets.getFromCache = 0;\n                preSets.emergencyCache = 0;\n            }\n\n            if (sectionId) {\n                params.options.push({\n                    name: 'sectionid',\n                    value: sectionId\n                });\n            }\n\n            return site.read('core_course_get_contents', params, preSets).catch(() => {\n                // Error getting the module. Try to get all contents (without filtering by module).\n                return this.getSections(courseId, false, false, preSets, siteId);\n            }).then((sections) => {\n                for (let i = 0; i < sections.length; i++) {\n                    const section = sections[i];\n                    for (let j = 0; j < section.modules.length; j++) {\n                        const module = section.modules[j];\n                        if (module.id == moduleId) {\n                            module.course = courseId;\n\n                            return module;\n                        }\n                    }\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Gets a module basic info by module ID.\n     *\n     * @param {number} moduleId Module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the module's info.\n     */\n    getModuleBasicInfo(moduleId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    cmid: moduleId\n                },\n                preSets = {\n                    cacheKey: this.getModuleCacheKey(moduleId)\n                };\n\n            return site.read('core_course_get_course_module', params, preSets).then((response) => {\n                if (response.warnings && response.warnings.length) {\n                    return Promise.reject(response.warnings[0]);\n                } else if (response.cm) {\n                    return response.cm;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Gets a module basic grade info by module ID.\n     *\n     * @param {number} moduleId Module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the module's grade info.\n     */\n    getModuleBasicGradeInfo(moduleId: number, siteId?: string): Promise<any> {\n        return this.getModuleBasicInfo(moduleId, siteId).then((info) => {\n            const grade = {\n                advancedgrading: info.advancedgrading || false,\n                grade: info.grade || false,\n                gradecat: info.gradecat || false,\n                gradepass: info.gradepass || false,\n                outcomes: info.outcomes || false,\n                scale: info.scale || false\n            };\n\n            if (grade.grade !== false || grade.advancedgrading !== false || grade.outcomes !== false) {\n                return grade;\n            }\n\n            return false;\n        });\n    }\n\n    /**\n     * Gets a module basic info by instance.\n     *\n     * @param {number} id Instance ID.\n     * @param {string} module Name of the module. E.g. 'glossary'.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the module's info.\n     */\n    getModuleBasicInfoByInstance(id: number, module: string, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    instance: id,\n                    module: module\n                },\n                preSets = {\n                    cacheKey: this.getModuleBasicInfoByInstanceCacheKey(id, module)\n                };\n\n            return site.read('core_course_get_course_module_by_instance', params, preSets).then((response) => {\n                if (response.warnings && response.warnings.length) {\n                    return Promise.reject(response.warnings[0]);\n                } else if (response.cm) {\n                    return response.cm;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for get module by instance WS calls.\n     *\n     * @param {number} id Instance ID.\n     * @param {string} module Name of the module. E.g. 'glossary'.\n     * @return {string} Cache key.\n     */\n    protected getModuleBasicInfoByInstanceCacheKey(id: number, module: string): string {\n        return this.ROOT_CACHE_KEY + 'moduleByInstance:' + module + ':' + id;\n    }\n\n    /**\n     * Get cache key for module WS calls.\n     *\n     * @param {number} moduleId Module ID.\n     * @return {string} Cache key.\n     */\n    protected getModuleCacheKey(moduleId: number): string {\n        return this.ROOT_CACHE_KEY + 'module:' + moduleId;\n    }\n\n    /**\n     * Returns the source to a module icon.\n     *\n     * @param {string} moduleName The module name.\n     * @return {string} The IMG src.\n     */\n    getModuleIconSrc(moduleName: string): string {\n        if (this.CORE_MODULES.indexOf(moduleName) < 0) {\n            moduleName = 'external-tool';\n        }\n\n        return 'assets/img/mod/' + moduleName + '.svg';\n    }\n\n    /**\n     * Get the section ID a module belongs to.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<number>} Promise resolved with the section ID.\n     */\n    getModuleSectionId(moduleId: number, siteId?: string): Promise<number> {\n        // Try to get the section using getModuleBasicInfo.\n        return this.getModuleBasicInfo(moduleId, siteId).then((module) => {\n            return module.section;\n        });\n    }\n\n    /**\n     * Return a specific section.\n     *\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @param {boolean} [excludeModules] Do not return modules, return only the sections structure.\n     * @param {boolean} [excludeContents] Do not return module contents (i.e: files inside a resource).\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the section.\n     */\n    getSection(courseId: number, sectionId?: number, excludeModules?: boolean, excludeContents?: boolean, siteId?: string)\n        : Promise<any> {\n\n        if (sectionId < 0) {\n            return Promise.reject('Invalid section ID');\n        }\n\n        return this.getSections(courseId, excludeModules, excludeContents, undefined, siteId).then((sections) => {\n            for (let i = 0; i < sections.length; i++) {\n                if (sections[i].id == sectionId) {\n                    return sections[i];\n                }\n            }\n\n            return Promise.reject('Unkown section');\n        });\n    }\n\n    /**\n     * Get the course sections.\n     *\n     * @param {number} courseId The course ID.\n     * @param {boolean} [excludeModules] Do not return modules, return only the sections structure.\n     * @param {boolean} [excludeContents] Do not return module contents (i.e: files inside a resource).\n     * @param {CoreSiteWSPreSets} [preSets] Presets to use.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise}                The reject contains the error message, else contains the sections.\n     */\n    getSections(courseId?: number, excludeModules?: boolean, excludeContents?: boolean, preSets?: CoreSiteWSPreSets,\n        siteId?: string): Promise<any[]> {\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            preSets = preSets || {};\n            preSets.cacheKey = this.getSectionsCacheKey(courseId);\n            preSets.getCacheUsingCacheKey = true; // This is to make sure users don't lose offline access when updating.\n\n            const params = {\n                courseid: courseId,\n                options: [\n                    {\n                        name: 'excludemodules',\n                        value: excludeModules ? 1 : 0\n                    },\n                    {\n                        name: 'excludecontents',\n                        value: excludeContents ? 1 : 0\n                    }\n                ]\n            };\n\n            return site.read('core_course_get_contents', params, preSets).then((sections) => {\n                const siteHomeId = site.getSiteHomeId();\n                let showSections = true;\n\n                if (courseId == siteHomeId) {\n                    showSections = site.getStoredConfig('numsections');\n                }\n\n                if (typeof showSections != 'undefined' && !showSections && sections.length > 0) {\n                    // Get only the last section (Main menu block section).\n                    sections.pop();\n                }\n\n                return sections;\n            });\n        });\n    }\n\n    /**\n     * Get cache key for section WS call.\n     *\n     * @param {number} courseId Course ID.\n     * @return {string} Cache key.\n     */\n    protected getSectionsCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'sections:' + courseId;\n    }\n\n    /**\n     * Given a list of sections, returns the list of modules in the sections.\n     *\n     * @param {any[]} sections Sections.\n     * @return {any[]} Modules.\n     */\n    getSectionsModules(sections: any[]): any[] {\n        if (!sections || !sections.length) {\n            return [];\n        }\n\n        let modules = [];\n        sections.forEach((section) => {\n            if (section.modules) {\n                modules = modules.concat(section.modules);\n            }\n        });\n\n        return modules;\n    }\n\n    /**\n     * Invalidates module WS call.\n     *\n     * @param {number} moduleId Module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateModule(moduleId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getModuleCacheKey(moduleId));\n        });\n    }\n\n    /**\n     * Invalidates module WS call.\n     *\n     * @param {number} id Instance ID.\n     * @param {string} module Name of the module. E.g. 'glossary'.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateModuleByInstance(id: number, module: string, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getModuleBasicInfoByInstanceCacheKey(id, module));\n        });\n    }\n\n    /**\n     * Invalidates sections WS call.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {number} [userId] User ID. If not defined, current user.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateSections(courseId: number, siteId?: string, userId?: number): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const promises = [],\n                siteHomeId = site.getSiteHomeId();\n\n            userId = userId || site.getUserId();\n\n            promises.push(site.invalidateWsCacheForKey(this.getSectionsCacheKey(courseId)));\n            promises.push(site.invalidateWsCacheForKey(this.getActivitiesCompletionCacheKey(courseId, userId)));\n            if (courseId == siteHomeId) {\n                promises.push(site.invalidateConfig());\n            }\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Load module contents into module.contents if they aren't loaded already.\n     *\n     * @param {any} module Module to load the contents.\n     * @param {number} [courseId] The course ID. Recommended to speed up the process and minimize data usage.\n     * @param {number} [sectionId] The section ID.\n     * @param {boolean} [preferCache] True if shouldn't call WS if data is cached, false otherwise.\n     * @param {boolean} [ignoreCache] True if it should ignore cached data (it will always fail in offline or server down).\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<void>} Promise resolved when loaded.\n     */\n    loadModuleContents(module: any, courseId?: number, sectionId?: number, preferCache?: boolean, ignoreCache?: boolean,\n        siteId?: string): Promise<void> {\n        if (!ignoreCache && module.contents && module.contents.length) {\n            // Already loaded.\n            return Promise.resolve();\n        }\n\n        return this.getModule(module.id, courseId, sectionId, preferCache, ignoreCache, siteId).then((mod) => {\n            module.contents = mod.contents;\n        });\n    }\n\n    /**\n     * Report a course and section as being viewed.\n     *\n     * @param {number} courseId  Course ID.\n     * @param {number} [sectionNumber] Section number.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<void>} Promise resolved when the WS call is successful.\n     */\n    logView(courseId: number, sectionNumber?: number, siteId?: string): Promise<void> {\n        const params: any = {\n            courseid: courseId\n        };\n\n        if (typeof sectionNumber != 'undefined') {\n            params.sectionnumber = sectionNumber;\n        }\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.write('core_course_view_course', params).then((response) => {\n                if (!response.status) {\n                    return Promise.reject(null);\n                }\n            });\n        });\n    }\n\n    /**\n     * Change the course status, setting it to the previous status.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<string>} Promise resolved when the status is changed. Resolve param: new status.\n     */\n    setCoursePreviousStatus(courseId: number, siteId?: string): Promise<string> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        this.logger.debug(`Set previous status for course ${courseId} in site ${siteId}`);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const db = site.getDb(),\n                newData: any = {};\n\n            // Get current stored data.\n            return this.getCourseStatusData(courseId, siteId).then((entry) => {\n                this.logger.debug(`Set previous status '${entry.status}' for course ${courseId}`);\n\n                newData.status = entry.previous || CoreConstants.NOT_DOWNLOADED;\n                newData.updated = Date.now();\n                if (entry.status == CoreConstants.DOWNLOADING) {\n                    // Going back from downloading to previous status, restore previous download time.\n                    newData.downloadTime = entry.previousDownloadTime;\n                }\n\n                return db.updateRecords(this.COURSE_STATUS_TABLE, newData, { id: courseId }).then(() => {\n                    // Success updating, trigger event.\n                    this.triggerCourseStatusChanged(courseId, newData.status, siteId);\n\n                    return newData.status;\n                });\n            });\n        });\n    }\n\n    /**\n     * Store course status.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} status New course status.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<void>} Promise resolved when the status is stored.\n     */\n    setCourseStatus(courseId: number, status: string, siteId?: string): Promise<void> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        this.logger.debug(`Set status '${status}' for course ${courseId} in site ${siteId}`);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            let downloadTime,\n                previousDownloadTime;\n\n            if (status == CoreConstants.DOWNLOADING) {\n                // Set download time if course is now downloading.\n                downloadTime = this.timeUtils.timestamp();\n            }\n\n            // Search current status to set it as previous status.\n            return this.getCourseStatusData(courseId, siteId).then((entry) => {\n                if (typeof downloadTime == 'undefined') {\n                    // Keep previous download time.\n                    downloadTime = entry.downloadTime;\n                    previousDownloadTime = entry.previousDownloadTime;\n                } else {\n                    // The downloadTime will be updated, store current time as previous.\n                    previousDownloadTime = entry.downloadTime;\n                }\n\n                return entry.status;\n            }).catch(() => {\n                // No previous status.\n            }).then((previousStatus) => {\n                if (previousStatus != status) {\n                    // Status has changed, update it.\n                    const data = {\n                        id: courseId,\n                        status: status,\n                        previous: previousStatus,\n                        updated: new Date().getTime(),\n                        downloadTime: downloadTime,\n                        previousDownloadTime: previousDownloadTime\n                    };\n\n                    return site.getDb().insertOrUpdateRecord(this.COURSE_STATUS_TABLE, data, { id: courseId });\n                }\n            }).then(() => {\n                // Success inserting, trigger event.\n                this.triggerCourseStatusChanged(courseId, status, siteId);\n            });\n        });\n    }\n\n    /**\n     * Translate a module name to current language.\n     *\n     * @param {string} moduleName The module name.\n     * @return {string} Translated name.\n     */\n    translateModuleName(moduleName: string): string {\n        if (this.CORE_MODULES.indexOf(moduleName) < 0) {\n            moduleName = 'external-tool';\n        }\n\n        const langKey = 'core.mod_' + moduleName,\n            translated = this.translate.instant(langKey);\n\n        return translated !== langKey ? translated : moduleName;\n    }\n\n    /**\n     * Trigger COURSE_STATUS_CHANGED with the right data.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} status New course status.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    protected triggerCourseStatusChanged(courseId: number, status: string, siteId?: string): void {\n        this.eventsProvider.trigger(CoreEventsProvider.COURSE_STATUS_CHANGED, {\n            courseId: courseId,\n            status: status\n        }, siteId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/providers/course.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CoreLoggerProvider } from '@providers/logger';\n\n/**\n * Observer instance to stop listening to an event.\n */\nexport interface CoreEventObserver {\n    /**\n     * Stop the observer.\n     */\n    off: () => void;\n}\n\n/*\n * Service to send and listen to events.\n */\n@Injectable()\nexport class CoreEventsProvider {\n    static SESSION_EXPIRED = 'session_expired';\n    static PASSWORD_CHANGE_FORCED = 'password_change_forced';\n    static USER_NOT_FULLY_SETUP = 'user_not_fully_setup';\n    static SITE_POLICY_NOT_AGREED = 'site_policy_not_agreed';\n    static LOGIN = 'login';\n    static LOGOUT = 'logout';\n    static LANGUAGE_CHANGED = 'language_changed';\n    static NOTIFICATION_SOUND_CHANGED = 'notification_sound_changed';\n    static SITE_ADDED = 'site_added';\n    static SITE_UPDATED = 'site_updated';\n    static SITE_DELETED = 'site_deleted';\n    static COMPLETION_MODULE_VIEWED = 'completion_module_viewed';\n    static USER_DELETED = 'user_deleted';\n    static PACKAGE_STATUS_CHANGED = 'package_status_changed';\n    static COURSE_STATUS_CHANGED = 'course_status_changed';\n    static SECTION_STATUS_CHANGED = 'section_status_changed';\n    static SITE_PLUGINS_LOADED = 'site_plugins_loaded';\n    static LOGIN_SITE_CHECKED = 'login_site_checked';\n    static LOGIN_SITE_UNCHECKED = 'login_site_unchecked';\n    static IAB_LOAD_START = 'inappbrowser_load_start';\n    static IAB_EXIT = 'inappbrowser_exit';\n    static APP_LAUNCHED_URL = 'app_launched_url'; // App opened with a certain URL (custom URL scheme).\n    static FILE_SHARED = 'file_shared';\n\n    protected logger;\n    protected observables: { [s: string]: Subject<any> } = {};\n    protected uniqueEvents = {};\n\n    constructor(logger: CoreLoggerProvider) {\n        this.logger = logger.getInstance('CoreEventsProvider');\n    }\n\n    /**\n     * Listen for a certain event. To stop listening to the event:\n     * let observer = eventsProvider.on('something', myCallBack);\n     * ...\n     * observer.off();\n     *\n     * @param {string} eventName Name of the event to listen to.\n     * @param {Function} callBack Function to call when the event is triggered.\n     * @param {string} [siteId] Site where to trigger the event. Undefined won't check the site.\n     * @return {CoreEventObserver} Observer to stop listening.\n     */\n    on(eventName: string, callBack: (value: any) => void, siteId?: string): CoreEventObserver {\n        // If it's a unique event and has been triggered already, call the callBack.\n        // We don't need to create an observer because the event won't be triggered again.\n        if (this.uniqueEvents[eventName]) {\n            callBack(this.uniqueEvents[eventName].data);\n\n            // Return a fake observer to prevent errors.\n            return {\n                off: (): void => {\n                    // Nothing to do.\n                }\n            };\n        }\n\n        this.logger.debug(`New observer listening to event '${eventName}'`);\n\n        if (typeof this.observables[eventName] == 'undefined') {\n            // No observable for this event, create a new one.\n            this.observables[eventName] = new Subject<any>();\n        }\n\n        const subscription = this.observables[eventName].subscribe((value: any) => {\n            if (!siteId || value.siteId == siteId) {\n                callBack(value);\n            }\n        });\n\n        // Create and return a CoreEventObserver.\n        return {\n            off: (): void => {\n                this.logger.debug(`Stop listening to event '${eventName}'`);\n                subscription.unsubscribe();\n            }\n        };\n    }\n\n    /**\n     * Triggers an event, notifying all the observers.\n     *\n     * @param {string} event Name of the event to trigger.\n     * @param {any} [data] Data to pass to the observers.\n     * @param {string} [siteId] Site where to trigger the event. Undefined means no Site.\n     */\n    trigger(eventName: string, data?: any, siteId?: string): void {\n        this.logger.debug(`Event '${eventName}' triggered.`);\n        if (this.observables[eventName]) {\n            if (siteId) {\n                if (!data) {\n                    data = {};\n                }\n                data.siteId = siteId;\n            }\n            this.observables[eventName].next(data);\n        }\n    }\n\n    /**\n     * Triggers a unique event, notifying all the observers. If the event has already been triggered, don't do anything.\n     *\n     * @param {string} event Name of the event to trigger.\n     * @param {any} data Data to pass to the observers.\n     * @param {string} [siteId] Site where to trigger the event. Undefined means no Site.\n     */\n    triggerUnique(eventName: string, data: any, siteId?: string): void {\n        if (this.uniqueEvents[eventName]) {\n            this.logger.debug(`Unique event '${eventName}' ignored because it was already triggered.`);\n        } else {\n            this.logger.debug(`Unique event '${eventName}' triggered.`);\n\n            if (siteId) {\n                if (!data) {\n                    data = {};\n                }\n                data.siteId = siteId;\n            }\n\n            // Store the data so it can be passed to observers that register from now on.\n            this.uniqueEvents[eventName] = {\n                data: data\n            };\n\n            // Now pass the data to observers.\n            if (this.observables[eventName]) {\n                this.observables[eventName].next(data);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/events.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Static class to contain all the core constants.\n */\nexport class CoreConstants {\n    static SECONDS_YEAR = 31536000;\n    static SECONDS_WEEK = 604800;\n    static SECONDS_DAY = 86400;\n    static SECONDS_HOUR = 3600;\n    static SECONDS_MINUTE = 60;\n    static WIFI_DOWNLOAD_THRESHOLD = 104857600; // 100MB.\n    static DOWNLOAD_THRESHOLD = 10485760; // 10MB.\n    static DONT_SHOW_ERROR = 'CoreDontShowError';\n    static NO_SITE_ID = 'NoSite';\n\n    // Settings constants.\n    static SETTINGS_RICH_TEXT_EDITOR = 'CoreSettingsRichTextEditor';\n    static SETTINGS_NOTIFICATION_SOUND = 'CoreSettingsNotificationSound';\n    static SETTINGS_SYNC_ONLY_ON_WIFI = 'CoreSettingsSyncOnlyOnWifi';\n\n    // WS constants.\n    static WS_TIMEOUT = 30000;\n    static WS_PREFIX = 'local_mobile_';\n\n    // Login constants.\n    static LOGIN_SSO_CODE = 2; // SSO in browser window is required.\n    static LOGIN_SSO_INAPP_CODE = 3; // SSO in embedded browser is required.\n    static LOGIN_LAUNCH_DATA = 'CoreLoginLaunchData';\n\n    // Download status constants.\n    static DOWNLOADED = 'downloaded';\n    static DOWNLOADING = 'downloading';\n    static NOT_DOWNLOADED = 'notdownloaded';\n    static OUTDATED = 'outdated';\n    static NOT_DOWNLOADABLE = 'notdownloadable';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/constants.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { File, FileEntry, DirectoryEntry } from '@ionic-native/file';\n\nimport { CoreAppProvider } from './app';\nimport { CoreLoggerProvider } from './logger';\nimport { CoreMimetypeUtilsProvider } from './utils/mimetype';\nimport { CoreTextUtilsProvider } from './utils/text';\nimport { Zip } from '@ionic-native/zip';\n\n/**\n * Factory to interact with the file system.\n */\n@Injectable()\nexport class CoreFileProvider {\n    // Formats to read a file.\n    static FORMATTEXT = 0;\n    static FORMATDATAURL = 1;\n    static FORMATBINARYSTRING = 2;\n    static FORMATARRAYBUFFER = 3;\n\n    // Folders.\n    static SITESFOLDER = 'sites';\n    static TMPFOLDER = 'tmp';\n\n    protected logger;\n    protected initialized = false;\n    protected basePath = '';\n    protected isHTMLAPI = false;\n\n    constructor(logger: CoreLoggerProvider, private platform: Platform, private file: File, private appProvider: CoreAppProvider,\n            private textUtils: CoreTextUtilsProvider, private zip: Zip, private mimeUtils: CoreMimetypeUtilsProvider) {\n        this.logger = logger.getInstance('CoreFileProvider');\n    }\n\n    /**\n     * Sets basePath to use with HTML API. Reserved for core use.\n     *\n     * @param {string} path Base path to use.\n     */\n    setHTMLBasePath(path: string): void {\n        this.isHTMLAPI = true;\n        this.basePath = path;\n    }\n\n    /**\n     * Checks if we're using HTML API.\n     *\n     * @return {boolean} True if uses HTML API, false otherwise.\n     */\n    usesHTMLAPI(): boolean {\n        return this.isHTMLAPI;\n    }\n\n    /**\n     * Initialize basePath based on the OS if it's not initialized already.\n     *\n     * @return {Promise<void>} Promise to be resolved when the initialization is finished.\n     */\n    init(): Promise<void> {\n        if (this.initialized) {\n            return Promise.resolve();\n        }\n\n        return this.platform.ready().then(() => {\n\n            if (this.platform.is('android')) {\n                this.basePath = this.file.externalApplicationStorageDirectory;\n            } else if (this.platform.is('ios')) {\n                this.basePath = this.file.documentsDirectory;\n            } else if (!this.isAvailable() || this.basePath === '') {\n                this.logger.error('Error getting device OS.');\n\n                return Promise.reject(null);\n            }\n\n            this.initialized = true;\n            this.logger.debug('FS initialized: ' + this.basePath);\n        });\n    }\n\n    /**\n     * Check if the plugin is available.\n     *\n     * @return {boolean} Whether the plugin is available.\n     */\n    isAvailable(): boolean {\n        return typeof window.resolveLocalFileSystemURL !== 'undefined';\n    }\n\n    /**\n     * Get a file.\n     *\n     * @param {string} path Relative path to the file.\n     * @return {Promise<FileEntry>} Promise resolved when the file is retrieved.\n     */\n    getFile(path: string): Promise<FileEntry> {\n        return this.init().then(() => {\n            this.logger.debug('Get file: ' + path);\n\n            return this.file.resolveLocalFilesystemUrl(this.addBasePathIfNeeded(path));\n        }).then((entry) => {\n            return <FileEntry> entry;\n        });\n    }\n\n    /**\n     * Get a directory.\n     *\n     * @param {string} path Relative path to the directory.\n     * @return {Promise<DirectoryEntry>} Promise resolved when the directory is retrieved.\n     */\n    getDir(path: string): Promise<DirectoryEntry> {\n        return this.init().then(() => {\n            this.logger.debug('Get directory: ' + path);\n\n            return this.file.resolveDirectoryUrl(this.addBasePathIfNeeded(path));\n        });\n    }\n\n    /**\n     * Get site folder path.\n     *\n     * @param {string} siteId Site ID.\n     * @return {string} Site folder path.\n     */\n    getSiteFolder(siteId: string): string {\n        return CoreFileProvider.SITESFOLDER + '/' + siteId;\n    }\n\n    /**\n     * Create a directory or a file.\n     *\n     * @param {boolean} isDirectory True if a directory should be created, false if it should create a file.\n     * @param {string} path Relative path to the dir/file.\n     * @param {boolean} [failIfExists] True if it should fail if the dir/file exists, false otherwise.\n     * @param {string} [base] Base path to create the dir/file in. If not set, use basePath.\n     * @return {Promise<any>} Promise to be resolved when the dir/file is created.\n     */\n    protected create(isDirectory: boolean, path: string, failIfExists?: boolean, base?: string): Promise<any> {\n        return this.init().then(() => {\n            // Remove basePath if it's in the path.\n            path = this.removeStartingSlash(path.replace(this.basePath, ''));\n            base = base || this.basePath;\n\n            if (path.indexOf('/') == -1) {\n                if (isDirectory) {\n                    this.logger.debug('Create dir ' + path + ' in ' + base);\n\n                    return this.file.createDir(base, path, !failIfExists);\n                } else {\n                    this.logger.debug('Create file ' + path + ' in ' + base);\n\n                    return this.file.createFile(base, path, !failIfExists);\n                }\n            } else {\n                // The file plugin doesn't allow creating more than 1 level at a time (e.g. tmp/folder).\n                // We need to create them 1 by 1.\n                const firstDir = path.substr(0, path.indexOf('/')),\n                    restOfPath = path.substr(path.indexOf('/') + 1);\n\n                this.logger.debug('Create dir ' + firstDir + ' in ' + base);\n\n                return this.file.createDir(base, firstDir, true).then((newDirEntry) => {\n                    return this.create(isDirectory, restOfPath, failIfExists, newDirEntry.toURL());\n                }).catch((error) => {\n                    this.logger.error('Error creating directory ' + firstDir + ' in ' + base);\n\n                    return Promise.reject(error);\n                });\n            }\n        });\n    }\n\n    /**\n     * Create a directory.\n     *\n     * @param {string} path Relative path to the directory.\n     * @param {boolean} [failIfExists] True if it should fail if the directory exists, false otherwise.\n     * @return {Promise<DirectoryEntry>} Promise to be resolved when the directory is created.\n     */\n    createDir(path: string, failIfExists?: boolean): Promise<DirectoryEntry> {\n        return this.create(true, path, failIfExists);\n    }\n\n    /**\n     * Create a file.\n     *\n     * @param {string} path Relative path to the file.\n     * @param {boolean} [failIfExists] True if it should fail if the file exists, false otherwise..\n     * @return {Promise<FileEntry>} Promise to be resolved when the file is created.\n     */\n    createFile(path: string, failIfExists?: boolean): Promise<FileEntry> {\n        return this.create(false, path, failIfExists);\n    }\n\n    /**\n     * Removes a directory and all its contents.\n     *\n     * @param {string} path Relative path to the directory.\n     * @return {Promise<any>} Promise to be resolved when the directory is deleted.\n     */\n    removeDir(path: string): Promise<any> {\n        return this.init().then(() => {\n            // Remove basePath if it's in the path.\n            path = this.removeStartingSlash(path.replace(this.basePath, ''));\n            this.logger.debug('Remove directory: ' + path);\n\n            return this.file.removeRecursively(this.basePath, path);\n        });\n    }\n\n    /**\n     * Removes a file and all its contents.\n     *\n     * @param {string} path Relative path to the file.\n     * @return {Promise<any>} Promise to be resolved when the file is deleted.\n     */\n    removeFile(path: string): Promise<any> {\n        return this.init().then(() => {\n            // Remove basePath if it's in the path.\n            path = this.removeStartingSlash(path.replace(this.basePath, ''));\n            this.logger.debug('Remove file: ' + path);\n\n            return this.file.removeFile(this.basePath, path);\n        });\n    }\n\n    /**\n     * Removes a file given its FileEntry.\n     *\n     * @param {FileEntry} fileEntry File Entry.\n     * @return {Promise<any>} Promise resolved when the file is deleted.\n     */\n    removeFileByFileEntry(fileEntry: any): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            fileEntry.remove(resolve, reject);\n        });\n    }\n\n    /**\n     * Retrieve the contents of a directory (not subdirectories).\n     *\n     * @param {string} path Relative path to the directory.\n     * @return {Promise<any>} Promise to be resolved when the contents are retrieved.\n     */\n    getDirectoryContents(path: string): Promise<any> {\n        return this.init().then(() => {\n            // Remove basePath if it's in the path.\n            path = this.removeStartingSlash(path.replace(this.basePath, ''));\n            this.logger.debug('Get contents of dir: ' + path);\n\n            return this.file.listDir(this.basePath, path);\n        });\n    }\n\n    /**\n     * Calculate the size of a directory or a file.\n     *\n     * @param {any} entry Directory or file.\n     * @return {Promise<number>} Promise to be resolved when the size is calculated.\n     */\n    protected getSize(entry: any): Promise<number> {\n        return new Promise((resolve, reject): void => {\n            if (entry.isDirectory) {\n                const directoryReader = entry.createReader();\n                directoryReader.readEntries((entries) => {\n\n                    const promises = [];\n                    for (let i = 0; i < entries.length; i++) {\n                        promises.push(this.getSize(entries[i]));\n                    }\n\n                    Promise.all(promises).then((sizes) => {\n\n                        let directorySize = 0;\n                        for (let i = 0; i < sizes.length; i++) {\n                            const fileSize = parseInt(sizes[i]);\n                            if (isNaN(fileSize)) {\n                                reject();\n\n                                return;\n                            }\n                            directorySize += fileSize;\n                        }\n                        resolve(directorySize);\n\n                    }, reject);\n\n                }, reject);\n\n            } else if (entry.isFile) {\n                entry.file((file) => {\n                    resolve(file.size);\n                }, reject);\n            }\n        });\n    }\n\n    /**\n     * Calculate the size of a directory.\n     *\n     * @param {string} path Relative path to the directory.\n     * @return {Promise<number>} Promise to be resolved when the size is calculated.\n     */\n    getDirectorySize(path: string): Promise<number> {\n        // Remove basePath if it's in the path.\n        path = this.removeStartingSlash(path.replace(this.basePath, ''));\n\n        this.logger.debug('Get size of dir: ' + path);\n\n        return this.getDir(path).then((dirEntry) => {\n            return this.getSize(dirEntry);\n        });\n    }\n\n    /**\n     * Calculate the size of a file.\n     *\n     * @param {string} path Relative path to the file.\n     * @return {Promise<number>} Promise to be resolved when the size is calculated.\n     */\n    getFileSize(path: string): Promise<number> {\n        // Remove basePath if it's in the path.\n        path = this.removeStartingSlash(path.replace(this.basePath, ''));\n\n        this.logger.debug('Get size of file: ' + path);\n\n        return this.getFile(path).then((fileEntry) => {\n            return this.getSize(fileEntry);\n        });\n    }\n\n    /**\n     * Get file object from a FileEntry.\n     *\n     * @param {FileEntry} path Relative path to the file.\n     * @return {Promise<any>} Promise to be resolved when the file is retrieved.\n     */\n    getFileObjectFromFileEntry(entry: FileEntry): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            this.logger.debug('Get file object of: ' + entry.fullPath);\n            entry.file(resolve, reject);\n        });\n    }\n\n    /**\n     * Calculate the free space in the disk.\n     *\n     * @return {Promise<number>} Promise resolved with the estimated free space in bytes.\n     */\n    calculateFreeSpace(): Promise<number> {\n        return this.file.getFreeDiskSpace().then((size) => {\n            return size; // GetFreeDiskSpace returns KB.\n        });\n    }\n\n    /**\n     * Normalize a filename that usually comes URL encoded.\n     *\n     * @param {string} filename The file name.\n     * @return {string} The file name normalized.\n     */\n    normalizeFileName(filename: string): string {\n        filename = this.textUtils.decodeURIComponent(filename);\n\n        return filename;\n    }\n\n    /**\n     * Read a file from local file system.\n     *\n     * @param {string} path Relative path to the file.\n     * @param {number} [format=FORMATTEXT] Format to read the file. Must be one of:\n     *                                  FORMATTEXT\n     *                                  FORMATDATAURL\n     *                                  FORMATBINARYSTRING\n     *                                  FORMATARRAYBUFFER\n     * @return {Promise<any>} Promise to be resolved when the file is read.\n     */\n    readFile(path: string, format: number = CoreFileProvider.FORMATTEXT): Promise<any> {\n        // Remove basePath if it's in the path.\n        path = this.removeStartingSlash(path.replace(this.basePath, ''));\n        this.logger.debug('Read file ' + path + ' with format ' + format);\n\n        switch (format) {\n            case CoreFileProvider.FORMATDATAURL:\n                return this.file.readAsDataURL(this.basePath, path);\n            case CoreFileProvider.FORMATBINARYSTRING:\n                return this.file.readAsBinaryString(this.basePath, path);\n            case CoreFileProvider.FORMATARRAYBUFFER:\n                return this.file.readAsArrayBuffer(this.basePath, path);\n            default:\n                return this.file.readAsText(this.basePath, path);\n        }\n    }\n\n    /**\n     * Read file contents from a file data object.\n     *\n     * @param {any} fileData File's data.\n     * @param {number} [format=FORMATTEXT] Format to read the file. Must be one of:\n     *                                  FORMATTEXT\n     *                                  FORMATDATAURL\n     *                                  FORMATBINARYSTRING\n     *                                  FORMATARRAYBUFFER\n     * @return {Promise<any>} Promise to be resolved when the file is read.\n     */\n    readFileData(fileData: any, format: number = CoreFileProvider.FORMATTEXT): Promise<any> {\n        format = format || CoreFileProvider.FORMATTEXT;\n        this.logger.debug('Read file from file data with format ' + format);\n\n        return new Promise((resolve, reject): void => {\n            const reader = new FileReader();\n            reader.onloadend = (evt): void => {\n                const target = <any> evt.target; // Convert to <any> to be able to use non-standard properties.\n                if (target.result !== undefined || target.result !== null) {\n                    resolve(target.result);\n                } else if (target.error !== undefined || target.error !== null) {\n                    reject(target.error);\n                } else {\n                    reject({ code: null, message: 'READER_ONLOADEND_ERR' });\n                }\n            };\n\n            switch (format) {\n                case CoreFileProvider.FORMATDATAURL:\n                    reader.readAsDataURL(fileData);\n                    break;\n                case CoreFileProvider.FORMATBINARYSTRING:\n                    reader.readAsBinaryString(fileData);\n                    break;\n                case CoreFileProvider.FORMATARRAYBUFFER:\n                    reader.readAsArrayBuffer(fileData);\n                    break;\n                default:\n                    reader.readAsText(fileData);\n            }\n\n        });\n    }\n\n    /**\n     * Writes some data in a file.\n     *\n     * @param {string} path Relative path to the file.\n     * @param {any} data Data to write.\n     * @return {Promise<any>} Promise to be resolved when the file is written.\n     */\n    writeFile(path: string, data: any): Promise<any> {\n        return this.init().then(() => {\n            // Remove basePath if it's in the path.\n            path = this.removeStartingSlash(path.replace(this.basePath, ''));\n            this.logger.debug('Write file: ' + path);\n\n            // Create file (and parent folders) to prevent errors.\n            return this.createFile(path).then((fileEntry) => {\n                if (this.isHTMLAPI && !this.appProvider.isDesktop() &&\n                    (typeof data == 'string' || data.toString() == '[object ArrayBuffer]')) {\n                    // We need to write Blobs.\n                    const type = this.mimeUtils.getMimeType(this.mimeUtils.getFileExtension(path));\n                    data = new Blob([data], { type: type || 'text/plain' });\n                }\n\n                return this.file.writeFile(this.basePath, path, data, { replace: true }).then(() => {\n                    return fileEntry;\n                });\n            });\n        });\n    }\n\n    /**\n     * Gets a file that might be outside the app's folder.\n     *\n     * @param {string} fullPath Absolute path to the file.\n     * @return {Promise<FileEntry>} Promise to be resolved when the file is retrieved.\n     */\n    getExternalFile(fullPath: string): Promise<FileEntry> {\n        return this.file.resolveLocalFilesystemUrl(fullPath).then((entry) => {\n            return <FileEntry> entry;\n        });\n    }\n\n    /**\n     * Removes a file that might be outside the app's folder.\n     *\n     * @param {string} fullPath Absolute path to the file.\n     * @return {Promise<any>} Promise to be resolved when the file is removed.\n     */\n    removeExternalFile(fullPath: string): Promise<any> {\n        const directory = fullPath.substring(0, fullPath.lastIndexOf('/')),\n            filename = fullPath.substr(fullPath.lastIndexOf('/') + 1);\n\n        return this.file.removeFile(directory, filename);\n    }\n\n    /**\n     * Get the base path where the application files are stored.\n     *\n     * @return {Promise<string>} Promise to be resolved when the base path is retrieved.\n     */\n    getBasePath(): Promise<string> {\n        return this.init().then(() => {\n            if (this.basePath.slice(-1) == '/') {\n                return this.basePath;\n            } else {\n                return this.basePath + '/';\n            }\n        });\n    }\n\n    /**\n     * Get the base path where the application files are stored in the format to be used for downloads.\n     * iOS: Internal URL (cdvfile://).\n     * Others: basePath (file://)\n     *\n     * @return {Promise<string>} Promise to be resolved when the base path is retrieved.\n     */\n    getBasePathToDownload(): Promise<string> {\n        return this.init().then(() => {\n            if (this.platform.is('ios')) {\n                // In iOS we want the internal URL (cdvfile://localhost/persistent/...).\n                return this.file.resolveDirectoryUrl(this.basePath).then((dirEntry) => {\n                    return dirEntry.toInternalURL();\n                });\n            } else {\n                // In the other platforms we use the basePath as it is (file://...).\n                return this.basePath;\n            }\n        });\n    }\n\n    /**\n     * Get the base path where the application files are stored. Returns the value instantly, without waiting for it to be ready.\n     *\n     * @return {string} Base path. If the service hasn't been initialized it will return an invalid value.\n     */\n    getBasePathInstant(): string {\n        if (!this.basePath) {\n            return this.basePath;\n        } else if (this.basePath.slice(-1) == '/') {\n            return this.basePath;\n        } else {\n            return this.basePath + '/';\n        }\n    }\n\n    /**\n     * Move a file.\n     *\n     * @param {string} [originalPath] Path to the file to move.\n     * @param {string} [newPath] New path of the file.\n     * @return {Promise<any>} Promise resolved when the entry is moved.\n     */\n    moveFile(originalPath: string, newPath: string): Promise<any> {\n        return this.init().then(() => {\n            // Remove basePath if it's in the paths.\n            originalPath = this.removeStartingSlash(originalPath.replace(this.basePath, ''));\n            newPath = this.removeStartingSlash(newPath.replace(this.basePath, ''));\n\n            if (this.isHTMLAPI) {\n                // In Cordova API we need to calculate the longest matching path to make it work.\n                // The function this.file.moveFile('a/', 'b/c.ext', 'a/', 'b/d.ext') doesn't work.\n                // The function this.file.moveFile('a/b/', 'c.ext', 'a/b/', 'd.ext') works.\n                const dirsA = originalPath.split('/'),\n                    dirsB = newPath.split('/');\n                let commonPath = this.basePath;\n\n                for (let i = 0; i < dirsA.length; i++) {\n                    let dir = dirsA[i];\n                    if (dirsB[i] === dir) {\n                        // Found a common folder, add it to common path and remove it from each specific path.\n                        dir = dir + '/';\n                        commonPath = this.textUtils.concatenatePaths(commonPath, dir);\n                        originalPath = originalPath.replace(dir, '');\n                        newPath = newPath.replace(dir, '');\n                    } else {\n                        // Folder doesn't match, stop searching.\n                        break;\n                    }\n                }\n\n                return this.file.moveFile(commonPath, originalPath, commonPath, newPath);\n            } else {\n                return this.file.moveFile(this.basePath, originalPath, this.basePath, newPath);\n            }\n        });\n    }\n\n    /**\n     * Copy a file.\n     *\n     * @param {string} from Path to the file to move.\n     * @param {string} to New path of the file.\n     * @return {Promise<any>} Promise resolved when the entry is copied.\n     */\n    copyFile(from: string, to: string): Promise<any> {\n        let fromFileAndDir,\n            toFileAndDir;\n\n        return this.init().then(() => {\n            // Paths cannot start with \"/\". Remove basePath if present.\n            from = this.removeStartingSlash(from.replace(this.basePath, ''));\n            to = this.removeStartingSlash(to.replace(this.basePath, ''));\n\n            fromFileAndDir = this.getFileAndDirectoryFromPath(from);\n            toFileAndDir = this.getFileAndDirectoryFromPath(to);\n\n            if (toFileAndDir.directory) {\n                // Create the target directory if it doesn't exist.\n                return this.createDir(toFileAndDir.directory);\n            }\n        }).then(() => {\n            if (this.isHTMLAPI) {\n                // In HTML API, the file name cannot include a directory, otherwise it fails.\n                const fromDir = this.textUtils.concatenatePaths(this.basePath, fromFileAndDir.directory),\n                    toDir = this.textUtils.concatenatePaths(this.basePath, toFileAndDir.directory);\n\n                return this.file.copyFile(fromDir, fromFileAndDir.name, toDir, toFileAndDir.name);\n            } else {\n                return this.file.copyFile(this.basePath, from, this.basePath, to);\n            }\n        });\n    }\n\n    /**\n     * Extract the file name and directory from a given path.\n     *\n     * @param {string} path Path to be extracted.\n     * @return {any} Plain object containing the file name and directory.\n     * @description\n     * file.pdf         -> directory: '', name: 'file.pdf'\n     * /file.pdf        -> directory: '', name: 'file.pdf'\n     * path/file.pdf    -> directory: 'path', name: 'file.pdf'\n     * path/            -> directory: 'path', name: ''\n     * path             -> directory: '', name: 'path'\n     */\n    getFileAndDirectoryFromPath(path: string): any {\n        const file = {\n            directory: '',\n            name: ''\n        };\n\n        file.directory = path.substring(0, path.lastIndexOf('/'));\n        file.name = path.substr(path.lastIndexOf('/') + 1);\n\n        return file;\n    }\n\n    /**\n     * Get the internal URL of a file.\n     *\n     * @param {FileEntry} fileEntry File Entry.\n     * @return {string} Internal URL.\n     */\n    getInternalURL(fileEntry: FileEntry): string {\n        if (!fileEntry.toInternalURL) {\n            // File doesn't implement toInternalURL, use toURL.\n            return fileEntry.toURL();\n        }\n\n        return fileEntry.toInternalURL();\n    }\n\n    /**\n     * Adds the basePath to a path if it doesn't have it already.\n     *\n     * @param {string} path Path to treat.\n     * @return {string} Path with basePath added.\n     */\n    addBasePathIfNeeded(path: string): string {\n        if (path.indexOf(this.basePath) > -1) {\n            return path;\n        } else {\n            return this.textUtils.concatenatePaths(this.basePath, path);\n        }\n    }\n\n    /**\n     * Remove the base path from a path. If basePath isn't found, return false.\n     *\n     * @param {string} path Path to treat.\n     * @return {string} Path without basePath if basePath was found, undefined otherwise.\n     */\n    removeBasePath(path: string): string {\n        if (path.indexOf(this.basePath) > -1) {\n            return path.replace(this.basePath, '');\n        }\n    }\n\n    /**\n     * Unzips a file.\n     *\n     * @param {string} path Path to the ZIP file.\n     * @param {string} [destFolder] Path to the destination folder. If not defined, a new folder will be created with the\n     *                     same location and name as the ZIP file (without extension).\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {Promise<any>} Promise resolved when the file is unzipped.\n     */\n    unzipFile(path: string, destFolder?: string, onProgress?: Function): Promise<any> {\n        // Get the source file.\n        return this.getFile(path).then((fileEntry) => {\n            // If destFolder is not set, use same location as ZIP file. We need to use absolute paths (including basePath).\n            destFolder = this.addBasePathIfNeeded(destFolder || this.mimeUtils.removeExtension(path));\n\n            return this.zip.unzip(fileEntry.toURL(), destFolder, onProgress);\n        });\n    }\n\n    /**\n     * Search a string or regexp in a file contents and replace it. The result is saved in the same file.\n     *\n     * @param {string} path Path to the file.\n     * @param {string|RegExp} search Value to search.\n     * @param {string} newValue New value.\n     * @return {Promise<any>} Promise resolved in success.\n     */\n    replaceInFile(path: string, search: string | RegExp, newValue: string): Promise<any> {\n        return this.readFile(path).then((content) => {\n            if (typeof content == 'undefined' || content === null || !content.replace) {\n                return Promise.reject(null);\n            }\n\n            if (content.match(search)) {\n                content = content.replace(search, newValue);\n\n                return this.writeFile(path, content);\n            }\n        });\n    }\n\n    /**\n     * Get a file/dir metadata given the file's entry.\n     *\n     * @param {Entry} fileEntry FileEntry retrieved from getFile or similar.\n     * @return {Promise<any>} Promise resolved with metadata.\n     */\n    getMetadata(fileEntry: Entry): Promise<any> {\n        if (!fileEntry || !fileEntry.getMetadata) {\n            return Promise.reject(null);\n        }\n\n        return new Promise((resolve, reject): void => {\n            fileEntry.getMetadata(resolve, reject);\n        });\n    }\n\n    /**\n     * Get a file/dir metadata given the path.\n     *\n     * @param {string} path Path to the file/dir.\n     * @param {boolean} [isDir] True if directory, false if file.\n     * @return {Promise<any>} Promise resolved with metadata.\n     */\n    getMetadataFromPath(path: string, isDir?: boolean): Promise<any> {\n        let promise;\n        if (isDir) {\n            promise = this.getDir(path);\n        } else {\n            promise = this.getFile(path);\n        }\n\n        return promise.then((entry) => {\n            return this.getMetadata(entry);\n        });\n    }\n\n    /**\n     * Remove the starting slash of a path if it's there. E.g. '/sites/filepool' -> 'sites/filepool'.\n     *\n     * @param {string} path Path.\n     * @return {string} Path without a slash in the first position.\n     */\n    removeStartingSlash(path: string): string {\n        if (path[0] == '/') {\n            return path.substr(1);\n        }\n\n        return path;\n    }\n\n    /**\n     * Convenience function to copy or move an external file.\n     *\n     * @param {string} from Absolute path to the file to copy/move.\n     * @param {string} to Relative new path of the file (inside the app folder).\n     * @param {boolean} copy True to copy, false to move.\n     * @return {Promise<any>} Promise resolved when the entry is copied/moved.\n     */\n    protected copyOrMoveExternalFile(from: string, to: string, copy?: boolean): Promise<any> {\n        // Get the file to copy/move.\n        return this.getExternalFile(from).then((fileEntry) => {\n            // Create the destination dir if it doesn't exist.\n            const dirAndFile = this.getFileAndDirectoryFromPath(to);\n\n            return this.createDir(dirAndFile.directory).then((dirEntry) => {\n                // Now copy/move the file.\n                return new Promise((resolve, reject): void => {\n                    if (copy) {\n                        fileEntry.copyTo(dirEntry, dirAndFile.name, resolve, reject);\n                    } else {\n                        fileEntry.moveTo(dirEntry, dirAndFile.name, resolve, reject);\n                    }\n                });\n            });\n        });\n    }\n\n    /**\n     * Copy a file from outside of the app folder to somewhere inside the app folder.\n     *\n     * @param {string} from Absolute path to the file to copy.\n     * @param {string} to Relative new path of the file (inside the app folder).\n     * @return {Promise<any>} Promise resolved when the entry is copied.\n     */\n    copyExternalFile(from: string, to: string): Promise<any> {\n        return this.copyOrMoveExternalFile(from, to, true);\n    }\n\n    /**\n     * Move a file from outside of the app folder to somewhere inside the app folder.\n     *\n     * @param {string} from Absolute path to the file to move.\n     * @param {string} to Relative new path of the file (inside the app folder).\n     * @return {Promise<any>} Promise resolved when the entry is moved.\n     */\n    moveExternalFile(from: string, to: string): Promise<any> {\n        return this.copyOrMoveExternalFile(from, to, false);\n    }\n\n    /**\n     * Get a unique file name inside a folder, adding numbers to the file name if needed.\n     *\n     * @param {string} dirPath Path to the destination folder.\n     * @param {string} fileName File name that wants to be used.\n     * @param {string} [defaultExt] Default extension to use if no extension found in the file.\n     * @return {Promise<string>} Promise resolved with the unique file name.\n     */\n    getUniqueNameInFolder(dirPath: string, fileName: string, defaultExt?: string): Promise<string> {\n        // Get existing files in the folder.\n        return this.getDirectoryContents(dirPath).then((entries) => {\n            const files = {};\n            let num = 1,\n                fileNameWithoutExtension = this.mimeUtils.removeExtension(fileName),\n                extension = this.mimeUtils.getFileExtension(fileName) || defaultExt,\n                newName;\n\n            // Clean the file name.\n            fileNameWithoutExtension = this.textUtils.removeSpecialCharactersForFiles(\n                this.textUtils.decodeURIComponent(fileNameWithoutExtension));\n\n            // Index the files by name.\n            entries.forEach((entry) => {\n                files[entry.name] = entry;\n            });\n\n            // Format extension.\n            if (extension) {\n                extension = '.' + extension;\n            } else {\n                extension = '';\n            }\n\n            newName = fileNameWithoutExtension + extension;\n            if (typeof files[newName] == 'undefined') {\n                // No file with the same name.\n                return newName;\n            } else {\n                // Repeated name. Add a number until we find a free name.\n                do {\n                    newName = fileNameWithoutExtension + '(' + num + ')' + extension;\n                    num++;\n                } while (typeof files[newName] != 'undefined');\n\n                // Ask the user what he wants to do.\n                return newName;\n            }\n        }).catch(() => {\n            // Folder doesn't exist, name is unique. Clean it and return it.\n            return this.textUtils.removeSpecialCharactersForFiles(this.textUtils.decodeURIComponent(fileName));\n        });\n    }\n\n    /**\n     * Remove app temporary folder.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    clearTmpFolder(): Promise<any> {\n        return this.removeDir(CoreFileProvider.TMPFOLDER);\n    }\n\n    /**\n     * Given a folder path and a list of used files, remove all the files of the folder that aren't on the list of used files.\n     *\n     * @param {string} dirPath Folder path.\n     * @param {any[]} files List of used files.\n     * @return {Promise<any>} Promise resolved when done, rejected if failure.\n     */\n    removeUnusedFiles(dirPath: string, files: any[]): Promise<any> {\n        // Get the directory contents.\n        return this.getDirectoryContents(dirPath).then((contents) => {\n            if (!contents.length) {\n                return;\n            }\n\n            const filesMap = {},\n                promises = [];\n\n            // Index the received files by fullPath and ignore the invalid ones.\n            files.forEach((file) => {\n                if (file.fullPath) {\n                    filesMap[file.fullPath] = file;\n                }\n            });\n\n            // Check which of the content files aren't used anymore and delete them.\n            contents.forEach((file) => {\n                if (!filesMap[file.fullPath]) {\n                    // File isn't used, delete it.\n                    promises.push(this.removeFileByFileEntry(file));\n                }\n            });\n\n            return Promise.all(promises);\n        }).catch(() => {\n            // Ignore errors, maybe it doesn't exist.\n        });\n    }\n\n    /**\n     * Check if a file is inside the app's folder.\n     *\n     * @param {string} path The absolute path of the file to check.\n     * @return {boolean} Whether the file is in the app's folder.\n     */\n    isFileInAppFolder(path: string): boolean {\n        return path.indexOf(this.basePath) != -1;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/file.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { CoreLoadingComponent } from './loading/loading';\nimport { CoreMarkRequiredComponent } from './mark-required/mark-required';\nimport { CoreInputErrorsComponent } from './input-errors/input-errors';\nimport { CoreShowPasswordComponent } from './show-password/show-password';\nimport { CoreSplitViewComponent } from './split-view/split-view';\nimport { CoreIframeComponent } from './iframe/iframe';\nimport { CoreProgressBarComponent } from './progress-bar/progress-bar';\nimport { CoreEmptyBoxComponent } from './empty-box/empty-box';\nimport { CoreSearchBoxComponent } from './search-box/search-box';\nimport { CoreFileComponent } from './file/file';\nimport { CoreContextMenuComponent } from './context-menu/context-menu';\nimport { CoreContextMenuItemComponent } from './context-menu/context-menu-item';\nimport { CoreContextMenuPopoverComponent } from './context-menu/context-menu-popover';\nimport { CoreCoursePickerMenuPopoverComponent } from './course-picker-menu/course-picker-menu-popover';\nimport { CoreChronoComponent } from './chrono/chrono';\nimport { CoreLocalFileComponent } from './local-file/local-file';\nimport { CoreSitePickerComponent } from './site-picker/site-picker';\nimport { CoreTabsComponent } from './tabs/tabs';\nimport { CoreTabComponent } from './tabs/tab';\nimport { CoreRichTextEditorComponent } from './rich-text-editor/rich-text-editor';\nimport { CoreNavBarButtonsComponent } from './navbar-buttons/navbar-buttons';\nimport { CoreDynamicComponent } from './dynamic-component/dynamic-component';\nimport { CoreSendMessageFormComponent } from './send-message-form/send-message-form';\n\n@NgModule({\n    declarations: [\n        CoreLoadingComponent,\n        CoreMarkRequiredComponent,\n        CoreInputErrorsComponent,\n        CoreShowPasswordComponent,\n        CoreSplitViewComponent,\n        CoreIframeComponent,\n        CoreProgressBarComponent,\n        CoreEmptyBoxComponent,\n        CoreSearchBoxComponent,\n        CoreFileComponent,\n        CoreContextMenuComponent,\n        CoreContextMenuItemComponent,\n        CoreContextMenuPopoverComponent,\n        CoreCoursePickerMenuPopoverComponent,\n        CoreChronoComponent,\n        CoreLocalFileComponent,\n        CoreSitePickerComponent,\n        CoreTabsComponent,\n        CoreTabComponent,\n        CoreRichTextEditorComponent,\n        CoreNavBarButtonsComponent,\n        CoreDynamicComponent,\n        CoreSendMessageFormComponent\n    ],\n    entryComponents: [\n        CoreContextMenuPopoverComponent,\n        CoreCoursePickerMenuPopoverComponent\n    ],\n    imports: [\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreDirectivesModule,\n        CorePipesModule\n    ],\n    exports: [\n        CoreLoadingComponent,\n        CoreMarkRequiredComponent,\n        CoreInputErrorsComponent,\n        CoreShowPasswordComponent,\n        CoreSplitViewComponent,\n        CoreIframeComponent,\n        CoreProgressBarComponent,\n        CoreEmptyBoxComponent,\n        CoreSearchBoxComponent,\n        CoreFileComponent,\n        CoreContextMenuComponent,\n        CoreContextMenuItemComponent,\n        CoreChronoComponent,\n        CoreLocalFileComponent,\n        CoreSitePickerComponent,\n        CoreTabsComponent,\n        CoreTabComponent,\n        CoreRichTextEditorComponent,\n        CoreNavBarButtonsComponent,\n        CoreDynamicComponent,\n        CoreSendMessageFormComponent\n    ]\n})\nexport class CoreComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreFileHelperProvider } from '@providers/file-helper';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseOptionsDelegate, CoreCourseOptionsHandlerToDisplay } from './options-delegate';\nimport { CoreSiteHomeProvider } from '@core/sitehome/providers/sitehome';\nimport { CoreCourseProvider } from './course';\nimport { CoreCourseModuleDelegate } from './module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from './module-prefetch-delegate';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\nimport { CoreConstants } from '@core/constants';\nimport { CoreSite } from '@classes/site';\nimport * as moment from 'moment';\n\n/**\n * Prefetch info of a module.\n */\nexport type CoreCourseModulePrefetchInfo = {\n    /**\n     * Downloaded size.\n     * @type {number}\n     */\n    size?: number;\n\n    /**\n     * Downloadable size in a readable format.\n     * @type {string}\n     */\n    sizeReadable?: string;\n\n    /**\n     * Module status.\n     * @type {string}\n     */\n    status?: string;\n\n    /**\n     * Icon's name of the module status.\n     * @type {string}\n     */\n    statusIcon?: string;\n\n    /**\n     * Time when the module was last downloaded.\n     * @type {number}\n     */\n    downloadTime?: number;\n\n    /**\n     * Download time in a readable format.\n     * @type {string}\n     */\n    downloadTimeReadable?: string;\n};\n\n/**\n * Progress of downloading a list of courses.\n */\nexport type CoreCourseCoursesProgress = {\n    /**\n     * Number of courses downloaded so far.\n     * @type {number}\n     */\n    count: number;\n\n    /**\n     * Toal of courses to download.\n     * @type {number}\n     */\n    total: number;\n\n    /**\n     * Whether the download has been successful so far.\n     * @type {boolean}\n     */\n    success: boolean;\n\n    /**\n     * Last downloaded course.\n     * @type {number}\n     */\n    courseId?: number;\n};\n\n/**\n * Helper to gather some common course functions.\n */\n@Injectable()\nexport class CoreCourseHelperProvider {\n\n    protected courseDwnPromises: { [s: string]: { [id: number]: Promise<any> } } = {};\n\n    constructor(private courseProvider: CoreCourseProvider, private domUtils: CoreDomUtilsProvider,\n        private moduleDelegate: CoreCourseModuleDelegate, private prefetchDelegate: CoreCourseModulePrefetchDelegate,\n        private filepoolProvider: CoreFilepoolProvider, private sitesProvider: CoreSitesProvider,\n        private textUtils: CoreTextUtilsProvider, private timeUtils: CoreTimeUtilsProvider,\n        private utils: CoreUtilsProvider, private translate: TranslateService, private loginHelper: CoreLoginHelperProvider,\n        private courseOptionsDelegate: CoreCourseOptionsDelegate, private siteHomeProvider: CoreSiteHomeProvider,\n        private eventsProvider: CoreEventsProvider, private fileHelper: CoreFileHelperProvider,\n        private appProvider: CoreAppProvider, private fileProvider: CoreFileProvider, private injector: Injector) { }\n\n    /**\n     * This function treats every module on the sections provided to load the handler data, treat completion\n     * and navigate to a module page if required. It also returns if sections has content.\n     *\n     * @param {any[]} sections List of sections to treat modules.\n     * @param {number} courseId Course ID of the modules.\n     * @param {any[]} [completionStatus] List of completion status.\n     * @return {boolean} Whether the sections have content.\n     */\n    addHandlerDataForModules(sections: any[], courseId: number, completionStatus?: any): boolean {\n        let hasContent = false;\n\n        sections.forEach((section) => {\n            if (!section || !this.sectionHasContent(section) || !section.modules) {\n                return;\n            }\n\n            hasContent = true;\n\n            section.modules.forEach((module) => {\n                module.handlerData = this.moduleDelegate.getModuleDataFor(module.modname, module, courseId, section.id);\n\n                if (completionStatus && typeof completionStatus[module.id] != 'undefined') {\n                    // Check if activity has completions and if it's marked.\n                    module.completionstatus = completionStatus[module.id];\n                    module.completionstatus.courseId = courseId;\n                }\n            });\n        });\n\n        return hasContent;\n    }\n\n    /**\n     * Calculate the status of a section.\n     *\n     * @param {any} section Section to calculate its status. It can't be \"All sections\".\n     * @param {number} courseId Course ID the section belongs to.\n     * @param {boolean} [refresh] True if it shouldn't use module status cache (slower).\n     * @return {Promise<any>} Promise resolved when the status is calculated.\n     */\n    calculateSectionStatus(section: any, courseId: number, refresh?: boolean): Promise<any> {\n\n        if (section.id == CoreCourseProvider.ALL_SECTIONS_ID) {\n            return Promise.reject(null);\n        }\n\n        // Get the status of this section.\n        return this.prefetchDelegate.getModulesStatus(section.modules, courseId, section.id, refresh).then((result) => {\n            // Check if it's being downloaded.\n            const downloadId = this.getSectionDownloadId(section);\n            if (this.prefetchDelegate.isBeingDownloaded(downloadId)) {\n                result.status = CoreConstants.DOWNLOADING;\n            }\n\n            // Set this section data.\n            section.showDownload = result.status === CoreConstants.NOT_DOWNLOADED;\n            section.showRefresh = result.status === CoreConstants.OUTDATED;\n\n            if (result.status !== CoreConstants.DOWNLOADING || !this.prefetchDelegate.isBeingDownloaded(section.id)) {\n                section.isDownloading = false;\n                section.total = 0;\n            } else {\n                // Section is being downloaded.\n                section.isDownloading = true;\n                this.prefetchDelegate.setOnProgress(downloadId, (data) => {\n                    section.count = data.count;\n                    section.total = data.total;\n                });\n            }\n\n            return result;\n        });\n    }\n\n    /**\n     * Calculate the status of a list of sections, setting attributes to determine the icons/data to be shown.\n     *\n     * @param {any[]} sections Sections to calculate their status.\n     * @param {number} courseId Course ID the sections belong to.\n     * @param {boolean} [refresh] True if it shouldn't use module status cache (slower).\n     * @return {Promise<void>} Promise resolved when the states are calculated.\n     */\n    calculateSectionsStatus(sections: any[], courseId: number, refresh?: boolean): Promise<void> {\n        const promises = [];\n        let allSectionsSection,\n            allSectionsStatus;\n\n        sections.forEach((section) => {\n            if (section.id === CoreCourseProvider.ALL_SECTIONS_ID) {\n                // \"All sections\" section status is calculated using the status of the rest of sections.\n                allSectionsSection = section;\n                section.isCalculating = true;\n            } else {\n                section.isCalculating = true;\n                promises.push(this.calculateSectionStatus(section, courseId, refresh).then((result) => {\n                    // Calculate \"All sections\" status.\n                    allSectionsStatus = this.filepoolProvider.determinePackagesStatus(allSectionsStatus, result.status);\n                }).finally(() => {\n                    section.isCalculating = false;\n                }));\n            }\n        });\n\n        return Promise.all(promises).then(() => {\n            if (allSectionsSection) {\n                // Set \"All sections\" data.\n                allSectionsSection.showDownload = allSectionsStatus === CoreConstants.NOT_DOWNLOADED;\n                allSectionsSection.showRefresh = allSectionsStatus === CoreConstants.OUTDATED;\n                allSectionsSection.isDownloading = allSectionsStatus === CoreConstants.DOWNLOADING;\n            }\n        }).finally(() => {\n            if (allSectionsSection) {\n                allSectionsSection.isCalculating = false;\n            }\n        });\n    }\n\n    /**\n     * Show a confirm and prefetch a course. It will retrieve the sections and the course options if not provided.\n     * This function will set the icon to \"spinner\" when starting and it will also set it back to the initial icon if the\n     * user cancels. All the other updates of the icon should be made when CoreEventsProvider.COURSE_STATUS_CHANGED is received.\n     *\n     * @param {any} iconData An object where to store the course icon. It will be stored with the name \"prefetchCourseIcon\".\n     * @param {any} course Course to prefetch.\n     * @param {any[]} [sections] List of course sections.\n     * @param {CoreCourseOptionsHandlerToDisplay[]} courseHandlers List of course handlers.\n     * @return {Promise<boolean>} Promise resolved with true when the download finishes, resolved with false if user doesn't\n     *                            confirm, rejected if an error occurs.\n     */\n    confirmAndPrefetchCourse(iconData: any, course: any, sections?: any[], courseHandlers?: CoreCourseOptionsHandlerToDisplay[])\n            : Promise<boolean> {\n\n        const initialIcon = iconData.prefetchCourseIcon,\n            siteId = this.sitesProvider.getCurrentSiteId();\n        let promise;\n\n        iconData.prefetchCourseIcon = 'spinner';\n\n        // Get the sections first if needed.\n        if (sections) {\n            promise = Promise.resolve(sections);\n        } else {\n            promise = this.courseProvider.getSections(course.id, false, true);\n        }\n\n        return promise.then((sections) => {\n            // Confirm the download.\n            return this.confirmDownloadSizeSection(course.id, undefined, sections, true).then(() => {\n                // User confirmed, get the course handlers if needed.\n                if (courseHandlers) {\n                    promise = Promise.resolve(courseHandlers);\n                } else {\n                    promise = this.courseOptionsDelegate.getHandlersToDisplay(this.injector, course);\n                }\n\n                return promise.then((handlers: CoreCourseOptionsHandlerToDisplay[]) => {\n                    // Now we have all the data, download the course.\n                    return this.prefetchCourse(course, sections, handlers, siteId);\n                }).then(() => {\n                    // Download successful.\n                    return true;\n                });\n            }, (error): any => {\n                // User cancelled or there was an error calculating the size.\n                iconData.prefetchCourseIcon = initialIcon;\n                if (error) {\n                    return Promise.reject(error);\n                }\n\n                return false;\n            });\n        });\n    }\n\n    /**\n     * Confirm and prefetches a list of courses.\n     *\n     * @param {any[]} courses List of courses to download.\n     * @param {Function} [onProgress] Function to call everytime a course is downloaded.\n     * @return {Promise<boolean>} Resolved with true when downloaded, resolved with false if user cancels, rejected if error.\n     */\n    confirmAndPrefetchCourses(courses: any[], onProgress?: (data: CoreCourseCoursesProgress) => void): Promise<boolean> {\n        const siteId = this.sitesProvider.getCurrentSiteId();\n\n        // Confirm the download without checking size because it could take a while.\n        return this.domUtils.showConfirm(this.translate.instant('core.areyousure')).then(() => {\n            const promises = [],\n                total = courses.length;\n            let count = 0;\n\n            courses.forEach((course) => {\n                const subPromises = [];\n                let sections,\n                    handlers,\n                    success = true;\n\n                // Get the sections and the handlers.\n                subPromises.push(this.courseProvider.getSections(course.id, false, true).then((courseSections) => {\n                    sections = courseSections;\n                }));\n                subPromises.push(this.courseOptionsDelegate.getHandlersToDisplay(this.injector, course).then((cHandlers) => {\n                    handlers = cHandlers;\n                }));\n\n                promises.push(Promise.all(subPromises).then(() => {\n                    return this.prefetchCourse(course, sections, handlers, siteId);\n                }).catch((error) => {\n                    success = false;\n\n                    return Promise.reject(error);\n                }).finally(() => {\n                    // Course downloaded or failed, notify the progress.\n                    count++;\n                    if (onProgress) {\n                        onProgress({ count: count, total: total, courseId: course.id, success: success });\n                    }\n                }));\n            });\n\n            if (onProgress) {\n                // Notify the start of the download.\n                onProgress({ count: 0, total: total, success: true });\n            }\n\n            return this.utils.allPromises(promises).then(() => {\n                return true;\n            });\n        }, () => {\n            // User cancelled.\n            return false;\n        });\n    }\n\n    /**\n     * Show confirmation dialog and then remove a module files.\n     *\n     * @param {any} module Module to remove the files.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    confirmAndRemoveFiles(module: any, courseId: number): Promise<any> {\n        return this.domUtils.showConfirm(this.translate.instant('core.course.confirmdeletemodulefiles')).then(() => {\n            return this.prefetchDelegate.removeModuleFiles(module, courseId);\n        }).catch((error) => {\n            if (error) {\n                this.domUtils.showErrorModal(error);\n            }\n        });\n    }\n\n    /**\n     * Calculate the size to download a section and show a confirm modal if needed.\n     *\n     * @param {number} courseId Course ID the section belongs to.\n     * @param {any} [section] Section. If not provided, all sections.\n     * @param {any[]} [sections] List of sections. Used when downloading all the sections.\n     * @param {boolean} [alwaysConfirm] True to show a confirm even if the size isn't high, false otherwise.\n     * @return {Promise<any>} Promise resolved if the user confirms or there's no need to confirm.\n     */\n    confirmDownloadSizeSection(courseId: number, section?: any, sections?: any[], alwaysConfirm?: boolean): Promise<any> {\n        let sizePromise;\n\n        // Calculate the size of the download.\n        if (section && section.id != CoreCourseProvider.ALL_SECTIONS_ID) {\n            sizePromise = this.prefetchDelegate.getDownloadSize(section.modules, courseId);\n        } else {\n            const promises = [],\n                results = {\n                    size: 0,\n                    total: true\n                };\n\n            sections.forEach((s) => {\n                if (s.id != CoreCourseProvider.ALL_SECTIONS_ID) {\n                    promises.push(this.prefetchDelegate.getDownloadSize(s.modules, courseId).then((sectionSize) => {\n                        results.total = results.total && sectionSize.total;\n                        results.size += sectionSize.size;\n                    }));\n                }\n            });\n\n            sizePromise = Promise.all(promises).then(() => {\n                return results;\n            });\n        }\n\n        return sizePromise.then((size) => {\n            // Show confirm modal if needed.\n            return this.domUtils.confirmDownloadSize(size, undefined, undefined, undefined, undefined, alwaysConfirm);\n        });\n    }\n\n    /**\n     * Helper function to prefetch a module, showing a confirmation modal if the size is big.\n     * This function is meant to be called from a context menu option. It will also modify some data like the prefetch icon.\n     *\n     * @param {any} instance The component instance that has the context menu. It should have prefetchStatusIcon and isDestroyed.\n     * @param {any} module Module to be prefetched\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    contextMenuPrefetch(instance: any, module: any, courseId: number): Promise<any> {\n        const initialIcon = instance.prefetchStatusIcon;\n        let cancelled = false;\n\n        instance.prefetchStatusIcon = 'spinner'; // Show spinner since this operation might take a while.\n\n        // We need to call getDownloadSize, the package might have been updated.\n        return this.prefetchDelegate.getModuleDownloadSize(module, courseId, true).then((size) => {\n            return this.domUtils.confirmDownloadSize(size).catch(() => {\n                // User hasn't confirmed, stop.\n                cancelled = true;\n\n                return Promise.reject(null);\n            }).then(() => {\n                return this.prefetchDelegate.prefetchModule(module, courseId, true);\n            });\n        }).catch((error) => {\n            instance.prefetchStatusIcon = initialIcon;\n            if (!instance.isDestroyed && !cancelled) {\n                this.domUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n            }\n        });\n    }\n\n    /**\n     * Determine the status of a list of courses.\n     *\n     * @param {any[]} courses Courses\n     * @return {Promise<string>} Promise resolved with the status.\n     */\n    determineCoursesStatus(courses: any[]): Promise<string> {\n        // Get the status of each course.\n        const promises = [],\n            siteId = this.sitesProvider.getCurrentSiteId();\n\n        courses.forEach((course) => {\n            promises.push(this.courseProvider.getCourseStatus(course.id, siteId));\n        });\n\n        return Promise.all(promises).then((statuses) => {\n            // Now determine the status of the whole list.\n            let status = statuses[0];\n            for (let i = 1; i < statuses.length; i++) {\n                status = this.filepoolProvider.determinePackagesStatus(status, statuses[i]);\n            }\n\n            return status;\n        });\n    }\n\n    /**\n     * Convenience function to open a module main file, downloading the package if needed.\n     * This is meant for modules like mod_resource.\n     *\n     * @param {any} module The module to download.\n     * @param {number} courseId The course ID of the module.\n     * @param {string} [component] The component to link the files to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {any[]} [files] List of files of the module. If not provided, use module.contents.\n     * @param {string} [siteId] The site ID. If not defined, current site.\n     * @return {Promise<any>} Resolved on success.\n     */\n    downloadModuleAndOpenFile(module: any, courseId: number, component?: string, componentId?: string | number, files?: any[],\n            siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        let promise;\n        if (files) {\n            promise = Promise.resolve(files);\n        } else {\n            promise = this.courseProvider.loadModuleContents(module, courseId).then(() => {\n                files = module.contents;\n            });\n        }\n\n        // Make sure that module contents are loaded.\n        return promise.then(() => {\n            if (!files || !files.length) {\n                return Promise.reject(null);\n            }\n\n            return this.sitesProvider.getSite(siteId);\n        }).then((site) => {\n            const mainFile = files[0],\n                fileUrl = this.fileHelper.getFileUrl(mainFile);\n\n            // Check if the file should be opened in browser.\n            if (this.fileHelper.shouldOpenInBrowser(mainFile)) {\n                if (this.appProvider.isOnline()) {\n                    // Open in browser.\n                    let fixedUrl = site.fixPluginfileURL(fileUrl).replace('&offline=1', '');\n                    // Remove forcedownload when followed by another param.\n                    fixedUrl = fixedUrl.replace(/forcedownload=\\d+&/, '');\n                    // Remove forcedownload when not followed by any param.\n                    fixedUrl = fixedUrl.replace(/[\\?|\\&]forcedownload=\\d+/, '');\n\n                    this.utils.openInBrowser(fixedUrl);\n\n                    if (this.fileProvider.isAvailable()) {\n                        // Download the file if needed (file outdated or not downloaded).\n                        // Download will be in background, don't return the promise.\n                        this.downloadModule(module, courseId, component, componentId, files, siteId);\n                    }\n\n                    return;\n                } else {\n                    // Not online, get the offline file. It will fail if not found.\n                    return this.filepoolProvider.getInternalUrlByUrl(siteId, fileUrl).then((path) => {\n                        return this.utils.openFile(path);\n                    }).catch((error) => {\n                        return Promise.reject(this.translate.instant('core.networkerrormsg'));\n                    });\n                }\n            }\n\n            // File shouldn't be opened in browser. Download the module if it needs to be downloaded.\n            return this.downloadModuleWithMainFileIfNeeded(module, courseId, component, componentId, files, siteId)\n                    .then((result) => {\n                if (result.path.indexOf('http') === 0) {\n                    return this.utils.openOnlineFile(result.path).catch((error) => {\n                        // Error opening the file, some apps don't allow opening online files.\n                        if (!this.fileProvider.isAvailable()) {\n                            return Promise.reject(error);\n                        } else if (result.status === CoreConstants.DOWNLOADING) {\n                            return Promise.reject(this.translate.instant('core.erroropenfiledownloading'));\n                        }\n\n                        let promise;\n                        if (result.status === CoreConstants.NOT_DOWNLOADED) {\n                            // Not downloaded, download it now and return the local file.\n                            promise = this.downloadModule(module, courseId, component, componentId, files, siteId).then(() => {\n                                return this.filepoolProvider.getInternalUrlByUrl(siteId, fileUrl);\n                            });\n                        } else {\n                            // File is outdated or stale and can't be opened in online, return the local URL.\n                            promise = this.filepoolProvider.getInternalUrlByUrl(siteId, fileUrl);\n                        }\n\n                        return promise.then((path) => {\n                            return this.utils.openFile(path);\n                        });\n                    });\n                } else {\n                    return this.utils.openFile(result.path);\n                }\n            });\n        });\n    }\n\n    /**\n     * Convenience function to download a module that has a main file and return the local file's path and other info.\n     * This is meant for modules like mod_resource.\n     *\n     * @param {any} module The module to download.\n     * @param {number} courseId The course ID of the module.\n     * @param {string} [component] The component to link the files to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {any[]} [files] List of files of the module. If not provided, use module.contents.\n     * @param {string} [siteId] The site ID. If not defined, current site.\n     * @return {Promise<{fixedUrl: string, path: string, status: string}>} Promise resolved when done.\n     */\n    downloadModuleWithMainFileIfNeeded(module: any, courseId: number, component?: string, componentId?: string | number,\n            files?: any[], siteId?: string): Promise<{fixedUrl: string, path: string, status: string}> {\n\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (!files || !files.length) {\n            // Module not valid, stop.\n            return Promise.reject(null);\n        }\n\n        const mainFile = files[0],\n            fileUrl = this.fileHelper.getFileUrl(mainFile),\n            timemodified = this.fileHelper.getFileTimemodified(mainFile),\n            result = {\n                fixedUrl: undefined,\n                path: undefined,\n                status: undefined\n            };\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const fixedUrl = site.fixPluginfileURL(fileUrl);\n            result.fixedUrl = fixedUrl;\n\n            if (this.fileProvider.isAvailable()) {\n                // The file system is available.\n                return this.filepoolProvider.getPackageStatus(siteId, component, componentId).then((status) => {\n                    result.status = status;\n\n                    const isWifi = !this.appProvider.isNetworkAccessLimited(),\n                        isOnline = this.appProvider.isOnline();\n\n                    if (status === CoreConstants.DOWNLOADED) {\n                        // Get the local file URL.\n                        return this.filepoolProvider.getInternalUrlByUrl(siteId, fileUrl);\n                    } else if (status === CoreConstants.DOWNLOADING && !this.appProvider.isDesktop()) {\n                        // Return the online URL.\n                        return fixedUrl;\n                    } else {\n                        if (!isOnline && status === CoreConstants.NOT_DOWNLOADED) {\n                            // Not downloaded and we're offline, reject.\n                            return Promise.reject(this.translate.instant('core.networkerrormsg'));\n                        }\n\n                        return this.filepoolProvider.shouldDownloadBeforeOpen(fixedUrl, mainFile.filesize).then(() => {\n                            // Download and then return the local URL.\n                            return this.downloadModule(module, courseId, component, componentId, files, siteId).then(() => {\n                                return this.filepoolProvider.getInternalUrlByUrl(siteId, fileUrl);\n                            });\n                        }, () => {\n                            // Start the download if in wifi, but return the URL right away so the file is opened.\n                            if (isWifi && isOnline) {\n                                this.downloadModule(module, courseId, component, componentId, files, siteId);\n                            }\n\n                            if (!this.fileHelper.isStateDownloaded(status) || isOnline) {\n                                // Not downloaded or online, return the online URL.\n                                return fixedUrl;\n                            } else {\n                                // Outdated but offline, so we return the local URL. Use getUrlByUrl so it's added to the queue.\n                                return this.filepoolProvider.getUrlByUrl(siteId, fileUrl, component, componentId, timemodified,\n                                        false, false, mainFile);\n                            }\n                        });\n                    }\n                }).then((path) => {\n                    result.path = path;\n\n                    return result;\n                });\n            } else {\n                // We use the live URL.\n                result.path = fixedUrl;\n\n                return result;\n            }\n        });\n    }\n\n    /**\n     * Convenience function to download a module.\n     *\n     * @param {any} module The module to download.\n     * @param {number} courseId The course ID of the module.\n     * @param {string} [component] The component to link the files to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {any[]} [files] List of files of the module. If not provided, use module.contents.\n     * @param {string} [siteId] The site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    downloadModule(module: any, courseId: number, component?: string, componentId?: string | number, files?: any[], siteId?: string)\n            : Promise<any> {\n\n        const prefetchHandler = this.prefetchDelegate.getPrefetchHandlerFor(module);\n\n        if (prefetchHandler) {\n            // Use the prefetch handler to download the module.\n            if (prefetchHandler.download) {\n                return prefetchHandler.download(module, courseId);\n            } else {\n                return prefetchHandler.prefetch(module, courseId, true);\n            }\n        }\n\n        // There's no prefetch handler for the module, just download the files.\n        files = files || module.contents;\n\n        return this.filepoolProvider.downloadOrPrefetchFiles(siteId, files, false, false, component, componentId);\n    }\n\n    /**\n     * Fill the Context Menu for a certain module.\n     *\n     * @param {any} instance The component instance that has the context menu.\n     * @param {any} module Module to be prefetched\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {boolean} [invalidateCache] Invalidates the cache first.\n     * @param {string} [component] Component of the module.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    fillContextMenu(instance: any, module: any, courseId: number, invalidateCache?: boolean, component?: string): Promise<any> {\n        return this.getModulePrefetchInfo(module, courseId, invalidateCache, component).then((moduleInfo) => {\n            instance.size = moduleInfo.size > 0 ? moduleInfo.sizeReadable : 0;\n            instance.prefetchStatusIcon = moduleInfo.statusIcon;\n\n            if (moduleInfo.status != CoreConstants.NOT_DOWNLOADABLE) {\n                // Module is downloadable, get the text to display to prefetch.\n                if (moduleInfo.downloadTime > 0) {\n                    instance.prefetchText = this.translate.instant('core.lastdownloaded') + ': ' + moduleInfo.downloadTimeReadable;\n                } else {\n                    // Module not downloaded, show a default text.\n                    instance.prefetchText = this.translate.instant('core.download');\n                }\n            }\n\n            if (typeof instance.statusObserver == 'undefined' && component) {\n                instance.statusObserver = this.eventsProvider.on(CoreEventsProvider.PACKAGE_STATUS_CHANGED, (data) => {\n                    if (data.componentId == module.id && data.component == component) {\n                        this.fillContextMenu(instance, module, courseId, false, component);\n                    }\n                }, this.sitesProvider.getCurrentSiteId());\n            }\n        });\n    }\n\n    /**\n     * Get a course download promise (if any).\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Download promise, undefined if not found.\n     */\n    getCourseDownloadPromise(courseId: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.courseDwnPromises[siteId] && this.courseDwnPromises[siteId][courseId];\n    }\n\n    /**\n     * Get a course status icon.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<string>} Promise resolved with the icon name.\n     */\n    getCourseStatusIcon(courseId: number, siteId?: string): Promise<string> {\n        return this.courseProvider.getCourseStatus(courseId, siteId).then((status) => {\n            return this.getCourseStatusIconFromStatus(status);\n        });\n    }\n\n    /**\n     * Get a course status icon from status.\n     *\n     * @module mm.core.course\n     * @ngdoc method\n     * @name $mmCourseHelper#getCourseStatusIconFromStatus\n     * @param {String} status Course status.\n     * @return {String}       Icon name.\n     */\n    getCourseStatusIconFromStatus(status: string): string {\n        if (status == CoreConstants.DOWNLOADED) {\n            // Always show refresh icon, we cannot knew if there's anything new in course options.\n            return 'refresh';\n        } else if (status == CoreConstants.DOWNLOADING) {\n            return 'spinner';\n        } else {\n            return 'cloud-download';\n        }\n    }\n\n    /**\n     * Get the course ID from a module instance ID, showing an error message if it can't be retrieved.\n     *\n     * @param {number} id Instance ID.\n     * @param {string} module Name of the module. E.g. 'glossary'.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<number>} Promise resolved with the module's course ID.\n     */\n    getModuleCourseIdByInstance(id: number, module: any, siteId?: string): Promise<number> {\n        return this.courseProvider.getModuleBasicInfoByInstance(id, module, siteId).then((cm) => {\n            return cm.course;\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Get prefetch info for a module.\n     *\n     * @param {any} module Module to get the info from.\n     * @param {number} courseId Course ID the section belongs to.\n     * @param {boolean} [invalidateCache] Invalidates the cache first.\n     * @param {string} [component] Component of the module.\n     * @return {Promise<CoreCourseModulePrefetchInfo>} Promise resolved with the info.\n     */\n    getModulePrefetchInfo(module: any, courseId: number, invalidateCache?: boolean, component?: string)\n            : Promise<CoreCourseModulePrefetchInfo> {\n        const moduleInfo: CoreCourseModulePrefetchInfo = {},\n            siteId = this.sitesProvider.getCurrentSiteId(),\n            promises = [];\n\n        if (invalidateCache) {\n            this.prefetchDelegate.invalidateModuleStatusCache(module);\n        }\n\n        promises.push(this.prefetchDelegate.getModuleDownloadedSize(module, courseId).then((moduleSize) => {\n            moduleInfo.size = moduleSize;\n            moduleInfo.sizeReadable = this.textUtils.bytesToSize(moduleSize, 2);\n        }));\n\n        // @todo: Decide what to display instead of timemodified. Last check_updates?\n\n        promises.push(this.prefetchDelegate.getModuleStatus(module, courseId).then((moduleStatus) => {\n            moduleInfo.status = moduleStatus;\n            switch (moduleStatus) {\n                case CoreConstants.NOT_DOWNLOADED:\n                    moduleInfo.statusIcon = 'cloud-download';\n                    break;\n                case CoreConstants.DOWNLOADING:\n                    moduleInfo.statusIcon = 'spinner';\n                    break;\n                case CoreConstants.OUTDATED:\n                    moduleInfo.statusIcon = 'refresh';\n                    break;\n                case CoreConstants.DOWNLOADED:\n                    if (!this.prefetchDelegate.canCheckUpdates()) {\n                        moduleInfo.statusIcon = 'refresh';\n                        break;\n                    }\n                default:\n                    moduleInfo.statusIcon = '';\n                    break;\n            }\n        }));\n\n        // Get the time it was downloaded (if it was downloaded).\n        promises.push(this.filepoolProvider.getPackageData(siteId, component, module.id).then((data) => {\n            if (data && data.downloadTime && (data.status == CoreConstants.OUTDATED || data.status == CoreConstants.DOWNLOADED)) {\n                const now = this.timeUtils.timestamp();\n                moduleInfo.downloadTime = data.downloadTime;\n                if (now - data.downloadTime < 7 * 86400) {\n                    moduleInfo.downloadTimeReadable = moment(data.downloadTime * 1000).fromNow();\n                } else {\n                    moduleInfo.downloadTimeReadable = moment(data.downloadTime * 1000).calendar();\n                }\n            }\n        }).catch(() => {\n            // Not downloaded.\n            moduleInfo.downloadTime = 0;\n        }));\n\n        return Promise.all(promises).then(() => {\n            return moduleInfo;\n        });\n    }\n\n    /**\n     * Get the download ID of a section. It's used to interact with CoreCourseModulePrefetchDelegate.\n     *\n     * @param {any} section Section.\n     * @return {string} Section download ID.\n     */\n    getSectionDownloadId(section: any): string {\n        return 'Section-' + section.id;\n    }\n\n    /**\n     * Navigate to a module.\n     *\n     * @param {number} moduleId Module's ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {number} [courseId] Course ID. If not defined we'll try to retrieve it from the site.\n     * @param {number} [sectionId] Section the module belongs to. If not defined we'll try to retrieve it from the site.\n     * @return {Promise<void>} Promise resolved when done.\n     */\n    navigateToModule(moduleId: number, siteId?: string, courseId?: number, sectionId?: number): Promise<void> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const modal = this.domUtils.showModalLoading();\n        let promise,\n            site: CoreSite;\n\n        if (courseId && sectionId) {\n            // No need to retrieve more data.\n            promise = Promise.resolve();\n        } else if (!courseId) {\n            // We don't have courseId.\n            promise = this.courseProvider.getModuleBasicInfo(moduleId, siteId).then((module) => {\n                courseId = module.course;\n                sectionId = module.section;\n            });\n        } else {\n            // We don't have sectionId but we have courseId.\n            promise = this.courseProvider.getModuleSectionId(moduleId, siteId).then((id) => {\n                sectionId = id;\n            });\n        }\n\n        return promise.then(() => {\n            // Get the site.\n            return this.sitesProvider.getSite(siteId);\n        }).then((s) => {\n            site = s;\n\n            // Get the module.\n            return this.courseProvider.getModule(moduleId, courseId, sectionId, false, false, siteId);\n        }).then((module) => {\n            const params = {\n                course: { id: courseId },\n                module: module,\n                sectionId: sectionId\n            };\n\n            module.handlerData = this.moduleDelegate.getModuleDataFor(module.modname, module, courseId, sectionId);\n\n            if (courseId == site.getSiteHomeId()) {\n                // Check if site home is available.\n                return this.siteHomeProvider.isAvailable().then(() => {\n                    this.loginHelper.redirect('CoreSiteHomeIndexPage', params, siteId);\n                });\n            } else {\n                this.loginHelper.redirect('CoreCourseSectionPage', params, siteId);\n            }\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'core.course.errorgetmodule', true);\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Open a module.\n     *\n     * @param {NavController} navCtrl The NavController to use.\n     * @param {any} module The module to open.\n     * @param {number} courseId The course ID of the module.\n     * @param {number} [sectionId] The section ID of the module.\n     * @param {boolean} True if module can be opened, false otherwise.\n     */\n    openModule(navCtrl: NavController, module: any, courseId: number, sectionId?: number): boolean {\n        if (!module.handlerData) {\n            module.handlerData = this.moduleDelegate.getModuleDataFor(module.modname, module, courseId, sectionId);\n        }\n\n        if (module.handlerData && module.handlerData.action) {\n            module.handlerData.action(new Event('click'), navCtrl, module, courseId, { animate: false });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Prefetch all the activities in a course and also the course addons.\n     *\n     * @param {any} course The course to prefetch.\n     * @param {any[]} sections List of course sections.\n     * @param {CoreCourseOptionsHandlerToDisplay[]} courseHandlers List of course options handlers.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise}                Promise resolved when the download finishes.\n     */\n    prefetchCourse(course: any, sections: any[], courseHandlers: CoreCourseOptionsHandlerToDisplay[], siteId?: string)\n            : Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (this.courseDwnPromises[siteId] && this.courseDwnPromises[siteId][course.id]) {\n            // There's already a download ongoing for this course, return the promise.\n            return this.courseDwnPromises[siteId][course.id];\n        } else if (!this.courseDwnPromises[siteId]) {\n            this.courseDwnPromises[siteId] = {};\n        }\n\n        // First of all, mark the course as being downloaded.\n        this.courseDwnPromises[siteId][course.id] = this.courseProvider.setCourseStatus(course.id, CoreConstants.DOWNLOADING,\n            siteId).then(() => {\n                const promises = [];\n                let allSectionsSection = sections[0];\n\n                // Prefetch all the sections. If the first section is \"All sections\", use it. Otherwise, use a fake \"All sections\".\n                if (sections[0].id != CoreCourseProvider.ALL_SECTIONS_ID) {\n                    allSectionsSection = { id: CoreCourseProvider.ALL_SECTIONS_ID };\n                }\n                promises.push(this.prefetchSection(allSectionsSection, course.id, sections));\n\n                // Prefetch course options.\n                courseHandlers.forEach((handler) => {\n                    if (handler.prefetch) {\n                        promises.push(handler.prefetch(course));\n                    }\n                });\n\n                return this.utils.allPromises(promises);\n            }).then(() => {\n                // Download success, mark the course as downloaded.\n                return this.courseProvider.setCourseStatus(course.id, CoreConstants.DOWNLOADED, siteId);\n            }).catch((error) => {\n                // Error, restore previous status.\n                return this.courseProvider.setCoursePreviousStatus(course.id, siteId).then(() => {\n                    return Promise.reject(error);\n                });\n            }).finally(() => {\n                delete this.courseDwnPromises[siteId][course.id];\n            });\n\n        return this.courseDwnPromises[siteId][course.id];\n    }\n\n    /**\n     * Helper function to prefetch a module, showing a confirmation modal if the size is big\n     * and invalidating contents if refreshing.\n     *\n     * @param {handler} handler Prefetch handler to use. Must implement 'prefetch' and 'invalidateContent'.\n     * @param {any} module Module to download.\n     * @param {any} size Object containing size to download (in bytes) and a boolean to indicate if its totally calculated.\n     * @param {number} courseId Course ID of the module.\n     * @param {boolean} [refresh] True if refreshing, false otherwise.\n     * @return {Promise<any>} Promise resolved when downloaded.\n     */\n    prefetchModule(handler: any, module: any, size: any, courseId: number, refresh?: boolean): Promise<any> {\n        // Show confirmation if needed.\n        return this.domUtils.confirmDownloadSize(size).then(() => {\n            // Invalidate content if refreshing and download the data.\n            const promise = refresh ? handler.invalidateContent(module.id, courseId) : Promise.resolve();\n\n            return promise.catch(() => {\n                // Ignore errors.\n            }).then(() => {\n                return handler.prefetch(module, courseId, true);\n            });\n        });\n    }\n\n    /**\n     * Prefetch one section or all the sections.\n     * If the section is \"All sections\" it will prefetch all the sections.\n     *\n     * @param {any} section Section.\n     * @param {number} courseId Course ID the section belongs to.\n     * @param {any[]} [sections] List of sections. Used when downloading all the sections.\n     * @return {Promise<any>} Promise resolved when the prefetch is finished.\n     */\n    prefetchSection(section: any, courseId: number, sections?: any[]): Promise<any> {\n        if (section.id != CoreCourseProvider.ALL_SECTIONS_ID) {\n            // Download only this section.\n            return this.prefetchSingleSectionIfNeeded(section, courseId).then(() => {\n                // Calculate the status of the section that finished.\n                return this.calculateSectionStatus(section, courseId);\n            });\n        } else {\n            // Download all the sections except \"All sections\".\n            const promises = [];\n            let allSectionsStatus;\n\n            section.isDownloading = true;\n            sections.forEach((section) => {\n                if (section.id != CoreCourseProvider.ALL_SECTIONS_ID) {\n                    promises.push(this.prefetchSingleSectionIfNeeded(section, courseId).then(() => {\n                        // Calculate the status of the section that finished.\n                        return this.calculateSectionStatus(section, courseId).then((result) => {\n                            // Calculate \"All sections\" status.\n                            allSectionsStatus = this.filepoolProvider.determinePackagesStatus(allSectionsStatus, result.status);\n                        });\n                    }));\n                }\n            });\n\n            return this.utils.allPromises(promises).then(() => {\n                // Set \"All sections\" data.\n                section.showDownload = allSectionsStatus === CoreConstants.NOT_DOWNLOADED;\n                section.showRefresh = allSectionsStatus === CoreConstants.OUTDATED;\n                section.isDownloading = allSectionsStatus === CoreConstants.DOWNLOADING;\n            }).finally(() => {\n                section.isDownloading = false;\n            });\n        }\n    }\n\n    /**\n     * Prefetch a certain section if it needs to be prefetched.\n     * If the section is \"All sections\" it will be ignored.\n     *\n     * @param {any} section Section to prefetch.\n     * @param {number} courseId Course ID the section belongs to.\n     * @return {Promise<any>} Promise resolved when the section is prefetched.\n     */\n    protected prefetchSingleSectionIfNeeded(section: any, courseId: number): Promise<any> {\n        if (section.id == CoreCourseProvider.ALL_SECTIONS_ID) {\n            return Promise.resolve();\n        }\n\n        section.isDownloading = true;\n\n        // Validate the section needs to be downloaded and calculate amount of modules that need to be downloaded.\n        return this.prefetchDelegate.getModulesStatus(section.modules, courseId, section.id).then((result) => {\n            if (result.status == CoreConstants.DOWNLOADED || result.status == CoreConstants.NOT_DOWNLOADABLE) {\n                // Section is downloaded or not downloadable, nothing to do.\n                return;\n            }\n\n            return this.prefetchSingleSection(section, result, courseId);\n        }, (error) => {\n            section.isDownloading = false;\n\n            return Promise.reject(error);\n        });\n    }\n\n    /**\n     * Start or restore the prefetch of a section.\n     * If the section is \"All sections\" it will be ignored.\n     *\n     * @param {any} section Section to download.\n     * @param {any} result Result of CoreCourseModulePrefetchDelegate.getModulesStatus for this section.\n     * @param {number} courseId Course ID the section belongs to.\n     * @return {Promise<any>} Promise resolved when the section has been prefetched.\n     */\n    protected prefetchSingleSection(section: any, result: any, courseId: number): Promise<any> {\n        if (section.id == CoreCourseProvider.ALL_SECTIONS_ID) {\n            return Promise.resolve();\n        }\n\n        if (section.total > 0) {\n            // Already being downloaded.\n            return Promise.resolve();\n        }\n\n        // We only download modules with status notdownloaded, downloading or outdated.\n        const modules = result[CoreConstants.OUTDATED].concat(result[CoreConstants.NOT_DOWNLOADED])\n                .concat(result[CoreConstants.DOWNLOADING]),\n            downloadId = this.getSectionDownloadId(section);\n\n        section.isDownloading = true;\n\n        // Prefetch all modules to prevent incoeherences in download count and to download stale data not marked as outdated.\n        return this.prefetchDelegate.prefetchModules(downloadId, modules, courseId, (data) => {\n            section.count = data.count;\n            section.total = data.total;\n        });\n    }\n\n    /**\n     * Check if a section has content.\n     *\n     * @param {any} section Section to check.\n     * @return {boolean} Whether the section has content.\n     */\n    sectionHasContent(section: any): boolean {\n        if (section.id == CoreCourseProvider.ALL_SECTIONS_ID || section.hiddenbynumsections) {\n            return false;\n        }\n\n        return (typeof section.availabilityinfo != 'undefined' && section.availabilityinfo != '') ||\n            section.summary != '' || (section.modules && section.modules.length > 0);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSite } from '@classes/site';\n\n/**\n * Service that provides some features regarding lists of courses and categories.\n */\n@Injectable()\nexport class CoreCoursesProvider {\n    static SEARCH_PER_PAGE = 20;\n    static ENROL_INVALID_KEY = 'CoreCoursesEnrolInvalidKey';\n    static EVENT_MY_COURSES_UPDATED = 'courses_my_courses_updated';\n    static EVENT_MY_COURSES_REFRESHED = 'courses_my_courses_refreshed';\n    protected ROOT_CACHE_KEY = 'mmCourses:';\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider) {\n        this.logger = logger.getInstance('CoreCoursesProvider');\n    }\n\n    /**\n     * Get categories. They can be filtered by id.\n     *\n     * @param {number} categoryId Category ID to get.\n     * @param {boolean} [addSubcategories] If it should add subcategories to the list.\n     * @param {string} [siteId] Site to get the courses from. If not defined, use current site.\n     * @return {Promise<any[]>} Promise resolved with the categories.\n     */\n    getCategories(categoryId: number, addSubcategories?: boolean, siteId?: string): Promise<any[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            // Get parent when id is the root category.\n            const criteriaKey = categoryId == 0 ? 'parent' : 'id',\n                data = {\n                    criteria: [\n                        { key: criteriaKey, value: categoryId }\n                    ],\n                    addsubcategories: addSubcategories ? 1 : 0\n                },\n                preSets = {\n                    cacheKey: this.getCategoriesCacheKey(categoryId, addSubcategories)\n                };\n\n            return site.read('core_course_get_categories', data, preSets);\n        });\n    }\n\n    /**\n     * Get cache key for get categories methods WS call.\n     *\n     * @param {number} categoryId Category ID to get.\n     * @param {boolean} [addSubcategories] If add subcategories to the list.\n     * @return {string} Cache key.\n     */\n    protected getCategoriesCacheKey(categoryId: number, addSubcategories?: boolean): string {\n        return this.ROOT_CACHE_KEY + 'categories:' + categoryId + ':' + !!addSubcategories;\n    }\n\n    /**\n     * Given a list of course IDs to get course admin and nav options, return the list of courseIds to use.\n     *\n     * @param {number[]} courseIds Course IDs.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise}            Promise resolved with the list of course IDs.\n     */\n    protected getCourseIdsForAdminAndNavOptions(courseIds: number[], siteId?: string): Promise<number[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const siteHomeId = site.getSiteHomeId();\n\n            if (courseIds.length == 1) {\n                // Only 1 course, check if it belongs to the user courses. If so, use all user courses.\n                return this.getUserCourses(true, siteId).then((courses) => {\n                    const courseId = courseIds[0];\n                    let useAllCourses = false;\n\n                    if (courseId == siteHomeId) {\n                        // It's site home, use all courses.\n                        useAllCourses = true;\n                    } else {\n                        for (let i = 0; i < courses.length; i++) {\n                            if (courses[i].id == courseId) {\n                                useAllCourses = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    if (useAllCourses) {\n                        // User is enrolled, retrieve all the courses.\n                        courseIds = courses.map((course) => {\n                            return course.id;\n                        });\n\n                        // Always add the site home ID.\n                        courseIds.push(siteHomeId);\n                    }\n\n                    return courseIds;\n                }).catch(() => {\n                    // Ignore errors.\n                    return courseIds;\n                });\n            } else {\n                return courseIds;\n            }\n        });\n    }\n\n    /**\n     * Check if My Courses is disabled in a certain site.\n     *\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>} Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isMyCoursesDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isMyCoursesDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Check if My Courses is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isMyCoursesDisabledInSite(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('$mmSideMenuDelegate_mmCourses');\n    }\n\n    /**\n     * Check if Search Courses is disabled in a certain site.\n     *\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>} Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isSearchCoursesDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isSearchCoursesDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Check if Search Courses is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isSearchCoursesDisabledInSite(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('$mmCoursesDelegate_search');\n    }\n\n    /**\n     * Get course.\n     *\n     * @param {number} id ID of the course to get.\n     * @param {string} [siteId] Site to get the courses from. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved with the course.\n     */\n    getCourse(id: number, siteId?: string): Promise<any> {\n        return this.getCourses([id], siteId).then((courses) => {\n            if (courses && courses.length > 0) {\n                return courses[0];\n            }\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Get the enrolment methods from a course.\n     *\n     * @param {number} id ID of the course.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any[]} Promise resolved with the methods.\n     */\n    getCourseEnrolmentMethods(id: number, siteId?: string): Promise<any[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    courseid: id\n                },\n                preSets = {\n                    cacheKey: this.getCourseEnrolmentMethodsCacheKey(id)\n                };\n\n            return site.read('core_enrol_get_course_enrolment_methods', params, preSets);\n        });\n    }\n\n    /**\n     * Get cache key for get course enrolment methods WS call.\n     *\n     * @param {number} id Course ID.\n     * @return {string} Cache key.\n     */\n    protected getCourseEnrolmentMethodsCacheKey(id: number): string {\n        return this.ROOT_CACHE_KEY + 'enrolmentmethods:' + id;\n    }\n\n    /**\n     * Get info from a course guest enrolment method.\n     *\n     * @param {number} instanceId Guest instance ID.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the info is retrieved.\n     */\n    getCourseGuestEnrolmentInfo(instanceId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    instanceid: instanceId\n                },\n                preSets = {\n                    cacheKey: this.getCourseGuestEnrolmentInfoCacheKey(instanceId)\n                };\n\n            return site.read('enrol_guest_get_instance_info', params, preSets).then((response) => {\n                return response.instanceinfo;\n            });\n        });\n    }\n\n    /**\n     * Get cache key for get course guest enrolment methods WS call.\n     *\n     * @param {number} instanceId Guest instance ID.\n     * @return {string} Cache key.\n     */\n    protected getCourseGuestEnrolmentInfoCacheKey(instanceId: number): string {\n        return this.ROOT_CACHE_KEY + 'guestinfo:' + instanceId;\n    }\n\n    /**\n     * Get courses.\n     * Warning: if the user doesn't have permissions to view some of the courses passed the WS call will fail.\n     * The user must be able to view ALL the courses passed.\n     *\n     * @param {number[]} ids List of IDs of the courses to get.\n     * @param {string} [siteId] Site to get the courses from. If not defined, use current site.\n     * @return {Promise<any[]>}  Promise resolved with the courses.\n     */\n    getCourses(ids: number[], siteId?: string): Promise<any[]> {\n        if (!Array.isArray(ids)) {\n            return Promise.reject(null);\n        } else if (ids.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const data = {\n                    options: {\n                        ids: ids\n                    }\n                },\n                preSets = {\n                    cacheKey: this.getCoursesCacheKey(ids)\n                };\n\n            return site.read('core_course_get_courses', data, preSets);\n        });\n    }\n\n    /**\n     * Get cache key for get courses WS call.\n     *\n     * @param {number[]} ids Courses IDs.\n     * @return {string} Cache key.\n     */\n    protected getCoursesCacheKey(ids: number[]): string {\n        return this.ROOT_CACHE_KEY + 'course:' + JSON.stringify(ids);\n    }\n\n    /**\n     * Get courses. They can be filtered by field.\n     *\n     * @param {string} [field] The field to search. Can be left empty for all courses or:\n     *                             id: course id.\n     *                             ids: comma separated course ids.\n     *                             shortname: course short name.\n     *                             idnumber: course id number.\n     *                             category: category id the course belongs to.\n     * @param {any} [value] The value to match.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any[]>} Promise resolved with the courses.\n     */\n    getCoursesByField(field?: string, value?: any, siteId?: string): Promise<any[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const data = {\n                    field: field || '',\n                    value: field ? value : ''\n                },\n                preSets = {\n                    cacheKey: this.getCoursesByFieldCacheKey(field, value)\n                };\n\n            return site.read('core_course_get_courses_by_field', data, preSets).then((courses) => {\n                if (courses.courses) {\n                    // Courses will be sorted using sortorder if avalaible.\n                    return courses.courses.sort((a, b) => {\n                        if (typeof a.sortorder == 'undefined' && typeof b.sortorder == 'undefined') {\n                            return b.id - a.id;\n                        }\n\n                        if (typeof a.sortorder == 'undefined') {\n                            return 1;\n                        }\n\n                        if (typeof b.sortorder == 'undefined') {\n                            return -1;\n                        }\n\n                        return a.sortorder - b.sortorder;\n                    });\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for get courses WS call.\n     *\n     * @param {string} [field] The field to search.\n     * @param {any} [value] The value to match.\n     * @return {string} Cache key.\n     */\n    protected getCoursesByFieldCacheKey(field?: string, value?: any): string {\n        field = field || '';\n        value = field ? value : '';\n\n        return this.ROOT_CACHE_KEY + 'coursesbyfield:' + field + ':' + value;\n    }\n\n    /**\n     * Check if get courses by field WS is available.\n     *\n     * @return {boolean} Whether get courses by field is available.\n     */\n    isGetCoursesByFieldAvailable(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('core_course_get_courses_by_field');\n    }\n\n    /**\n     * Get the navigation and administration options for the given courses.\n     *\n     * @param {number[]} courseIds IDs of courses to get.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<{navOptions: any, admOptions: any}>} Promise resolved with the options for each course.\n     */\n    getCoursesAdminAndNavOptions(courseIds: number[], siteId?: string): Promise<{ navOptions: any, admOptions: any }> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        // Get the list of courseIds to use based on the param.\n        return this.getCourseIdsForAdminAndNavOptions(courseIds, siteId).then((courseIds) => {\n            const promises = [];\n            let navOptions,\n                admOptions;\n\n            // Get user navigation and administration options.\n            promises.push(this.getUserNavigationOptions(courseIds, siteId).catch(() => {\n                // Couldn't get it, return empty options.\n                return {};\n            }).then((options) => {\n                navOptions = options;\n            }));\n\n            promises.push(this.getUserAdministrationOptions(courseIds, siteId).catch(() => {\n                // Couldn't get it, return empty options.\n                return {};\n            }).then((options) => {\n                admOptions = options;\n            }));\n\n            return Promise.all(promises).then(() => {\n                return { navOptions: navOptions, admOptions: admOptions };\n            });\n        });\n    }\n\n    /**\n     * Get the common part of the cache keys for user administration options WS calls.\n     *\n     * @return {string} Cache key.\n     */\n    protected getUserAdministrationOptionsCommonCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'administrationOptions:';\n    }\n\n    /**\n     * Get cache key for get user administration options WS call.\n     *\n     * @param {number[]} courseIds IDs of courses to get.\n     * @return {string} Cache key.\n     */\n    protected getUserAdministrationOptionsCacheKey(courseIds: number[]): string {\n        return this.getUserAdministrationOptionsCommonCacheKey() + courseIds.join(',');\n    }\n\n    /**\n     * Get user administration options for a set of courses.\n     *\n     * @param {number[]} courseIds IDs of courses to get.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with administration options for each course.\n     */\n    getUserAdministrationOptions(courseIds: number[], siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    courseids: courseIds\n                },\n                preSets = {\n                    cacheKey: this.getUserAdministrationOptionsCacheKey(courseIds)\n                };\n\n            return site.read('core_course_get_user_administration_options', params, preSets).then((response) => {\n                // Format returned data.\n                return this.formatUserAdminOrNavOptions(response.courses);\n            });\n        });\n    }\n\n    /**\n     * Get the common part of the cache keys for user navigation options WS calls.\n     *\n     * @param {number[]} courseIds IDs of courses to get.\n     * @return {string} Cache key.\n     */\n    protected getUserNavigationOptionsCommonCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'navigationOptions:';\n    }\n\n    /**\n     * Get cache key for get user navigation options WS call.\n     *\n     * @return {string} Cache key.\n     */\n    protected getUserNavigationOptionsCacheKey(courseIds: number[]): string {\n        return this.getUserNavigationOptionsCommonCacheKey() + courseIds.join(',');\n    }\n\n    /**\n     * Get user navigation options for a set of courses.\n     *\n     * @param {number[]} courseIds IDs of courses to get.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with navigation options for each course.\n     */\n    getUserNavigationOptions(courseIds: number[], siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    courseids: courseIds\n                },\n                preSets = {\n                    cacheKey: this.getUserNavigationOptionsCacheKey(courseIds)\n                };\n\n            return site.read('core_course_get_user_navigation_options', params, preSets).then((response) => {\n                // Format returned data.\n                return this.formatUserAdminOrNavOptions(response.courses);\n            });\n        });\n    }\n\n    /**\n     * Format user navigation or administration options.\n     *\n     * @param {any[]} courses Navigation or administration options for each course.\n     * @return {any} Formatted options.\n     */\n    protected formatUserAdminOrNavOptions(courses: any[]): any {\n        const result = {};\n\n        courses.forEach((course) => {\n            const options = {};\n\n            if (course.options) {\n                course.options.forEach((option) => {\n                    options[option.name] = option.available;\n                });\n            }\n\n            result[course.id] = options;\n        });\n\n        return result;\n    }\n\n    /**\n     * Get a course the user is enrolled in. This function relies on getUserCourses.\n     * preferCache=true will try to speed up the response, but the data returned might not be updated.\n     *\n     * @param {number} id ID of the course to get.\n     * @param {boolean} [preferCache] True if shouldn't call WS if data is cached, false otherwise.\n     * @param {string} [siteId] Site to get the courses from. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved with the course.\n     */\n    getUserCourse(id: number, preferCache?: boolean, siteId?: string): Promise<any> {\n        if (!id) {\n            return Promise.reject(null);\n        }\n\n        return this.getUserCourses(preferCache, siteId).then((courses) => {\n            let course;\n            for (const i in courses) {\n                if (courses[i].id == id) {\n                    course = courses[i];\n                    break;\n                }\n            }\n\n            return course ? course : Promise.reject(null);\n        });\n    }\n\n    /**\n     * Get user courses.\n     *\n     * @param {boolean} [preferCache] True if shouldn't call WS if data is cached, false otherwise.\n     * @param {string} [siteId] Site to get the courses from. If not defined, use current site.\n     * @return {Promise<any[]>} Promise resolved with the courses.\n     */\n    getUserCourses(preferCache?: boolean, siteId?: string): Promise<any[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n\n            const userId = site.getUserId(),\n                data = {\n                    userid: userId\n                },\n                preSets = {\n                    cacheKey: this.getUserCoursesCacheKey(),\n                    omitExpires: !!preferCache\n                };\n\n            return site.read('core_enrol_get_users_courses', data, preSets);\n        });\n    }\n\n    /**\n     * Get cache key for get user courses WS call.\n     *\n     * @return {string} Cache key.\n     */\n    protected getUserCoursesCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'usercourses';\n    }\n\n    /**\n     * Invalidates get categories WS call.\n     *\n     * @param {number} categoryId Category ID to get.\n     * @param {boolean} [addSubcategories] If it should add subcategories to the list.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateCategories(categoryId: number, addSubcategories?: boolean, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCategoriesCacheKey(categoryId, addSubcategories));\n        });\n    }\n\n    /**\n     * Invalidates get course WS call.\n     *\n     * @param {number} id Course ID.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateCourse(id: number, siteId?: string): Promise<any> {\n        return this.invalidateCourses([id], siteId);\n    }\n\n    /**\n     * Invalidates get course enrolment methods WS call.\n     *\n     * @param {number} id Course ID.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateCourseEnrolmentMethods(id: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCourseEnrolmentMethodsCacheKey(id));\n        });\n    }\n\n    /**\n     * Invalidates get course guest enrolment info WS call.\n     *\n     * @param {number} instanceId Guest instance ID.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateCourseGuestEnrolmentInfo(instanceId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCourseGuestEnrolmentInfoCacheKey(instanceId));\n        });\n    }\n\n    /**\n     * Invalidates the navigation and administration options for the given courses.\n     *\n     * @param {number[]} courseIds IDs of courses to get.\n     * @param {string} [siteId] Site ID to invalidate. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateCoursesAdminAndNavOptions(courseIds: number[], siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.getCourseIdsForAdminAndNavOptions(courseIds, siteId).then((ids) => {\n            const promises = [];\n\n            promises.push(this.invalidateUserAdministrationOptionsForCourses(ids, siteId));\n            promises.push(this.invalidateUserNavigationOptionsForCourses(ids, siteId));\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Invalidates get courses WS call.\n     *\n     * @param {number[]} ids Courses IDs.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateCourses(ids: number[], siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCoursesCacheKey(ids));\n        });\n    }\n\n    /**\n     * Invalidates get courses by field WS call.\n     *\n     * @param {string} [field] See getCoursesByField for info.\n     * @param {any} [value] The value to match.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateCoursesByField(field?: string, value?: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCoursesByFieldCacheKey(field, value));\n        });\n    }\n\n    /**\n     * Invalidates all user administration options.\n     *\n     * @param {string} [siteId] Site ID to invalidate. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateUserAdministrationOptions(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKeyStartingWith(this.getUserAdministrationOptionsCommonCacheKey());\n        });\n    }\n\n    /**\n     * Invalidates user administration options for certain courses.\n     *\n     * @param {number[]} courseIds IDs of courses.\n     * @param {string} [siteId] Site ID to invalidate. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateUserAdministrationOptionsForCourses(courseIds: number[], siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getUserAdministrationOptionsCacheKey(courseIds));\n        });\n    }\n\n    /**\n     * Invalidates get user courses WS call.\n     *\n     * @param {string} [siteId] Site ID to invalidate. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateUserCourses(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getUserCoursesCacheKey());\n        });\n    }\n\n    /**\n     * Invalidates all user navigation options.\n     *\n     * @param {string} [siteId] Site ID to invalidate. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateUserNavigationOptions(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKeyStartingWith(this.getUserNavigationOptionsCommonCacheKey());\n        });\n    }\n\n    /**\n     * Invalidates user navigation options for certain courses.\n     *\n     * @param {number[]} courseIds IDs of courses.\n     * @param {string} [siteId] Site ID to invalidate. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateUserNavigationOptionsForCourses(courseIds: number[], siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getUserNavigationOptionsCacheKey(courseIds));\n        });\n    }\n\n    /**\n     * Check if WS to retrieve guest enrolment data is available.\n     *\n     * @return {boolean} Whether guest WS is available.\n     */\n    isGuestWSAvailable(): boolean {\n        const currentSite = this.sitesProvider.getCurrentSite();\n\n        return currentSite && currentSite.wsAvailable('enrol_guest_get_instance_info');\n    }\n\n    /**\n     * Search courses.\n     *\n     * @param {string} text Text to search.\n     * @param {number} [page=0] Page to get.\n     * @param {number} [perPage] Number of courses per page. Defaults to CoreCoursesProvider.SEARCH_PER_PAGE.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<{total: number, courses: any[]}>} Promise resolved with the courses and the total of matches.\n     */\n    search(text: string, page: number = 0, perPage?: number, siteId?: string): Promise<{ total: number, courses: any[] }> {\n        perPage = perPage || CoreCoursesProvider.SEARCH_PER_PAGE;\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    criterianame: 'search',\n                    criteriavalue: text,\n                    page: page,\n                    perpage: perPage\n                },\n                preSets = {\n                    getFromCache: false\n                };\n\n            return site.read('core_course_search_courses', params, preSets).then((response) => {\n                return { total: response.total, courses: response.courses };\n            });\n        });\n    }\n\n    /**\n     * Self enrol current user in a certain course.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [password] Password to use.\n     * @param {number} [instanceId] Enrol instance ID.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved if the user is enrolled. If the password is invalid, the promise is rejected\n     *                        with an object with code = CoreCoursesProvider.ENROL_INVALID_KEY.\n     */\n    selfEnrol(courseId: number, password: string = '', instanceId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n\n            const params: any = {\n                    courseid: courseId,\n                    password: password\n                };\n\n            if (instanceId) {\n                params.instanceid = instanceId;\n            }\n\n            return site.write('enrol_self_enrol_user', params).then((response): any => {\n                if (response) {\n                    if (response.status) {\n                        return true;\n                    } else if (response.warnings && response.warnings.length) {\n                        let message;\n                        response.warnings.forEach((warning) => {\n                            // Invalid password warnings.\n                            if (warning.warningcode == '2' || warning.warningcode == '3' || warning.warningcode == '4') {\n                                message = warning.message;\n                            }\n                        });\n\n                        if (message) {\n                            return Promise.reject({ code: CoreCoursesProvider.ENROL_INVALID_KEY, message: message });\n                        } else {\n                            return Promise.reject(response.warnings[0]);\n                        }\n                    }\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/providers/courses.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Network } from '@ionic-native/network';\nimport { CoreAppProvider } from './app';\nimport { CoreEventsProvider } from './events';\nimport { CoreFileProvider } from './file';\nimport { CoreInitDelegate } from './init';\nimport { CoreLoggerProvider } from './logger';\nimport { CorePluginFileDelegate } from './plugin-file-delegate';\nimport { CoreSitesProvider } from './sites';\nimport { CoreWSProvider } from './ws';\nimport { CoreMimetypeUtilsProvider } from './utils/mimetype';\nimport { CoreTextUtilsProvider } from './utils/text';\nimport { CoreTimeUtilsProvider } from './utils/time';\nimport { CoreUrlUtilsProvider } from './utils/url';\nimport { CoreUtilsProvider } from './utils/utils';\nimport { SQLiteDB } from '@classes/sqlitedb';\nimport { CoreConstants } from '@core/constants';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n/**\n * Entry from filepool.\n */\nexport interface CoreFilepoolFileEntry {\n    /**\n     * The fileId to identify the file.\n     * @type {string}\n     */\n    fileId?: string;\n\n    /**\n     * File's URL.\n     * @type {string}\n     */\n    url?: string;\n\n    /**\n     * File's revision.\n     * @type {number}\n     */\n    revision?: number;\n\n    /**\n     * File's timemodified.\n     * @type {number}\n     */\n    timemodified?: number;\n\n    /**\n     * 1 if file is stale (needs to be updated), 0 otherwise.\n     * @type {number}\n     */\n    stale?: number;\n\n    /**\n     * Timestamp when this file was downloaded.\n     * @type {number}\n     */\n    downloadTime?: number;\n\n    /**\n     * 1 if it's a external file (from an external repository), 0 otherwise.\n     * @type {number}\n     */\n    isexternalfile?: number;\n\n    /**\n     * Type of the repository this file belongs to.\n     * @type {string}\n     */\n    repositorytype?: string;\n\n    /**\n     * File's path.\n     * @type {string}\n     */\n    path?: string;\n\n    /**\n     * File's extension.\n     * @type {string}\n     */\n    extension?: string;\n}\n\n/**\n * Entry from the file's queue.\n */\nexport interface CoreFilepoolQueueEntry {\n    /**\n     * The site the file belongs to.\n     * @type {string}\n     */\n    siteId?: string;\n\n    /**\n     * The fileId to identify the file.\n     * @type {string}\n     */\n    fileId?: string;\n\n    /**\n     * Timestamp when the file was added to the queue.\n     * @type {number}\n     */\n    added?: number;\n\n    /**\n     * The priority of the file.\n     * @type {number}\n     */\n    priority?: number;\n\n    /**\n     * File's URL.\n     * @type {string}\n     */\n    url?: string;\n\n    /**\n     * File's revision.\n     * @type {number}\n     */\n    revision?: number;\n\n    /**\n     * File's timemodified.\n     * @type {number}\n     */\n    timemodified?: number;\n\n    /**\n     * 1 if it's a external file (from an external repository), 0 otherwise.\n     * @type {number}\n     */\n    isexternalfile?: number;\n\n    /**\n     * Type of the repository this file belongs to.\n     * @type {string}\n     */\n    repositorytype?: string;\n\n    /**\n     * File's path.\n     * @type {string}\n     */\n    path?: string;\n\n    /**\n     * File links (to link the file to components and componentIds).\n     * @type {any[]}\n     */\n    links?: any[];\n}\n\n/**\n * Entry from packages table.\n */\nexport interface CoreFilepoolPackageEntry {\n    /**\n     * Package id.\n     * @type {string}\n     */\n    id?: string;\n\n    /**\n     * The component to link the files to.\n     * @type {string}\n     */\n    component?: string;\n\n    /**\n     * An ID to use in conjunction with the component.\n     * @type {string|number}\n     */\n    componentId?: string | number;\n\n    /**\n     * Package status.\n     * @type {string}\n     */\n    status?: string;\n\n    /**\n     * Package previous status.\n     * @type {string}\n     */\n    previous?: string;\n\n    /**\n     * Timestamp when this package was updated.\n     * @type {number}\n     */\n    updated?: number;\n\n    /**\n     * Timestamp when this package was downloaded.\n     * @type {number}\n     */\n    downloadTime?: number;\n\n    /**\n     * Previous download time.\n     * @type {number}\n     */\n    previousDownloadTime?: number;\n\n    /**\n     * Extra data stored by the package.\n     * @type {string}\n     */\n    extra?: string;\n}\n\n/*\n * Factory for handling downloading files and retrieve downloaded files.\n *\n * @description\n * This factory is responsible for handling downloading files.\n *\n * The two main goals of this is to keep the content available offline, and improve the user experience by caching\n * the content locally.\n */\n@Injectable()\nexport class CoreFilepoolProvider {\n    // Constants.\n    protected QUEUE_PROCESS_INTERVAL = 0;\n    protected FOLDER = 'filepool';\n    protected WIFI_DOWNLOAD_THRESHOLD = 20971520; // 20MB.\n    protected DOWNLOAD_THRESHOLD = 2097152; // 2MB.\n    protected QUEUE_RUNNING = 'mmFilepool:QUEUE_RUNNING';\n    protected QUEUE_PAUSED = 'mmFilepool:QUEUE_PAUSED';\n    protected ERR_QUEUE_IS_EMPTY = 'mmFilepoolError:ERR_QUEUE_IS_EMPTY';\n    protected ERR_FS_OR_NETWORK_UNAVAILABLE = 'mmFilepoolError:ERR_FS_OR_NETWORK_UNAVAILABLE';\n    protected ERR_QUEUE_ON_PAUSE = 'mmFilepoolError:ERR_QUEUE_ON_PAUSE';\n\n    // Variables for database.\n    protected QUEUE_TABLE = 'filepool_files_queue'; // Queue of files to download.\n    protected FILES_TABLE = 'filepool_files'; // Downloaded files.\n    protected LINKS_TABLE = 'filepool_files_links'; // Links between downloaded files and components.\n    protected PACKAGES_TABLE = 'filepool_packages'; // Downloaded packages (sets of files).\n    protected appTablesSchema = [\n        {\n            name: this.QUEUE_TABLE,\n            columns: [\n                {\n                    name: 'siteId',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'fileId',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'added',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'priority',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'url',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'revision',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'timemodified',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'isexternalfile',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'repositorytype',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'path',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'links',\n                    type: 'TEXT'\n                }\n            ],\n            primaryKeys: ['siteId', 'fileId']\n        }\n    ];\n    protected sitesTablesSchema = [\n        {\n            name: this.FILES_TABLE,\n            columns: [\n                {\n                    name: 'fileId',\n                    type: 'TEXT',\n                    primaryKey: true\n                },\n                {\n                    name: 'url',\n                    type: 'TEXT',\n                    notNull: true\n                },\n                {\n                    name: 'revision',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'timemodified',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'stale',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'downloadTime',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'isexternalfile',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'repositorytype',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'path',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'extension',\n                    type: 'TEXT'\n                }\n            ]\n        },\n        {\n            name: this.LINKS_TABLE,\n            columns: [\n                {\n                    name: 'fileId',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'component',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'componentId',\n                    type: 'TEXT'\n                }\n            ],\n            primaryKeys: ['fileId', 'component', 'componentId']\n        },\n        {\n            name: this.PACKAGES_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'TEXT',\n                    primaryKey: true\n                },\n                {\n                    name: 'component',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'componentId',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'status',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'previous',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'updated',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'downloadTime',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'previousDownloadTime',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'extra',\n                    type: 'TEXT'\n                }\n            ]\n        },\n    ];\n\n    protected logger;\n    protected appDB: SQLiteDB;\n    protected tokenRegex = new RegExp('(\\\\?|&)token=([A-Za-z0-9]+)');\n    protected queueState: string;\n    protected urlAttributes = [\n        this.tokenRegex,\n        new RegExp('(\\\\?|&)forcedownload=[0-1]'),\n        new RegExp('(\\\\?|&)preview=[A-Za-z0-9]+'),\n        new RegExp('(\\\\?|&)offline=[0-1]', 'g')\n    ];\n    protected queueDeferreds = {}; // To handle file downloads using the queue.\n    protected sizeCache = {}; // A \"cache\" to store file sizes to prevent performing too many HEAD requests.\n    // Variables to prevent downloading packages/files twice at the same time.\n    protected packagesPromises = {};\n    protected filePromises: { [s: string]: { [s: string]: Promise<any> } } = {};\n\n    constructor(logger: CoreLoggerProvider, private appProvider: CoreAppProvider, private fileProvider: CoreFileProvider,\n            private sitesProvider: CoreSitesProvider, private wsProvider: CoreWSProvider, private textUtils: CoreTextUtilsProvider,\n            private utils: CoreUtilsProvider, private mimeUtils: CoreMimetypeUtilsProvider, private urlUtils: CoreUrlUtilsProvider,\n            private timeUtils: CoreTimeUtilsProvider, private eventsProvider: CoreEventsProvider, initDelegate: CoreInitDelegate,\n            network: Network, private pluginFileDelegate: CorePluginFileDelegate) {\n        this.logger = logger.getInstance('CoreFilepoolProvider');\n\n        this.appDB = this.appProvider.getDB();\n        this.appDB.createTablesFromSchema(this.appTablesSchema);\n\n        this.sitesProvider.createTablesFromSchema(this.sitesTablesSchema);\n\n        initDelegate.ready().then(() => {\n            // Waiting for the app to be ready to start processing the queue.\n            this.checkQueueProcessing();\n\n            // Start queue when device goes online.\n            network.onConnect().subscribe(() => {\n                this.checkQueueProcessing();\n            });\n        });\n    }\n\n    /**\n     * Link a file with a component.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<any>} Promise resolved on success.\n     */\n    protected addFileLink(siteId: string, fileId: string, component: string, componentId?: string | number): Promise<any> {\n        if (!component) {\n            return Promise.reject(null);\n        }\n\n        componentId = this.fixComponentId(componentId);\n\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            const newEntry = {\n                fileId: fileId,\n                component: component,\n                componentId: componentId || ''\n            };\n\n            return db.insertOrUpdateRecord(this.LINKS_TABLE, newEntry, { fileId: fileId });\n        });\n    }\n\n    /**\n     * Link a file with a component by URL.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file Url.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<any>} Promise resolved on success.\n     * @description\n     * Use this method to create a link between a URL and a component. You usually do not need to call this manually since\n     * downloading a file automatically does this. Note that this method does not check if the file exists in the pool.\n     */\n    addFileLinkByUrl(siteId: string, fileUrl: string, component: string, componentId?: string | number): Promise<any> {\n        return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n            const fileId = this.getFileIdByUrl(fileUrl);\n\n            return this.addFileLink(siteId, fileId, component, componentId);\n        });\n    }\n\n    /**\n     * Link a file with several components.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @param {any[]} links Array of objects containing the component and optionally componentId.\n     * @return {Promise<any>} Promise resolved on success.\n     */\n    protected addFileLinks(siteId: string, fileId: string, links: any[]): Promise<any> {\n        const promises = [];\n        links.forEach((link) => {\n            promises.push(this.addFileLink(siteId, fileId, link.component, link.componentId));\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Add files to queue using a URL.\n     *\n     * @param {string} siteId The site ID.\n     * @param {any[]} files Array of files to add.\n     * @param {string} [component] The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component (optional).\n     * @return {Promise<any>} Resolved on success.\n     */\n    addFilesToQueue(siteId: string, files: any[], component?: string, componentId?: string | number): Promise<any> {\n        return this.downloadOrPrefetchFiles(siteId, files, true, false, component, componentId);\n    }\n\n    /**\n     * Add a file to the pool.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @param {any} data Additional information to store about the file (timemodified, url, ...). See FILES_TABLE schema.\n     * @return {Promise<any>} Promise resolved on success.\n     */\n    protected addFileToPool(siteId: string, fileId: string, data: any): Promise<any> {\n        const values = Object.assign({}, data);\n        values.fileId = fileId;\n\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return db.insertOrUpdateRecord(this.FILES_TABLE, values, { fileId: fileId });\n        });\n    }\n\n    /**\n     * Add a file to the queue.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @param {string} url The absolute URL to the file.\n     * @param {number} priority The priority this file should get in the queue (range 0-999).\n     * @param {number} revision The revision of the file.\n     * @param {number} timemodified The time this file was modified. Can be used to check file state.\n     * @param {string} [filePath] Filepath to download the file to. If not defined, download to the filepool folder.\n     * @param {any} options Extra options (isexternalfile, repositorytype).\n     * @param {any} [link] The link to add for the file.\n     * @return {Promise<any>} Promise resolved when the file is downloaded.\n     */\n    protected addToQueue(siteId: string, fileId: string, url: string, priority: number, revision: number, timemodified: number,\n            filePath: string, onProgress?: (event: any) => any, options: any = {}, link?: any): Promise<any> {\n        this.logger.debug(`Adding ${fileId} to the queue`);\n\n        return this.appDB.insertRecord(this.QUEUE_TABLE, {\n            siteId: siteId,\n            fileId: fileId,\n            url: url,\n            priority: priority,\n            revision: revision,\n            timemodified: timemodified,\n            path: filePath,\n            isexternalfile: options.isexternalfile ? 1 : 0,\n            repositorytype: options.repositorytype,\n            links: JSON.stringify(link ? [link] : []),\n            added: Date.now()\n        }).then(() => {\n            // Check if the queue is running.\n            this.checkQueueProcessing();\n            this.notifyFileDownloading(siteId, fileId);\n\n            return this.getQueuePromise(siteId, fileId, true, onProgress);\n        });\n    }\n\n    /**\n     * Add an entry to queue using a URL.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The absolute URL to the file.\n     * @param {string} [component] The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component (optional).\n     * @param {number} [timemodified=0] The time this file was modified. Can be used to check file state.\n     * @param {string} [filePath] Filepath to download the file to. If not defined, download to the filepool folder.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @param {number} [priority=0] The priority this file should get in the queue (range 0-999).\n     * @param {any} [options] Extra options (isexternalfile, repositorytype).\n     * @return {Promise} Resolved on success.\n     */\n    addToQueueByUrl(siteId: string, fileUrl: string, component?: string, componentId?: string | number, timemodified: number = 0,\n            filePath?: string, onProgress?: (event: any) => any, priority: number = 0, options: any = {}): Promise<any> {\n        let fileId,\n            link,\n            revision,\n            queueDeferred;\n\n        if (!this.fileProvider.isAvailable()) {\n            return Promise.reject(null);\n        }\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (!site.canDownloadFiles()) {\n                return Promise.reject(null);\n            }\n\n            return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n                const primaryKey = { siteId: siteId, fileId: fileId };\n\n                revision = this.getRevisionFromUrl(fileUrl);\n                fileId = this.getFileIdByUrl(fileUrl);\n\n                // Set up the component.\n                if (typeof component != 'undefined') {\n                    link = {\n                        component: component,\n                        componentId: this.fixComponentId(componentId)\n                    };\n                }\n\n                // Retrieve the queue deferred now if it exists.\n                // This is to prevent errors if file is removed from queue while we're checking if the file is in queue.\n                queueDeferred = this.getQueueDeferred(siteId, fileId, false, onProgress);\n\n                return this.hasFileInQueue(siteId, fileId).then((entry: CoreFilepoolQueueEntry) => {\n                    const newData: any = {};\n                    let foundLink = false;\n\n                    if (entry) {\n                        // We already have the file in queue, we update the priority and links.\n                        if (entry.priority < priority) {\n                            newData.priority = priority;\n                        }\n                        if (revision && entry.revision !== revision) {\n                            newData.revision = revision;\n                        }\n                        if (timemodified && entry.timemodified !== timemodified) {\n                            newData.timemodified = timemodified;\n                        }\n                        if (filePath && entry.path !== filePath) {\n                            newData.path = filePath;\n                        }\n                        if (entry.isexternalfile !== options.isexternalfile) {\n                            newData.isexternalfile = options.isexternalfile;\n                        }\n                        if (entry.repositorytype !== options.repositorytype) {\n                            newData.repositorytype = options.repositorytype;\n                        }\n\n                        if (link) {\n                            // We need to add the new link if it does not exist yet.\n                            if (entry.links && entry.links.length) {\n                                for (const i in entry.links) {\n                                    const fileLink = entry.links[i];\n                                    if (fileLink.component == link.component && fileLink.componentId == link.componentId) {\n                                        foundLink = true;\n                                        break;\n                                    }\n                                }\n                            }\n\n                            if (!foundLink) {\n                                newData.links = entry.links || [];\n                                newData.links.push(link);\n                                newData.links = JSON.stringify(entry.links);\n                            }\n                        }\n\n                        if (Object.keys(newData).length) {\n                            // Update only when required.\n                            this.logger.debug(`Updating file ${fileId} which is already in queue`);\n\n                            return this.appDB.updateRecords(this.QUEUE_TABLE, newData, primaryKey).then(() => {\n                                return this.getQueuePromise(siteId, fileId, true, onProgress);\n                            });\n                        }\n\n                        this.logger.debug(`File ${fileId} already in queue and does not require update`);\n                        if (queueDeferred) {\n                            // If we were able to retrieve the queue deferred before, we use that one.\n                            return queueDeferred.promise;\n                        } else {\n                            // Create a new deferred and return its promise.\n                            return this.getQueuePromise(siteId, fileId, true, onProgress);\n                        }\n                    } else {\n                        return this.addToQueue(\n                            siteId, fileId, fileUrl, priority, revision, timemodified, filePath, onProgress, options, link);\n                    }\n                }, () => {\n                    // Unsure why we could not get the record, let's add to the queue anyway.\n                    return this.addToQueue(\n                        siteId, fileId, fileUrl, priority, revision, timemodified, filePath, onProgress, options, link);\n                });\n            });\n        });\n    }\n\n    /**\n     * Adds a file to the queue if the size is allowed to be downloaded.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The absolute URL to the file.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {number} [timemodified=0] The time this file was modified.\n     * @param {boolean} [checkSize=true] True if we shouldn't download files if their size is big, false otherwise.\n     * @param {boolean} [downloadUnknown] True to download file in WiFi if their size is unknown, false otherwise.\n     *                                    Ignored if checkSize=false.\n     * @param {any} [options] Extra options (isexternalfile, repositorytype).\n     * @return {Promise<any>} Promise resolved when the file is downloaded.\n     */\n    protected addToQueueIfNeeded(siteId: string, fileUrl: string, component: string, componentId?: string | number,\n            timemodified: number = 0, checkSize: boolean = true, downloadUnknown?: boolean, options: any = {}): Promise<any> {\n        let promise;\n\n        if (checkSize) {\n            if (typeof this.sizeCache[fileUrl] != 'undefined') {\n                promise = Promise.resolve(this.sizeCache[fileUrl]);\n            } else {\n                if (!this.appProvider.isOnline()) {\n                    // Cannot check size in offline, stop.\n                    return Promise.reject(null);\n                }\n\n                promise = this.wsProvider.getRemoteFileSize(fileUrl);\n            }\n\n            // Calculate the size of the file.\n            return promise.then((size) => {\n                const isWifi = !this.appProvider.isNetworkAccessLimited(),\n                    sizeUnknown = size <= 0;\n\n                if (!sizeUnknown) {\n                    // Store the size in the cache.\n                    this.sizeCache[fileUrl] = size;\n                }\n\n                // Check if the file should be downloaded.\n                if (sizeUnknown) {\n                    if (downloadUnknown && isWifi) {\n                        return this.addToQueueByUrl(\n                            siteId, fileUrl, component, componentId, timemodified, undefined, undefined, 0, options);\n                    }\n                } else if (size <= this.DOWNLOAD_THRESHOLD || (isWifi && size <= this.WIFI_DOWNLOAD_THRESHOLD)) {\n                    return this.addToQueueByUrl(\n                        siteId, fileUrl, component, componentId, timemodified, undefined, undefined, 0, options);\n                }\n            });\n        } else {\n            // No need to check size, just add it to the queue.\n            return this.addToQueueByUrl(siteId, fileUrl, component, componentId, timemodified, undefined, undefined, 0, options);\n        }\n    }\n\n    /**\n     * Check the queue processing.\n     *\n     * @description\n     * In mose cases, this will enable the queue processing if it was paused.\n     * Though, this will disable the queue if we are missing network or if the file system\n     * is not accessible. Also, this will have no effect if the queue is already running.\n     */\n    protected checkQueueProcessing(): void {\n        if (!this.fileProvider.isAvailable() || !this.appProvider.isOnline()) {\n            this.queueState = this.QUEUE_PAUSED;\n\n            return;\n        } else if (this.queueState === this.QUEUE_RUNNING) {\n            return;\n        }\n\n        this.queueState = this.QUEUE_RUNNING;\n        this.processQueue();\n    }\n\n    /**\n     * Clear all packages status in a site.\n     *\n     * @param {string} siteId Site ID.\n     * @return {Promise<any>} Promise resolved when all status are cleared.\n     */\n    clearAllPackagesStatus(siteId: string): Promise<any> {\n        this.logger.debug('Clear all packages status for site ' + siteId);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            // Get all the packages to be able to \"notify\" the change in the status.\n            return site.getDb().getAllRecords(this.PACKAGES_TABLE).then((entries) => {\n                // Delete all the entries.\n                return site.getDb().deleteRecords(this.PACKAGES_TABLE).then(() => {\n                    entries.forEach((entry) => {\n                        // Trigger module status changed, setting it as not downloaded.\n                        this.triggerPackageStatusChanged(siteId, CoreConstants.NOT_DOWNLOADED, entry.component, entry.componentId);\n                    });\n                });\n            });\n        });\n    }\n\n    /**\n     * Clears the filepool. Use it only when all the files from a site are deleted.\n     *\n     * @param  {string} siteId ID of the site to clear.\n     * @return {Promise<any>} Promise resolved when the filepool is cleared.\n     */\n    clearFilepool(siteId: string): Promise<any> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return db.deleteRecords(this.FILES_TABLE);\n        });\n    }\n\n    /**\n     * Returns whether a component has files in the pool.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<void>} Resolved means yes, rejected means no.\n     */\n    componentHasFiles(siteId: string, component: string, componentId?: string | number): Promise<void> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            const conditions = {\n                component: component,\n                componentId: componentId || ''\n            };\n\n            return db.countRecords(this.LINKS_TABLE, conditions).then((count) => {\n                if (count <= 0) {\n                    return Promise.reject(null);\n                }\n            });\n        });\n    }\n\n    /**\n     * Given the current status of a list of packages and the status of one of the packages,\n     * determine the new status for the list of packages. The status of a list of packages is:\n     *     - CoreConstants.NOT_DOWNLOADABLE if there are no downloadable packages.\n     *     - CoreConstants.NOT_DOWNLOADED if at least 1 package has status CoreConstants.NOT_DOWNLOADED.\n     *     - CoreConstants.DOWNLOADED if ALL the downloadable packages have status CoreConstants.DOWNLOADED.\n     *     - CoreConstants.DOWNLOADING if ALL the downloadable packages have status CoreConstants.DOWNLOADING or\n     *                                     CoreConstants.DOWNLOADED, with at least 1 package with CoreConstants.DOWNLOADING.\n     *     - CoreConstants.OUTDATED if ALL the downloadable packages have status CoreConstants.OUTDATED or CoreConstants.DOWNLOADED\n     *                                     or CoreConstants.DOWNLOADING, with at least 1 package with CoreConstants.OUTDATED.\n     *\n     * @param {string} current Current status of the list of packages.\n     * @param {string} packagestatus Status of one of the packages.\n     * @return {string} New status for the list of packages;\n     */\n    determinePackagesStatus(current: string, packageStatus: string): string {\n        if (!current) {\n            current = CoreConstants.NOT_DOWNLOADABLE;\n        }\n\n        if (packageStatus === CoreConstants.NOT_DOWNLOADED) {\n            // If 1 package is not downloaded the status of the whole list will always be not downloaded.\n            return CoreConstants.NOT_DOWNLOADED;\n        } else if (packageStatus === CoreConstants.DOWNLOADED && current === CoreConstants.NOT_DOWNLOADABLE) {\n            // If all packages are downloaded or not downloadable with at least 1 downloaded, status will be downloaded.\n            return CoreConstants.DOWNLOADED;\n        } else if (packageStatus === CoreConstants.DOWNLOADING &&\n            (current === CoreConstants.NOT_DOWNLOADABLE || current === CoreConstants.DOWNLOADED)) {\n            // If all packages are downloading/downloaded/notdownloadable with at least 1 downloading, status will be downloading.\n            return CoreConstants.DOWNLOADING;\n        } else if (packageStatus === CoreConstants.OUTDATED && current !== CoreConstants.NOT_DOWNLOADED) {\n            // If there are no packages notdownloaded and there is at least 1 outdated, status will be outdated.\n            return CoreConstants.OUTDATED;\n        }\n\n        // Status remains the same.\n        return current;\n    }\n\n    /**\n     * Downloads a URL and update or add it to the pool.\n     *\n     * This uses the file system, you should always make sure that it is accessible before calling this method.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file URL.\n     * @param {any} [options] Extra options (revision, timemodified, isexternalfile, repositorytype).\n     * @param {string} [filePath] Filepath to download the file to. If defined, no extension will be added.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @param {CoreFilepoolFileEntry} [poolFileObject] When set, the object will be updated, a new entry will not be created.\n     * @return {Promise<any>} Resolved with internal URL on success, rejected otherwise.\n     */\n    protected downloadForPoolByUrl(siteId: string, fileUrl: string, options: any = {}, filePath?: string,\n        onProgress?: (event: any) => any, poolFileObject?: CoreFilepoolFileEntry): Promise<any> {\n\n        const fileId = this.getFileIdByUrl(fileUrl),\n            extension = this.mimeUtils.guessExtensionFromUrl(fileUrl),\n            addExtension = typeof filePath == 'undefined',\n            pathPromise = filePath ? filePath : this.getFilePath(siteId, fileId, extension);\n\n        return Promise.resolve(pathPromise).then((filePath) => {\n            if (poolFileObject && poolFileObject.fileId !== fileId) {\n                this.logger.error('Invalid object to update passed');\n\n                return Promise.reject(null);\n            }\n\n            const downloadId = this.getFileDownloadId(fileUrl, filePath);\n\n            if (this.filePromises[siteId] && this.filePromises[siteId][downloadId]) {\n                // There's already a download ongoing for this file in this location, return the promise.\n                return this.filePromises[siteId][downloadId];\n            } else if (!this.filePromises[siteId]) {\n                this.filePromises[siteId] = {};\n            }\n\n            this.filePromises[siteId][downloadId] = this.sitesProvider.getSite(siteId).then((site) => {\n                if (!site.canDownloadFiles()) {\n                    return Promise.reject(null);\n                }\n\n                return this.wsProvider.downloadFile(fileUrl, filePath, addExtension, onProgress).then((fileEntry) => {\n                    const data: CoreFilepoolFileEntry = poolFileObject || {};\n\n                    data.downloadTime = Date.now();\n                    data.stale = 0;\n                    data.url = fileUrl;\n                    data.revision = options.revision;\n                    data.timemodified = options.timemodified;\n                    data.isexternalfile = options.isexternalfile ? 1 : 0;\n                    data.repositorytype = options.repositorytype;\n                    data.path = fileEntry.path;\n                    data.extension = fileEntry.extension;\n\n                    return this.addFileToPool(siteId, fileId, data).then(() => {\n                        return fileEntry.toURL();\n                    });\n                });\n            }).finally(() => {\n                // Download finished, delete the promise.\n                delete this.filePromises[siteId][downloadId];\n            });\n\n            return this.filePromises[siteId][downloadId];\n        });\n    }\n\n    /**\n     * Download or prefetch several files into the filepool folder.\n     *\n     * @param {string} siteId The site ID.\n     * @param {any[]} files Array of files to download.\n     * @param {boolean} prefetch True if should prefetch the contents (queue), false if they should be downloaded right now.\n     * @param {boolean} [ignoreStale] True if 'stale' should be ignored. Only if prefetch=false.\n     * @param {string} [component] The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {string} [dirPath] Name of the directory where to store the files (inside filepool dir). If not defined, store\n     *                           the files directly inside the filepool folder.\n     * @return {Promise<any>} Resolved on success.\n     */\n    downloadOrPrefetchFiles(siteId: string, files: any[], prefetch: boolean, ignoreStale?: boolean, component?: string,\n            componentId?: string | number, dirPath?: string): Promise<any> {\n        const promises = [];\n\n        // Download files.\n        files.forEach((file) => {\n            const url = file.url || file.fileurl,\n                timemodified = file.timemodified,\n                options = {\n                    isexternalfile: file.isexternalfile,\n                    repositorytype: file.repositorytype\n                };\n            let path;\n\n            if (dirPath) {\n                // Calculate the path to the file.\n                path = file.filename;\n                if (file.filepath !== '/') {\n                    path = file.filepath.substr(1) + path;\n                }\n                path = this.textUtils.concatenatePaths(dirPath, path);\n            }\n\n            if (prefetch) {\n                promises.push(this.addToQueueByUrl(\n                    siteId, url, component, componentId, timemodified, path, undefined, 0, options));\n            } else {\n                promises.push(this.downloadUrl(\n                    siteId, url, ignoreStale, component, componentId, timemodified, path, undefined, options));\n            }\n        });\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Downloads or prefetches a list of files as a \"package\".\n     *\n     * @param {string} siteId The site ID.\n     * @param {any[]} fileList List of files to download.\n     * @param {boolean} [prefetch] True if should prefetch the contents (queue), false if they should be downloaded right now.\n     * @param {string} [component] The component to link the file to.\n     * @param {string|number} [componentId]  An ID to use in conjunction with the component.\n     * @param {string} [extra] Extra data to store for the package.\n     * @param {string} [dirPath] Name of the directory where to store the files (inside filepool dir). If not defined, store\n     *                           the files directly inside the filepool folder.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {Promise<any>} Promise resolved when the package is downloaded.\n     */\n    protected downloadOrPrefetchPackage(siteId: string, fileList: any[], prefetch?: boolean, component?: string,\n            componentId?: string | number, extra?: string, dirPath?: string, onProgress?: (event: any) => any): Promise<any> {\n\n        const packageId = this.getPackageId(component, componentId);\n        let promise;\n\n        if (this.packagesPromises[siteId] && this.packagesPromises[siteId][packageId]) {\n            // There's already a download ongoing for this package, return the promise.\n            return this.packagesPromises[siteId][packageId];\n        } else if (!this.packagesPromises[siteId]) {\n            this.packagesPromises[siteId] = {};\n        }\n\n        // Set package as downloading.\n        promise = this.storePackageStatus(siteId, CoreConstants.DOWNLOADING, component, componentId).then(() => {\n            const promises = [];\n            let packageLoaded = 0;\n\n            fileList.forEach((file) => {\n                const fileUrl = file.url || file.fileurl,\n                    options = {\n                        isexternalfile: file.isexternalfile,\n                        repositorytype: file.repositorytype\n                    };\n                let path,\n                    promise,\n                    fileLoaded = 0,\n                    onFileProgress;\n\n                if (onProgress) {\n                    // There's a onProgress event, create a function to receive file download progress events.\n                    onFileProgress = (progress: any): void => {\n                        if (progress && progress.loaded) {\n                            // Add the new size loaded to the package loaded.\n                            packageLoaded = packageLoaded + (progress.loaded - fileLoaded);\n                            fileLoaded = progress.loaded;\n                            onProgress({\n                                packageDownload: true,\n                                loaded: packageLoaded,\n                                fileProgress: progress\n                            });\n                        }\n                    };\n                }\n\n                if (dirPath) {\n                    // Calculate the path to the file.\n                    path = file.filename;\n                    if (file.filepath !== '/') {\n                        path = file.filepath.substr(1) + path;\n                    }\n                    path = this.textUtils.concatenatePaths(dirPath, path);\n                }\n\n                if (prefetch) {\n                    promise = this.addToQueueByUrl(\n                        siteId, fileUrl, component, componentId, file.timemodified, path, undefined, 0, options);\n                } else {\n                    promise = this.downloadUrl(\n                        siteId, fileUrl, false, component, componentId, file.timemodified, onFileProgress, path, options);\n                }\n\n                // Using undefined for success & fail will pass the success/failure to the parent promise.\n                promises.push(promise);\n            });\n\n            return Promise.all(promises).then(() => {\n                // Success prefetching, store package as downloaded.\n                return this.storePackageStatus(siteId, CoreConstants.DOWNLOADED, component, componentId, extra);\n            }).catch(() => {\n                // Error downloading, go back to previous status and reject the promise.\n                return this.setPackagePreviousStatus(siteId, component, componentId).then(() => {\n                    return Promise.reject(null);\n                });\n            });\n\n        }).finally(() => {\n            // Download finished, delete the promise.\n            delete this.packagesPromises[siteId][packageId];\n        });\n\n        this.packagesPromises[siteId][packageId] = promise;\n\n        return promise;\n    }\n\n    /**\n     * Downloads a list of files.\n     *\n     * @param {string} siteId The site ID.\n     * @param {any[]} fileList List of files to download.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to identify the download.\n     * @param {string} [extra] Extra data to store for the package.\n     * @param {string} [dirPath] Name of the directory where to store the files (inside filepool dir). If not defined, store\n     *                           the files directly inside the filepool folder.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {Promise<any>}  Promise resolved when all files are downloaded.\n     */\n    downloadPackage(siteId: string, fileList: any[], component: string, componentId?: string | number, extra?: string,\n            dirPath?: string, onProgress?: (event: any) => any): Promise<any> {\n        return this.downloadOrPrefetchPackage(siteId, fileList, false, component, componentId, extra, dirPath, onProgress);\n    }\n\n    /**\n     * Downloads a file on the spot.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file URL.\n     * @param {boolean} [ignoreStale] Whether 'stale' should be ignored.\n     * @param {string} [component] The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {number} [timemodified=0] The time this file was modified. Can be used to check file state.\n     * @param {string} [filePath] Filepath to download the file to. If not defined, download to the filepool folder.\n     * @param {any} [options] Extra options (isexternalfile, repositorytype).\n     * @return {Promise<any>} Resolved with internal URL on success, rejected otherwise.\n     * @description\n     * Downloads a file on the spot.\n     *\n     * This will also take care of adding the file to the pool if it's missing. However, please note that this will\n     * not force a file to be re-downloaded if it is already part of the pool. You should mark a file as stale using\n     * invalidateFileByUrl to trigger a download.\n     */\n    downloadUrl(siteId: string, fileUrl: string, ignoreStale?: boolean, component?: string, componentId?: string | number,\n            timemodified: number = 0, onProgress?: (event: any) => any, filePath?: string, options: any = {}): Promise<any> {\n        let fileId,\n            promise;\n\n        if (this.fileProvider.isAvailable()) {\n            return this.fixPluginfileURL(siteId, fileUrl).then((fixedUrl) => {\n                fileUrl = fixedUrl;\n\n                options = Object.assign({}, options); // Create a copy to prevent modifying the original object.\n                options.timemodified = timemodified || 0;\n                options.revision = this.getRevisionFromUrl(fileUrl);\n                fileId = this.getFileIdByUrl(fileUrl);\n\n                return this.hasFileInPool(siteId, fileId).then((fileObject) => {\n\n                    if (typeof fileObject === 'undefined') {\n                        // We do not have the file, download and add to pool.\n                        this.notifyFileDownloading(siteId, fileId);\n\n                        return this.downloadForPoolByUrl(siteId, fileUrl, options, filePath, onProgress);\n\n                    } else if (this.isFileOutdated(fileObject, options.revision, options.timemodified) &&\n                        this.appProvider.isOnline() && !ignoreStale) {\n                        // The file is outdated, force the download and update it.\n                        this.notifyFileDownloading(siteId, fileId);\n\n                        return this.downloadForPoolByUrl(siteId, fileUrl, options, filePath, onProgress, fileObject);\n                    }\n\n                    // Everything is fine, return the file on disk.\n                    if (filePath) {\n                        promise = this.getInternalUrlByPath(filePath);\n                    } else {\n                        promise = this.getInternalUrlById(siteId, fileId);\n                    }\n\n                    return promise.then((response) => {\n                        return response;\n                    }, () => {\n                        // The file was not found in the pool, weird.\n                        this.notifyFileDownloading(siteId, fileId);\n\n                        return this.downloadForPoolByUrl(siteId, fileUrl, options, filePath, onProgress, fileObject);\n                    });\n\n                }, () => {\n                    // The file is not in the pool just yet.\n                    this.notifyFileDownloading(siteId, fileId);\n\n                    return this.downloadForPoolByUrl(siteId, fileUrl, options, filePath, onProgress);\n                }).then((response) => {\n                    if (typeof component != 'undefined') {\n                        this.addFileLink(siteId, fileId, component, componentId).catch(() => {\n                            // Ignore errors.\n                        });\n                    }\n                    this.notifyFileDownloaded(siteId, fileId);\n\n                    return response;\n                }, (err) => {\n                    this.notifyFileDownloadError(siteId, fileId);\n\n                    return Promise.reject(err);\n                });\n            });\n        } else {\n            return Promise.reject(null);\n        }\n    }\n\n    /**\n     * Fill Missing Extension In the File Object if needed.\n     * This is to migrate from old versions.\n     *\n     * @param {CoreFilepoolFileEntry} fileObject File object to be migrated.\n     * @param {string} siteId SiteID to get migrated.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fillExtensionInFile(entry: CoreFilepoolFileEntry, siteId: string): Promise<any> {\n        if (typeof entry.extension != 'undefined') {\n            // Already filled.\n            return Promise.resolve();\n        }\n\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            const extension = this.mimeUtils.getFileExtension(entry.path);\n            if (!extension) {\n                // Files does not have extension. Invalidate file (stale = true).\n                // Minor problem: file will remain in the filesystem once downloaded again.\n                this.logger.debug('Staled file with no extension ' + entry.fileId);\n\n                return db.updateRecords(this.FILES_TABLE, { stale: 1 }, { fileId: entry.fileId });\n            }\n\n            // File has extension. Save extension, and add extension to path.\n            const fileId = entry.fileId;\n            entry.fileId = this.mimeUtils.removeExtension(fileId);\n            entry.extension = extension;\n\n            return db.updateRecords(this.FILES_TABLE, entry, { fileId: fileId }).then(() => {\n                if (entry.fileId == fileId) {\n                    // File ID hasn't changed, we're done.\n                    this.logger.debug('Removed extesion ' + extension + ' from file ' + entry.fileId);\n\n                    return;\n                }\n\n                // Now update the links.\n                return db.updateRecords(this.LINKS_TABLE, { fileId: entry.fileId }, { fileId: fileId });\n            });\n        });\n    }\n\n    /**\n     * Fill Missing Extension In Files, used to migrate from previous file handling.\n     * Reserved for core use, please do not call.\n     *\n     * @param {string} siteId SiteID to get migrated\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    fillMissingExtensionInFiles(siteId: string): Promise<any> {\n        this.logger.debug('Fill missing extensions in files of ' + siteId);\n\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return db.getAllRecords(this.FILES_TABLE).then((entries) => {\n                const promises = [];\n                entries.forEach((entry) => {\n                    promises.push(this.fillExtensionInFile(entry, siteId));\n                });\n\n                return Promise.all(promises);\n            });\n        });\n    }\n\n    /**\n     * Fix a component ID to always be a Number if possible.\n     *\n     * @param {string|number} componentId The component ID.\n     * @return {string|number} The normalised component ID. -1 when undefined was passed.\n     */\n    protected fixComponentId(componentId: string | number): string | number {\n        if (typeof componentId == 'number') {\n            return componentId;\n        }\n\n        // Try to convert it to a number.\n        const id = parseInt(componentId, 10);\n        if (isNaN(id)) {\n            // Not a number.\n            if (typeof componentId == 'undefined' || componentId === null) {\n                return -1;\n            } else {\n                return componentId;\n            }\n        }\n\n        return id;\n    }\n\n    /**\n     * Add the wstoken url and points to the correct script.\n     *\n     * @param {string} siteId  The site ID.\n     * @param {string} fileUrl The file URL.\n     * @return {Promise}       Resolved with fixed URL on success, rejected otherwise.\n     */\n    protected fixPluginfileURL(siteId: string, fileUrl: string): Promise<string> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.fixPluginfileURL(fileUrl);\n        });\n    }\n\n    /**\n     * Convenience function to get component files.\n     *\n     * @param {SQLiteDB} db Site's DB.\n     * @param {string} component The component to get.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<any[]>} Promise resolved with the files.\n     */\n    protected getComponentFiles(db: SQLiteDB, component: string, componentId?: string | number): Promise<any[]> {\n        const conditions = {\n            component: component,\n            componentId: componentId || ''\n        };\n\n        return db.getRecords(this.LINKS_TABLE, conditions);\n    }\n\n    /**\n     * Returns the local URL of a directory.\n     *\n     * @param {string} siteId  The site ID.\n     * @param {string} fileUrl The file URL.\n     * @return {Promise}       Resolved with the URL. Rejected otherwise.\n     */\n    getDirectoryUrlByUrl(siteId: string, fileUrl: string): Promise<string> {\n        if (this.fileProvider.isAvailable()) {\n            return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n                const fileId = this.getFileIdByUrl(fileUrl),\n                    filePath = <string> this.getFilePath(siteId, fileId, ''); // No extension, the function will return a string.\n\n                return this.fileProvider.getDir(filePath).then((dirEntry) => {\n                    return dirEntry.toURL();\n                });\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Get the ID of a file download. Used to keep track of filePromises.\n     *\n     * @param {string} fileUrl  The file URL.\n     * @param {string} filePath The file destination path.\n     * @return {string}         File download ID.\n     */\n    protected getFileDownloadId(fileUrl: string, filePath: string): string {\n        return <string> Md5.hashAsciiStr(fileUrl + '###' + filePath);\n    }\n\n    /**\n     * Get the name of the event used to notify download events (CoreEventsProvider).\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @return {string} Event name.\n     */\n    protected getFileEventName(siteId: string, fileId: string): string {\n        return 'mmFilepoolFile:' + siteId + ':' + fileId;\n    }\n\n    /**\n     * Get the name of the event used to notify download events (CoreEventsProvider).\n     *\n     * @param {string} siteId  The site ID.\n     * @param {string} fileUrl The absolute URL to the file.\n     * @return {Promise}       Promise resolved with event name.\n     */\n    getFileEventNameByUrl(siteId: string, fileUrl: string): Promise<string> {\n        return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n            const fileId = this.getFileIdByUrl(fileUrl);\n\n            return this.getFileEventName(siteId, fileId);\n        });\n    }\n\n    /**\n     * Creates a unique ID based on a URL.\n     *\n     * This has a minimal handling of pluginfiles in order to generate a clean file ID which will not change if\n     * pointing to the same pluginfile URL even if the token or extra attributes have changed.\n     *\n     * @param {string} fileUrl The absolute URL to the file.\n     * @return {string} The file ID.\n     */\n    protected getFileIdByUrl(fileUrl: string): string {\n        let url = this.removeRevisionFromUrl(fileUrl),\n            filename;\n\n        // Decode URL.\n        url = this.textUtils.decodeHTML(this.textUtils.decodeURIComponent(url));\n\n        if (url.indexOf('/webservice/pluginfile') !== -1) {\n            // Remove attributes that do not matter.\n            this.urlAttributes.forEach((regex) => {\n                url = url.replace(regex, '');\n            });\n        }\n\n        // Try to guess the filename the target file should have.\n        // We want to keep the original file name so people can easily identify the files after the download.\n        filename = this.guessFilenameFromUrl(url);\n\n        return filename + '_' + Md5.hashAsciiStr('url:' + url);\n    }\n\n    /**\n     * Get the links of a file.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @return {Promise<any[]>} Promise resolved with the links.\n     */\n    protected getFileLinks(siteId: string, fileId: string): Promise<any[]> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return db.getRecords(this.LINKS_TABLE, { fileId: fileId });\n        });\n    }\n\n    /**\n     * Get the path to a file. This does not check if the file exists or not.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @param {string} [extension] Previously calculated extension. Empty to not add any. Undefined to calculate it.\n     * @return {string|Promise<string>} The path to the file relative to storage root.\n     */\n    protected getFilePath(siteId: string, fileId: string, extension?: string): string | Promise<string> {\n        let path = this.getFilepoolFolderPath(siteId) + '/' + fileId;\n        if (typeof extension == 'undefined') {\n            // We need the extension to be able to open files properly.\n            return this.hasFileInPool(siteId, fileId).then((entry) => {\n                if (entry.extension) {\n                    path += '.' + entry.extension;\n                }\n\n                return path;\n            }).catch(() => {\n                // If file not found, use the path without extension.\n                return path;\n            });\n        } else {\n            if (extension) {\n                path += '.' + extension;\n            }\n\n            return path;\n        }\n    }\n\n    /**\n     * Get the path to a file from its URL. This does not check if the file exists or not.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file URL.\n     * @return {Promise<string>} Promise resolved with the path to the file relative to storage root.\n     */\n    getFilePathByUrl(siteId: string, fileUrl: string): Promise<string> {\n        return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n            const fileId = this.getFileIdByUrl(fileUrl);\n\n            return this.getFilePath(siteId, fileId);\n        });\n    }\n\n    /**\n     * Get site Filepool Folder Path\n     *\n     * @param {string} siteId The site ID.\n     * @return {string} The root path to the filepool of the site.\n     */\n    getFilepoolFolderPath(siteId: string): string {\n        return this.fileProvider.getSiteFolder(siteId) + '/' + this.FOLDER;\n    }\n\n    /**\n     * Get all the matching files from a component. Returns objects containing properties like path, extension and url.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} component The component to get.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<any[]>} Promise resolved with the files on success.\n     */\n    getFilesByComponent(siteId: string, component: string, componentId?: string | number): Promise<any[]> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return this.getComponentFiles(db, component, componentId).then((items) => {\n                const promises = [],\n                    files = [];\n\n                items.forEach((item) => {\n                    promises.push(db.getRecord(this.FILES_TABLE, { fileId: item.fileId }).then((fileEntry) => {\n                        if (!fileEntry) {\n                            return;\n                        }\n\n                        files.push({\n                            url: fileEntry.url,\n                            path: fileEntry.path,\n                            extension: fileEntry.extension,\n                            revision: fileEntry.revision,\n                            timemodified: fileEntry.timemodified\n                        });\n                    }).catch(() => {\n                        // File not found, ignore error.\n                    }));\n                });\n\n                return Promise.all(promises).then(() => {\n                    return files;\n                });\n            });\n        });\n    }\n\n    /**\n     * Get the size of all the files from a component.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} component    The component to get.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<number>} Promise resolved with the size on success.\n     */\n    getFilesSizeByComponent(siteId: string, component: string, componentId?: string | number): Promise<number> {\n        return this.getFilesByComponent(siteId, component, componentId).then((files) => {\n            const promises = [];\n            let size = 0;\n\n            files.forEach((file) => {\n                promises.push(this.fileProvider.getFileSize(file.path).then((fs) => {\n                    size += fs;\n                }).catch(() => {\n                    // Ignore failures, maybe some file was deleted.\n                }));\n            });\n\n            return Promise.all(promises).then(() => {\n                return size;\n            });\n        });\n    }\n\n    /**\n     * Returns the file state: mmCoreDownloaded, mmCoreDownloading, mmCoreNotDownloaded or mmCoreOutdated.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl File URL.\n     * @param {number} [timemodified=0] The time this file was modified.\n     * @param {string} [filePath] Filepath to download the file to. If defined, no extension will be added.\n     * @return {Promise<string>} Promise resolved with the file state.\n     */\n    getFileStateByUrl(siteId: string, fileUrl: string, timemodified: number = 0, filePath?: string): Promise<string> {\n        let fileId,\n            revision;\n\n        return this.fixPluginfileURL(siteId, fileUrl).then((fixedUrl) => {\n            fileUrl = fixedUrl;\n            revision = this.getRevisionFromUrl(fileUrl);\n            fileId = this.getFileIdByUrl(fileUrl);\n\n            // Check if the file is in queue (waiting to be downloaded).\n            return this.hasFileInQueue(siteId, fileId).then(() => {\n                return CoreConstants.DOWNLOADING;\n            }).catch(() => {\n                // Check if the file is being downloaded right now.\n                const extension = this.mimeUtils.guessExtensionFromUrl(fileUrl),\n                    path = filePath ? filePath : this.getFilePath(siteId, fileId, extension);\n\n                return Promise.resolve(path).then((filePath) => {\n                    const downloadId = this.getFileDownloadId(fileUrl, filePath);\n                    if (this.filePromises[siteId] && this.filePromises[siteId][downloadId]) {\n                        return CoreConstants.DOWNLOADING;\n                    }\n\n                    // File is not being downloaded. Check if it's downloaded and if it's outdated.\n                    return this.hasFileInPool(siteId, fileId).then((entry) => {\n                        if (this.isFileOutdated(entry, revision, timemodified)) {\n                            return CoreConstants.OUTDATED;\n                        } else {\n                            return CoreConstants.DOWNLOADED;\n                        }\n                    }).catch(() => {\n                        return CoreConstants.NOT_DOWNLOADED;\n                    });\n                });\n            });\n        });\n    }\n\n    /**\n     * Returns an absolute URL to access the file URL.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The absolute URL to the file.\n     * @param {string} [mode=url] The type of URL to return. Accepts 'url' or 'src'.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {number} [timemodified=0] The time this file was modified.\n     * @param {boolean} [checkSize=true] True if we shouldn't download files if their size is big, false otherwise.\n     * @param {boolean} [downloadUnknown] True to download file in WiFi if their size is unknown, false otherwise.\n     *                                    Ignored if checkSize=false.\n     * @param {any} [options] Extra options (isexternalfile, repositorytype).\n     * @return {Promise<string>} Resolved with the URL to use.\n     * @description\n     * This will return a URL pointing to the content of the requested URL.\n     *\n     * This handles the queue and validity of the file. If there is a local file and it's valid, return the local URL.\n     * If the file isn't downloaded or it's outdated, return the online URL and add it to the queue to be downloaded later.\n     */\n    protected getFileUrlByUrl(siteId: string, fileUrl: string, component: string, componentId?: string | number,\n            mode: string = 'url', timemodified: number = 0, checkSize: boolean = true, downloadUnknown?: boolean,\n            options: any = {}): Promise<string> {\n\n        let fileId,\n            revision;\n        const addToQueue = (fileUrl): void => {\n                // Add the file to queue if needed and ignore errors.\n                this.addToQueueIfNeeded(siteId, fileUrl, component, componentId, timemodified, checkSize,\n                    downloadUnknown, options).catch(() => {\n                        // Ignore errors.\n                    });\n            };\n\n        return this.fixPluginfileURL(siteId, fileUrl).then((fixedUrl) => {\n            fileUrl = fixedUrl;\n            revision = this.getRevisionFromUrl(fileUrl);\n            fileId = this.getFileIdByUrl(fileUrl);\n\n            return this.hasFileInPool(siteId, fileId).then((entry) => {\n                let response;\n\n                if (typeof entry === 'undefined') {\n                    // We do not have the file, add it to the queue, and return real URL.\n                    addToQueue(fileUrl);\n                    response = fileUrl;\n\n                } else if (this.isFileOutdated(entry, revision, timemodified) && this.appProvider.isOnline()) {\n                    // The file is outdated, we add to the queue and return real URL.\n                    addToQueue(fileUrl);\n                    response = fileUrl;\n                } else {\n                    // We found the file entry, now look for the file on disk.\n                    if (mode === 'src') {\n                        response = this.getInternalSrcById(siteId, fileId);\n                    } else {\n                        response = this.getInternalUrlById(siteId, fileId);\n                    }\n\n                    response = response.then((internalUrl) => {\n                        // The file is on disk.\n                        return internalUrl;\n                    }).catch(() => {\n                        // We could not retrieve the file, delete the entries associated with that ID.\n                        this.logger.debug('File ' + fileId + ' not found on disk');\n                        this.removeFileById(siteId, fileId);\n                        addToQueue(fileUrl);\n\n                        if (this.appProvider.isOnline()) {\n                            // We still have a chance to serve the right content.\n                            return fileUrl;\n                        }\n\n                        return Promise.reject(null);\n                    });\n                }\n\n                return response;\n            }, () => {\n                // We do not have the file in store yet. Add to queue and return the fixed URL.\n                addToQueue(fileUrl);\n\n                return fileUrl;\n            });\n        });\n    }\n\n    /**\n     * Returns the internal SRC of a file.\n     *\n     * The returned URL from this method is typically used with IMG tags.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @return {Promise<string>} Resolved with the internal URL. Rejected otherwise.\n     */\n    protected getInternalSrcById(siteId: string, fileId: string): Promise<string> {\n        if (this.fileProvider.isAvailable()) {\n            return Promise.resolve(this.getFilePath(siteId, fileId)).then((path) => {\n                return this.fileProvider.getFile(path).then((fileEntry) => {\n                    // We use toInternalURL so images are loaded in iOS8 using img HTML tags.\n                    return this.fileProvider.getInternalURL(fileEntry);\n                });\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Returns the local URL of a file.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @return {Promise<string>} Resolved with the URL. Rejected otherwise.\n     */\n    protected getInternalUrlById(siteId: string, fileId: string): Promise<string> {\n        if (this.fileProvider.isAvailable()) {\n            return Promise.resolve(this.getFilePath(siteId, fileId)).then((path) => {\n                return this.fileProvider.getFile(path).then((fileEntry) => {\n                    return fileEntry.toURL();\n                });\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Returns the local URL of a file.\n     *\n     * @param {string} filePath The file path.\n     * @return {Promise<string>} Resolved with the URL.\n     */\n    protected getInternalUrlByPath(filePath: string): Promise<string> {\n        if (this.fileProvider.isAvailable()) {\n            return this.fileProvider.getFile(filePath).then((fileEntry) => {\n                return fileEntry.toURL();\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Returns the local URL of a file.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file URL.\n     * @return {Promise<string>} Resolved with the URL. Rejected otherwise.\n     */\n    getInternalUrlByUrl(siteId: string, fileUrl: string): Promise<string> {\n        if (this.fileProvider.isAvailable()) {\n            return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n                const fileId = this.getFileIdByUrl(fileUrl);\n\n                return this.getInternalUrlById(siteId, fileId);\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Get the data stored for a package.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<CoreFilepoolPackageEntry>} Promise resolved with the data.\n     */\n    getPackageData(siteId: string, component: string, componentId?: string | number): Promise<CoreFilepoolPackageEntry> {\n        componentId = this.fixComponentId(componentId);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const packageId = this.getPackageId(component, componentId);\n\n            return site.getDb().getRecord(this.PACKAGES_TABLE, { id: packageId });\n        });\n    }\n\n    /**\n     * Creates the name for a package directory (hash).\n     *\n     * @param {string} url An URL to identify the package.\n     * @return {string} The directory name.\n     */\n    protected getPackageDirNameByUrl(url: string): string {\n        let candidate,\n            extension = '';\n\n        url = this.removeRevisionFromUrl(url);\n\n        if (url.indexOf('/webservice/pluginfile') !== -1) {\n            // Remove attributes that do not matter.\n            this.urlAttributes.forEach((regex) => {\n                url = url.replace(regex, '');\n            });\n\n            // Guess the extension of the URL. This is for backwards compatibility.\n            candidate = this.mimeUtils.guessExtensionFromUrl(url);\n            if (candidate && candidate !== 'php') {\n                extension = '.' + candidate;\n            }\n        }\n\n        return Md5.hashAsciiStr('url:' + url) + extension;\n    }\n\n    /**\n     * Get the path to a directory to store a package files. This does not check if the file exists or not.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url An URL to identify the package.\n     * @return {Promise<string>} Promise resolved with the path of the package.\n     */\n    getPackageDirPathByUrl(siteId: string, url: string): Promise<string> {\n        return this.fixPluginfileURL(siteId, url).then((fixedUrl) => {\n            const dirName = this.getPackageDirNameByUrl(fixedUrl);\n\n            return this.getFilePath(siteId, dirName, '');\n        });\n    }\n\n    /**\n     * Returns the local URL of a package directory.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url An URL to identify the package.\n     * @return {Promise<string>} Resolved with the URL.\n     */\n    getPackageDirUrlByUrl(siteId: string, url: string): Promise<string> {\n        if (this.fileProvider.isAvailable()) {\n            return this.fixPluginfileURL(siteId, url).then((fixedUrl) => {\n                const dirName = this.getPackageDirNameByUrl(fixedUrl),\n                    dirPath = <string> this.getFilePath(siteId, dirName, ''); // No extension, the function will return a string.\n\n                return this.fileProvider.getDir(dirPath).then((dirEntry) => {\n                    return dirEntry.toURL();\n                });\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Get a download promise. If the promise is not set, return undefined.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} component The component of the package.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<any>} Download promise or undefined.\n     */\n    getPackageDownloadPromise(siteId: string, component: string, componentId?: string | number): Promise<any> {\n        const packageId = this.getPackageId(component, componentId);\n        if (this.packagesPromises[siteId] && this.packagesPromises[siteId][packageId]) {\n            return this.packagesPromises[siteId][packageId];\n        }\n    }\n    /**\n     * Get a package extra data.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<string>} Promise resolved with the extra data.\n     */\n    getPackageExtra(siteId: string, component: string, componentId?: string | number): Promise<string> {\n        return this.getPackageData(siteId, component, componentId).then((entry) => {\n            return entry.extra;\n        });\n    }\n\n    /**\n     * Get the ID of a package.\n     *\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {string} Package ID.\n     */\n    getPackageId(component: string, componentId?: string | number): string {\n        return <string> Md5.hashAsciiStr(component + '#' + this.fixComponentId(componentId));\n    }\n\n    /**\n     * Get a package previous status.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<string>} Promise resolved with the status.\n     */\n    getPackagePreviousStatus(siteId: string, component: string, componentId?: string | number): Promise<string> {\n        return this.getPackageData(siteId, component, componentId).then((entry) => {\n            return entry.previous || CoreConstants.NOT_DOWNLOADED;\n        }).catch(() => {\n            return CoreConstants.NOT_DOWNLOADED;\n        });\n    }\n\n    /**\n     * Get a package status.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<string>} Promise resolved with the status.\n     */\n    getPackageStatus(siteId: string, component: string, componentId?: string | number): Promise<string> {\n        return this.getPackageData(siteId, component, componentId).then((entry) => {\n            return entry.status || CoreConstants.NOT_DOWNLOADED;\n        }).catch(() => {\n            return CoreConstants.NOT_DOWNLOADED;\n        });\n    }\n\n    /**\n     * Return the array of arguments of the pluginfile url.\n     *\n     * @param {string} url URL to get the args.\n     * @return {string[]} The args found, undefined if not a pluginfile.\n     */\n    protected getPluginFileArgs(url: string): string[] {\n        if (!this.urlUtils.isPluginFileUrl(url)) {\n            // Not pluginfile, return.\n            return;\n        }\n\n        const relativePath = url.substr(url.indexOf('/pluginfile.php') + 16),\n            args = relativePath.split('/');\n\n        if (args.length < 3) {\n            // To be a plugin file it should have at least contextId, Component and Filearea.\n            return;\n        }\n\n        return args;\n    }\n\n    /**\n     * Get the deferred object for a file in the queue.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @param {boolean} [create=true] True if it should create a new deferred if it doesn't exist.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {any} Deferred.\n     */\n    protected getQueueDeferred(siteId: string, fileId: string, create: boolean = true, onProgress?: (event: any) => any): any {\n        if (!this.queueDeferreds[siteId]) {\n            if (!create) {\n                return;\n            }\n            this.queueDeferreds[siteId] = {};\n        }\n        if (!this.queueDeferreds[siteId][fileId]) {\n            if (!create) {\n                return;\n            }\n            this.queueDeferreds[siteId][fileId] = this.utils.promiseDefer();\n        }\n\n        if (onProgress) {\n            this.queueDeferreds[siteId][fileId].onProgress = onProgress;\n        }\n\n        return this.queueDeferreds[siteId][fileId];\n    }\n\n    /**\n     * Get the on progress for a file in the queue.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @return {Function} On progress function, undefined if not found.\n     */\n    protected getQueueOnProgress(siteId: string, fileId: string): (event: any) => any {\n        const deferred = this.getQueueDeferred(siteId, fileId, false);\n        if (deferred) {\n            return deferred.onProgress;\n        }\n    }\n\n    /**\n     * Get the promise for a file in the queue.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @param {boolean} [create=true] True if it should create a new promise if it doesn't exist.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {Promise<any>} Promise.\n     */\n    protected getQueuePromise(siteId: string, fileId: string, create: boolean = true, onProgress?: (event: any) => any)\n            : Promise<any> {\n        return this.getQueueDeferred(siteId, fileId, create, onProgress).promise;\n    }\n\n    /**\n     * Get a revision number from a list of files (highest revision).\n     *\n     * @param {any[]} files Package files.\n     * @return {number} Highest revision.\n     */\n    getRevisionFromFileList(files: any[]): number {\n        let revision = 0;\n\n        files.forEach((file) => {\n            if (file.url || file.fileurl) {\n                const r = this.getRevisionFromUrl(file.url || file.fileurl);\n                if (r > revision) {\n                    revision = r;\n                }\n            }\n        });\n\n        return revision;\n    }\n\n    /**\n     * Get the revision number from a file URL.\n     *\n     * @param {string} url URL to get the revision number.\n     * @return {number} Revision number.\n     */\n    protected getRevisionFromUrl(url: string): number {\n        const args = this.getPluginFileArgs(url);\n        if (!args) {\n            // Not a pluginfile, no revision will be found.\n            return 0;\n        }\n\n        const revisionRegex = this.pluginFileDelegate.getComponentRevisionRegExp(args);\n        if (!revisionRegex) {\n            return 0;\n        }\n\n        const matches = url.match(revisionRegex);\n        if (matches && typeof matches[1] != 'undefined') {\n            return parseInt(matches[1], 10);\n        }\n\n        return 0;\n    }\n\n    /**\n     * Returns an absolute URL to use in IMG tags.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The absolute URL to the file.\n     * @param {string} [mode=url] The type of URL to return. Accepts 'url' or 'src'.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {number} [timemodified=0] The time this file was modified.\n     * @param {boolean} [checkSize=true] True if we shouldn't download files if their size is big, false otherwise.\n     * @param {boolean} [downloadUnknown] True to download file in WiFi if their size is unknown, false otherwise.\n     *                                    Ignored if checkSize=false.\n     * @param {any} [options] Extra options (isexternalfile, repositorytype).\n     * @return {Promise<string>} Resolved with the URL to use.\n     * @description\n     * This will return a URL pointing to the content of the requested URL.\n     * The URL returned is compatible to use with IMG tags.\n     */\n    getSrcByUrl(siteId: string, fileUrl: string, component: string, componentId?: string | number, timemodified: number = 0,\n            checkSize: boolean = true, downloadUnknown?: boolean, options: any = {}): Promise<string> {\n        return this.getFileUrlByUrl(siteId, fileUrl, component, componentId, 'src',\n            timemodified, checkSize, downloadUnknown, options);\n    }\n\n    /**\n     * Get time modified from a list of files.\n     *\n     * @param {any[]} files List of files.\n     * @return {number} Time modified.\n     */\n    getTimemodifiedFromFileList(files: any[]): number {\n        let timemodified = 0;\n\n        files.forEach((file) => {\n            if (file.timemodified > timemodified) {\n                timemodified = file.timemodified;\n            }\n        });\n\n        return timemodified;\n    }\n\n    /**\n     * Returns an absolute URL to access the file.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The absolute URL to the file.\n     * @param {string} [mode=url] The type of URL to return. Accepts 'url' or 'src'.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {number} [timemodified=0] The time this file was modified.\n     * @param {boolean} [checkSize=true] True if we shouldn't download files if their size is big, false otherwise.\n     * @param {boolean} [downloadUnknown] True to download file in WiFi if their size is unknown, false otherwise.\n     *                                    Ignored if checkSize=false.\n     * @param {any} [options] Extra options (isexternalfile, repositorytype).\n     * @return {Promise<string>} Resolved with the URL to use.\n     * @description\n     * This will return a URL pointing to the content of the requested URL.\n     * The URL returned is compatible to use with a local browser.\n     */\n    getUrlByUrl(siteId: string, fileUrl: string, component: string, componentId?: string | number, timemodified: number = 0,\n            checkSize: boolean = true, downloadUnknown?: boolean, options: any = {}): Promise<string> {\n        return this.getFileUrlByUrl(siteId, fileUrl, component, componentId, 'url',\n            timemodified, checkSize, downloadUnknown, options);\n    }\n\n    /**\n     * Guess the filename of a file from its URL. This is very weak and unreliable.\n     *\n     * @param {string} fileUrl The file URL.\n     * @return {string}        The filename treated so it doesn't have any special character.\n     */\n    protected guessFilenameFromUrl(fileUrl: string): string {\n        let filename = '';\n\n        if (fileUrl.indexOf('/webservice/pluginfile') !== -1) {\n            // It's a pluginfile URL. Search for the 'file' param to extract the name.\n            const params = this.urlUtils.extractUrlParams(fileUrl);\n            if (params.file) {\n                filename = params.file.substr(params.file.lastIndexOf('/') + 1);\n            } else {\n                // 'file' param not found. Extract what's after the last '/' without params.\n                filename = this.urlUtils.getLastFileWithoutParams(fileUrl);\n            }\n\n        } else if (this.urlUtils.isGravatarUrl(fileUrl)) {\n            // Extract gravatar ID.\n            filename = 'gravatar_' + this.urlUtils.getLastFileWithoutParams(fileUrl);\n        } else if (this.urlUtils.isThemeImageUrl(fileUrl)) {\n            // Extract user ID.\n            const matches = fileUrl.match(/\\/core\\/([^\\/]*)\\//);\n            if (matches && matches[1]) {\n                filename = matches[1];\n            }\n            // Attach a constant and the image type.\n            filename = 'default_' + filename + '_' + this.urlUtils.getLastFileWithoutParams(fileUrl);\n        } else {\n            // Another URL. Just get what's after the last /.\n            filename = this.urlUtils.getLastFileWithoutParams(fileUrl);\n        }\n\n        // Remove the extension from the filename.\n        filename = this.mimeUtils.removeExtension(filename);\n\n        return this.textUtils.removeSpecialCharactersForFiles(filename);\n    }\n\n    /**\n     * Check if the file is already in the pool. This does not check if the file is on the disk.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file URL.\n     * @return {Promise<CoreFilepoolFileEntry>} Resolved with file object from DB on success, rejected otherwise.\n     */\n    protected hasFileInPool(siteId: string, fileId: string): Promise<CoreFilepoolFileEntry> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return db.getRecord(this.FILES_TABLE, { fileId: fileId }).then((entry) => {\n                if (typeof entry === 'undefined') {\n                    return Promise.reject(null);\n                }\n\n                return entry;\n            });\n        });\n    }\n\n    /**\n     * Check if the file is in the queue.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file URL.\n     * @return {Promise} Resolved with file object from DB on success, rejected otherwise.\n     */\n    protected hasFileInQueue(siteId: string, fileId: string): Promise<CoreFilepoolQueueEntry> {\n        return this.appDB.getRecord(this.QUEUE_TABLE, { siteId: siteId, fileId: fileId }).then((entry) => {\n            if (typeof entry === 'undefined') {\n                return Promise.reject(null);\n            }\n            // Convert the links to an object.\n            entry.links = this.textUtils.parseJSON(entry.links, []);\n\n            return entry;\n        });\n    }\n\n    /**\n     * Invalidate all the files in a site.\n     *\n     * @param {string} siteId The site ID.\n     * @param {boolean} [onlyUnknown=true] True to only invalidate files from external repos or without revision/timemodified.\n     *                                     It is advised to set it to true to reduce the performance and data usage of the app.\n     * @return {Promise<any>} Resolved on success.\n     */\n    invalidateAllFiles(siteId: string, onlyUnknown: boolean = true): Promise<any> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            let where,\n                whereParams;\n            if (onlyUnknown) {\n                where = 'isexternalfile = ? OR (revision < ? AND timemodified = ?)';\n                whereParams = [0, 1, 0];\n            }\n\n            return db.updateRecordsWhere(this.FILES_TABLE, { stale: 1 }, where, whereParams);\n        });\n    }\n\n    /**\n     * Invalidate a file by URL.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file URL.\n     * @return {Promise<any>} Resolved on success.\n     * @description\n     * Invalidates a file by marking it stale. It will not be added to the queue automatically, but the next time this file\n     * is requested it will be added to the queue.\n     * You can manully call addToQueueByUrl to add this file to the queue immediately.\n     * Please note that, if a file is stale, the user will be presented the stale file if there is no network access.\n     */\n    invalidateFileByUrl(siteId: string, fileUrl: string): Promise<any> {\n        return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n            const fileId = this.getFileIdByUrl(fileUrl);\n\n            return this.sitesProvider.getSiteDb(siteId).then((db) => {\n                return db.updateRecords(this.FILES_TABLE, { stale: 1 }, { fileId: fileId });\n            });\n        });\n    }\n\n    /**\n     * Invalidate all the matching files from a component.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} component The component to invalidate.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {boolean} [onlyUnknown=true] True to only invalidate files from external repos or without revision/timemodified.\n     *                                     It is advised to set it to true to reduce the performance and data usage of the app.\n     * @return {Promise<any>} Resolved when done.\n     */\n    invalidateFilesByComponent(siteId: string, component: string, componentId?: string | number, onlyUnknown: boolean = true)\n            : Promise<any> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return this.getComponentFiles(db, component, componentId).then((items) => {\n                const fileIds = items.map((item) => {\n                        return item.fileId;\n                    }),\n                    whereAndParams = db.getInOrEqual(fileIds);\n\n                whereAndParams[0] = 'fileId ' + whereAndParams[0];\n\n                if (onlyUnknown) {\n                    whereAndParams[0] += ' AND (isexternalfile = ? OR (revision < ? AND timemodified = ?))';\n                    whereAndParams[1] = whereAndParams[1].concat([0, 1, 0]);\n                }\n\n                return db.updateRecordsWhere(this.FILES_TABLE, { stale: 1 }, whereAndParams[0], whereAndParams[1]);\n            });\n        });\n    }\n\n    /**\n     * Check if a file is downloading.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl File URL.\n     * @param {Promise<any>} Promise resolved if file is downloading, rejected otherwise.\n     */\n    isFileDownloadingByUrl(siteId: string, fileUrl: string): Promise<any> {\n        return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n            const fileId = this.getFileIdByUrl(fileUrl);\n\n            return this.hasFileInQueue(siteId, fileId);\n        });\n    }\n\n    /**\n     * Check if a file is outdated.\n     *\n     * @param {CoreFilepoolFileEntry} entry Filepool entry.\n     * @param {number} [revision]  File revision number.\n     * @param {number} [timemodified] The time this file was modified.\n     * @param {boolean} Whether the file is outdated.\n     */\n    protected isFileOutdated(entry: CoreFilepoolFileEntry, revision?: number, timemodified?: number): boolean {\n        return !!entry.stale || revision > entry.revision || timemodified > entry.timemodified;\n    }\n\n    /**\n     * Check if cannot determine if a file has been updated.\n     *\n     * @param {CoreFilepoolFileEntry} entry Filepool entry.\n     * @return {boolean} Whether it cannot determine updates.\n     */\n    protected isFileUpdateUnknown(entry: CoreFilepoolFileEntry): boolean {\n        return !!entry.isexternalfile || (entry.revision < 1 && !entry.timemodified);\n    }\n\n    /**\n     * Notify a file has been deleted.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     */\n    protected notifyFileDeleted(siteId: string, fileId: string): void {\n        this.eventsProvider.trigger(this.getFileEventName(siteId, fileId), { action: 'deleted' });\n    }\n\n    /**\n     * Notify a file has been downloaded.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     */\n    protected notifyFileDownloaded(siteId: string, fileId: string): void {\n        this.eventsProvider.trigger(this.getFileEventName(siteId, fileId), { action: 'download', success: true });\n    }\n\n    /**\n     * Notify error occurred while downloading a file.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     */\n    protected notifyFileDownloadError(siteId: string, fileId: string): void {\n        this.eventsProvider.trigger(this.getFileEventName(siteId, fileId), { action: 'download', success: false });\n    }\n\n    /**\n     * Notify a file starts being downloaded or added to queue.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     */\n    protected notifyFileDownloading(siteId: string, fileId: string): void {\n        this.eventsProvider.trigger(this.getFileEventName(siteId, fileId), { action: 'downloading' });\n    }\n\n    /**\n     * Notify a file has been outdated.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     */\n    protected notifyFileOutdated(siteId: string, fileId: string): void {\n        this.eventsProvider.trigger(this.getFileEventName(siteId, fileId), { action: 'outdated' });\n    }\n\n    /**\n     * Prefetches a list of files.\n     *\n     * @param {string} siteId The site ID.\n     * @param {any[]} fileList List of files to download.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to identify the download.\n     * @param {string} [extra] Extra data to store for the package.\n     * @param {string} [dirPath] Name of the directory where to store the files (inside filepool dir). If not defined, store\n     *                           the files directly inside the filepool folder.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {Promise<any>}  Promise resolved when all files are downloaded.\n     */\n    prefetchPackage(siteId: string, fileList: any[], component: string, componentId?: string | number, extra?: string,\n            dirPath?: string, onProgress?: (event: any) => any): Promise<any> {\n        return this.downloadOrPrefetchPackage(siteId, fileList, true, component, componentId, extra, dirPath, onProgress);\n    }\n\n    /**\n     * Process the queue.\n     *\n     * @description\n     * This loops over itself to keep on processing the queue in the background.\n     * The queue process is site agnostic.\n     */\n    protected processQueue(): void {\n        let promise;\n\n        if (this.queueState !== this.QUEUE_RUNNING) {\n            // Silently ignore, the queue is on pause.\n            promise = Promise.reject(this.ERR_QUEUE_ON_PAUSE);\n\n        } else if (!this.fileProvider.isAvailable() || !this.appProvider.isOnline()) {\n            promise = Promise.reject(this.ERR_FS_OR_NETWORK_UNAVAILABLE);\n\n        } else {\n            promise = this.processImportantQueueItem();\n        }\n\n        promise.then(() => {\n            // All good, we schedule next execution.\n            setTimeout(() => {\n                this.processQueue();\n            }, this.QUEUE_PROCESS_INTERVAL);\n\n        }, (error) => {\n\n            // We had an error, in which case we pause the processing.\n            if (error === this.ERR_FS_OR_NETWORK_UNAVAILABLE) {\n                this.logger.debug('Filesysem or network unavailable, pausing queue processing.');\n\n            } else if (error === this.ERR_QUEUE_IS_EMPTY) {\n                this.logger.debug('Queue is empty, pausing queue processing.');\n            }\n\n            this.queueState = this.QUEUE_PAUSED;\n        });\n    }\n\n    /**\n     * Process the most important queue item.\n     *\n     * @return {Promise} Resolved on success. Rejected on failure.\n     */\n    protected processImportantQueueItem(): Promise<any> {\n        return this.appDB.getRecords(this.QUEUE_TABLE, undefined, 'priority DESC, added ASC', undefined, 0, 1).then((items) => {\n            const item = items.pop();\n            if (!item) {\n                return Promise.reject(this.ERR_QUEUE_IS_EMPTY);\n            }\n            // Convert the links to an object.\n            item.links = this.textUtils.parseJSON(item.links, []);\n\n            return this.processQueueItem(item);\n        }, () => {\n            return Promise.reject(this.ERR_QUEUE_IS_EMPTY);\n        });\n    }\n\n    /**\n     * Process a queue item.\n     *\n     * @param {CoreFilepoolQueueEntry} item The object from the queue store.\n     * @return {Promise<any>} Resolved on success. Rejected on failure.\n     */\n    protected processQueueItem(item: CoreFilepoolQueueEntry): Promise<any> {\n        // Cast optional fields to undefined instead of null.\n        const siteId = item.siteId,\n            fileId = item.fileId,\n            fileUrl = item.url,\n            options = {\n                revision: item.revision || undefined,\n                timemodified: item.timemodified || undefined,\n                isexternalfile: item.isexternalfile || undefined,\n                repositorytype: item.repositorytype || undefined\n            },\n            filePath = item.path || undefined,\n            links = item.links || [];\n\n        this.logger.debug('Processing queue item: ' + siteId + ', ' + fileId);\n\n        // Check if the file is already in pool.\n        return this.hasFileInPool(siteId, fileId).catch(() => {\n            // File not in pool.\n        }).then((entry: CoreFilepoolFileEntry) => {\n\n            if (entry && !this.isFileOutdated(entry, options.revision, options.timemodified)) {\n                // We have the file, it is not stale, we can update links and remove from queue.\n                this.logger.debug('Queued file already in store, ignoring...');\n                this.addFileLinks(siteId, fileId, links).catch(() => {\n                    // Ignore errors.\n                });\n                this.removeFromQueue(siteId, fileId).catch(() => {\n                    // Ignore errors.\n                }).finally(() => {\n                    this.treatQueueDeferred(siteId, fileId, true);\n                });\n                this.notifyFileDownloaded(siteId, fileId);\n\n                return;\n            }\n\n            // The file does not exist, or is stale, ... download it.\n            const onProgress = this.getQueueOnProgress(siteId, fileId);\n\n            return this.downloadForPoolByUrl(siteId, fileUrl, options, filePath, onProgress, entry).then(() => {\n                // Success, we add links and remove from queue.\n                this.addFileLinks(siteId, fileId, links).catch(() => {\n                    // Ignore errors.\n                });\n\n                this.treatQueueDeferred(siteId, fileId, true);\n                this.notifyFileDownloaded(siteId, fileId);\n\n                // Wait for the item to be removed from queue before resolving the promise.\n                // If the item could not be removed from queue we still resolve the promise.\n                return this.removeFromQueue(siteId, fileId).catch(() => {\n                    // Ignore errors.\n                });\n            }, (errorObject) => {\n                // Whoops, we have an error...\n                let dropFromQueue = false;\n\n                if (errorObject && errorObject.source === fileUrl) {\n                    // This is most likely a FileTransfer error.\n                    if (errorObject.code === 1) { // FILE_NOT_FOUND_ERR.\n                        // The file was not found, most likely a 404, we remove from queue.\n                        dropFromQueue = true;\n                    } else if (errorObject.code === 2) { // INVALID_URL_ERR.\n                        // The URL is invalid, we drop the file from the queue.\n                        dropFromQueue = true;\n                    } else if (errorObject.code === 3) { // CONNECTION_ERR.\n                        // If there was an HTTP status, then let's remove from the queue.\n                        dropFromQueue = true;\n                    } else if (errorObject.code === 4) { // ABORTED_ERR.\n                        // The transfer was aborted, we will keep the file in queue.\n                    } else if (errorObject.code === 5) { // NOT_MODIFIED_ERR.\n                        // We have the latest version of the file, HTTP 304 status.\n                        dropFromQueue = true;\n                    } else {\n                        // Unknown error, let's remove the file from the queue to avoi locking down the queue.\n                        dropFromQueue = true;\n                    }\n                } else {\n                    dropFromQueue = true;\n                }\n\n                if (dropFromQueue) {\n                    this.logger.debug('Item dropped from queue due to error: ' + fileUrl, errorObject);\n\n                    return this.removeFromQueue(siteId, fileId).catch(() => {\n                        // Consider this as a silent error, never reject the promise here.\n                    }).then(() => {\n                        this.treatQueueDeferred(siteId, fileId, false);\n                        this.notifyFileDownloadError(siteId, fileId);\n                    });\n                } else {\n                    // We considered the file as legit but did not get it, failure.\n                    this.treatQueueDeferred(siteId, fileId, false);\n                    this.notifyFileDownloadError(siteId, fileId);\n\n                    return Promise.reject(errorObject);\n                }\n\n            });\n        });\n    }\n\n    /**\n     * Remove a file from the queue.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @return {Promise<any>} Resolved on success. Rejected on failure. It is advised to silently ignore failures.\n     */\n    protected removeFromQueue(siteId: string, fileId: string): Promise<any> {\n        return this.appDB.deleteRecords(this.QUEUE_TABLE, { siteId: siteId, fileId: fileId });\n    }\n\n    /**\n     * Remove a file from the pool.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @return {Promise<any>} Resolved on success.\n     */\n    protected removeFileById(siteId: string, fileId: string): Promise<any> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            // Get the path to the file first since it relies on the file object stored in the pool.\n            return Promise.resolve(this.getFilePath(siteId, fileId)).then((path) => {\n                const promises = [];\n\n                // Remove entry from filepool store.\n                promises.push(db.deleteRecords(this.FILES_TABLE, { fileId: fileId }));\n\n                // Remove links.\n                promises.push(db.deleteRecords(this.LINKS_TABLE, { fileId: fileId }));\n\n                // Remove the file.\n                if (this.fileProvider.isAvailable()) {\n                    promises.push(this.fileProvider.removeFile(path).catch((error) => {\n                        if (error && error.code == 1) {\n                            // Not found, ignore error since maybe it was deleted already.\n                        } else {\n                            return Promise.reject(error);\n                        }\n                    }));\n                }\n\n                return Promise.all(promises).then(() => {\n                    this.notifyFileDeleted(siteId, fileId);\n                });\n            });\n        });\n    }\n\n    /**\n     * Delete all the matching files from a component.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} component The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<any>} Resolved on success.\n     */\n    removeFilesByComponent(siteId: string, component: string, componentId?: string | number): Promise<any> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return this.getComponentFiles(db, component, componentId);\n        }).then((items) => {\n            return Promise.all(items.map((item) => {\n                return this.removeFileById(siteId, item.fileId);\n            }));\n        });\n    }\n\n    /**\n     * Remove a file from the pool.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileUrl The file URL.\n     * @return {Promise<any>} Resolved on success, rejected on failure.\n     */\n    removeFileByUrl(siteId: string, fileUrl: string): Promise<any> {\n        return this.fixPluginfileURL(siteId, fileUrl).then((fileUrl) => {\n            const fileId = this.getFileIdByUrl(fileUrl);\n\n            return this.removeFileById(siteId, fileId);\n        });\n    }\n\n    /**\n     * Removes the revision number from a file URL.\n     *\n     * @param {string} url URL to remove the revision number.\n     * @return {string} URL without revision number.\n     * @description\n     * The revision is used to know if a file has changed. We remove it from the URL to prevent storing a file per revision.\n     */\n    protected removeRevisionFromUrl(url: string): string {\n        const args = this.getPluginFileArgs(url);\n        if (!args) {\n            // Not a pluginfile, no revision will be found.\n            return url;\n        }\n\n        return this.pluginFileDelegate.removeRevisionFromUrl(url, args);\n    }\n\n    /**\n     * Change the package status, setting it to the previous status.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<string>} Promise resolved when the status is changed. Resolve param: new status.\n     */\n    setPackagePreviousStatus(siteId: string, component: string, componentId?: string | number): Promise<any> {\n        componentId = this.fixComponentId(componentId);\n        this.logger.debug(`Set previous status for package ${component} ${componentId}`);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const packageId = this.getPackageId(component, componentId);\n\n            // Get current stored data, we'll only update 'status' and 'updated' fields.\n            return site.getDb().getRecord(this.PACKAGES_TABLE, { id: packageId }).then((entry: CoreFilepoolPackageEntry) => {\n                const newData: CoreFilepoolPackageEntry = {};\n                if (entry.status == CoreConstants.DOWNLOADING) {\n                    // Going back from downloading to previous status, restore previous download time.\n                    newData.downloadTime = entry.previousDownloadTime;\n                }\n                newData.status = entry.previous || CoreConstants.DOWNLOADED;\n                newData.updated = Date.now();\n                this.logger.debug(`Set previous status '${entry.status}' for package ${component} ${componentId}`);\n\n                return site.getDb().updateRecords(this.PACKAGES_TABLE, newData, { id: packageId }).then(() => {\n                    // Success updating, trigger event.\n                    this.triggerPackageStatusChanged(site.id, newData.status, component, componentId);\n\n                    return newData.status;\n                });\n            });\n        });\n    }\n\n    /**\n     * Convenience function to check if a file should be downloaded before opening it.\n     *\n     * @param {string} url File online URL.\n     * @param {number} size File size.\n     * @return {Promise}     Promise resolved if should download before open, rejected otherwise.\n     * @description\n     * Convenience function to check if a file should be downloaded before opening it.\n     *\n     * The default behaviour in the app is to download first and then open the local file in the following cases:\n     *     - The file is small (less than DOWNLOAD_THRESHOLD).\n     *     - The file cannot be streamed.\n     * If the file is big and can be streamed, the promise returned by this function will be rejected.\n     */\n    shouldDownloadBeforeOpen(url: string, size: number): Promise<any> {\n        if (size >= 0 && size <= this.DOWNLOAD_THRESHOLD) {\n            // The file is small, download it.\n            return Promise.resolve();\n        }\n\n        if (this.appProvider.isDesktop()) {\n            // In desktop always download first.\n            return Promise.resolve();\n        }\n\n        return this.mimeUtils.getMimeTypeFromUrl(url).then((mimetype) => {\n            // If the file is streaming (audio or video) we reject.\n            if (mimetype.indexOf('video') != -1 || mimetype.indexOf('audio') != -1) {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Store package status.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} status New package status.\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {string} [extra] Extra data to store for the package. If you want to store more than 1 value, use JSON.stringify.\n     * @return {Promise<any>} Promise resolved when status is stored.\n     */\n    storePackageStatus(siteId: string, status: string, component: string, componentId?: string | number, extra?: string)\n            : Promise<any> {\n        this.logger.debug(`Set status '${status}' for package ${component} ${componentId}`);\n        componentId = this.fixComponentId(componentId);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const packageId = this.getPackageId(component, componentId);\n            let downloadTime,\n                previousDownloadTime;\n\n            if (status == CoreConstants.DOWNLOADING) {\n                // Set download time if package is now downloading.\n                downloadTime = this.timeUtils.timestamp();\n            }\n\n            // Search current status to set it as previous status.\n            return site.getDb().getRecord(this.PACKAGES_TABLE, { id: packageId }).then((entry: CoreFilepoolPackageEntry) => {\n                if (typeof extra == 'undefined' || extra === null) {\n                    extra = entry.extra;\n                }\n                if (typeof downloadTime == 'undefined') {\n                    // Keep previous download time.\n                    downloadTime = entry.downloadTime;\n                    previousDownloadTime = entry.previousDownloadTime;\n                } else {\n                    // The downloadTime will be updated, store current time as previous.\n                    previousDownloadTime = entry.downloadTime;\n                }\n\n                return entry.status;\n            }).catch(() => {\n                // No previous status.\n            }).then((previousStatus: string) => {\n                const packageEntry: CoreFilepoolPackageEntry = {\n                        id: packageId,\n                        component: component,\n                        componentId: componentId,\n                        status: status,\n                        previous: previousStatus,\n                        updated: Date.now(),\n                        downloadTime: downloadTime,\n                        previousDownloadTime: previousDownloadTime,\n                        extra: extra\n                    };\n                let promise;\n\n                if (previousStatus === status) {\n                    // The package already has this status, no need to change it.\n                    promise = Promise.resolve();\n                } else {\n                    promise = site.getDb().insertOrUpdateRecord(this.PACKAGES_TABLE, packageEntry, { id: packageId });\n                }\n\n                return promise.then(() => {\n                    // Success inserting, trigger event.\n                    this.triggerPackageStatusChanged(siteId, status, component, componentId);\n                });\n            });\n        });\n    }\n\n    /**\n     * Remove extension from fileId in queue, used to migrate from previous file handling.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    treatExtensionInQueue(): Promise<any> {\n        this.logger.debug('Treat extensions in queue');\n\n        return this.appDB.getAllRecords(this.QUEUE_TABLE).then((entries) => {\n            const promises = [];\n            entries.forEach((entry) => {\n\n                // For files in the queue, we only need to remove the extension from the fileId.\n                // After downloading, additional info will be added.\n                const fileId = entry.fileId;\n                entry.fileId = this.mimeUtils.removeExtension(fileId);\n\n                if (fileId == entry.fileId) {\n                    return;\n                }\n\n                promises.push(this.appDB.updateRecords(this.QUEUE_TABLE, { fileId: entry.fileId }, { fileId: fileId }));\n            });\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Resolves or rejects a queue deferred and removes it from the list.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} fileId The file ID.\n     * @param {boolean} resolve True if promise should be resolved, false if it should be rejected.\n     */\n    protected treatQueueDeferred(siteId: string, fileId: string, resolve: boolean): void {\n        if (this.queueDeferreds[siteId] && this.queueDeferreds[siteId][fileId]) {\n            if (resolve) {\n                this.queueDeferreds[siteId][fileId].resolve();\n            } else {\n                this.queueDeferreds[siteId][fileId].reject();\n            }\n            delete this.queueDeferreds[siteId][fileId];\n        }\n    }\n\n    /**\n     * Trigger mmCoreEventPackageStatusChanged with the right data.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} status New package status.\n     * @param {string} component  Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     */\n    protected triggerPackageStatusChanged(siteId: string, status: string, component: string, componentId?: string | number): void {\n        const data = {\n            component: component,\n            componentId: this.fixComponentId(componentId),\n            status: status\n        };\n        this.eventsProvider.trigger(CoreEventsProvider.PACKAGE_STATUS_CHANGED, data, siteId);\n    }\n\n    /**\n     * Update the download time of a package. This doesn't modify the previous download time.\n     * This function should be used if a package generates some new data during a download. Calling this function\n     * right after generating the data in the download will prevent detecting this data as an update.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @return {Promise<any>} Promise resolved when status is stored.\n     */\n    updatePackageDownloadTime(siteId: string, component: string, componentId?: string | number): Promise<any> {\n        componentId = this.fixComponentId(componentId);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const packageId = this.getPackageId(component, componentId);\n\n            return site.getDb().updateRecords(this.PACKAGES_TABLE, { downloadTime: this.timeUtils.timestamp() }, { id: packageId });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/filepool.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreAutoFocusDirective } from './auto-focus';\nimport { CoreDownloadFileDirective } from './download-file';\nimport { CoreExternalContentDirective } from './external-content';\nimport { CoreFormatTextDirective } from './format-text';\nimport { CoreLinkDirective } from './link';\nimport { CoreKeepKeyboardDirective } from './keep-keyboard';\nimport { CoreUserLinkDirective } from './user-link';\nimport { CoreAutoRowsDirective } from './auto-rows';\nimport { CoreLongPressDirective } from './long-press';\n\n@NgModule({\n    declarations: [\n        CoreAutoFocusDirective,\n        CoreDownloadFileDirective,\n        CoreExternalContentDirective,\n        CoreFormatTextDirective,\n        CoreKeepKeyboardDirective,\n        CoreLinkDirective,\n        CoreUserLinkDirective,\n        CoreAutoRowsDirective,\n        CoreLongPressDirective\n    ],\n    imports: [],\n    exports: [\n        CoreAutoFocusDirective,\n        CoreDownloadFileDirective,\n        CoreExternalContentDirective,\n        CoreFormatTextDirective,\n        CoreKeepKeyboardDirective,\n        CoreLinkDirective,\n        CoreUserLinkDirective,\n        CoreAutoRowsDirective,\n        CoreLongPressDirective\n    ]\n})\nexport class CoreDirectivesModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/directives.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLangProvider } from '../lang';\n\n/*\n * \"Utils\" service with helper functions for URLs.\n */\n@Injectable()\nexport class CoreUrlUtilsProvider {\n\n    constructor(private langProvider: CoreLangProvider) { }\n\n    /**\n     * Add or remove 'www' from a URL. The url needs to have http or https protocol.\n     *\n     * @param {string} url URL to modify.\n     * @return {string} Modified URL.\n     */\n    addOrRemoveWWW(url: string): string {\n        if (url) {\n            if (url.match(/http(s)?:\\/\\/www\\./)) {\n                // Already has www. Remove it.\n                url = url.replace('www.', '');\n            } else {\n                url = url.replace('https://', 'https://www.');\n                url = url.replace('http://', 'http://www.');\n            }\n        }\n\n        return url;\n    }\n\n    /**\n     * Extracts the parameters from a URL and stores them in an object.\n     *\n     * @param {string} url URL to treat.\n     * @return {any} Object with the params.\n     */\n    extractUrlParams(url: string): any {\n        const regex = /[?&]+([^=&]+)=?([^&]*)?/gi,\n            params = {};\n\n        url.replace(regex, (match: string, key: string, value: string): string => {\n            params[key] = typeof value != 'undefined' ? value : '';\n\n            return match;\n        });\n\n        return params;\n    }\n\n    /**\n     * Generic function for adding the wstoken to Moodle urls and for pointing to the correct script.\n     * For download remote files from Moodle we need to use the special /webservice/pluginfile passing\n     * the ws token as a get parameter.\n     *\n     * @param {string} url The url to be fixed.\n     * @param {string} token Token to use.\n     * @return {string} Fixed URL.\n     */\n    fixPluginfileURL(url: string, token: string): string {\n        if (!url || !token) {\n            return '';\n        }\n\n        // First check if we need to fix this url or is already fixed.\n        if (url.indexOf('token=') != -1) {\n            return url;\n        }\n\n        // Check if is a valid URL (contains the pluginfile endpoint).\n        if (!this.isPluginFileUrl(url)) {\n            return url;\n        }\n\n        // In which way the server is serving the files? Are we using slash parameters?\n        if (url.indexOf('?file=') != -1 || url.indexOf('?forcedownload=') != -1 || url.indexOf('?rev=') != -1) {\n            url += '&';\n        } else {\n            url += '?';\n        }\n        // Always send offline=1 (for external repositories). It shouldn't cause problems for local files or old Moodles.\n        url += 'token=' + token + '&offline=1';\n\n        // Some webservices returns directly the correct download url, others not.\n        if (url.indexOf('/webservice/pluginfile') == -1) {\n            url = url.replace('/pluginfile', '/webservice/pluginfile');\n        }\n\n        return url;\n    }\n\n    /**\n     * Formats a URL, trim, lowercase, etc...\n     *\n     * @param {string} url The url to be formatted.\n     * @return {string} Fromatted url.\n     */\n    formatURL(url: string): string {\n        url = url.trim();\n\n        // Check if the URL starts by http or https.\n        if (! /^http(s)?\\:\\/\\/.*/i.test(url)) {\n            // Test first allways https.\n            url = 'https://' + url;\n        }\n\n        // http allways in lowercase.\n        url = url.replace(/^http/i, 'http');\n        url = url.replace(/^https/i, 'https');\n\n        // Replace last slash.\n        url = url.replace(/\\/$/, '');\n\n        return url;\n    }\n\n    /**\n     * Returns the URL to the documentation of the app, based on Moodle version and current language.\n     *\n     * @param {string} [release] Moodle release.\n     * @param {string} [page=Mobile_app] Docs page to go to.\n     * @return {Promise<string>} Promise resolved with the Moodle docs URL.\n     */\n    getDocsUrl(release?: string, page: string = 'Mobile_app'): Promise<string> {\n        let docsUrl = 'https://docs.moodle.org/en/' + page;\n\n        if (typeof release != 'undefined') {\n            const version = release.substr(0, 3).replace('.', '');\n            // Check is a valid number.\n            if (parseInt(version) >= 24) {\n                // Append release number.\n                docsUrl = docsUrl.replace('https://docs.moodle.org/', 'https://docs.moodle.org/' + version + '/');\n            }\n        }\n\n        return this.langProvider.getCurrentLanguage().then((lang) => {\n            return docsUrl.replace('/en/', '/' + lang + '/');\n        }).catch(() => {\n            return docsUrl;\n        });\n    }\n\n    /**\n     * Given a URL, returns what's after the last '/' without params.\n     * Example:\n     * http://mysite.com/a/course.html?id=1 -> course.html\n     *\n     * @param {string} url URL to treat.\n     * @return {string} Last file without params.\n     */\n    getLastFileWithoutParams(url: string): string {\n        let filename = url.substr(url.lastIndexOf('/') + 1);\n        if (filename.indexOf('?') != -1) {\n            filename = filename.substr(0, filename.indexOf('?'));\n        }\n\n        return filename;\n    }\n\n    /**\n     * Get the protocol from a URL.\n     * E.g. http://www.google.com returns 'http'.\n     *\n     * @param {string} url URL to treat.\n     * @return {string} Protocol, undefined if no protocol found.\n     */\n    getUrlProtocol(url: string): string {\n        if (!url) {\n            return;\n        }\n\n        const matches = url.match(/^([^\\/:\\.\\?]*):\\/\\//);\n        if (matches && matches[1]) {\n            return matches[1];\n        }\n    }\n\n    /**\n     * Get the scheme from a URL. Please notice that, if a URL has protocol, it will return the protocol.\n     * E.g. javascript:doSomething() returns 'javascript'.\n     *\n     * @param {string} url URL to treat.\n     * @return {string} Scheme, undefined if no scheme found.\n     */\n    getUrlScheme(url: string): string {\n        if (!url) {\n            return;\n        }\n\n        const matches = url.match(/^([a-z][a-z0-9+\\-.]*):/);\n        if (matches && matches[1]) {\n            return matches[1];\n        }\n    }\n\n    /*\n     * Gets a username from a URL like: user@mysite.com.\n     *\n     * @param {string} url URL to treat.\n     * @return {string} Username. Undefined if no username found.\n     */\n    getUsernameFromUrl(url: string): string {\n        if (url.indexOf('@') > -1) {\n            // Get URL without protocol.\n            const withoutProtocol = url.replace(/.*?:\\/\\//, ''),\n                matches = withoutProtocol.match(/[^@]*/);\n\n            // Make sure that @ is at the start of the URL, not in a param at the end.\n            if (matches && matches.length && !matches[0].match(/[\\/|?]/)) {\n                return matches[0];\n            }\n        }\n    }\n\n    /**\n     * Returns if a URL has any protocol (not a relative URL).\n     *\n     * @param {string} url The url to test against the pattern.\n     * @return {boolean} Whether the url is absolute.\n     */\n    isAbsoluteURL(url: string): boolean {\n        return /^[^:]{2,}:\\/\\//i.test(url) || /^(tel:|mailto:|geo:)/.test(url);\n    }\n\n    /**\n     * Returns if a URL is downloadable: plugin file OR theme/image.php OR gravatar.\n     *\n     * @param {string} url The URL to test.\n     * @return {boolean} Whether the URL is downloadable.\n     */\n    isDownloadableUrl(url: string): boolean {\n        return this.isPluginFileUrl(url) || this.isThemeImageUrl(url) || this.isGravatarUrl(url);\n    }\n\n    /**\n     * Returns if a URL is a gravatar URL.\n     *\n     * @param {string} url The URL to test.\n     * @return {boolean} Whether the URL is a gravatar URL.\n     */\n    isGravatarUrl(url: string): boolean {\n        return url && url.indexOf('gravatar.com/avatar') !== -1;\n    }\n\n    /**\n     * Check if a URL uses http or https protocol.\n     *\n     * @param {string} url The url to test.\n     * @return {boolean} Whether the url uses http or https protocol.\n     */\n    isHttpURL(url: string): boolean {\n        return /^https?\\:\\/\\/.+/i.test(url);\n    }\n\n    /**\n     * Returns if a URL is a pluginfile URL.\n     *\n     * @param {string} url The URL to test.\n     * @return {boolean} Whether the URL is a pluginfile URL.\n     */\n    isPluginFileUrl(url: string): boolean {\n        return url && url.indexOf('/pluginfile.php') !== -1;\n    }\n\n    /**\n     * Returns if a URL is a theme image URL.\n     *\n     * @param {string} url The URL to test.\n     * @return {boolean} Whether the URL is a theme image URL.\n     */\n    isThemeImageUrl(url: string): boolean {\n        return url && url.indexOf('/theme/image.php') !== -1;\n    }\n\n    /**\n     * Remove protocol and www from a URL.\n     *\n     * @param {string} url URL to treat.\n     * @return {string} Treated URL.\n     */\n    removeProtocolAndWWW(url: string): string {\n        // Remove protocol.\n        url = url.replace(/.*?:\\/\\//g, '');\n        // Remove www.\n        url = url.replace(/^www./, '');\n\n        return url;\n    }\n\n    /**\n     * Remove the parameters from a URL, returning the URL without them.\n     *\n     * @param {string} url URL to treat.\n     * @return {string} URL without params.\n     */\n    removeUrlParams(url: string): string {\n        const matches = url.match(/^[^\\?]+/);\n\n        return matches && matches[0];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/utils/url.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreContentLinksHandler, CoreContentLinksAction } from '../providers/delegate';\n\n/**\n * Base handler to be registered in CoreContentLinksHandler. It is useful to minimize the amount of\n * functions that handlers need to implement.\n *\n * It allows you to specify a \"pattern\" (RegExp) that will be used to check if the handler handles a URL and to get its site URL.\n */\nexport class CoreContentLinksHandlerBase implements CoreContentLinksHandler {\n    /**\n     * A name to identify the handler.\n     * @type {string}\n     */\n    name = 'CoreContentLinksHandlerBase';\n\n    /**\n     * Handler's priority. The highest priority is treated first.\n     * @type {number}\n     */\n    priority = 0;\n\n    /**\n     * Whether the isEnabled function should be called for all the users in a site. It should be true only if the isEnabled call\n     * can return different values for different users in same site.\n     * @type {boolean}\n     */\n    checkAllUsers = false;\n\n    /**\n     * Name of the feature this handler is related to.\n     * It will be used to check if the feature is disabled (@see CoreSite.isFeatureDisabled).\n     * @type {string}\n     */\n    featureName = '';\n\n    /**\n     * A pattern to use to detect if the handler handles a URL and to get its site URL. Required if \"handles\" and\n     * \"getSiteUrl\" functions aren't overridden.\n     * @type {RexExp}\n     */\n    pattern?: RegExp;\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n        CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [];\n    }\n\n    /**\n     * Check if a URL is handled by this handler.\n     *\n     * @param {string} url The URL to check.\n     * @return {boolean} Whether the URL is handled by this handler\n     */\n    handles(url: string): boolean {\n        return this.pattern && url.search(this.pattern) >= 0;\n    }\n\n    /**\n     * If the URL is handled by this handler, return the site URL.\n     *\n     * @param {string} url The URL to check.\n     * @return {string} Site URL if it is handled, undefined otherwise.\n     */\n    getSiteUrl(url: string): string {\n        if (this.pattern) {\n            const position = url.search(this.pattern);\n            if (position > -1) {\n                return url.substr(0, position);\n            }\n        }\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        return true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/contentlinks/classes/base-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CoreLoggerProvider } from '../logger';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreTextUtilsProvider } from './text';\n\n/*\n * \"Utils\" service with helper functions for mimetypes and extensions.\n */\n@Injectable()\nexport class CoreMimetypeUtilsProvider {\n    protected logger;\n    protected extToMime = {}; // Object to map extensions -> mimetypes.\n    protected mimeToExt = {}; // Object to map mimetypes -> extensions.\n    protected groupsMimeInfo = {}; // Object to hold extensions and mimetypes that belong to a certain \"group\" (audio, video, ...).\n    protected extensionRegex = /^[a-z0-9]+$/;\n    protected wsProvider: any = {}; // @todo\n\n    constructor(http: HttpClient, logger: CoreLoggerProvider, private translate: TranslateService,\n            private textUtils: CoreTextUtilsProvider) {\n        this.logger = logger.getInstance('CoreMimetypeUtilsProvider');\n\n        http.get('assets/exttomime.json').subscribe((result) => {\n            this.extToMime = result;\n        }, (err) => {\n            // Error, shouldn't happen.\n        });\n\n        http.get('assets/mimetoext.json').subscribe((result) => {\n            this.mimeToExt = result;\n        }, (err) => {\n            // Error, shouldn't happen.\n        });\n    }\n\n    /**\n     * Check if a file extension can be embedded without using iframes.\n     *\n     * @param {string} extension Extension.\n     * @return {boolean} Whether it can be embedded.\n     */\n    canBeEmbedded(extension: string): boolean {\n        return this.isExtensionInGroup(extension, ['web_image', 'web_video', 'web_audio']);\n    }\n\n    /**\n     * Clean a extension, removing the dot, hash, extra params...\n     *\n     * @param {string} extension Extension to clean.\n     * @return {string} Clean extension.\n     */\n    cleanExtension(extension: string): string {\n        if (!extension) {\n            return extension;\n        }\n\n        // If the extension has parameters, remove them.\n        const position = extension.indexOf('?');\n        if (position > -1) {\n            extension = extension.substr(0, position);\n        }\n\n        // Remove hash in extension if there's any (added by filepool).\n        extension = extension.replace(/_.{32}$/, '');\n\n        // Remove dot from the extension if found.\n        if (extension && extension[0] == '.') {\n            extension = extension.substr(1);\n        }\n\n        return extension;\n    }\n\n    /**\n     * Fill the mimetypes and extensions info for a certain group.\n     *\n     * @param {string} group Group name.\n     */\n    protected fillGroupMimeInfo(group: string): void {\n        const mimetypes = {}, // Use an object to prevent duplicates.\n            extensions = []; // Extensions are unique.\n\n        for (const extension in this.extToMime) {\n            const data = this.extToMime[extension];\n            if (data.type && data.groups && data.groups.indexOf(group) != -1) {\n                // This extension has the group, add it to the list.\n                mimetypes[data.type] = true;\n                extensions.push(extension);\n            }\n        }\n\n        this.groupsMimeInfo[group] = {\n            mimetypes: Object.keys(mimetypes),\n            extensions: extensions\n        };\n    }\n\n    /**\n     * Get the extension of a mimetype. Returns undefined if not found.\n     *\n     * @param {string} mimetype Mimetype.\n     * @param {string} [url] URL of the file. It will be used if there's more than one possible extension.\n     * @return {string} Extension.\n     */\n    getExtension(mimetype: string, url?: string): string {\n        mimetype = mimetype || '';\n        mimetype = mimetype.split(';')[0]; // Remove codecs from the mimetype if any.\n\n        if (mimetype == 'application/x-forcedownload' || mimetype == 'application/forcedownload') {\n            // Couldn't get the right mimetype, try to guess it.\n            return this.guessExtensionFromUrl(url);\n        }\n\n        const extensions = this.mimeToExt[mimetype];\n        if (extensions && extensions.length) {\n            if (extensions.length > 1 && url) {\n                // There's more than one possible extension. Check if the URL has extension.\n                const candidate = this.guessExtensionFromUrl(url);\n                if (extensions.indexOf(candidate) != -1) {\n                    return candidate;\n                }\n            }\n\n            return extensions[0];\n        }\n    }\n\n    /**\n     * Get the \"type\" (string) of an extension, something like \"image\", \"video\" or \"audio\".\n     *\n     * @param {string} extension Extension.\n     * @return {string} Type of the extension.\n     */\n    getExtensionType(extension: string): string {\n        extension = this.cleanExtension(extension);\n\n        if (this.extToMime[extension] && this.extToMime[extension].string) {\n            return this.extToMime[extension].string;\n        }\n    }\n\n    /**\n     * Get all the possible extensions of a mimetype. Returns empty array if not found.\n     *\n     * @param {string} mimetype Mimetype.\n     * @return {string[]} Extensions.\n     */\n    getExtensions(mimetype: string): string[] {\n        mimetype = mimetype || '';\n        mimetype = mimetype.split(';')[0]; // Remove codecs from the mimetype if any.\n\n        return this.mimeToExt[mimetype] || [];\n    }\n\n    /**\n     * Get a file icon URL based on its file name.\n     *\n     * @param {string} The name of the file.\n     * @return {string} The path to a file icon.\n     */\n    getFileIcon(filename: string): string {\n        const ext = this.getFileExtension(filename);\n        let icon = 'unknown';\n\n        if (ext && this.extToMime[ext]) {\n            if (this.extToMime[ext].icon) {\n                icon = this.extToMime[ext].icon;\n            } else {\n                const type = this.extToMime[ext].type.split('/')[0];\n                if (type == 'video' || type == 'text' || type == 'image' || type == 'document' || type == 'audio') {\n                    icon = type;\n                }\n            }\n        }\n\n        return 'assets/img/files/' + icon + '-64.png';\n    }\n\n    /**\n     * Get the folder icon URL.\n     *\n     * @return {string} The path to a folder icon.\n     */\n    getFolderIcon(): string {\n        return 'assets/img/files/folder-64.png';\n    }\n\n    /**\n     * Get the mimetype of a file given its URL. It'll try to guess it using the URL, if that fails then it'll\n     * perform a HEAD request to get it. It's done in this order because pluginfile.php can return wrong mimetypes.\n     *\n     * @param {string} url The URL of the file.\n     * @return {Promise<string>} Promise resolved with the mimetype.\n     */\n    getMimeTypeFromUrl(url: string): Promise<string> {\n        // First check if it can be guessed from the URL.\n        const extension = this.guessExtensionFromUrl(url),\n            mimetype = this.getMimeType(extension);\n\n        if (mimetype) {\n            return Promise.resolve(mimetype);\n        }\n\n        // Can't be guessed, get the remote mimetype.\n        return this.wsProvider.getRemoteFileMimeType(url).then((mimetype) => {\n            return mimetype || '';\n        });\n    }\n\n    /**\n     * Guess the extension of a file from its URL.\n     * This is very weak and unreliable.\n     *\n     * @param {string} fileUrl The file URL.\n     * @return {string} The lowercased extension without the dot, or undefined.\n     */\n    guessExtensionFromUrl(fileUrl: string): string {\n        const split = fileUrl.split('.');\n        let candidate,\n            extension,\n            position;\n\n        if (split.length > 1) {\n            candidate = split.pop().toLowerCase();\n            // Remove params if any.\n            position = candidate.indexOf('?');\n            if (position > -1) {\n                candidate = candidate.substr(0, position);\n            }\n\n            if (this.extensionRegex.test(candidate)) {\n                extension = candidate;\n            }\n        }\n\n        // Check extension corresponds to a mimetype to know if it's valid.\n        if (extension && typeof this.getMimeType(extension) == 'undefined') {\n            this.logger.warn('Guess file extension: Not valid extension ' + extension);\n\n            return;\n        }\n\n        return extension;\n    }\n\n    /**\n     * Returns the file extension of a file.\n     * When the file does not have an extension, it returns undefined.\n     *\n     * @param {string} filename The file name.\n     * @return {string} The lowercased extension, or undefined.\n     */\n    getFileExtension(filename: string): string {\n        const dot = filename.lastIndexOf('.');\n        let ext;\n\n        if (dot > -1) {\n            ext = filename.substr(dot + 1).toLowerCase();\n            ext = this.cleanExtension(ext);\n\n            // Check extension corresponds to a mimetype to know if it's valid.\n            if (typeof this.getMimeType(ext) == 'undefined') {\n                this.logger.warn('Get file extension: Not valid extension ' + ext);\n\n                return;\n            }\n        }\n\n        return ext;\n    }\n\n    /**\n     * Get the mimetype/extension info belonging to a certain group.\n     *\n     * @param {string} group Group name.\n     * @param {string} [field] The field to get. If not supplied, all the info will be returned.\n     * @return {any} Info for the group.\n     */\n    getGroupMimeInfo(group: string, field?: string): any {\n        if (typeof this.groupsMimeInfo[group] == 'undefined') {\n            this.fillGroupMimeInfo(group);\n        }\n\n        if (field) {\n            return this.groupsMimeInfo[group][field];\n        }\n\n        return this.groupsMimeInfo[group];\n    }\n\n    /**\n     * Get the mimetype of an extension. Returns undefined if not found.\n     *\n     * @param {string} extension Extension.\n     * @return {string} Mimetype.\n     */\n    getMimeType(extension: string): string {\n        extension = this.cleanExtension(extension);\n\n        if (this.extToMime[extension] && this.extToMime[extension].type) {\n            return this.extToMime[extension].type;\n        }\n    }\n\n    /**\n     * Obtains descriptions for file types (e.g. 'Microsoft Word document') from the language file.\n     * Based on Moodle's get_mimetype_description.\n     *\n     * @param {any} obj Instance of FileEntry OR object with 'filename' and 'mimetype' OR string with mimetype.\n     * @param {boolean} [capitalise] If true, capitalises first character of result.\n     * @return {string} Type description.\n     */\n    getMimetypeDescription(obj: any, capitalise?: boolean): string {\n        const langPrefix = 'assets.mimetypes.';\n        let filename = '',\n            mimetype = '',\n            extension = '';\n\n        if (typeof obj == 'object' && typeof obj.file == 'function') {\n            // It's a FileEntry. Don't use the file function because it's asynchronous and the type isn't reliable.\n            filename = obj.name;\n        } else if (typeof obj == 'object') {\n            filename = obj.filename || '';\n            mimetype = obj.mimetype || '';\n        } else {\n            mimetype = obj;\n        }\n\n        if (filename) {\n            extension = this.getFileExtension(filename);\n\n            if (!mimetype) {\n                // Try to calculate the mimetype using the extension.\n                mimetype = this.getMimeType(extension);\n            }\n        }\n\n        if (!mimetype) {\n            // Don't have the mimetype, stop.\n            return '';\n        }\n\n        if (!extension) {\n            extension = this.getExtension(mimetype);\n        }\n\n        const mimetypeStr = this.getMimetypeType(mimetype) || '',\n            chunks = mimetype.split('/'),\n            attr = {\n                mimetype: mimetype,\n                ext: extension || '',\n                mimetype1: chunks[0],\n                mimetype2: chunks[1] || '',\n            },\n            translateParams = {};\n\n        for (const key in attr) {\n            const value = attr[key];\n            translateParams[key] = value;\n            translateParams[key.toUpperCase()] = value.toUpperCase();\n            translateParams[this.textUtils.ucFirst(key)] = this.textUtils.ucFirst(value);\n        }\n\n        // MIME types may include + symbol but this is not permitted in string ids.\n        const safeMimetype = mimetype.replace(/\\+/g, '_'),\n            safeMimetypeStr = mimetypeStr.replace(/\\+/g, '_'),\n            safeMimetypeTrns = this.translate.instant(langPrefix + safeMimetype, { $a: translateParams }),\n            safeMimetypeStrTrns = this.translate.instant(langPrefix + safeMimetypeStr, { $a: translateParams }),\n            defaultTrns = this.translate.instant(langPrefix + 'default', { $a: translateParams });\n        let result = mimetype;\n\n        if (safeMimetypeTrns != langPrefix + safeMimetype) {\n            result = safeMimetypeTrns;\n        } else if (safeMimetypeStrTrns != langPrefix + safeMimetypeStr) {\n            result = safeMimetypeStrTrns;\n        } else if (defaultTrns != langPrefix + 'default') {\n            result = defaultTrns;\n        }\n\n        if (capitalise) {\n            result = this.textUtils.ucFirst(result);\n        }\n\n        return result;\n    }\n\n    /**\n     * Get the \"type\" (string) of a mimetype, something like \"image\", \"video\" or \"audio\".\n     *\n     * @param {string} mimetype Mimetype.\n     * @return {string} Type of the mimetype.\n     */\n    getMimetypeType(mimetype: string): string {\n        mimetype = mimetype.split(';')[0]; // Remove codecs from the mimetype if any.\n\n        const extensions = this.mimeToExt[mimetype];\n        if (!extensions) {\n            return;\n        }\n\n        for (let i = 0; i < extensions.length; i++) {\n            const extension = extensions[i];\n            if (this.extToMime[extension] && this.extToMime[extension].string) {\n                return this.extToMime[extension].string;\n            }\n        }\n    }\n\n    /**\n     * Given a group name, return the translated name.\n     *\n     * @param {string} name Group name.\n     * @return {string} Translated name.\n     */\n    getTranslatedGroupName(name: string): string {\n        const key = 'assets.mimetypes.group:' + name,\n            translated = this.translate.instant(key);\n\n        return translated != key ? translated : name;\n    }\n\n    /**\n     * Check if an extension belongs to at least one of the groups.\n     * Similar to Moodle's file_mimetype_in_typegroup, but using the extension instead of mimetype.\n     *\n     * @param {string} extension Extension.\n     * @param {string[]} groups List of groups to check.\n     * @return {boolean} Whether the extension belongs to any of the groups.\n     */\n    isExtensionInGroup(extension: string, groups: string[]): boolean {\n        extension = this.cleanExtension(extension);\n\n        if (groups && groups.length && this.extToMime[extension] && this.extToMime[extension].groups) {\n            for (let i = 0; i < this.extToMime[extension].groups.length; i++) {\n                const group = this.extToMime[extension].groups[i];\n                if (groups.indexOf(group) != -1) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Remove the extension from a path (if any).\n     *\n     * @param {string} path Path.\n     * @return {string} Path without extension.\n     */\n    removeExtension(path: string): string {\n        const position = path.lastIndexOf('.');\n        let extension;\n\n        if (position > -1) {\n            // Check extension corresponds to a mimetype to know if it's valid.\n            extension = path.substr(position + 1);\n            if (typeof this.getMimeType(extension) != 'undefined') {\n                return path.substr(0, position); // Remove extension.\n            }\n        }\n\n        return path;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/utils/mimetype.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreInitDelegate } from '@providers/init';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\nimport { CoreContentLinksDelegate, CoreContentLinksAction } from './delegate';\nimport { CoreConstants } from '@core/constants';\nimport { CoreConfigConstants } from '../../../configconstants';\nimport { CoreSitePluginsProvider } from '@core/siteplugins/providers/siteplugins';\n\n/**\n * Service that provides some features regarding content links.\n */\n@Injectable()\nexport class CoreContentLinksHelperProvider {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private loginHelper: CoreLoginHelperProvider,\n            private contentLinksDelegate: CoreContentLinksDelegate, private appProvider: CoreAppProvider,\n            private domUtils: CoreDomUtilsProvider, private urlUtils: CoreUrlUtilsProvider, private translate: TranslateService,\n            private initDelegate: CoreInitDelegate, eventsProvider: CoreEventsProvider, private textUtils: CoreTextUtilsProvider,\n            private sitePluginsProvider: CoreSitePluginsProvider) {\n        this.logger = logger.getInstance('CoreContentLinksHelperProvider');\n\n        // Listen for app launched URLs. If we receive one, check if it's a content link.\n        eventsProvider.on(CoreEventsProvider.APP_LAUNCHED_URL, this.handleCustomUrl.bind(this));\n    }\n\n    /**\n     * Get the first valid action in a list of actions.\n     *\n     * @param {CoreContentLinksAction[]} actions List of actions.\n     * @return {CoreContentLinksAction} First valid action. Returns undefined if no valid action found.\n     */\n    getFirstValidAction(actions: CoreContentLinksAction[]): CoreContentLinksAction {\n        if (actions) {\n            for (let i = 0; i < actions.length; i++) {\n                const action = actions[i];\n                if (action && action.sites && action.sites.length) {\n                    return action;\n                }\n            }\n        }\n    }\n\n    /**\n     * Goes to a certain page in a certain site. If the site is current site it will perform a regular navigation,\n     * otherwise it will 'redirect' to the other site.\n     *\n     * @param {NavController} navCtrl The NavController instance to use.\n     * @param {string} pageName Name of the page to go.\n     * @param {any} [pageParams] Params to send to the page.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    goInSite(navCtrl: NavController, pageName: string, pageParams: any, siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n        if (navCtrl && siteId == this.sitesProvider.getCurrentSiteId()) {\n            navCtrl.push(pageName, pageParams);\n        } else {\n            this.loginHelper.redirect(pageName, pageParams, siteId);\n        }\n    }\n\n    /**\n     * Go to the page to choose a site.\n     *\n     * @param {string} url URL to treat.\n     */\n    goToChooseSite(url: string): void {\n        this.appProvider.getRootNavController().setRoot('CoreContentLinksChooseSitePage', { url: url });\n    }\n\n    /**\n     * Handle a URL received by Custom URL Scheme.\n     *\n     * @param {string} url URL to handle.\n     * @return {boolean} True if the URL should be handled by this component, false otherwise.\n     */\n    handleCustomUrl(url: string): boolean {\n        const contentLinksScheme = CoreConfigConstants.customurlscheme + '://link';\n        if (url.indexOf(contentLinksScheme) == -1) {\n            return false;\n        }\n\n        const modal = this.domUtils.showModalLoading();\n        let username;\n\n        url = this.textUtils.decodeURIComponent(url);\n\n        // App opened using custom URL scheme.\n        this.logger.debug('Treating custom URL scheme: ' + url);\n\n        // Delete the scheme from the URL.\n        url = url.replace(contentLinksScheme + '=', '');\n\n        // Detect if there's a user specified.\n        username = this.urlUtils.getUsernameFromUrl(url);\n        if (username) {\n            url = url.replace(username + '@', ''); // Remove the username from the URL.\n        }\n\n        // Wait for the app to be ready.\n        this.initDelegate.ready().then(() => {\n            // Check if the site is stored.\n            return this.sitesProvider.getSiteIdsFromUrl(url, false, username);\n        }).then((siteIds) => {\n            if (siteIds.length) {\n                modal.dismiss(); // Dismiss modal so it doesn't collide with confirms.\n\n                return this.handleLink(url, username).then((treated) => {\n                    if (!treated) {\n                        this.domUtils.showErrorModal('core.contentlinks.errornoactions', true);\n                    }\n                });\n            } else {\n                // Get the site URL.\n                const siteUrl = this.contentLinksDelegate.getSiteUrl(url);\n                if (!siteUrl) {\n                    this.domUtils.showErrorModal('core.login.invalidsite', true);\n\n                    return;\n                }\n\n                // Check that site exists.\n                return this.sitesProvider.checkSite(siteUrl).then((result) => {\n                    // Site exists. We'll allow to add it.\n                    const ssoNeeded = this.loginHelper.isSSOLoginNeeded(result.code),\n                        pageName = 'CoreLoginCredentialsPage',\n                        pageParams = {\n                            siteUrl: result.siteUrl,\n                            username: username,\n                            urlToOpen: url,\n                            siteConfig: result.config\n                        };\n                    let promise,\n                        hasSitePluginsLoaded = false;\n\n                    modal.dismiss(); // Dismiss modal so it doesn't collide with confirms.\n\n                    if (!this.sitesProvider.isLoggedIn()) {\n                        // Not logged in, no need to confirm. If SSO the confirm will be shown later.\n                        promise = Promise.resolve();\n                    } else {\n                        // Ask the user before changing site.\n                        const confirmMsg = this.translate.instant('core.contentlinks.confirmurlothersite');\n                        promise = this.domUtils.showConfirm(confirmMsg).then(() => {\n                            if (!ssoNeeded) {\n                                hasSitePluginsLoaded = this.sitePluginsProvider.hasSitePluginsLoaded;\n                                if (hasSitePluginsLoaded) {\n                                    // Store the redirect since logout will restart the app.\n                                    this.appProvider.storeRedirect(CoreConstants.NO_SITE_ID, pageName, pageParams);\n                                }\n\n                                return this.sitesProvider.logout().catch(() => {\n                                    // Ignore errors (shouldn't happen).\n                                });\n                            }\n                        });\n                    }\n\n                    return promise.then(() => {\n                        if (ssoNeeded) {\n                            this.loginHelper.confirmAndOpenBrowserForSSOLogin(\n                                result.siteUrl, result.code, result.service, result.config && result.config.launchurl);\n                        } else if (!hasSitePluginsLoaded) {\n                            this.appProvider.getRootNavController().setRoot(pageName, pageParams);\n                        }\n                    });\n\n                }).catch((error) => {\n                    if (error) {\n                        this.domUtils.showErrorModal(error);\n                    }\n                });\n            }\n        }).finally(() => {\n            modal.dismiss();\n        });\n\n        return true;\n    }\n\n    /**\n     * Handle a link.\n     *\n     * @param {string} url URL to handle.\n     * @param {string} [username] Username related with the URL. E.g. in 'http://myuser@m.com', url would be 'http://m.com' and\n     *                            the username 'myuser'. Don't use it if you don't want to filter by username.\n     * @param {NavController} [navCtrl] Nav Controller to use to navigate.\n     * @return {Promise<boolean>} Promise resolved with a boolean: true if URL was treated, false otherwise.\n     */\n    handleLink(url: string, username?: string, navCtrl?: NavController): Promise<boolean> {\n        // Check if the link should be treated by some component/addon.\n        return this.contentLinksDelegate.getActionsFor(url, undefined, username).then((actions) => {\n            const action = this.getFirstValidAction(actions);\n            if (action) {\n                if (!this.sitesProvider.isLoggedIn()) {\n                    // No current site. Perform the action if only 1 site found, choose the site otherwise.\n                    if (action.sites.length == 1) {\n                        action.action(action.sites[0], navCtrl);\n                    } else {\n                        this.goToChooseSite(url);\n                    }\n                } else if (action.sites.length == 1 && action.sites[0] == this.sitesProvider.getCurrentSiteId()) {\n                    // Current site.\n                    action.action(action.sites[0], navCtrl);\n                } else {\n                    // Not current site or more than one site. Ask for confirmation.\n                    this.domUtils.showConfirm(this.translate.instant('core.contentlinks.confirmurlothersite')).then(() => {\n                        if (action.sites.length == 1) {\n                            action.action(action.sites[0], navCtrl);\n                        } else {\n                            this.goToChooseSite(url);\n                        }\n                    });\n                }\n\n                return true;\n            }\n\n            return false;\n        }).catch(() => {\n            return false;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/contentlinks/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Interface that all handlers must implement.\n */\nexport interface CoreContentLinksHandler {\n    /**\n     * A name to identify the handler.\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Handler's priority. The highest priority is treated first.\n     * @type {number}\n     */\n    priority?: number;\n\n    /**\n     * Whether the isEnabled function should be called for all the users in a site. It should be true only if the isEnabled call\n     * can return different values for different users in same site.\n     * @type {boolean}\n     */\n    checkAllUsers?: boolean;\n\n    /**\n     * Name of the feature this handler is related to.\n     * It will be used to check if the feature is disabled (@see CoreSite.isFeatureDisabled).\n     * @type {string}\n     */\n    featureName?: string;\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n        CoreContentLinksAction[] | Promise<CoreContentLinksAction[]>;\n\n    /**\n     * Check if a URL is handled by this handler.\n     *\n     * @param {string} url The URL to check.\n     * @return {boolean} Whether the URL is handled by this handler\n     */\n    handles(url: string): boolean;\n\n    /**\n     * If the URL is handled by this handler, return the site URL.\n     *\n     * @param {string} url The URL to check.\n     * @return {string} Site URL if it is handled, undefined otherwise.\n     */\n    getSiteUrl(url: string): string;\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled?(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean>;\n}\n\n/**\n * Action to perform when a link is clicked.\n */\nexport interface CoreContentLinksAction {\n    /**\n     * A message to identify the action. Default: 'core.view'.\n     * @type {string}\n     */\n    message?: string;\n\n    /**\n     * Name of the icon of the action. Default: 'eye'.\n     * @type {string}\n     */\n    icon?: string;\n\n    /**\n     * IDs of the sites that support the action.\n     * @type {string[]}\n     */\n    sites?: string[];\n\n    /**\n     * Action to perform when the link is clicked.\n     *\n     * @param {string} siteId The site ID.\n     * @param {NavController} [navCtrl] Nav Controller to use to navigate.\n     */\n    action(siteId: string, navCtrl?: NavController): void;\n}\n\n/**\n * Actions and priority for a handler and URL.\n */\nexport interface CoreContentLinksHandlerActions {\n    /**\n     * Handler's priority.\n     * @type {number}\n     */\n    priority: number;\n\n    /**\n     * List of actions.\n     * @type {CoreContentLinksAction[]}\n     */\n    actions: CoreContentLinksAction[];\n}\n\n/**\n * Delegate to register handlers to handle links.\n */\n@Injectable()\nexport class CoreContentLinksDelegate {\n    protected logger;\n    protected handlers: { [s: string]: CoreContentLinksHandler } = {}; // All registered handlers.\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private urlUtils: CoreUrlUtilsProvider,\n            private utils: CoreUtilsProvider) {\n        this.logger = logger.getInstance('CoreContentLinksDelegate');\n    }\n\n    /**\n     * Get the list of possible actions to do for a URL.\n     *\n     * @param {string} url URL to handle.\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @param {string} [username] Username to use to filter sites.\n     * @return {Promise<CoreContentLinksAction[]>}  Promise resolved with the actions.\n     */\n    getActionsFor(url: string, courseId?: number, username?: string): Promise<CoreContentLinksAction[]> {\n        if (!url) {\n            return Promise.resolve([]);\n        }\n\n        // Get the list of sites the URL belongs to.\n        return this.sitesProvider.getSiteIdsFromUrl(url, true, username).then((siteIds) => {\n            const linkActions: CoreContentLinksHandlerActions[] = [],\n                promises = [],\n                params = this.urlUtils.extractUrlParams(url);\n\n            for (const name in this.handlers) {\n                const handler = this.handlers[name],\n                    checkAll = handler.checkAllUsers,\n                    isEnabledFn = this.isHandlerEnabled.bind(this, handler, url, params, courseId);\n\n                if (!handler.handles(url)) {\n                    // Invalid handler or it doesn't handle the URL. Stop.\n                    continue;\n                }\n\n                // Filter the site IDs using the isEnabled function.\n                promises.push(this.utils.filterEnabledSites(siteIds, isEnabledFn, checkAll).then((siteIds) => {\n                    if (!siteIds.length) {\n                        // No sites supported, no actions.\n                        return;\n                    }\n\n                    return Promise.resolve(handler.getActions(siteIds, url, params, courseId)).then((actions) => {\n                        if (actions && actions.length) {\n                            // Set default values if any value isn't supplied.\n                            actions.forEach((action) => {\n                                action.message = action.message || 'core.view';\n                                action.icon = action.icon || 'eye';\n                                action.sites = action.sites || siteIds;\n                            });\n\n                            // Add them to the list.\n                            linkActions.push({\n                                priority: handler.priority,\n                                actions: actions\n                            });\n                        }\n                    });\n                }));\n            }\n\n            return this.utils.allPromises(promises).catch(() => {\n                // Ignore errors.\n            }).then(() => {\n                // Sort link actions by priority.\n                return this.sortActionsByPriority(linkActions);\n            });\n        });\n    }\n\n    /**\n     * Get the site URL if the URL is supported by any handler.\n     *\n     * @param {string} url URL to handle.\n     * @return {string} Site URL if the URL is supported by any handler, undefined otherwise.\n     */\n    getSiteUrl(url: string): string {\n        if (!url) {\n            return;\n        }\n\n        // Check if any handler supports this URL.\n        for (const name in this.handlers) {\n            const handler = this.handlers[name],\n                siteUrl = handler.getSiteUrl(url);\n\n            if (siteUrl) {\n                return siteUrl;\n            }\n        }\n    }\n\n    /**\n     * Check if a handler is enabled for a certain site and URL.\n     *\n     * @param {CoreContentLinksHandler} handler Handler to check.\n     * @param {string} url The URL to check.\n     * @param {any} params The params of the URL\n     * @param {number} courseId Course ID the URL belongs to (can be undefined).\n     * @param {string} siteId The site ID to check.\n     * @return {Promise<boolean>} Promise resolved with boolean: whether the handler is enabled.\n     */\n    protected isHandlerEnabled(handler: CoreContentLinksHandler, url: string, params: any, courseId: number, siteId: string)\n            : Promise<boolean> {\n        let promise;\n\n        if (handler.featureName) {\n            // Check if the feature is disabled.\n            promise = this.sitesProvider.isFeatureDisabled(handler.featureName, siteId);\n        } else {\n            promise = Promise.resolve(false);\n        }\n\n        return promise.then((disabled) => {\n            if (disabled) {\n                return false;\n            }\n\n            if (!handler.isEnabled) {\n                // Handler doesn't implement isEnabled, assume it's enabled.\n                return true;\n            }\n\n            return handler.isEnabled(siteId, url, params, courseId);\n        });\n    }\n\n    /**\n     * Register a handler.\n     *\n     * @param {CoreContentLinksHandler} handler The handler to register.\n     * @return {boolean} True if registered successfully, false otherwise.\n     */\n    registerHandler(handler: CoreContentLinksHandler): boolean {\n        if (typeof this.handlers[handler.name] !== 'undefined') {\n            this.logger.log(`Addon '${handler.name}' already registered`);\n\n            return false;\n        }\n        this.logger.log(`Registered addon '${handler.name}'`);\n        this.handlers[handler.name] = handler;\n\n        return true;\n    }\n\n    /**\n     * Sort actions by priority.\n     *\n     * @param {CoreContentLinksHandlerActions[]} actions Actions to sort.\n     * @return {CoreContentLinksAction[]} Sorted actions.\n     */\n    protected sortActionsByPriority(actions: CoreContentLinksHandlerActions[]): CoreContentLinksAction[] {\n        let sorted: CoreContentLinksAction[] = [];\n\n        // Sort by priority.\n        actions = actions.sort((a, b) => {\n            return a.priority <= b.priority ? 1 : -1;\n        });\n\n        // Fill result array.\n        actions.forEach((entry) => {\n            sorted = sorted.concat(entry.actions);\n        });\n\n        return sorted;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/contentlinks/providers/delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreEventsProvider } from '@providers/events';\nimport { Subject, BehaviorSubject } from 'rxjs';\n\n/**\n * Interface that all user profile handlers must implement.\n */\nexport interface CoreUserProfileHandler extends CoreDelegateHandler {\n    /**\n     * The highest priority is displayed first.\n     * @type {number}\n     */\n    priority: number;\n\n    /**\n     * A type should be specified among these:\n     * - TYPE_COMMUNICATION: will be displayed under the user avatar. Should have icon. Spinner not used.\n     * - TYPE_NEW_PAGE: will be displayed as a list of items. Should have icon. Spinner not used.\n     *     Default value if none is specified.\n     * - TYPE_ACTION: will be displayed as a button and should not redirect to any state. Spinner use is recommended.\n     * @type {string}\n     */\n    type: string;\n\n    /**\n     * Whether or not the handler is enabled for a user.\n     * @param  {any}     user       User object.\n     * @param  {number}  courseId   Course ID where to show.\n     * @param  {any}     [navOptions] Navigation options for the course.\n     * @param  {any}     [admOptions] Admin options for the course.\n     * @return {boolean|Promise<boolean>}            Whether or not the handler is enabled for a user.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean | Promise<boolean>;\n\n    /**\n     * Returns the data needed to render the handler.\n     * @param  {any}     user       User object.\n     * @param  {number}  courseId   Course ID where to show.\n     * @return {CoreUserProfileHandlerData}    Data to be shown.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData;\n}\n\n/**\n * Data needed to render a user profile handler. It's returned by the handler.\n */\nexport interface CoreUserProfileHandlerData {\n    /**\n     * Title to display.\n     * @type {string}\n     */\n    title: string;\n\n    /**\n     * Name of the icon to display. Mandatory for TYPE_COMMUNICATION.\n     * @type {string}\n     */\n    icon?: string;\n\n    /**\n     * Additional class to add to the HTML.\n     * @type {string}\n     */\n    class?: string;\n\n    /**\n     * If enabled, element will be hidden. Only for TYPE_NEW_PAGE and TYPE_ACTION.\n     * @type {boolean}\n     */\n    hidden?: boolean;\n\n    /**\n     * If enabled will show an spinner. Only for TYPE_ACTION.\n     * @type {boolean}\n     */\n    spinner?: boolean;\n\n    /**\n     * Action to do when clicked.\n     *\n     * @param {Event} event Click event.\n     * @param {NavController} Nav controller to use to navigate.\n     * @param {any} user User object.\n     * @param {number} [courseId] Course ID being viewed. If not defined, site context.\n     */\n    action?(event: Event, navCtrl: NavController, user: any, courseId?: number): void;\n}\n\n/**\n * Data returned by the delegate for each handler.\n */\nexport interface CoreUserProfileHandlerToDisplay {\n    /**\n     * Name of the handler.\n     * @type {string}\n     */\n    name?: string;\n\n    /**\n     * Data to display.\n     * @type {CoreUserProfileHandlerData}\n     */\n    data: CoreUserProfileHandlerData;\n\n    /**\n     * The highest priority is displayed first.\n     * @type {number}\n     */\n    priority?: number;\n\n    /**\n     * The type of the handler. See CoreUserProfileHandler.\n     * @type {string}\n     */\n    type: string;\n}\n\n/**\n * Service to interact with plugins to be shown in user profile. Provides functions to register a plugin\n * and notify an update in the data.\n */\n@Injectable()\nexport class CoreUserDelegate extends CoreDelegate {\n    /**\n     * User profile handler type for communication.\n     * @type {string}\n     */\n    static TYPE_COMMUNICATION = 'communication';\n    /**\n     * User profile handler type for new page.\n     * @type {string}\n     */\n    static TYPE_NEW_PAGE = 'newpage';\n    /**\n     * User profile handler type for actions.\n     * @type {string}\n     */\n    static TYPE_ACTION = 'action';\n\n    /**\n     * Update handler information event.\n     * @type {string}\n     */\n    static UPDATE_HANDLER_EVENT = 'CoreUserDelegate_update_handler_event';\n\n    protected handlers: { [s: string]: CoreUserProfileHandler } = {};\n    protected enabledHandlers: { [s: string]: CoreUserProfileHandler } = {};\n    protected observableHandlers: Subject<CoreUserProfileHandlerToDisplay[]> =\n        new BehaviorSubject<CoreUserProfileHandlerToDisplay[]>([]);\n    protected userHandlers: CoreUserProfileHandlerToDisplay[] = [];\n    protected featurePrefix = '$mmUserDelegate_';\n    protected loaded = false;\n\n    constructor(protected loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider,\n            private coursesProvider: CoreCoursesProvider, protected eventsProvider: CoreEventsProvider) {\n        super('CoreUserDelegate', loggerProvider, sitesProvider, eventsProvider);\n\n        eventsProvider.on(CoreUserDelegate.UPDATE_HANDLER_EVENT, (data) => {\n            if (data && data.handler) {\n                const handler = this.userHandlers.find((userHandler) => {\n                    return userHandler.name == data.handler;\n                });\n                if (handler) {\n                    for (const x in data.data) {\n                        handler.data[x] = data.data[x];\n                    }\n                    this.observableHandlers.next(this.userHandlers);\n                }\n            }\n        });\n    }\n\n    /**\n     * Check if handlers are loaded.\n     *\n     * @return {boolean} True if handlers are loaded, false otherwise.\n     */\n    areHandlersLoaded(): boolean {\n        return this.loaded;\n    }\n\n    /**\n     * Clear current user handlers.\n     */\n    clearUserHandlers(): void {\n        this.loaded = false;\n        this.userHandlers = [];\n        this.observableHandlers.next(this.userHandlers);\n    }\n\n    /**\n     * Get the profile handlers for a user.\n     *\n     * @param {any} user The user object.\n     * @param {number} courseId The course ID.\n     * @return {Subject<CoreUserProfileHandlerToDisplay[]>} Resolved with the handlers.\n     */\n    getProfileHandlersFor(user: any, courseId: number): Subject<CoreUserProfileHandlerToDisplay[]> {\n        const promises = [];\n\n        this.userHandlers = [];\n\n        // Retrieve course options forcing cache.\n        this.coursesProvider.getUserCourses(true).then((courses) => {\n            const courseIds = courses.map((course) => {\n                return course.id;\n            });\n\n            return this.coursesProvider.getCoursesAdminAndNavOptions(courseIds).then((options) => {\n                // For backwards compatibility we don't modify the courseId.\n                const courseIdForOptions = courseId || this.sitesProvider.getCurrentSiteHomeId(),\n                    navOptions = options.navOptions[courseIdForOptions],\n                    admOptions = options.admOptions[courseIdForOptions];\n\n                for (const name in this.enabledHandlers) {\n                    // Checks if the handler is enabled for the user.\n                    const handler = this.handlers[name],\n                        isEnabledForUser = handler.isEnabledForUser(user, courseId, navOptions, admOptions),\n                        promise = Promise.resolve(isEnabledForUser).then((enabled) => {\n                            if (enabled) {\n                                this.userHandlers.push({\n                                    name: name,\n                                    data: handler.getDisplayData(user, courseId),\n                                    priority: handler.priority,\n                                    type: handler.type || CoreUserDelegate.TYPE_NEW_PAGE\n                                });\n                            } else {\n                                return Promise.reject(null);\n                            }\n                        }).catch(() => {\n                            // Nothing to do here, it is not enabled for this user.\n                        });\n                    promises.push(promise);\n                }\n\n                return Promise.all(promises).then(() => {\n                    // Sort them by priority.\n                    this.userHandlers.sort((a, b) => {\n                        return b.priority - a.priority;\n                    });\n                    this.loaded = true;\n                    this.observableHandlers.next(this.userHandlers);\n                });\n            });\n        }).catch(() => {\n            // Never fails.\n            this.loaded = true;\n            this.observableHandlers.next(this.userHandlers);\n        });\n\n        return this.observableHandlers;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/providers/user-delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreLangProvider } from '@providers/lang';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSite, CoreSiteWSPreSets } from '@classes/site';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreConfigConstants } from '../../../configconstants';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\n\n/**\n * Handler of a site plugin.\n */\nexport interface CoreSitePluginsHandler {\n    /**\n     * The site plugin data.\n     * @type {any}\n     */\n    plugin: any;\n\n    /**\n     * Name of the handler.\n     * @type {string}\n     */\n    handlerName: string;\n\n    /**\n     * Data of the handler.\n     * @type {any}\n     */\n    handlerSchema: any;\n\n    /**\n     * Result of the bootstrap WS call.\n     * @type {any}\n     */\n    bootstrapResult?: any;\n}\n\n/**\n * Service to provide functionalities regarding site plugins.\n */\n@Injectable()\nexport class CoreSitePluginsProvider {\n    protected ROOT_CACHE_KEY = 'CoreSitePlugins:';\n\n    protected logger;\n    protected sitePlugins: {[name: string]: CoreSitePluginsHandler} = {}; // Site plugins registered.\n    hasSitePluginsLoaded = false;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private utils: CoreUtilsProvider,\n            private langProvider: CoreLangProvider, private appProvider: CoreAppProvider, private platform: Platform,\n            private filepoolProvider: CoreFilepoolProvider, private coursesProvider: CoreCoursesProvider) {\n        this.logger = logger.getInstance('CoreUserProvider');\n    }\n\n    /**\n     * Add some params that will always be sent for get content.\n     *\n     * @param {any} args Original params.\n     * @param {CoreSite} [site] Site. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the new params.\n     */\n    protected addDefaultArgs(args: any, site?: CoreSite): Promise<any> {\n        args = args || {};\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return this.langProvider.getCurrentLanguage().then((lang) => {\n\n            // Clone the object so the original one isn't modified.\n            const argsToSend = this.utils.clone(args);\n\n            argsToSend.userid = args.userid || site.getUserId();\n            argsToSend.appid = CoreConfigConstants.app_id;\n            argsToSend.appversioncode = CoreConfigConstants.versioncode;\n            argsToSend.appversionname = CoreConfigConstants.versionname;\n            argsToSend.applang = lang;\n            argsToSend.appcustomurlscheme = CoreConfigConstants.customurlscheme;\n            argsToSend.appisdesktop = this.appProvider.isDesktop();\n            argsToSend.appismobile = this.appProvider.isMobile();\n            argsToSend.appiswide = this.appProvider.isWide();\n\n            if (argsToSend.appisdevice) {\n                if (this.platform.is('ios')) {\n                    argsToSend.appplatform = 'ios';\n                } else {\n                    argsToSend.appplatform = 'android';\n                }\n            } else if (argsToSend.appisdesktop) {\n                if (this.appProvider.isMac()) {\n                    argsToSend.appplatform = 'mac';\n                } else if (this.appProvider.isLinux()) {\n                    argsToSend.appplatform = 'linux';\n                } else {\n                    argsToSend.appplatform = 'windows';\n                }\n            } else {\n                argsToSend.appplatform = 'browser';\n            }\n\n            return argsToSend;\n        });\n    }\n\n    /**\n     * Call a WS for a site plugin.\n     *\n     * @param {string} method WS method to use.\n     * @param {any} data Data to send to the WS.\n     * @param {CoreSiteWSPreSets} [preSets] Extra options.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the response.\n     */\n    callWS(method: string, data: any, preSets?: CoreSiteWSPreSets, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            preSets = preSets || {};\n            preSets.cacheKey = preSets.cacheKey || this.getCallWSCacheKey(method, data);\n\n            return site.read(method, data, preSets);\n        });\n    }\n\n    /**\n     * Given the result of a bootstrap get_content and, optionally, the result of another get_content,\n     * build an object with the data to pass to the JS of the get_content.\n     *\n     * @param {any} bootstrapResult Result of the bootstrap WS call.\n     * @param {any} [contentResult] Result of the content WS call (if any).\n     * @return {any} An object with the data to pass to the JS.\n     */\n    createDataForJS(bootstrapResult: any, contentResult?: any): any {\n        // First of all, add the data returned by the bootstrap JS (if any).\n        let data = this.utils.clone(bootstrapResult.jsResult || {});\n        if (typeof data == 'boolean') {\n            data = {};\n        }\n\n        // Now add some data returned by the bootstrap WS call.\n        data.BOOTSTRAP_TEMPLATES = this.utils.objectToKeyValueMap(bootstrapResult.templates, 'id', 'html');\n        data.BOOTSTRAP_OTHERDATA = bootstrapResult.otherdata;\n\n        if (contentResult) {\n            // Now add the data returned by the content WS call.\n            data.CONTENT_TEMPLATES = this.utils.objectToKeyValueMap(contentResult.templates, 'id', 'html');\n            data.CONTENT_OTHERDATA = contentResult.otherdata;\n        }\n\n        return data;\n    }\n\n    /**\n     * Get cache key for a WS call.\n     *\n     * @param {string} method Name of the method.\n     * @param {any} data Data to identify the WS call.\n     * @return {string} Cache key.\n     */\n    getCallWSCacheKey(method: string, data: any): string {\n        return this.getCallWSCommonCacheKey(method) + ':' + this.utils.sortAndStringify(data);\n    }\n\n    /**\n     * Get common cache key for a WS call.\n     *\n     * @param {string} method Name of the method.\n     * @return {string} Cache key.\n     */\n    protected getCallWSCommonCacheKey(method: string): string {\n        return this.ROOT_CACHE_KEY + 'ws:' + method;\n    }\n\n    /**\n     * Get a certain content for a site plugin.\n     *\n     * @param {string} component Component where the class is. E.g. mod_assign.\n     * @param {string} method Method to execute in the class.\n     * @param {any} args The params for the method.\n     * @param {CoreSiteWSPreSets} [preSets] Extra options.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved with the result.\n     */\n    getContent(component: string, method: string, args: any, preSets?: CoreSiteWSPreSets, siteId?: string): Promise<any> {\n        this.logger.debug(`Get content for component '${component}' and method '${method}'`);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n\n            // Add some params that will always be sent.\n            return this.addDefaultArgs(args, site).then((argsToSend) => {\n                // Now call the WS.\n                const data = {\n                        component: component,\n                        method: method,\n                        args: this.utils.objectToArrayOfObjects(argsToSend, 'name', 'value', true)\n                    };\n\n                preSets = preSets || {};\n                preSets.cacheKey = this.getContentCacheKey(component, method, args);\n\n                return this.sitesProvider.getCurrentSite().read('tool_mobile_get_content', data, preSets);\n            }).then((result) => {\n                if (result.otherdata) {\n                    result.otherdata = this.utils.objectToKeyValueMap(result.otherdata, 'name', 'value');\n                } else {\n                    result.otherdata = {};\n                }\n\n                return result;\n            });\n        });\n    }\n\n    /**\n     * Get cache key for get content WS calls.\n     *\n     * @param {string} component Component where the class is. E.g. mod_assign.\n     * @param {string} method Method to execute in the class.\n     * @param {any} args The params for the method.\n     * @return {string} Cache key.\n     */\n    protected getContentCacheKey(component: string, method: string, args: any): string {\n        return this.ROOT_CACHE_KEY + 'content:' + component + ':' + method + ':' + this.utils.sortAndStringify(args);\n    }\n\n    /**\n     * Get the value of a WS param for prefetch.\n     *\n     * @param {string} component The component of the handler.\n     * @param {string} paramName Name of the param as defined by the handler.\n     * @param {number} [courseId] Course ID (if prefetching a course).\n     * @param {any} [module] The module object returned by WS (if prefetching a module).\n     * @return {any} The value.\n     */\n    protected getDownloadParam(component: string, paramName: string, courseId?: number, module?: any): any {\n        switch (paramName) {\n            case 'courseids':\n                // The WS needs the list of course IDs. Create the list.\n                return [courseId];\n\n            case component + 'id':\n                // The WS needs the instance id.\n                return module && module.instance;\n\n            default:\n                // No more params supported for now.\n        }\n    }\n\n    /**\n     * Get the unique name of a handler (plugin + handler).\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} handlerName Name of the handler inside the plugin.\n     * @return {string} Unique name.\n     */\n    getHandlerUniqueName(plugin: any, handlerName: string): string {\n        return plugin.addon + '_' + handlerName;\n    }\n\n    /**\n     * Get a site plugin handler.\n     *\n     * @param {string} name Unique name of the handler.\n     * @return {CoreSitePluginsHandler} Handler.\n     */\n    getSitePluginHandler(name: string): CoreSitePluginsHandler {\n        return this.sitePlugins[name];\n    }\n\n    /**\n     * Invalidate all WS call to a certain method.\n     *\n     * @param {string} method WS method to use.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateAllCallWSForMethod(method: string, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKeyStartingWith(this.getCallWSCommonCacheKey(method));\n        });\n    }\n\n    /**\n     * Invalidate a WS call.\n     *\n     * @param {string} method WS method to use.\n     * @param {any} data Data to send to the WS.\n     * @param {CoreSiteWSPreSets} [preSets] Extra options.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateCallWS(method: string, data: any, preSets?: CoreSiteWSPreSets, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(preSets.cacheKey || this.getCallWSCacheKey(method, data));\n        });\n    }\n\n    /**\n     * Invalidate a page content.\n     *\n     * @param {string} component Component where the class is. E.g. mod_assign.\n     * @param {string} method Method to execute in the class.\n     * @param {any} args The params for the method.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateContent(component: string, callback: string, args: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getContentCacheKey(component, callback, args));\n        });\n    }\n\n    /**\n     * Check if the get content WS is available.\n     *\n     * @param {CoreSite} site The site to check. If not defined, current site.\n     */\n    isGetContentAvailable(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.wsAvailable('tool_mobile_get_content');\n    }\n\n    /**\n     * Check if a handler is enabled for a certain course.\n     *\n     * @param {number} courseId Course ID to check.\n     * @param {boolean} [restrictEnrolled] If true or undefined, handler is only enabled for courses the user is enrolled in.\n     * @param {any} [restrict] Users and courses the handler is restricted to.\n     * @return {boolean | Promise<boolean>} Whether the handler is enabled.\n     */\n    isHandlerEnabledForCourse(courseId: number, restrictEnrolled?: boolean, restrict?: any): boolean | Promise<boolean> {\n        if (restrict && restrict.courses && restrict.courses.indexOf(courseId) == -1) {\n            // Course is not in the list of restricted courses.\n            return false;\n        }\n\n        if (restrictEnrolled || typeof restrictEnrolled == 'undefined') {\n            // Only enabled for courses the user is enrolled to. Check if the user is enrolled in the course.\n            return this.coursesProvider.getUserCourse(courseId, true).then(() => {\n                return true;\n            }).catch(() => {\n                return false;\n            });\n        }\n\n        return true;\n    }\n\n    /**\n     * Check if a handler is enabled for a certain user.\n     *\n     * @param {number} userId User ID to check.\n     * @param {boolean} [restrictCurrent] Whether handler is only enabled for current user.\n     * @param {any} [restrict] Users and courses the handler is restricted to.\n     * @return {boolean} Whether the handler is enabled.\n     */\n    isHandlerEnabledForUser(userId: number, restrictCurrent?: boolean, restrict?: any): boolean {\n        if (restrictCurrent && userId != this.sitesProvider.getCurrentSite().getUserId()) {\n            // Only enabled for current user.\n            return false;\n        }\n\n        if (restrict && restrict.users && restrict.users.indexOf(userId) == -1) {\n            // User is not in the list of restricted users.\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Load other data into args as determined by useOtherData list.\n     * If useOtherData is undefined, it won't add any data.\n     * If useOtherData is defined but empty (null, false or empty string) it will copy all the data from otherData to args.\n     * If useOtherData is an array, it will only copy the properties whose names are in the array.\n     *\n     * @param {any} args The current args.\n     * @param {any} otherData All the other data.\n     * @param {any[]} useOtherData Names of the attributes to include.\n     * @return {any} New args.\n     */\n    loadOtherDataInArgs(args: any, otherData: any, useOtherData: any[]): any {\n        if (!args) {\n            args = {};\n        } else {\n            args = this.utils.clone(args);\n        }\n\n        otherData = otherData || {};\n\n        if (typeof useOtherData == 'undefined') {\n            // No need to add other data, return args as they are.\n            return args;\n        } else if (!useOtherData) {\n            // Use other data is defined but empty. Add all the data to args.\n            for (const name in otherData) {\n                args[name] = otherData[name];\n            }\n        } else {\n            for (const i in useOtherData) {\n                const name = useOtherData[i];\n                args[name] = otherData[name];\n            }\n        }\n\n        return args;\n    }\n\n    /**\n     * Prefetch offline functions for a site plugin handler.\n     *\n     * @param {string} component The component of the handler.\n     * @param {any} args Params to send to the get_content calls.\n     * @param {any} handlerSchema The handler schema.\n     * @param {number} [courseId] Course ID (if prefetching a course).\n     * @param {any} [module] The module object returned by WS (if prefetching a module).\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files.\n     * @param {CoreSite} [site] Site. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    prefetchFunctions(component: string, args: any, handlerSchema: any, courseId?: number, module?: any, prefetch?: boolean,\n            dirPath?: string, site?: CoreSite): Promise<any> {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        const promises = [];\n\n        for (const method in handlerSchema.offlinefunctions) {\n            if (site.wsAvailable(method)) {\n                // The method is a WS.\n                const paramsList = handlerSchema.offlinefunctions[method],\n                    cacheKey = this.getCallWSCacheKey(method, args);\n                let params = {};\n\n                if (!paramsList.length) {\n                    // No params defined, send the default ones.\n                    params = args;\n                } else {\n                    for (const i in paramsList) {\n                        const paramName = paramsList[i];\n\n                        if (typeof args[paramName] != 'undefined') {\n                            params[paramName] = args[paramName];\n                        } else {\n                            // The param is not one of the default ones. Try to calculate the param to use.\n                            const value = this.getDownloadParam(component, paramName, courseId, module);\n                            if (typeof value != 'undefined') {\n                                params[paramName] = value;\n                            }\n                        }\n                    }\n                }\n\n                promises.push(this.callWS(method, params, {cacheKey: cacheKey}));\n            } else {\n                // It's a method to get content.\n                promises.push(this.getContent(component, method, args).then((result) => {\n                    const subPromises = [];\n\n                    // Prefetch the files in the content.\n                    if (result.files && result.files.length) {\n                        subPromises.push(this.filepoolProvider.downloadOrPrefetchFiles(site.id, result.files, prefetch, false,\n                            component, module.id, dirPath));\n                    }\n\n                    return Promise.all(subPromises);\n                }));\n            }\n        }\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Store a site plugin handler.\n     *\n     * @param {string} name A unique name to identify the handler.\n     * @param {CoreSitePluginsHandler} handler Handler to set.\n     */\n    setSitePluginHandler(name: string, handler: CoreSitePluginsHandler): void {\n        this.sitePlugins[name] = handler;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/providers/siteplugins.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// tslint:disable: variable-name\nexport class CoreConfigConstants {\n    static app_id = 'com.moodle.moodlemobile';\n    static appname = 'Moodle Mobile';\n    static desktopappname = 'Moodle Desktop';\n    static versioncode = 3000;\n    static versionname = '3.3.5';\n    static cache_expiration_time = 300000;\n    static default_lang = 'en';\n    static languages: any = {\n        'ar': 'عربي',\n        'bg': 'Български',\n        'ca': 'Català',\n        'cs': 'Čeština',\n        'da': 'Dansk',\n        'de': 'Deutsch',\n        'de-du': 'Deutsch - Du',\n        'el': 'Ελληνικά',\n        'en': 'English',\n        'es': 'Español',\n        'es-mx': 'Español - México',\n        'eu': 'Euskara',\n        'fa': 'فارسی',\n        'fr': 'Français',\n        'he': 'עברית',\n        'hu': 'magyar',\n        'it': 'Italiano',\n        'lt': 'Lietuvių',\n        'ja': '日本語',\n        'nl': 'Nederlands',\n        'pl': 'Polski',\n        'pt-br': 'Português - Brasil',\n        'pt': 'Português - Portugal',\n        'ro': 'Română',\n        'ru': 'Русский',\n        'sr-cr': 'Српски',\n        'sr-lt': 'Srpski',\n        'sv': 'Svenska',\n        'tr': 'Türkçe',\n        'uk': 'Українська',\n        'zh-cn': '简体中文',\n        'zh-tw': '正體中文'\n    };\n    static wsservice = 'moodle_mobile_app';\n    static wsextservice = 'local_mobile';\n    static demo_sites: any = {\n        student: {\n            url: 'http://school.demo.moodle.net',\n            username: 'student',\n            password: 'moodle'\n        },\n        teacher: {\n            url: 'http://school.demo.moodle.net',\n            username: 'teacher',\n            password: 'moodle'\n        }\n    };\n    static gcmpn = '694767596569';\n    static customurlscheme = 'moodlemobile';\n    static siteurl = '';\n    static multisitesdisplay = '';\n    static skipssoconfirmation = false;\n    static forcedefaultlanguage = false;\n    static privacypolicy = 'https://moodle.org/mod/page/view.php?id=8148';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/configconstants.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreConfigProvider } from '@providers/config';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreInitDelegate } from '@providers/init';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreWSProvider } from '@providers/ws';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSitePluginsProvider } from '@core/siteplugins/providers/siteplugins';\nimport { CoreConfigConstants } from '../../../configconstants';\nimport { CoreConstants } from '@core/constants';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n/**\n * Data related to a SSO authentication.\n */\nexport interface CoreLoginSSOData {\n    /**\n     * The site's URL.\n     * @type {string}\n     */\n    siteUrl?: string;\n\n    /**\n     * User's token.\n     * @type {string}\n     */\n    token?: string;\n\n    /**\n     * User's private token.\n     * @type {string}\n     */\n    privateToken?: string;\n\n    /**\n     * Name of the page to go after authenticated.\n     * @type {string}\n     */\n    pageName?: string;\n\n    /**\n     * Params to page to the page.\n     * @type {string}\n     */\n    pageParams?: any;\n}\n\n/**\n * Helper provider that provides some common features regarding authentication.\n */\n@Injectable()\nexport class CoreLoginHelperProvider {\n    protected logger;\n    protected isSSOConfirmShown = false;\n    protected isOpenEditAlertShown = false;\n    lastInAppUrl: string;\n    waitingForBrowser = false;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private domUtils: CoreDomUtilsProvider,\n            private wsProvider: CoreWSProvider, private translate: TranslateService, private textUtils: CoreTextUtilsProvider,\n            private eventsProvider: CoreEventsProvider, private appProvider: CoreAppProvider, private utils: CoreUtilsProvider,\n            private urlUtils: CoreUrlUtilsProvider, private configProvider: CoreConfigProvider, private platform: Platform,\n            private initDelegate: CoreInitDelegate, private sitePluginsProvider: CoreSitePluginsProvider) {\n        this.logger = logger.getInstance('CoreLoginHelper');\n    }\n\n    /**\n     * Accept site policy.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved if success, rejected if failure.\n     */\n    acceptSitePolicy(siteId?: string): Promise<void> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.write('core_user_agree_site_policy', {}).then((result) => {\n                if (!result.status) {\n                    // Error.\n                    if (result.warnings && result.warnings.length) {\n                        // Check if there is a warning 'alreadyagreed'.\n                        for (const i in result.warnings) {\n                            const warning = result.warnings[i];\n                            if (warning.warningcode == 'alreadyagreed') {\n                                // Policy already agreed, treat it as a success.\n                                return;\n                            }\n                        }\n\n                        // Another warning, reject.\n                        return Promise.reject(result.warnings[0]);\n                    } else {\n                        return Promise.reject(null);\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Function to handle URL received by Custom URL Scheme. If it's a SSO login, perform authentication.\n     *\n     * @param {string} url URL received.\n     * @return {boolean} True if it's a SSO URL, false otherwise.\n     */\n    appLaunchedByURL(url: string): boolean {\n        const ssoScheme = CoreConfigConstants.customurlscheme + '://token=';\n        if (url.indexOf(ssoScheme) == -1) {\n            return false;\n        }\n\n        if (this.appProvider.isSSOAuthenticationOngoing()) {\n            // Authentication ongoing, probably duplicated request.\n            return true;\n        }\n        if (this.appProvider.isDesktop()) {\n            // In desktop, make sure InAppBrowser is closed.\n            this.utils.closeInAppBrowser(true);\n        }\n\n        // App opened using custom URL scheme. Probably an SSO authentication.\n        this.appProvider.startSSOAuthentication();\n        this.logger.debug('App launched by URL with an SSO');\n\n        // Delete the sso scheme from the URL.\n        url = url.replace(ssoScheme, '');\n\n        // Some platforms like Windows add a slash at the end. Remove it.\n        // Some sites add a # at the end of the URL. If it's there, remove it.\n        url = url.replace(/\\/?#?\\/?$/, '');\n\n        // Decode from base64.\n        try {\n            url = atob(url);\n        } catch (err) {\n            // Error decoding the parameter.\n            this.logger.error('Error decoding parameter received for login SSO');\n\n            return false;\n        }\n\n        const modal = this.domUtils.showModalLoading('core.login.authenticating', true);\n        let siteData: CoreLoginSSOData;\n\n        // Wait for app to be ready.\n        this.initDelegate.ready().then(() => {\n            return this.validateBrowserSSOLogin(url);\n        }).then((data) => {\n            siteData = data;\n\n            return this.handleSSOLoginAuthentication(siteData.siteUrl, siteData.token, siteData.privateToken);\n        }).then(() => {\n            if (siteData.pageName) {\n                // State defined, go to that state instead of site initial page.\n                this.appProvider.getRootNavController().push(siteData.pageName, siteData.pageParams);\n            } else {\n                this.goToSiteInitialPage();\n            }\n        }).catch((errorMessage) => {\n            if (typeof errorMessage == 'string' && errorMessage != '') {\n                this.domUtils.showErrorModal(errorMessage);\n            }\n        }).finally(() => {\n            modal.dismiss();\n            this.appProvider.finishSSOAuthentication();\n        });\n\n        return true;\n    }\n\n    /**\n     * Check if a site allows requesting a password reset through the app.\n     *\n     * @param {string} siteUrl URL of the site.\n     * @return {Promise<any>} Promise resolved with boolean: whether can be done through the app.\n     */\n    canRequestPasswordReset(siteUrl: string): Promise<any> {\n        return this.requestPasswordReset(siteUrl).then(() => {\n            return true;\n        }).catch((error) => {\n            return error.available == 1 || error.errorcode != 'invalidrecord';\n        });\n    }\n\n    /**\n     * Function called when an SSO InAppBrowser is closed or the app is resumed. Check if user needs to be logged out.\n     */\n    checkLogout(): void {\n        const navCtrl = this.appProvider.getRootNavController();\n        if (!this.appProvider.isSSOAuthenticationOngoing() && this.sitesProvider.isLoggedIn() &&\n            this.sitesProvider.getCurrentSite().isLoggedOut() && navCtrl.getActive().name == 'CoreLoginReconnectPage') {\n            // User must reauthenticate but he closed the InAppBrowser without doing so, logout him.\n            this.sitesProvider.logout();\n        }\n    }\n\n    /**\n     * Show a confirm modal if needed and open a browser to perform SSO login.\n     *\n     * @param  {string} siteurl     URL of the site where the SSO login will be performed.\n     * @param  {number} typeOfLogin CoreConstants.LOGIN_SSO_CODE or CoreConstants.LOGIN_SSO_INAPP_CODE.\n     * @param  {string} [service]   The service to use. If not defined, external service will be used.\n     * @param  {string} [launchUrl] The URL to open for SSO. If not defined, local_mobile launch URL will be used.\n     * @return {Void}\n     */\n    confirmAndOpenBrowserForSSOLogin(siteUrl: string, typeOfLogin: number, service?: string, launchUrl?: string): void {\n        // Show confirm only if it's needed. Treat \"false\" (string) as false to prevent typing errors.\n        const showConfirmation = this.shouldShowSSOConfirm(typeOfLogin);\n        let promise;\n\n        if (showConfirmation) {\n            promise = this.domUtils.showConfirm(this.translate.instant('core.login.logininsiterequired'));\n        } else {\n            promise = Promise.resolve();\n        }\n\n        promise.then(() => {\n            this.openBrowserForSSOLogin(siteUrl, typeOfLogin, service, launchUrl);\n        }, () => {\n            // User cancelled, ignore.\n        });\n    }\n\n    /**\n     * Format profile fields, filtering the ones that shouldn't be shown on signup and classifying them in categories.\n     *\n     * @param {any[]} profileFields Profile fields to format.\n     * @return {any} Categories with the fields to show in each one.\n     */\n    formatProfileFieldsForSignup(profileFields: any[]): any {\n        if (!profileFields) {\n            return [];\n        }\n\n        const categories = {};\n\n        profileFields.forEach((field) => {\n            if (!field.signup) {\n                // Not a signup field, ignore it.\n                return;\n            }\n\n            if (!categories[field.categoryid]) {\n                categories[field.categoryid] = {\n                    id: field.categoryid,\n                    name: field.categoryname,\n                    fields: []\n                };\n            }\n\n            categories[field.categoryid].fields.push(field);\n        });\n\n        return Object.keys(categories).map((index) => {\n            return categories[index];\n        });\n    }\n\n    /**\n     * Builds an object with error messages for some common errors.\n     * Please notice that this function doesn't support all possible error types.\n     *\n     * @param {string} [requiredMsg] Code of the string for required error.\n     * @param {string} [emailMsg] Code of the string for invalid email error.\n     * @param {string} [patternMsg] Code of the string for pattern not match error.\n     * @param {string} [urlMsg] Code of the string for invalid url error.\n     * @param {string} [minlengthMsg] Code of the string for \"too short\" error.\n     * @param {string} [maxlengthMsg] Code of the string for \"too long\" error.\n     * @param {string} [minMsg] Code of the string for min value error.\n     * @param {string} [maxMsg] Code of the string for max value error.\n     * @return {any} Object with the errors.\n     */\n    getErrorMessages(requiredMsg?: string, emailMsg?: string, patternMsg?: string, urlMsg?: string, minlengthMsg?: string,\n            maxlengthMsg?: string, minMsg?: string, maxMsg?: string): any {\n        const errors: any = {};\n\n        if (requiredMsg) {\n            errors.required = errors.requiredTrue = this.translate.instant(requiredMsg);\n        }\n        if (emailMsg) {\n            errors.email = this.translate.instant(emailMsg);\n        }\n        if (patternMsg) {\n            errors.pattern = this.translate.instant(patternMsg);\n        }\n        if (urlMsg) {\n            errors.url = this.translate.instant(urlMsg);\n        }\n        if (minlengthMsg) {\n            errors.minlength = this.translate.instant(minlengthMsg);\n        }\n        if (maxlengthMsg) {\n            errors.maxlength = this.translate.instant(maxlengthMsg);\n        }\n        if (minMsg) {\n            errors.min = this.translate.instant(minMsg);\n        }\n        if (maxMsg) {\n            errors.max = this.translate.instant(maxMsg);\n        }\n\n        return errors;\n    }\n\n    /**\n     * Get the site policy.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<string>} Promise resolved with the site policy.\n     */\n    getSitePolicy(siteId?: string): Promise<string> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            // Check if it's stored in the site config.\n            const sitePolicy = site.getStoredConfig('sitepolicy');\n            if (typeof sitePolicy != 'undefined') {\n                return sitePolicy ? sitePolicy : Promise.reject(null);\n            }\n\n            // Not in the config, try to get it using auth_email_get_signup_settings.\n            return this.wsProvider.callAjax('auth_email_get_signup_settings', {}, { siteUrl: site.getURL() }).then((settings) => {\n                return settings.sitepolicy ? settings.sitepolicy : Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get fixed site or sites.\n     *\n     * @return {string|any[]} Fixed site or list of fixed sites.\n     */\n    getFixedSites(): string | any[] {\n        return CoreConfigConstants.siteurl;\n    }\n\n    /**\n     * Get the valid identity providers from a site config.\n     *\n     * @param {any} siteConfig Site's public config.\n     * @return {any[]} Valid identity providers.\n     */\n    getValidIdentityProviders(siteConfig: any): any[] {\n        const validProviders = [],\n            httpUrl = this.textUtils.concatenatePaths(siteConfig.wwwroot, 'auth/oauth2/'),\n            httpsUrl = this.textUtils.concatenatePaths(siteConfig.httpswwwroot, 'auth/oauth2/');\n\n        if (siteConfig.identityproviders && siteConfig.identityproviders.length) {\n            siteConfig.identityproviders.forEach((provider) => {\n                if (provider.url && (provider.url.indexOf(httpsUrl) != -1 || provider.url.indexOf(httpUrl) != -1)) {\n                    validProviders.push(provider);\n                }\n            });\n        }\n\n        return validProviders;\n    }\n\n    /**\n     * Go to the page to add a new site.\n     * If a fixed URL is configured, go to credentials instead.\n     *\n     * @param {boolean} [setRoot] True to set the new page as root, false to add it to the stack.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    goToAddSite(setRoot?: boolean): Promise<any> {\n        let pageName,\n            params;\n\n        if (this.isFixedUrlSet()) {\n            // Fixed URL is set, go to credentials page.\n            const url = typeof CoreConfigConstants.siteurl == 'string' ?\n                CoreConfigConstants.siteurl : CoreConfigConstants.siteurl[0].url;\n\n            pageName = 'CoreLoginCredentialsPage';\n            params = { siteUrl: url };\n        } else {\n            pageName = 'CoreLoginSitePage';\n        }\n\n        if (setRoot) {\n            return this.appProvider.getRootNavController().setRoot(pageName, params, { animate: false });\n        } else {\n            return this.appProvider.getRootNavController().push(pageName, params);\n        }\n    }\n\n    /**\n     * Go to the initial page of a site depending on 'userhomepage' setting.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    goToSiteInitialPage(): Promise<any> {\n        return this.appProvider.getRootNavController().setRoot('CoreMainMenuPage');\n    }\n\n    /**\n     * Convenient helper to handle authentication in the app using a token received by SSO login. If it's a new account,\n     * the site is stored and the user is authenticated. If the account already exists, update its token.\n     *\n     * @param {string} siteUrl Site's URL.\n     * @param {string} token User's token.\n     * @param {string} [privateToken] User's private token.\n     * @return {Promise<any>} Promise resolved when the user is authenticated with the token.\n     */\n    handleSSOLoginAuthentication(siteUrl: string, token: string, privateToken?: string): Promise<any> {\n        if (this.sitesProvider.isLoggedIn()) {\n            // User logged in, he is reconnecting. Retrieve username.\n            const info = this.sitesProvider.getCurrentSite().getInfo();\n            if (typeof info != 'undefined' && typeof info.username != 'undefined') {\n                return this.sitesProvider.updateSiteToken(info.siteurl, info.username, token, privateToken).then(() => {\n                    this.sitesProvider.updateSiteInfoByUrl(info.siteurl, info.username);\n                }).catch(() => {\n                    // Error updating token, return proper error message.\n                    return Promise.reject(this.translate.instant('core.login.errorupdatesite'));\n                });\n            }\n\n            return Promise.reject(this.translate.instant('core.login.errorupdatesite'));\n        } else {\n            return this.sitesProvider.newSite(siteUrl, token, privateToken);\n        }\n    }\n\n    /**\n     * Check if the app is configured to use several fixed URLs.\n     *\n     * @return {boolean} Whether there are several fixed URLs.\n     */\n    hasSeveralFixedSites(): boolean {\n        return CoreConfigConstants.siteurl && Array.isArray(CoreConfigConstants.siteurl) &&\n            CoreConfigConstants.siteurl.length > 1;\n    }\n\n    /**\n     * Function called when a page starts loading in any InAppBrowser window.\n     *\n     * @param {string} url Loaded url.\n     */\n    inAppBrowserLoadStart(url: string): void {\n        // URLs with a custom scheme can be prefixed with \"http://\" or \"https://\", we need to remove this.\n        url = url.replace(/^https?:\\/\\//, '');\n\n        if (this.appLaunchedByURL(url)) {\n            // Close the browser if it's a valid SSO URL.\n            this.utils.closeInAppBrowser(false);\n        } else if (this.platform.is('android')) {\n            // Check if the URL has a custom URL scheme. In Android they need to be opened manually.\n            const urlScheme = this.urlUtils.getUrlProtocol(url);\n            if (urlScheme && urlScheme !== 'file' && urlScheme !== 'cdvfile') {\n                // Open in browser should launch the right app if found and do nothing if not found.\n                this.utils.openInBrowser(url);\n\n                // At this point the InAppBrowser is showing a \"Webpage not available\" error message.\n                // Try to navigate to last loaded URL so this error message isn't found.\n                if (this.lastInAppUrl) {\n                    this.utils.openInApp(this.lastInAppUrl);\n                } else {\n                    // No last URL loaded, close the InAppBrowser.\n                    this.utils.closeInAppBrowser(false);\n                }\n            } else {\n                this.lastInAppUrl = url;\n            }\n        }\n    }\n\n    /**\n     * Given a site public config, check if email signup is disabled.\n     *\n     * @param {any} config Site public config.\n     * @return {boolean} Whether email signup is disabled.\n     */\n    isEmailSignupDisabled(config: any): boolean {\n        const disabledFeatures = config && config.tool_mobile_disabledfeatures;\n        if (!disabledFeatures) {\n            return false;\n        }\n\n        const regEx = new RegExp('(,|^)\\\\$mmLoginEmailSignup(,|$)', 'g');\n\n        return !!disabledFeatures.match(regEx);\n    }\n\n    /**\n     * Check if the app is configured to use a fixed URL (only 1).\n     *\n     * @return {boolean} Whether there is 1 fixed URL.\n     */\n    isFixedUrlSet(): boolean {\n        if (Array.isArray(CoreConfigConstants.siteurl)) {\n            return CoreConfigConstants.siteurl.length == 1;\n        }\n\n        return !!CoreConfigConstants.siteurl;\n    }\n\n    /**\n     * Check if current site is logged out, triggering mmCoreEventSessionExpired if it is.\n     *\n     * @param {string} [pageName] Name of the page to go once authenticated if logged out. If not defined, site initial page.\n     * @param {any} [params] Params of the page to go once authenticated if logged out.\n     * @return {boolean} True if user is logged out, false otherwise.\n     */\n    isSiteLoggedOut(pageName?: string, params?: any): boolean {\n        const site = this.sitesProvider.getCurrentSite();\n        if (!site) {\n            return false;\n        }\n\n        if (site.isLoggedOut()) {\n            this.eventsProvider.trigger(CoreEventsProvider.SESSION_EXPIRED, {\n                pageName: pageName,\n                params: params\n            }, site.getId());\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if SSO login should use an embedded browser.\n     *\n     * @param {number} code Code to check.\n     * @return {boolean} True if embedded browser, false othwerise.\n     */\n    isSSOEmbeddedBrowser(code: number): boolean {\n        if (this.appProvider.isLinux()) {\n            // In Linux desktop apps, always use embedded browser.\n            return true;\n        }\n\n        return code == CoreConstants.LOGIN_SSO_INAPP_CODE;\n    }\n\n    /**\n     * Check if SSO login is needed based on code returned by the WS.\n     *\n     * @param {number} code Code to check.\n     * @return {boolean} True if SSO login is needed, false othwerise.\n     */\n    isSSOLoginNeeded(code: number): boolean {\n        return code == CoreConstants.LOGIN_SSO_CODE || code == CoreConstants.LOGIN_SSO_INAPP_CODE;\n    }\n\n    /**\n     * Load a site and load a certain page in that site.\n     *\n     * @param {string} page Name of the page to load.\n     * @param {any} params Params to pass to the page.\n     * @param {string} siteId Site to load.\n     */\n    protected loadSiteAndPage(page: string, params: any, siteId: string): void {\n        if (siteId == CoreConstants.NO_SITE_ID) {\n            // Page doesn't belong to a site, just load the page.\n            this.appProvider.getRootNavController().setRoot(page, params);\n        } else {\n            const modal = this.domUtils.showModalLoading();\n            this.sitesProvider.loadSite(siteId).then(() => {\n                if (!this.isSiteLoggedOut(page, params)) {\n                    this.loadPageInMainMenu(page, params);\n                }\n            }).catch(() => {\n                // Site doesn't exist.\n                this.appProvider.getRootNavController().setRoot('CoreLoginSitesPage');\n            }).finally(() => {\n                modal.dismiss();\n            });\n        }\n    }\n\n    /**\n     * Load a certain page in the main menu page.\n     *\n     * @param {string} page Name of the page to load.\n     * @param {any} params Params to pass to the page.\n     */\n    protected loadPageInMainMenu(page: string, params: any): void {\n        this.appProvider.getRootNavController().setRoot('CoreMainMenuPage', { redirectPage: page, redirectParams: params });\n    }\n\n    /**\n     * Open a browser to perform OAuth login (Google, Facebook, Microsoft).\n     *\n     * @param {string} siteUrl URL of the site where the login will be performed.\n     * @param {any} provider The identity provider.\n     * @param {string} [launchUrl] The URL to open for SSO. If not defined, tool/mobile launch URL will be used.\n     * @param {string} [pageName] Name of the page to go once authenticated. If not defined, site initial page.\n     * @param {any} [pageParams] Params of the state to go once authenticated.\n     * @return {boolean} True if success, false if error.\n     */\n    openBrowserForOAuthLogin(siteUrl: string, provider: any, launchUrl?: string, pageName?: string, pageParams?: any): boolean {\n        launchUrl = launchUrl || siteUrl + '/admin/tool/mobile/launch.php';\n        if (!provider || !provider.url) {\n            return false;\n        }\n\n        const service = this.sitesProvider.determineService(siteUrl),\n            params = this.urlUtils.extractUrlParams(provider.url);\n        let loginUrl = this.prepareForSSOLogin(siteUrl, service, launchUrl, pageName, pageParams);\n\n        if (!params.id) {\n            return false;\n        }\n\n        loginUrl += '&oauthsso=' + params.id;\n\n        if (this.appProvider.isLinux()) {\n            // In Linux desktop apps, always use embedded browser.\n            this.utils.openInApp(loginUrl);\n        } else {\n            // Always open it in browser because the user might have the session stored in there.\n            this.utils.openInBrowser(loginUrl);\n            if ((<any> navigator).app) {\n                (<any> navigator).app.exitApp();\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Open a browser to perform SSO login.\n     *\n     * @param {string} siteurl URL of the site where the SSO login will be performed.\n     * @param {number} typeOfLogin CoreConstants.LOGIN_SSO_CODE or CoreConstants.LOGIN_SSO_INAPP_CODE.\n     * @param {string} [service] The service to use. If not defined, external service will be used.\n     * @param {string} [launchUrl] The URL to open for SSO. If not defined, local_mobile launch URL will be used.\n     * @param {string} [pageName] Name of the page to go once authenticated. If not defined, site initial page.\n     * @param {any} [pageParams] Params of the state to go once authenticated.\n     */\n    openBrowserForSSOLogin(siteUrl: string, typeOfLogin: number, service?: string, launchUrl?: string, pageName?: string,\n            pageParams?: any): void {\n        const loginUrl = this.prepareForSSOLogin(siteUrl, service, launchUrl, pageName, pageParams);\n\n        if (this.isSSOEmbeddedBrowser(typeOfLogin)) {\n            const options = {\n                clearsessioncache: 'yes', // Clear the session cache to allow for multiple logins.\n                closebuttoncaption: this.translate.instant('core.login.cancel'),\n            };\n            this.utils.openInApp(loginUrl, options);\n        } else {\n            this.utils.openInBrowser(loginUrl);\n            if ((<any> navigator).app) {\n                (<any> navigator).app.exitApp();\n            }\n        }\n    }\n\n    /**\n     * Convenient helper to open change password page.\n     *\n     * @param {string} siteUrl Site URL to construct change password URL.\n     * @param {string} error Error message.\n     */\n    openChangePassword(siteUrl: string, error: string): void {\n        const alert = this.domUtils.showAlert(this.translate.instant('core.notice'), error, undefined, 3000);\n        alert.onDidDismiss(() => {\n            this.utils.openInApp(siteUrl + '/login/change_password.php');\n        });\n    }\n\n    /**\n     * Open forgotten password in inappbrowser.\n     *\n     * @param {string} siteUrl URL of the site.\n     */\n    openForgottenPassword(siteUrl: string): void {\n        this.utils.openInApp(siteUrl + '/login/forgot_password.php');\n    }\n\n    /*\n     * Function to open in app browser to change password or complete user profile.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} path The relative path of the URL to open.\n     * @param {string} alertMessage The key of the message to display before opening the in app browser.\n     * @param {boolean} [invalidateCache] Whether to invalidate site's cache (e.g. when the user is forced to change password).\n     */\n    openInAppForEdit(siteId: string, path: string, alertMessage: string, invalidateCache?: boolean): void {\n        if (!siteId || siteId !== this.sitesProvider.getCurrentSiteId()) {\n            // Site that triggered the event is not current site, nothing to do.\n            return;\n        }\n\n        const currentSite = this.sitesProvider.getCurrentSite(),\n            siteUrl = currentSite && currentSite.getURL();\n        if (!currentSite || !siteUrl) {\n            return;\n        }\n\n        if (!this.isOpenEditAlertShown && !this.waitingForBrowser) {\n            this.isOpenEditAlertShown = true;\n\n            if (invalidateCache) {\n                currentSite.invalidateWsCache();\n            }\n\n            // Open change password.\n            alertMessage = this.translate.instant(alertMessage) + '<br>' + this.translate.instant('core.redirectingtosite');\n            currentSite.openInAppWithAutoLogin(siteUrl + path, undefined, alertMessage).then(() => {\n                this.waitingForBrowser = true;\n            }).finally(() => {\n                this.isOpenEditAlertShown = false;\n            });\n        }\n    }\n\n    /**\n     * Prepare the app to perform SSO login.\n     *\n     * @param {string} siteUrl URL of the site where the SSO login will be performed.\n     * @param {string} [service] The service to use. If not defined, external service will be used.\n     * @param {string} [launchUrl] The URL to open for SSO. If not defined, local_mobile launch URL will be used.\n     * @param {string} [pageName] Name of the page to go once authenticated. If not defined, site initial page.\n     * @param {any} [pageParams] Params of the state to go once authenticated.\n     */\n    prepareForSSOLogin(siteUrl: string, service?: string, launchUrl?: string, pageName?: string, pageParams?: any): string {\n        service = service || CoreConfigConstants.wsextservice;\n        launchUrl = launchUrl || siteUrl + '/local/mobile/launch.php';\n\n        const passport = Math.random() * 1000;\n        let loginUrl = launchUrl + '?service=' + service;\n\n        loginUrl += '&passport=' + passport;\n        loginUrl += '&urlscheme=' + CoreConfigConstants.customurlscheme;\n\n        // Store the siteurl and passport in $mmConfig for persistence.\n        // We are \"configuring\" the app to wait for an SSO. $mmConfig shouldn't be used as a temporary storage.\n        this.configProvider.set(CoreConstants.LOGIN_LAUNCH_DATA, JSON.stringify({\n            siteUrl: siteUrl,\n            passport: passport,\n            pageName: pageName || '',\n            pageParams: pageParams || {}\n        }));\n\n        return loginUrl;\n    }\n\n    /**\n     * Redirect to a new page, setting it as the root page and loading the right site if needed.\n     *\n     * @param {string} page Name of the page to load.\n     * @param {any} params Params to pass to the page.\n     * @param {string} [siteId] Site to load. If not defined, current site.\n     */\n    redirect(page: string, params?: any, siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (this.sitesProvider.isLoggedIn()) {\n            if (siteId && siteId != this.sitesProvider.getCurrentSiteId()) {\n                // Target page belongs to a different site. Change site.\n                if (this.sitePluginsProvider.hasSitePluginsLoaded) {\n                    // The site has site plugins so the app will be restarted. Store the data and logout.\n                    this.appProvider.storeRedirect(siteId, page, params);\n                    this.sitesProvider.logout();\n                } else {\n                    this.sitesProvider.logout().then(() => {\n                        this.loadSiteAndPage(page, params, siteId);\n                    });\n                }\n            } else {\n                this.loadPageInMainMenu(page, params);\n            }\n        } else {\n            if (siteId) {\n                this.loadSiteAndPage(page, params, siteId);\n            } else {\n                this.appProvider.getRootNavController().setRoot('CoreLoginSitesPage');\n            }\n        }\n    }\n\n    /**\n     * Request a password reset.\n     *\n     * @param {string} siteUrl URL of the site.\n     * @param {string} [username] Username to search.\n     * @param {string} [email] Email to search.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    requestPasswordReset(siteUrl: string, username?: string, email?: string): Promise<any> {\n        const params: any = {};\n\n        if (username) {\n            params.username = username;\n        }\n\n        if (email) {\n            params.email = email;\n        }\n\n        return this.wsProvider.callAjax('core_auth_request_password_reset', params, { siteUrl: siteUrl });\n    }\n\n    /**\n     * Function that should be called when the session expires. Reserved for core use.\n     *\n     * @param {any} data Data received by the SESSION_EXPIRED event.\n     */\n    sessionExpired(data: any): void {\n        const siteId = data && data.siteId,\n            currentSite = this.sitesProvider.getCurrentSite(),\n            siteUrl = currentSite && currentSite.getURL();\n        let promise;\n\n        if (!currentSite || !siteUrl) {\n            return;\n        }\n\n        if (siteId && siteId !== currentSite.getId()) {\n            return; // Site that triggered the event is not current site.\n        }\n\n        // Check authentication method.\n        this.sitesProvider.checkSite(siteUrl).then((result) => {\n\n            if (result.warning) {\n                this.domUtils.showErrorModal(result.warning, true, 4000);\n            }\n\n            if (this.isSSOLoginNeeded(result.code)) {\n                // SSO. User needs to authenticate in a browser. Check if we need to display a message.\n                if (!this.appProvider.isSSOAuthenticationOngoing() && !this.isSSOConfirmShown && !this.waitingForBrowser) {\n                    this.isSSOConfirmShown = true;\n\n                    if (this.shouldShowSSOConfirm(result.code)) {\n                        promise = this.domUtils.showConfirm(this.translate.instant('core.login.' +\n                            (currentSite.isLoggedOut() ? 'loggedoutssodescription' : 'reconnectssodescription')));\n                    } else {\n                        promise = Promise.resolve();\n                    }\n\n                    promise.then(() => {\n                        this.waitingForBrowser = true;\n                        this.openBrowserForSSOLogin(result.siteUrl, result.code, result.service,\n                            result.config && result.config.launchurl, data.pageName, data.params);\n                    }).catch(() => {\n                        // User cancelled, logout him.\n                        this.sitesProvider.logout();\n                    }).finally(() => {\n                        this.isSSOConfirmShown = false;\n                    });\n                }\n            } else {\n                const info = currentSite.getInfo();\n                if (typeof info != 'undefined' && typeof info.username != 'undefined') {\n                    this.appProvider.getRootNavController().setRoot('CoreLoginReconnectPage', {\n                        infoSiteUrl: info.siteurl,\n                        siteUrl: result.siteUrl,\n                        siteId: siteId,\n                        pageName: data.pageName,\n                        pageParams: data.params,\n                        siteConfig: result.config\n                    });\n                }\n            }\n        }).catch((error) => {\n            // Error checking site.\n            if (currentSite.isLoggedOut()) {\n                // Site is logged out, show error and logout the user.\n                this.domUtils.showErrorModalDefault(error, 'core.networkerrormsg', true);\n                this.sitesProvider.logout();\n            }\n        });\n    }\n\n    /**\n     * Check if a confirm should be shown to open a SSO authentication.\n     *\n     * @param {number} typeOfLogin CoreConstants.LOGIN_SSO_CODE or CoreConstants.LOGIN_SSO_INAPP_CODE.\n     * @return {boolean} True if confirm modal should be shown, false otherwise.\n     */\n    shouldShowSSOConfirm(typeOfLogin: number): boolean {\n        return !this.isSSOEmbeddedBrowser(typeOfLogin) &&\n            (!CoreConfigConstants.skipssoconfirmation || String(CoreConfigConstants.skipssoconfirmation) === 'false');\n    }\n\n    /**\n     * Function called when site policy is not agreed. Reserved for core use.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    sitePolicyNotAgreed(siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n        if (!siteId || siteId != this.sitesProvider.getCurrentSiteId()) {\n            // Only current site allowed.\n            return;\n        }\n\n        if (!this.sitesProvider.wsAvailableInCurrentSite('core_user_agree_site_policy')) {\n            // WS not available, stop.\n            return;\n        }\n\n        this.appProvider.getRootNavController().setRoot('CoreLoginSitePolicyPage', { siteId: siteId });\n    }\n\n    /**\n     * Convenient helper to handle get User Token error. It redirects to change password page if forcepassword is set.\n     *\n     * @param {string} siteUrl Site URL to construct change password URL.\n     * @param {any} error Error object containing errorcode and error message.\n     */\n    treatUserTokenError(siteUrl: string, error: any): void {\n        if (typeof error == 'string') {\n            this.domUtils.showErrorModal(error);\n        } else if (error.errorcode == 'forcepasswordchangenotice') {\n            this.openChangePassword(siteUrl, error.error);\n        } else {\n            this.domUtils.showErrorModal(error.error);\n        }\n    }\n\n    /**\n     * Convenient helper to validate a browser SSO login.\n     *\n     * @param {string} url URL received, to be validated.\n     * @return {Promise<CoreLoginSSOData>} Promise resolved on success.\n     */\n    validateBrowserSSOLogin(url: string): Promise<CoreLoginSSOData> {\n        // Split signature:::token\n        const params = url.split(':::');\n\n        return this.configProvider.get(CoreConstants.LOGIN_LAUNCH_DATA).then((data): any => {\n            data = this.textUtils.parseJSON(data, null);\n            if (data === null) {\n                return Promise.reject(null);\n            }\n\n            const passport = data.passport;\n            let launchSiteURL = data.siteUrl;\n\n            // Reset temporary values.\n            this.configProvider.delete(CoreConstants.LOGIN_LAUNCH_DATA);\n\n            // Validate the signature.\n            // We need to check both http and https.\n            let signature = <string> Md5.hashAsciiStr(launchSiteURL + passport);\n            if (signature != params[0]) {\n                if (launchSiteURL.indexOf('https://') != -1) {\n                    launchSiteURL = launchSiteURL.replace('https://', 'http://');\n                } else {\n                    launchSiteURL = launchSiteURL.replace('http://', 'https://');\n                }\n                signature = <string> Md5.hashAsciiStr(launchSiteURL + passport);\n            }\n\n            if (signature == params[0]) {\n                this.logger.debug('Signature validated');\n\n                return {\n                    siteUrl: launchSiteURL,\n                    token: params[1],\n                    privateToken: params[2],\n                    pageName: data.pageName,\n                    pageParams: data.pageParams\n                };\n            } else {\n                this.logger.debug('Invalid signature in the URL request yours: ' + params[0] + ' mine: '\n                    + signature + ' for passport ' + passport);\n\n                return Promise.reject(this.translate.instant('core.unexpectederror'));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { CoreConstants } from '@core/constants';\n\n/*\n * \"Utils\" service with helper functions for date and time.\n*/\n@Injectable()\nexport class CoreTimeUtilsProvider {\n\n    constructor(private translate: TranslateService) { }\n\n    /**\n     * Returns hours, minutes and seconds in a human readable format\n     *\n     * @param {number} seconds A number of seconds\n     * @return {string} Seconds in a human readable format.\n     */\n    formatTime(seconds: number): string {\n        let totalSecs,\n            years,\n            days,\n            hours,\n            mins,\n            secs,\n            remainder;\n\n        totalSecs = Math.abs(seconds);\n        years = Math.floor(totalSecs / CoreConstants.SECONDS_YEAR);\n        remainder = totalSecs - (years * CoreConstants.SECONDS_YEAR);\n        days = Math.floor(remainder / CoreConstants.SECONDS_DAY);\n\n        remainder = totalSecs - (days * CoreConstants.SECONDS_DAY);\n\n        hours = Math.floor(remainder / CoreConstants.SECONDS_HOUR);\n        remainder = remainder - (hours * CoreConstants.SECONDS_HOUR);\n\n        mins = Math.floor(remainder / CoreConstants.SECONDS_MINUTE);\n        secs = remainder - (mins * CoreConstants.SECONDS_MINUTE);\n\n        const ss = this.translate.instant('core.' + (secs == 1 ? 'sec' : 'secs')),\n            sm = this.translate.instant('core.' + (mins == 1 ? 'min' : 'mins')),\n            sh = this.translate.instant('core.' + (hours == 1 ? 'hour' : 'hours')),\n            sd = this.translate.instant('core.' + (days == 1 ? 'day' : 'days')),\n            sy = this.translate.instant('core.' + (years == 1 ? 'year' : 'years'));\n        let oyears = '',\n            odays = '',\n            ohours = '',\n            omins = '',\n            osecs = '';\n\n        if (years) {\n            oyears = years + ' ' + sy;\n        }\n        if (days) {\n            odays = days + ' ' + sd;\n        }\n        if (hours) {\n            ohours = hours + ' ' + sh;\n        }\n        if (mins) {\n            omins = mins + ' ' + sm;\n        }\n        if (secs) {\n            osecs = secs + ' ' + ss;\n        }\n\n        if (years) {\n            return oyears + ' ' + odays;\n        }\n        if (days) {\n            return odays + ' ' + ohours;\n        }\n        if (hours) {\n            return ohours + ' ' + omins;\n        }\n        if (mins) {\n            return omins + ' ' + osecs;\n        }\n        if (secs) {\n            return osecs;\n        }\n\n        return this.translate.instant('core.now');\n    }\n\n    /**\n     * Returns hours, minutes and seconds in a human readable format.\n     *\n     * @param {number} duration Duration in seconds\n     * @param {number} [precision] Number of elements to have in precission. 0 or undefined to full precission.\n     * @return {string} Duration in a human readable format.\n     */\n    formatDuration(duration: number, precision?: number): string {\n        precision = precision || 5;\n\n        const eventDuration = moment.duration(duration, 'seconds');\n        let durationString = '';\n\n        if (precision && eventDuration.years() > 0) {\n            durationString += ' ' + moment.duration(eventDuration.years(), 'years').humanize();\n            precision--;\n        }\n        if (precision && eventDuration.months() > 0) {\n            durationString += ' ' + moment.duration(eventDuration.months(), 'months').humanize();\n            precision--;\n        }\n        if (precision && eventDuration.days() > 0) {\n            durationString += ' ' + moment.duration(eventDuration.days(), 'days').humanize();\n            precision--;\n        }\n        if (precision && eventDuration.hours() > 0) {\n            durationString += ' ' + moment.duration(eventDuration.hours(), 'hours').humanize();\n            precision--;\n        }\n        if (precision && eventDuration.minutes() > 0) {\n            durationString += ' ' + moment.duration(eventDuration.minutes(), 'minutes').humanize();\n            precision--;\n        }\n\n        return durationString.trim();\n    }\n\n    /**\n     * Return the current timestamp in a \"readable\" format: YYYYMMDDHHmmSS.\n     *\n     * @return {string} The readable timestamp.\n     */\n    readableTimestamp(): string {\n        return moment(Date.now()).format('YYYYMMDDHHmmSS');\n    }\n\n    /**\n     * Return the current timestamp (UNIX format, seconds).\n     *\n     * @return {number} The current timestamp in seconds.\n     */\n    timestamp(): number {\n        return Math.round(Date.now() / 1000);\n    }\n\n    /**\n     * Return the localized ISO format (i.e DDMMYY) from the localized moment format. Useful for translations.\n     *\n     * @param {any} localizedFormat Format to use.\n     * @return {string} Localized ISO format\n     */\n    getLocalizedDateFormat(localizedFormat: any): string {\n        return moment.localeData().longDateFormat(localizedFormat);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/utils/time.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseProvider } from './course';\nimport { CoreCache } from '@classes/cache';\nimport { CoreSiteWSPreSets } from '@classes/site';\nimport { CoreConstants } from '../../constants';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { Subject, BehaviorSubject, Subscription } from 'rxjs';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\n\n/**\n * Progress of downloading a list of modules.\n */\nexport type CoreCourseModulesProgress = {\n    /**\n     * Number of modules downloaded so far.\n     * @type {number}\n     */\n    count: number;\n\n    /**\n     * Toal of modules to download.\n     * @type {number}\n     */\n    total: number;\n};\n\n/**\n * Progress function for downloading a list of modules.\n *\n * @param {CoreCourseModulesProgress} data Progress data.\n */\nexport type CoreCourseModulesProgressFunction = (data: CoreCourseModulesProgress) => void;\n\n/**\n * Interface that all course prefetch handlers must implement.\n */\nexport interface CoreCourseModulePrefetchHandler extends CoreDelegateHandler {\n    /**\n     * The handler's component.\n     * @type {string}\n     */\n    component: string;\n\n    /**\n     * The RegExp to check updates. If a module has an update whose name matches this RegExp, the module will be marked\n     * as outdated. This RegExp is ignored if hasUpdates function is defined.\n     * @type {RegExp}\n     */\n    updatesNames?: RegExp;\n\n    /**\n     * Get the download size of a module.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @return {Promise<{size: number, total: boolean}>} Promise resolved with the size and a boolean indicating if it was able\n     *                                                   to calculate the total size.\n     */\n    getDownloadSize(module: any, courseId: number, single?: boolean): Promise<{ size: number, total: boolean }>;\n\n    /**\n     * Prefetch a module.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @param {string} [dirPath] Path of the directory where to store all the content files.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    prefetch(module: any, courseId?: number, single?: boolean, dirPath?: string): Promise<any>;\n\n    /**\n     * Download the module.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {string} [dirPath] Path of the directory where to store all the content files.\n     * @return {Promise<any>} Promise resolved when all content is downloaded.\n     */\n    download?(module: any, courseId: number, dirPath?: string): Promise<any>;\n\n    /**\n     * Check if a certain module can use core_course_check_updates to check if it has updates.\n     * If not defined, it will assume all modules can be checked.\n     * The modules that return false will always be shown as outdated when they're downloaded.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {boolean|Promise<boolean>} Whether the module can use check_updates. The promise should never be rejected.\n     */\n    canUseCheckUpdates?(module: any, courseId: number): boolean | Promise<boolean>;\n\n    /**\n     * Return the status to show based on current status. E.g. a module might want to show outdated instead of downloaded.\n     * If not implemented, the original status will be returned.\n     *\n     * @param {any} module Module.\n     * @param {string} status The current status.\n     * @param {boolean} canCheck Whether the site allows checking for updates.\n     * @return {string} Status to display.\n     */\n    determineStatus?(module: any, status: string, canCheck: boolean): string;\n\n    /**\n     * Get the downloaded size of a module. If not defined, we'll use getFiles to calculate it (it can be slow).\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {number|Promise<number>} Size, or promise resolved with the size.\n     */\n    getDownloadedSize?(module: any, courseId: number): number | Promise<number>;\n\n    /**\n     * Get the list of files of the module. If not defined, we'll assume they are in module.contents.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {any[]|Promise<any[]>} List of files, or promise resolved with the files.\n     */\n    getFiles?(module: any, courseId: number): any[] | Promise<any[]>;\n\n    /**\n     * Check if a certain module has updates based on the result of check updates.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {any[]} moduleUpdates List of updates for the module.\n     * @return {boolean|Promise<boolean>} Whether the module has updates. The promise should never be rejected.\n     */\n    hasUpdates?(module: any, courseId: number, moduleUpdates: any[]): boolean | Promise<boolean>;\n\n    /**\n     * Invalidate WS calls needed to determine module status (usually, to check if module is downloadable).\n     * It doesn't need to invalidate check updates. It should NOT invalidate files nor all the prefetched data.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when invalidated.\n     */\n    invalidateModule?(module: any, courseId: number): Promise<any>;\n\n    /**\n     * Check if a module can be downloaded. If the function is not defined, we assume that all modules are downloadable.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {boolean|Promise<boolean>} Whether the module can be downloaded. The promise should never be rejected.\n     */\n    isDownloadable?(module: any, courseId: number): boolean | Promise<boolean>;\n\n    /**\n     * Load module contents in module.contents if they aren't loaded already. This is meant for resources.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    loadContents?(module: any, courseId: number): Promise<any>;\n\n    /**\n     * Remove module downloaded files. If not defined, we'll use getFiles to remove them (slow).\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    removeFiles?(module: any, courseId: number): Promise<any>;\n}\n\n/**\n * Delegate to register module prefetch handlers.\n */\n@Injectable()\nexport class CoreCourseModulePrefetchDelegate extends CoreDelegate {\n    // Variables for database.\n    protected CHECK_UPDATES_TIMES_TABLE = 'check_updates_times';\n    protected checkUpdatesTableSchema = {\n        name: this.CHECK_UPDATES_TIMES_TABLE,\n        columns: [\n            {\n                name: 'courseId',\n                type: 'INTEGER',\n                primaryKey: true\n            },\n            {\n                name: 'time',\n                type: 'INTEGER',\n                notNull: true\n            }\n        ]\n    };\n\n    protected ROOT_CACHE_KEY = 'mmCourse:';\n    protected statusCache = new CoreCache();\n\n    // Promises for check updates, to prevent performing the same request twice at the same time.\n    protected courseUpdatesPromises: { [s: string]: { [s: string]: Promise<any> } } = {};\n\n    // Promises and observables for prefetching, to prevent downloading same section twice at the same time and notify progress.\n    protected prefetchData: {\n        [s: string]: {\n            [s: string]: {\n                promise: Promise<any>,\n                observable: Subject<CoreCourseModulesProgress>,\n                subscriptions: Subscription[]\n            }\n        }\n    } = {};\n\n    constructor(loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider, private utils: CoreUtilsProvider,\n            private courseProvider: CoreCourseProvider, private filepoolProvider: CoreFilepoolProvider,\n            private timeUtils: CoreTimeUtilsProvider, private fileProvider: CoreFileProvider,\n            protected eventsProvider: CoreEventsProvider) {\n        super('CoreCourseModulePrefetchDelegate', loggerProvider, sitesProvider, eventsProvider);\n\n        this.sitesProvider.createTableFromSchema(this.checkUpdatesTableSchema);\n\n        eventsProvider.on(CoreEventsProvider.LOGOUT, this.clearStatusCache.bind(this));\n        eventsProvider.on(CoreEventsProvider.PACKAGE_STATUS_CHANGED, (data) => {\n            this.updateStatusCache(data.status, data.component, data.componentId);\n        }, this.sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * Check if current site can check updates using core_course_check_updates.\n     *\n     * @return {boolean} True if can check updates, false otherwise.\n     */\n    canCheckUpdates(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('core_course_check_updates');\n    }\n\n    /**\n     * Check if a certain module can use core_course_check_updates.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<boolean>} Promise resolved with boolean: whether the module can use check updates WS.\n     */\n    canModuleUseCheckUpdates(module: any, courseId: number): Promise<boolean> {\n        const handler = this.getPrefetchHandlerFor(module);\n\n        if (!handler) {\n            // Module not supported, cannot use check updates.\n            return Promise.resolve(false);\n        }\n\n        if (handler.canUseCheckUpdates) {\n            return Promise.resolve(handler.canUseCheckUpdates(module, courseId));\n        }\n\n        // By default, modules can use check updates.\n        return Promise.resolve(true);\n    }\n\n    /**\n     * Clear the status cache.\n     */\n    clearStatusCache(): void {\n        this.statusCache.clear();\n    }\n\n    /**\n     * Creates the list of modules to check for get course updates.\n     *\n     * @param {any[]} modules List of modules.\n     * @param {number} courseId Course ID the modules belong to.\n     * @return {Promise<{toCheck: any[], cannotUse: any[]}>} Promise resolved with the lists.\n     */\n    protected createToCheckList(modules: any[], courseId: number): Promise<{ toCheck: any[], cannotUse: any[] }> {\n        const result = {\n                toCheck: [],\n                cannotUse: []\n            },\n            promises = [];\n\n        modules.forEach((module) => {\n            promises.push(this.getModuleStatusAndDownloadTime(module, courseId).then((data) => {\n                if (data.status == CoreConstants.DOWNLOADED) {\n                    // Module is downloaded and not outdated. Check if it can check updates.\n                    return this.canModuleUseCheckUpdates(module, courseId).then((canUse) => {\n                        if (canUse) {\n                            // Can use check updates, add it to the tocheck list.\n                            result.toCheck.push({\n                                contextlevel: 'module',\n                                id: module.id,\n                                since: data.downloadTime || 0\n                            });\n                        } else {\n                            // Cannot use check updates, add it to the cannotUse array.\n                            result.cannotUse.push(module);\n                        }\n                    });\n                }\n            }).catch(() => {\n                // Ignore errors.\n            }));\n        });\n\n        return Promise.all(promises).then(() => {\n            // Sort toCheck list.\n            result.toCheck.sort((a, b) => {\n                return a.id >= b.id ? 1 : -1;\n            });\n\n            return result;\n        });\n    }\n\n    /**\n     * Determines a module status based on current status, restoring downloads if needed.\n     *\n     * @param {any} module Module.\n     * @param {string} status Current status.\n     * @param {boolean} [canCheck] True if updates can be checked using core_course_check_updates.\n     * @return {string} Module status.\n     */\n    determineModuleStatus(module: any, status: string, canCheck?: boolean): string {\n        const handler = this.getPrefetchHandlerFor(module),\n            siteId = this.sitesProvider.getCurrentSiteId();\n\n        if (handler) {\n            if (status == CoreConstants.DOWNLOADING) {\n                // Check if the download is being handled.\n                if (!this.filepoolProvider.getPackageDownloadPromise(siteId, handler.component, module.id)) {\n                    // Not handled, the app was probably restarted or something weird happened.\n                    // Re-start download (files already on queue or already downloaded will be skipped).\n                    handler.prefetch(module);\n                }\n            } else if (handler.determineStatus) {\n                // The handler implements a determineStatus function. Apply it.\n                return handler.determineStatus(module, status, canCheck);\n            }\n        }\n\n        return status;\n    }\n\n    /**\n     * Check for updates in a course.\n     *\n     * @param {any[]} modules List of modules.\n     * @param {number} courseId  Course ID the modules belong to.\n     * @return {Promise<any>} Promise resolved with the updates. If a module is set to false, it means updates cannot be\n     *                        checked for that module in the current site.\n     */\n    getCourseUpdates(modules: any[], courseId: number): Promise<any> {\n        if (!this.canCheckUpdates()) {\n            return Promise.reject(null);\n        }\n\n        // Check if there's already a getCourseUpdates in progress.\n        const id = <string> Md5.hashAsciiStr(courseId + '#' + JSON.stringify(modules)),\n            siteId = this.sitesProvider.getCurrentSiteId();\n\n        if (this.courseUpdatesPromises[siteId] && this.courseUpdatesPromises[siteId][id]) {\n            // There's already a get updates ongoing, return the promise.\n            return this.courseUpdatesPromises[siteId][id];\n        } else if (!this.courseUpdatesPromises[siteId]) {\n            this.courseUpdatesPromises[siteId] = {};\n        }\n\n        this.courseUpdatesPromises[siteId][id] = this.createToCheckList(modules, courseId).then((data) => {\n            const result = {};\n\n            // Mark as false the modules that cannot use check updates WS.\n            data.cannotUse.forEach((module) => {\n                result[module.id] = false;\n            });\n\n            if (!data.toCheck.length) {\n                // Nothing to check, no need to call the WS.\n                return result;\n            }\n\n            // Get the site, maybe the user changed site.\n            return this.sitesProvider.getSite(siteId).then((site) => {\n                const params = {\n                        courseid: courseId,\n                        tocheck: data.toCheck\n                    },\n                    preSets: CoreSiteWSPreSets = {\n                        cacheKey: this.getCourseUpdatesCacheKey(courseId),\n                        emergencyCache: false, // If downloaded data has changed and offline, just fail. See MOBILE-2085.\n                        uniqueCacheKey: true\n                    };\n\n                return site.read('core_course_check_updates', params, preSets).then((response) => {\n                    if (!response || typeof response.instances == 'undefined') {\n                        return Promise.reject(null);\n                    }\n\n                    // Store the last execution of the check updates call.\n                    const entry = {\n                        courseId: courseId,\n                        time: this.timeUtils.timestamp()\n                    };\n                    site.getDb().insertOrUpdateRecord(this.CHECK_UPDATES_TIMES_TABLE, entry, { courseId: courseId });\n\n                    return this.treatCheckUpdatesResult(data.toCheck, response, result);\n                }).catch((error) => {\n                    // Cannot get updates.\n                    // Get cached entries but discard modules with a download time higher than the last execution of check updates.\n                    return site.getDb().getRecord(this.CHECK_UPDATES_TIMES_TABLE, { courseId: courseId }).then((entry) => {\n                        preSets.getCacheUsingCacheKey = true;\n                        preSets.omitExpires = true;\n\n                        return site.read('core_course_check_updates', params, preSets).then((response) => {\n                            if (!response || typeof response.instances == 'undefined') {\n                                return Promise.reject(error);\n                            }\n\n                            return this.treatCheckUpdatesResult(data.toCheck, response, result, entry.time);\n                        });\n                    }, () => {\n                        // No previous executions, return result as it is.\n                        return result;\n                    });\n                });\n            });\n        }).finally(() => {\n            // Get updates finished, delete the promise.\n            delete this.courseUpdatesPromises[siteId][id];\n        });\n\n        return this.courseUpdatesPromises[siteId][id];\n    }\n\n    /**\n     * Check for updates in a course.\n     *\n     * @param {number} courseId Course ID the modules belong to.\n     * @return {Promise<any>} Promise resolved with the updates.\n     */\n    getCourseUpdatesByCourseId(courseId: number): Promise<any> {\n        if (!this.canCheckUpdates()) {\n            return Promise.reject(null);\n        }\n\n        // Get course sections and all their modules.\n        return this.courseProvider.getSections(courseId, false, true, { omitExpires: true }).then((sections) => {\n            return this.getCourseUpdates(this.courseProvider.getSectionsModules(sections), courseId);\n        });\n    }\n\n    /**\n     * Get cache key for course updates WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @return {string} Cache key.\n     */\n    protected getCourseUpdatesCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'courseUpdates:' + courseId;\n    }\n\n    /**\n     * Get modules download size. Only treat the modules with status not downloaded or outdated.\n     *\n     * @param {any[]} modules List of modules.\n     * @param {number} courseId Course ID the modules belong to.\n     * @return {Promise<{size: number, total: boolean}>} Promise resolved with the size and a boolean indicating if it was able\n     *                                                   to calculate the total size.\n     */\n    getDownloadSize(modules: any[], courseId: number): Promise<{ size: number, total: boolean }> {\n        // Get the status of each module.\n        return this.getModulesStatus(modules, courseId).then((data) => {\n            const downloadableModules = data[CoreConstants.NOT_DOWNLOADED].concat(data[CoreConstants.OUTDATED]),\n                promises = [],\n                result = {\n                    size: 0,\n                    total: true\n                };\n\n            downloadableModules.forEach((module) => {\n                promises.push(this.getModuleDownloadSize(module, courseId).then((size) => {\n                    result.total = result.total && size.total;\n                    result.size += size.size;\n                }));\n            });\n\n            return Promise.all(promises).then(() => {\n                return result;\n            });\n        });\n    }\n\n    /**\n     * Get the download size of a module.\n     *\n     * @param {any} module Module to get size.\n     * @param {Number} courseId Course ID the module belongs to.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @return {Promise<{size: number, total: boolean}>} Promise resolved with the size and a boolean indicating if it was able\n     *                                                   to calculate the total size.\n     */\n    getModuleDownloadSize(module: any, courseId: number, single?: boolean): Promise<{ size: number, total: boolean }> {\n        const handler = this.getPrefetchHandlerFor(module);\n        let downloadSize,\n            packageId;\n\n        // Check if the module has a prefetch handler.\n        if (handler) {\n            return this.isModuleDownloadable(module, courseId).then((downloadable) => {\n                if (!downloadable) {\n                    return { size: 0, total: true };\n                }\n\n                packageId = this.filepoolProvider.getPackageId(handler.component, module.id);\n                downloadSize = this.statusCache.getValue(packageId, 'downloadSize');\n                if (typeof downloadSize != 'undefined') {\n                    return downloadSize;\n                }\n\n                return Promise.resolve(handler.getDownloadSize(module, courseId, single)).then((size) => {\n                    return this.statusCache.setValue(packageId, 'downloadSize', size);\n                }).catch((error) => {\n                    const cachedSize = this.statusCache.getValue(packageId, 'downloadSize', true);\n                    if (cachedSize) {\n                        return cachedSize;\n                    }\n\n                    return Promise.reject(error);\n                });\n            });\n        }\n\n        return Promise.resolve({ size: 0, total: false });\n    }\n\n    /**\n     * Get the download size of a module.\n     *\n     * @param {any} module Module to get size.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<number>} Promise resolved with the size.\n     */\n    getModuleDownloadedSize(module: any, courseId: number): Promise<number> {\n        const handler = this.getPrefetchHandlerFor(module);\n        let downloadedSize,\n            packageId,\n            promise;\n\n        // Check if the module has a prefetch handler.\n        if (handler) {\n            return this.isModuleDownloadable(module, courseId).then((downloadable) => {\n                if (!downloadable) {\n                    return 0;\n                }\n\n                packageId = this.filepoolProvider.getPackageId(handler.component, module.id);\n                downloadedSize = this.statusCache.getValue(packageId, 'downloadedSize');\n                if (typeof downloadedSize != 'undefined') {\n                    return downloadedSize;\n                }\n\n                if (handler.getDownloadedSize) {\n                    // Handler implements a method to calculate the downloaded size, use it.\n                    promise = Promise.resolve(handler.getDownloadedSize(module, courseId));\n                } else {\n                    // Handler doesn't implement it, get the module files and check if they're downloaded.\n                    promise = this.getModuleFiles(module, courseId).then((files) => {\n                        const siteId = this.sitesProvider.getCurrentSiteId(),\n                            promises = [];\n                        let size = 0;\n\n                        // Retrieve file size if it's downloaded.\n                        files.forEach((file) => {\n                            const fileUrl = file.url || file.fileurl;\n                            promises.push(this.filepoolProvider.getFilePathByUrl(siteId, fileUrl).then((path) => {\n                                return this.fileProvider.getFileSize(path).catch(() => {\n                                    // Error getting size. Check if the file is being downloaded.\n                                    return this.filepoolProvider.isFileDownloadingByUrl(siteId, fileUrl).then(() => {\n                                        // If downloading, count as downloaded.\n                                        return file.filesize;\n                                    }).catch(() => {\n                                        // Not downloading and not found in disk.\n                                        return 0;\n                                    });\n                                }).then((fs) => {\n                                    size += fs;\n                                });\n                            }));\n                        });\n\n                        return Promise.all(promises).then(() => {\n                            return size;\n                        });\n                    });\n                }\n\n                return promise.then((size) => {\n                    return this.statusCache.setValue(packageId, 'downloadedSize', size);\n                }).catch(() => {\n                    return this.statusCache.getValue(packageId, 'downloadedSize', true);\n                });\n            });\n        }\n\n        return Promise.resolve(0);\n    }\n\n    /**\n     * Get module files.\n     *\n     * @param {any} module Module to get the files.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any[]>} Promise resolved with the list of files.\n     */\n    getModuleFiles(module: any, courseId: number): Promise<any[]> {\n        const handler = this.getPrefetchHandlerFor(module);\n\n        if (handler.getFiles) {\n            // The handler defines a function to get files, use it.\n            return Promise.resolve(handler.getFiles(module, courseId));\n        } else if (handler.loadContents) {\n            // The handler defines a function to load contents, use it before returning module contents.\n            return handler.loadContents(module, courseId).then(() => {\n                return module.contents;\n            });\n        } else {\n            return Promise.resolve(module.contents || []);\n        }\n    }\n\n    /**\n     * Get the module status.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {any} [updates] Result of getCourseUpdates for all modules in the course. If not provided, it will be\n     *                        calculated (slower). If it's false it means the site doesn't support check updates.\n     * @param {boolean} [refresh] True if it should ignore the cache.\n     * @param {number} [sectionId] ID of the section the module belongs to.\n     * @return {Promise<string>} Promise resolved with the status.\n     */\n    getModuleStatus(module: any, courseId: number, updates?: any, refresh?: boolean, sectionId?: number): Promise<string> {\n        const handler = this.getPrefetchHandlerFor(module),\n            siteId = this.sitesProvider.getCurrentSiteId(),\n            canCheck = this.canCheckUpdates();\n\n        if (handler) {\n            // Check if the status is cached.\n            const component = handler.component,\n                packageId = this.filepoolProvider.getPackageId(component, module.id);\n            let status = this.statusCache.getValue(packageId, 'status'),\n                updateStatus = true,\n                promise;\n\n            if (!refresh && typeof status != 'undefined') {\n                this.storeCourseAndSection(packageId, courseId, sectionId);\n\n                return Promise.resolve(this.determineModuleStatus(module, status, canCheck));\n            }\n\n            // Check if the module is downloadable.\n            return this.isModuleDownloadable(module, courseId).then((downloadable) => {\n                if (!downloadable) {\n                    return CoreConstants.NOT_DOWNLOADABLE;\n                }\n\n                // Get the saved package status.\n                return this.filepoolProvider.getPackageStatus(siteId, component, module.id).then((currentStatus) => {\n                    status = handler.determineStatus ? handler.determineStatus(module, currentStatus, canCheck) : currentStatus;\n                    if (status != CoreConstants.DOWNLOADED) {\n                        return status;\n                    }\n\n                    // Module is downloaded. Determine if there are updated in the module to show them outdated.\n                    if (typeof updates == 'undefined') {\n                        // We don't have course updates, calculate them.\n                        promise = this.getCourseUpdatesByCourseId(courseId);\n                    } else if (updates === false) {\n                        // Cannot check updates.\n                        return Promise.resolve();\n                    } else {\n                        promise = Promise.resolve(updates);\n                    }\n\n                    return promise.then((updates) => {\n                        if (!updates || updates[module.id] === false) {\n                            // Cannot check updates, always show outdated.\n                            return CoreConstants.OUTDATED;\n                        }\n\n                        // Check if the module has any update.\n                        return this.moduleHasUpdates(module, courseId, updates).then((hasUpdates) => {\n                            if (!hasUpdates) {\n                                // No updates, keep current status.\n                                return status;\n                            }\n\n                            // Has updates, mark the module as outdated.\n                            status = CoreConstants.OUTDATED;\n\n                            return this.filepoolProvider.storePackageStatus(siteId, status, component, module.id).catch(() => {\n                                // Ignore errors.\n                            }).then(() => {\n                                return status;\n                            });\n                        }).catch(() => {\n                            // Error checking if module has updates.\n                            const status = this.statusCache.getValue(packageId, 'status', true);\n\n                            return this.determineModuleStatus(module, status, canCheck);\n                        });\n                    }, () => {\n                        // Error getting updates, show the stored status.\n                        updateStatus = false;\n                        this.storeCourseAndSection(packageId, courseId, sectionId);\n\n                        return currentStatus;\n                    });\n                });\n            }).then((status) => {\n                if (updateStatus) {\n                    this.updateStatusCache(status, component, module.id, courseId, sectionId);\n                }\n\n                return this.determineModuleStatus(module, status, canCheck);\n            });\n        }\n\n        // No handler found, module not downloadable.\n        return Promise.resolve(CoreConstants.NOT_DOWNLOADABLE);\n    }\n\n    /**\n     * Get the status of a list of modules, along with the lists of modules for each status.\n     * @see {@link CoreFilepoolProvider.determinePackagesStatus}\n     *\n     * @param {any[]} modules List of modules to prefetch.\n     * @param {number} courseId Course ID the modules belong to.\n     * @param {number} [sectionId] ID of the section the modules belong to.\n     * @param {boolean} [refresh] True if it should always check the DB (slower).\n     * @return {Promise<any>} Promise resolved with an object with the following properties:\n     *                                - status (string) Status of the module.\n     *                                - total (number) Number of modules.\n     *                                - CoreConstants.NOT_DOWNLOADED (any[]) Modules with state NOT_DOWNLOADED.\n     *                                - CoreConstants.DOWNLOADED (any[]) Modules with state DOWNLOADED.\n     *                                - CoreConstants.DOWNLOADING (any[]) Modules with state DOWNLOADING.\n     *                                - CoreConstants.OUTDATED (any[]) Modules with state OUTDATED.\n     */\n    getModulesStatus(modules: any[], courseId: number, sectionId?: number, refresh?: boolean): any {\n        const promises = [],\n            result: any = {\n                total: 0\n            };\n        let status = CoreConstants.NOT_DOWNLOADABLE;\n\n        // Init result.\n        result[CoreConstants.NOT_DOWNLOADED] = [];\n        result[CoreConstants.DOWNLOADED] = [];\n        result[CoreConstants.DOWNLOADING] = [];\n        result[CoreConstants.OUTDATED] = [];\n\n        // Check updates in course. Don't use getCourseUpdates because the list of modules might not be the whole course list.\n        return this.getCourseUpdatesByCourseId(courseId).catch(() => {\n            // Cannot get updates.\n            return false;\n        }).then((updates) => {\n\n            modules.forEach((module) => {\n                // Check if the module has a prefetch handler.\n                const handler = this.getPrefetchHandlerFor(module);\n                if (handler) {\n                    const packageId = this.filepoolProvider.getPackageId(handler.component, module.id);\n\n                    promises.push(this.getModuleStatus(module, courseId, updates, refresh).then((modStatus) => {\n                        if (modStatus != CoreConstants.NOT_DOWNLOADABLE) {\n                            status = this.filepoolProvider.determinePackagesStatus(status, modStatus);\n                            result[modStatus].push(module);\n                            result.total++;\n                        }\n                    }).catch((error) => {\n                        let cacheStatus = this.statusCache.getValue(packageId, 'status', true);\n                        if (typeof cacheStatus == 'undefined') {\n                            return Promise.reject(error);\n                        }\n\n                        if (cacheStatus != CoreConstants.NOT_DOWNLOADABLE) {\n                            cacheStatus = this.filepoolProvider.determinePackagesStatus(status, cacheStatus);\n                            result[cacheStatus].push(module);\n                            result.total++;\n                        }\n                    }));\n                }\n            });\n\n            return Promise.all(promises).then(() => {\n                result.status = status;\n\n                return result;\n            });\n        });\n    }\n\n    /**\n     * Get a module status and download time. It will only return the download time if the module is downloaded and not outdated.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<{status: string, downloadTime?: number}>} Promise resolved with the data.\n     */\n    protected getModuleStatusAndDownloadTime(module: any, courseId: number): Promise<{ status: string, downloadTime?: number }> {\n        const handler = this.getPrefetchHandlerFor(module),\n            siteId = this.sitesProvider.getCurrentSiteId();\n\n        if (handler) {\n            // Get the status from the cache.\n            const packageId = this.filepoolProvider.getPackageId(handler.component, module.id),\n                status = this.statusCache.getValue(packageId, 'status');\n\n            if (typeof status != 'undefined' && status != CoreConstants.DOWNLOADED) {\n                // Status is different than downloaded, just return the status.\n                return Promise.resolve({\n                    status: status\n                });\n            }\n\n            // Check if the module is downloadable.\n            return this.isModuleDownloadable(module, courseId).then((downloadable: boolean): any => {\n                if (!downloadable) {\n                    return {\n                        status: CoreConstants.NOT_DOWNLOADABLE\n                    };\n                }\n\n                // Get the stored data to get the status and downloadTime.\n                return this.filepoolProvider.getPackageData(siteId, handler.component, module.id).then((data) => {\n                    return {\n                        status: data.status,\n                        downloadTime: data.downloadTime || 0\n                    };\n                });\n            });\n        }\n\n        // No handler found, module not downloadable.\n        return Promise.resolve({\n            status: CoreConstants.NOT_DOWNLOADABLE\n        });\n    }\n\n    /**\n     * Get a prefetch handler.\n     *\n     * @param {any} module The module to work on.\n     * @return {CoreCourseModulePrefetchHandler} Prefetch handler.\n     */\n    getPrefetchHandlerFor(module: any): CoreCourseModulePrefetchHandler {\n        return <CoreCourseModulePrefetchHandler> this.getHandler(module.modname, true);\n    }\n\n    /**\n     * Invalidate check updates WS call.\n     *\n     * @param {number} courseId Course ID.\n     * @return {Promise<any>} Promise resolved when data is invalidated.\n     */\n    invalidateCourseUpdates(courseId: number): Promise<any> {\n        return this.sitesProvider.getCurrentSite().invalidateWsCacheForKey(this.getCourseUpdatesCacheKey(courseId));\n    }\n\n    /**\n     * Invalidate a list of modules in a course. This should only invalidate WS calls, not downloaded files.\n     *\n     * @param {any[]} modules List of modules.\n     * @param {number} courseId Course ID.\n     * @return {Promise<any>} Promise resolved when modules are invalidated.\n     */\n    invalidateModules(modules: any[], courseId: number): Promise<any> {\n        const promises = [];\n\n        modules.forEach((module) => {\n            const handler = this.getPrefetchHandlerFor(module);\n            if (handler) {\n                if (handler.invalidateModule) {\n                    promises.push(handler.invalidateModule(module, courseId).catch(() => {\n                        // Ignore errors.\n                    }));\n                }\n\n                // Invalidate cache.\n                this.invalidateModuleStatusCache(module);\n            }\n        });\n\n        promises.push(this.invalidateCourseUpdates(courseId));\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Invalidates the cache for a given module.\n     *\n     * @param {any} module Module to be invalidated.\n     */\n    invalidateModuleStatusCache(module: any): void {\n        const handler = this.getPrefetchHandlerFor(module);\n        if (handler) {\n            this.statusCache.invalidate(this.filepoolProvider.getPackageId(handler.component, module.id));\n        }\n    }\n\n    /**\n     * Check if a list of modules is being downloaded.\n     *\n     * @param {string} id An ID to identify the download.\n     * @return {boolean} True if it's being downloaded, false otherwise.\n     */\n    isBeingDownloaded(id: string): boolean {\n        const siteId = this.sitesProvider.getCurrentSiteId();\n\n        return !!(this.prefetchData[siteId] && this.prefetchData[siteId][id]);\n    }\n\n    /**\n     * Check if a module is downloadable.\n     *\n     * @param {any} module Module.\n     * @param {Number} courseId Course ID the module belongs to.\n     * @return {Promise<boolean>} Promise resolved with true if downloadable, false otherwise.\n     */\n    isModuleDownloadable(module: any, courseId: number): Promise<boolean> {\n        const handler = this.getPrefetchHandlerFor(module);\n\n        if (handler) {\n            if (typeof handler.isDownloadable == 'function') {\n                const packageId = this.filepoolProvider.getPackageId(handler.component, module.id),\n                    downloadable = this.statusCache.getValue(packageId, 'downloadable');\n\n                if (typeof downloadable != 'undefined') {\n                    return Promise.resolve(downloadable);\n                } else {\n                    return Promise.resolve(handler.isDownloadable(module, courseId)).then((downloadable) => {\n                        return this.statusCache.setValue(packageId, 'downloadable', downloadable);\n                    }).catch(() => {\n                        // Something went wrong, assume it's not downloadable.\n                        return false;\n                    });\n                }\n            } else {\n                // Function not defined, assume it's not downloadable.\n                return Promise.resolve(true);\n            }\n        } else {\n            // No handler for module, so it's not downloadable.\n            return Promise.resolve(false);\n        }\n    }\n\n    /**\n     * Check if a module has updates based on the result of getCourseUpdates.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {any} updates Result of getCourseUpdates.\n     * @return {Promise<boolean>} Promise resolved with boolean: whether the module has updates.\n     */\n    moduleHasUpdates(module: any, courseId: number, updates: any): Promise<boolean> {\n        const handler = this.getPrefetchHandlerFor(module),\n            moduleUpdates = updates[module.id];\n\n        if (handler && handler.hasUpdates) {\n            // Handler implements its own function to check the updates, use it.\n            return Promise.resolve(handler.hasUpdates(module, courseId, moduleUpdates));\n        } else if (!moduleUpdates || !moduleUpdates.updates || !moduleUpdates.updates.length) {\n            // Module doesn't have any update.\n            return Promise.resolve(false);\n        } else if (handler && handler.updatesNames && handler.updatesNames.test) {\n            // Check the update names defined by the handler.\n            for (let i = 0, len = moduleUpdates.updates.length; i < len; i++) {\n                if (handler.updatesNames.test(moduleUpdates.updates[i].name)) {\n                    return Promise.resolve(true);\n                }\n            }\n\n            return Promise.resolve(false);\n        }\n\n        // Handler doesn't define hasUpdates or updatesNames and there is at least 1 update. Assume it has updates.\n        return Promise.resolve(true);\n    }\n\n    /**\n     * Prefetch a module.\n     *\n     * @param {any} module Module to prefetch.\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @return {Promise<any>} Promise resolved when finished.\n     */\n    prefetchModule(module: any, courseId: number, single?: boolean): Promise<any> {\n        const handler = this.getPrefetchHandlerFor(module);\n\n        // Check if the module has a prefetch handler.\n        if (handler) {\n            return handler.prefetch(module, courseId, single);\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Prefetches a list of modules using their prefetch handlers.\n     * If a prefetch already exists for this site and id, returns the current promise.\n     *\n     * @param {string} id An ID to identify the download. It can be used to retrieve the download promise.\n     * @param {any[]} modules List of modules to prefetch.\n     * @param {number} courseId Course ID the modules belong to.\n     * @param {CoreCourseModulesProgressFunction} [onProgress] Function to call everytime a module is downloaded.\n     * @return {Promise<any>} Promise resolved when all modules have been prefetched.\n     */\n    prefetchModules(id: string, modules: any[], courseId: number, onProgress?: CoreCourseModulesProgressFunction): Promise<any> {\n\n        const siteId = this.sitesProvider.getCurrentSiteId(),\n            currentData = this.prefetchData[siteId] && this.prefetchData[siteId][id];\n\n        if (currentData) {\n            // There's a prefetch ongoing, return the current promise.\n            if (onProgress) {\n                currentData.subscriptions.push(currentData.observable.subscribe(onProgress));\n            }\n\n            return currentData.promise;\n        }\n\n        let count = 0;\n        const promises = [],\n            total = modules.length,\n            moduleIds = modules.map((module) => {\n                return module.id;\n            }),\n            prefetchData = {\n                observable: new BehaviorSubject<CoreCourseModulesProgress>({ count: count, total: total }),\n                promise: undefined,\n                subscriptions: []\n            };\n\n        if (onProgress) {\n            prefetchData.observable.subscribe(onProgress);\n        }\n\n        modules.forEach((module) => {\n            // Check if the module has a prefetch handler.\n            const handler = this.getPrefetchHandlerFor(module);\n            if (handler) {\n                promises.push(this.isModuleDownloadable(module, courseId).then((downloadable) => {\n                    if (!downloadable) {\n                        return;\n                    }\n\n                    return handler.prefetch(module, courseId).then(() => {\n                        const index = moduleIds.indexOf(id);\n                        if (index > -1) {\n                            // It's one of the modules we were expecting to download.\n                            moduleIds.splice(index, 1);\n                            count++;\n                            prefetchData.observable.next({ count: count, total: total });\n                        }\n                    });\n                }));\n            }\n        });\n\n        // Set the promise.\n        prefetchData.promise = Promise.all(promises).finally(() => {\n            // Unsubscribe all observers.\n            prefetchData.subscriptions.forEach((subscription: Subscription) => {\n                subscription.unsubscribe();\n            });\n            delete this.prefetchData[siteId][id];\n        });\n\n        // Store the prefetch data in the list.\n        if (!this.prefetchData[siteId]) {\n            this.prefetchData[siteId] = {};\n        }\n        this.prefetchData[siteId][id] = prefetchData;\n\n        return prefetchData.promise;\n    }\n\n    /**\n     * Remove module Files from handler.\n     *\n     * @param {any} module Module to remove the files.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<void>} Promise resolved when done.\n     */\n    removeModuleFiles(module: any, courseId: number): Promise<void> {\n        const handler = this.getPrefetchHandlerFor(module),\n            siteId = this.sitesProvider.getCurrentSiteId();\n        let promise;\n\n        if (handler && handler.removeFiles) {\n            // Handler implements a method to remove the files, use it.\n            promise = handler.removeFiles(module, courseId);\n        } else {\n            // No method to remove files, use get files to try to remove the files.\n            promise = this.getModuleFiles(module, courseId).then((files) => {\n                const promises = [];\n                files.forEach((file) => {\n                    promises.push(this.filepoolProvider.removeFileByUrl(siteId, file.url || file.fileurl).catch(() => {\n                        // Ignore errors.\n                    }));\n                });\n\n                return Promise.all(promises);\n            });\n        }\n\n        return promise.then(() => {\n            if (handler) {\n                // Update status of the module.\n                const packageId = this.filepoolProvider.getPackageId(handler.component, module.id);\n                this.statusCache.setValue(packageId, 'downloadedSize', 0);\n\n                return this.filepoolProvider.storePackageStatus(siteId, CoreConstants.NOT_DOWNLOADED, handler.component, module.id);\n            }\n        });\n    }\n\n    /**\n     * Set an on progress function for the download of a list of modules.\n     *\n     * @param {string} id An ID to identify the download.\n     * @param {CoreCourseModulesProgressFunction} onProgress Function to call everytime a module is downloaded.\n     */\n    setOnProgress(id: string, onProgress: CoreCourseModulesProgressFunction): void {\n        const siteId = this.sitesProvider.getCurrentSiteId(),\n            currentData = this.prefetchData[siteId] && this.prefetchData[siteId][id];\n\n        if (currentData) {\n            // There's a prefetch ongoing, return the current promise.\n            currentData.subscriptions.push(currentData.observable.subscribe(onProgress));\n        }\n    }\n\n    /**\n     * If courseId or sectionId is set, save them in the cache.\n     *\n     * @param {string} packageId The package ID.\n     * @param {number} [courseId] Course ID.\n     * @param {number} [sectionId] Section ID.\n     */\n    storeCourseAndSection(packageId: string, courseId?: number, sectionId?: number): void {\n        if (courseId) {\n            this.statusCache.setValue(packageId, 'courseId', courseId);\n        }\n        if (sectionId && sectionId > 0) {\n            this.statusCache.setValue(packageId, 'sectionId', sectionId);\n        }\n    }\n\n    /**\n     * Treat the result of the check updates WS call.\n     *\n     * @param {any[]} toCheckList List of modules to check (from createToCheckList).\n     * @param {any} response WS call response.\n     * @param {any} result Object where to store the result.\n     * @param {number} [previousTime] Time of the previous check updates execution. If set, modules downloaded\n     *                                after this time will be ignored.\n     * @return {any} Result.\n     */\n    protected treatCheckUpdatesResult(toCheckList: any[], response: any, result: any, previousTime?: number): any {\n        // Format the response to index it by module ID.\n        this.utils.arrayToObject(response.instances, 'id', result);\n\n        // Treat warnings, adding the not supported modules.\n        response.warnings.forEach((warning) => {\n            if (warning.warningcode == 'missingcallback') {\n                result[warning.itemid] = false;\n            }\n        });\n\n        if (previousTime) {\n            // Remove from the list the modules downloaded after previousTime.\n            toCheckList.forEach((entry) => {\n                if (result[entry.id] && entry.since > previousTime) {\n                    delete result[entry.id];\n                }\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Update the status of a module in the \"cache\".\n     *\n     * @param {string} status New status.\n     * @param {string} component Package's component.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {number} [courseId] Course ID of the module.\n     * @param {number} [sectionId] Section ID of the module.\n     */\n    updateStatusCache(status: string, component: string, componentId?: string | number, courseId?: number, sectionId?: number)\n            : void {\n        const packageId = this.filepoolProvider.getPackageId(component, componentId),\n            cachedStatus = this.statusCache.getValue(packageId, 'status', true);\n        let notify;\n\n        // If the status has changed, notify that the section has changed.\n        notify = typeof cachedStatus != 'undefined' && cachedStatus !== status;\n\n        // If courseId/sectionId is set, store it.\n        this.storeCourseAndSection(packageId, courseId, sectionId);\n\n        if (notify) {\n            if (!courseId) {\n                courseId = this.statusCache.getValue(packageId, 'courseId', true);\n            }\n            if (!sectionId) {\n                sectionId = this.statusCache.getValue(packageId, 'sectionId', true);\n            }\n\n            // Invalidate and set again.\n            this.statusCache.invalidate(packageId);\n            this.statusCache.setValue(packageId, 'status', status);\n\n            if (sectionId) {\n                this.eventsProvider.trigger(CoreEventsProvider.SECTION_STATUS_CHANGED, {\n                    sectionId: sectionId,\n                    courseId: courseId\n                }, this.sitesProvider.getCurrentSiteId());\n            }\n        } else {\n            this.statusCache.setValue(packageId, 'status', status);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/providers/module-prefetch-delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { NavController, NavOptions } from 'ionic-angular';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreCourseProvider } from './course';\nimport { CoreSite } from '@classes/site';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\n\n/**\n * Interface that all course module handlers must implement.\n */\nexport interface CoreCourseModuleHandler extends CoreDelegateHandler {\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getData(module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData;\n\n    /**\n     * Get the component to render the module. This is needed to support singleactivity course format.\n     * The component returned must implement CoreCourseModuleMainComponent.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getMainComponent(injector: Injector, course: any, module: any): any | Promise<any>;\n}\n\n/**\n * Data needed to render the module in course contents.\n */\nexport interface CoreCourseModuleHandlerData {\n    /**\n     * The title to display in the module.\n     * @type {string}\n     */\n    title: string;\n\n    /**\n     * The image to use as icon (path to the image).\n     * @type {string}\n     */\n    icon?: string;\n\n    /**\n     * The class to assign to the item.\n     * @type {string}\n     */\n    class?: string;\n\n    /**\n     * Whether to display a button to download/refresh the module if it's downloadable.\n     * If it's set to true, the app will show a download/refresh button when needed and will handle the download of the\n     * module using CoreCourseModulePrefetchDelegate.\n     * @type {boolean}\n     */\n    showDownloadButton?: boolean;\n\n    /**\n     * The buttons to display in the module item.\n     * @type {CoreCourseModuleHandlerButton[]}\n     */\n    buttons?: CoreCourseModuleHandlerButton[];\n\n    /**\n     * Whether to display a spinner in the module item.\n     * @type {boolean}\n     */\n    spinner?: boolean;\n\n    /**\n     * Action to perform when the module is clicked.\n     *\n     * @param {Event} event The click event.\n     * @param {NavController} navCtrl NavController instance.\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {NavOptions} [options] Options for the navigation.\n     */\n    action?(event: Event, navCtrl: NavController, module: any, courseId: number, options?: NavOptions): void;\n}\n\n/**\n * Interface that all the components to render the module in singleactivity must implement.\n */\nexport interface CoreCourseModuleMainComponent {\n    /**\n     * Refresh the data.\n     *\n     * @param {any} [refresher] Refresher.\n     * @param {Function} [done] Function to call when done.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void): Promise<any>;\n}\n\n/**\n * A button to display in a module item.\n */\nexport interface CoreCourseModuleHandlerButton {\n    /**\n     * The label to add to the button.\n     * @type {string}\n     */\n    label: string;\n\n    /**\n     * The name of the button icon.\n     * @type {string}\n     */\n    icon: string;\n\n    /**\n     * Whether the button should be hidden.\n     * @type {boolean}\n     */\n    hidden?: boolean;\n\n    /**\n     * The name of the button icon to use in iOS instead of \"icon\".\n     * @type {string}\n     */\n    iosIcon?: string;\n\n    /**\n     * The name of the button icon to use in MaterialDesign instead of \"icon\".\n     * @type {string}\n     */\n    mdIcon?: string;\n\n    /**\n     * Action to perform when the button is clicked.\n     *\n     * @param {Event} event The click event.\n     * @param {NavController} navCtrl NavController instance.\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     */\n    action(event: Event, navCtrl: NavController, module: any, courseId: number): void;\n}\n\n/**\n * Delegate to register module handlers.\n */\n@Injectable()\nexport class CoreCourseModuleDelegate extends CoreDelegate {\n    protected handlers: { [s: string]: CoreCourseModuleHandler } = {}; // All registered handlers.\n    protected enabledHandlers: { [s: string]: CoreCourseModuleHandler } = {}; // Handlers enabled for the current site.\n    protected featurePrefix = '$mmCourseDelegate_';\n\n    constructor(loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider, eventsProvider: CoreEventsProvider,\n            protected courseProvider: CoreCourseProvider) {\n        super('CoreCourseModuleDelegate', loggerProvider, sitesProvider, eventsProvider);\n    }\n\n    /**\n     * Get the component to render the module.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {Promise<any>} Promise resolved with component to use, undefined if not found.\n     */\n    getMainComponent(injector: Injector, course: any, module: any): Promise<any> {\n        const handler = this.enabledHandlers[module.modname];\n        if (handler && handler.getMainComponent) {\n            return Promise.resolve(handler.getMainComponent(injector, course, module)).catch((err) => {\n                this.logger.error('Error getting main component', err);\n            });\n        }\n    }\n\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {string} modname The name of the module type.\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getModuleDataFor(modname: string, module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData {\n        if (typeof this.enabledHandlers[modname] != 'undefined') {\n            return this.enabledHandlers[modname].getData(module, courseId, sectionId);\n        }\n\n        // Return the default data.\n        const defaultData: CoreCourseModuleHandlerData = {\n            icon: this.courseProvider.getModuleIconSrc(module.modname),\n            title: module.name,\n            class: 'core-course-default-handler core-course-module-' + module.modname + '-handler',\n            action: (event: Event, navCtrl: NavController, module: any, courseId: number, options?: NavOptions): void => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                navCtrl.push('CoreCourseUnsupportedModulePage', { module: module }, options);\n            }\n        };\n\n        if (module.url) {\n            defaultData.buttons = [{\n                icon: 'open',\n                label: 'core.openinbrowser',\n                action: (e: Event): void => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.sitesProvider.getCurrentSite().openInBrowserWithAutoLoginIfSameSite(module.url);\n                }\n            }];\n        }\n\n        return defaultData;\n    }\n\n    /**\n     * Check if a certain module type is disabled in a site.\n     *\n     * @param {string} modname The name of the module type.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with boolean: whether module is disabled.\n     */\n    isModuleDisabled(modname: string, siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isModuleDisabledInSite(modname, site);\n        });\n    }\n\n    /**\n     * Check if a certain module type is disabled in a site.\n     *\n     * @param {string} modname The name of the module type.\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether module is disabled.\n     */\n    isModuleDisabledInSite(modname: string, site?: CoreSite): boolean {\n        if (typeof this.handlers[modname] != 'undefined') {\n            site = site || this.sitesProvider.getCurrentSite();\n\n            return this.isFeatureDisabled(this.handlers[modname], site);\n        }\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/providers/module-delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSite } from '@classes/site';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Service to provide user functionalities.\n */\n@Injectable()\nexport class CoreUserProvider {\n    static PARTICIPANTS_LIST_LIMIT = 50; // Max of participants to retrieve in each WS call.\n    static PROFILE_REFRESHED = 'CoreUserProfileRefreshed';\n    static PROFILE_PICTURE_UPDATED = 'CoreUserProfilePictureUpdated';\n    protected ROOT_CACHE_KEY = 'mmUser:';\n\n    // Variables for database.\n    protected USERS_TABLE = 'users';\n    protected tablesSchema = [\n        {\n            name: this.USERS_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'INTEGER',\n                    primaryKey: true\n                },\n                {\n                    name: 'fullname',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'profileimageurl',\n                    type: 'TEXT'\n                }\n            ]\n        }\n    ];\n\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private utils: CoreUtilsProvider) {\n        this.logger = logger.getInstance('CoreUserProvider');\n        this.sitesProvider.createTablesFromSchema(this.tablesSchema);\n    }\n\n    /**\n     * Change the given user profile picture.\n     *\n     * @param  {number} draftItemId New picture draft item id.\n     * @param  {number} userId      User ID.\n     * @return {Promise<string>}       Promise resolve with the new profileimageurl\n     */\n    changeProfilePicture(draftItemId: number, userId: number): Promise<string> {\n        const data = {\n            draftitemid: draftItemId,\n            delete: 0,\n            userid: userId\n        };\n\n        return this.sitesProvider.getCurrentSite().write('core_user_update_picture', data).then((result) => {\n            if (!result.success) {\n                return Promise.reject(null);\n            }\n\n            return result.profileimageurl;\n        });\n    }\n\n    /**\n     * Store user basic information in local DB to be retrieved if the WS call fails.\n     *\n     * @param  {number} userId  User ID.\n     * @param {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<any>}   Promise resolve when the user is deleted.\n     */\n    deleteStoredUser(userId: number, siteId?: string): Promise<any> {\n        if (isNaN(userId)) {\n            return Promise.reject(null);\n        }\n\n        const promises = [];\n\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        // Invalidate WS calls.\n        promises.push(this.invalidateUserCache(userId, siteId));\n\n        promises.push(this.sitesProvider.getSite(siteId).then((site) => {\n            return site.getDb().deleteRecords(this.USERS_TABLE, { id: userId });\n        }));\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Get participants for a certain course.\n     *\n     * @param  {number} courseId    ID of the course.\n     * @param  {number} limitFrom   Position of the first participant to get.\n     * @param  {number} limitNumber Number of participants to get.\n     * @param  {string} [siteId]    Site Id. If not defined, use current site.\n     * @return {Promise<any>}       Promise to be resolved when the participants are retrieved.\n     */\n    getParticipants(courseId: number, limitFrom: number = 0, limitNumber: number = CoreUserProvider.PARTICIPANTS_LIST_LIMIT,\n            siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            this.logger.debug(`Get participants for course '${courseId}' starting at '${limitFrom}'`);\n\n            const data = {\n                    courseid: courseId,\n                    options: [\n                        {\n                            name: 'limitfrom',\n                            value: limitFrom\n                        },\n                        {\n                            name: 'limitnumber',\n                            value: limitNumber\n                        },\n                        {\n                            name: 'sortby',\n                            value: 'siteorder'\n                        }\n                    ]\n                }, preSets = {\n                    cacheKey: this.getParticipantsListCacheKey(courseId)\n                };\n\n            return site.read('core_enrol_get_enrolled_users', data, preSets).then((users) => {\n                const canLoadMore = users.length >= limitNumber;\n                this.storeUsers(users, siteId);\n\n                return { participants: users, canLoadMore: canLoadMore };\n            });\n        });\n    }\n\n    /**\n     * Get cache key for participant list WS calls.\n     *\n     * @param  {number} courseId Course ID.\n     * @return {string}          Cache key.\n     */\n    protected getParticipantsListCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'list:' + courseId;\n    }\n\n    /**\n     * Get user profile. The type of profile retrieved depends on the params.\n     *\n     * @param  {number} userId      User's ID.\n     * @param  {number} [courseId]  Course ID to get course profile, undefined or 0 to get site profile.\n     * @param  {boolean} [forceLocal] True to retrieve the user data from local DB, false to retrieve it from WS.\n     * @param {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<any>}            Promise resolved with the user data.\n     */\n    getProfile(userId: number, courseId?: number, forceLocal: boolean = false, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (forceLocal) {\n            return this.getUserFromLocalDb(userId, siteId).catch(() => {\n                return this.getUserFromWS(userId, courseId, siteId);\n            });\n        }\n\n        return this.getUserFromWS(userId, courseId, siteId).catch(() => {\n            return this.getUserFromLocalDb(userId, siteId);\n        });\n    }\n\n    /**\n     * Get cache key for a user WS call.\n     *\n     * @param  {number} userId User ID.\n     * @return {string}        Cache key.\n     */\n    protected getUserCacheKey(userId: number): string {\n        return this.ROOT_CACHE_KEY + 'data:' + userId;\n    }\n\n    /**\n     * Get user basic information from local DB.\n     *\n     * @param {number} userId User ID.\n     * @param {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<any>}   Promise resolve when the user is retrieved.\n     */\n    protected getUserFromLocalDb(userId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.getDb().getRecord(this.USERS_TABLE, { id: userId });\n        });\n    }\n\n    /**\n     * Get user profile from WS.\n     *\n     * @param {number} userId         User ID.\n     * @param {number} [courseId] Course ID to get course profile, undefined or 0 to get site profile.\n     * @param {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<any>}           Promise resolve when the user is retrieved.\n     */\n    protected getUserFromWS(userId: number, courseId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const presets = {\n                    cacheKey: this.getUserCacheKey(userId)\n                };\n            let wsName, data;\n\n            // Determine WS and data to use.\n            if (courseId && courseId != site.getSiteHomeId()) {\n                this.logger.debug(`Get participant with ID '${userId}' in course '${courseId}`);\n                wsName = 'core_user_get_course_user_profiles';\n                data = {\n                    userlist: [\n                        {\n                            userid: userId,\n                            courseid: courseId\n                        }\n                    ]\n                };\n            } else {\n                this.logger.debug(`Get user with ID '${userId}'`);\n                wsName = 'core_user_get_users_by_field';\n                data = {\n                    'field': 'id',\n                    'values[0]': userId\n                };\n            }\n\n            return site.read(wsName, data, presets).then((users) => {\n                if (users.length == 0) {\n                    return Promise.reject('Cannot retrieve user info.');\n                }\n\n                const user = users.shift();\n                if (user.country) {\n                    user.country = this.utils.getCountryName(user.country);\n                }\n                this.storeUser(user.id, user.fullname, user.profileimageurl);\n\n                return user;\n            });\n\n        });\n    }\n\n    /**\n     * Invalidates user WS calls.\n     *\n     * @param {number} userId User ID.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>}       Promise resolved when the data is invalidated.\n     */\n    invalidateUserCache(userId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getUserCacheKey(userId));\n        });\n    }\n\n    /**\n     * Invalidates participant list for a certain course.\n     *\n     * @param  {number} courseId Course ID.\n     * @param  {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>}         Promise resolved when the list is invalidated.\n     */\n    invalidateParticipantsList(courseId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getParticipantsListCacheKey(courseId));\n        });\n    }\n\n    /**\n     * Check if course participants is disabled in a certain site.\n     *\n     * @param  {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>}     Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isParticipantsDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isParticipantsDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Check if course participants is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isParticipantsDisabledInSite(site?: any): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('$mmCoursesDelegate_mmaParticipants');\n    }\n\n    /**\n     * Returns whether or not participants is enabled for a certain course.\n     *\n     * @param {number} courseId Course ID.\n     * @param  {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>}    Promise resolved with true if plugin is enabled, rejected or resolved with false otherwise.\n     */\n    isPluginEnabledForCourse(courseId: number, siteId?: string): Promise<any> {\n        if (!courseId) {\n            return Promise.reject(null);\n        }\n\n        // Retrieving one participant will fail if browsing users is disabled by capabilities.\n        return this.utils.promiseWorks(this.getParticipants(courseId, 0, 1, siteId));\n    }\n\n    /**\n     * Check if update profile picture is disabled in a certain site.\n     *\n     * @param  {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean}       True if disabled, false otherwise.\n     */\n    isUpdatePictureDisabledInSite(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('$mmUserDelegate_picture');\n    }\n\n    /**\n     * Log User Profile View in Moodle.\n     * @param  {number}       userId   User ID.\n     * @param  {number}       [courseId] Course ID.\n     * @return {Promise<any>}          Promise resolved when done.\n     */\n    logView(userId: number, courseId?: number): Promise<any> {\n        const params = {\n            userid: userId\n        };\n\n        if (courseId) {\n            params['courseid'] = courseId;\n        }\n\n        return this.sitesProvider.getCurrentSite().write('core_user_view_user_profile', params);\n    }\n\n    /**\n     * Log Participants list view in Moodle.\n     * @param  {number}       courseId Course ID.\n     * @return {Promise<any>}          Promise resolved when done.\n     */\n    logParticipantsView(courseId?: number): Promise<any> {\n        return this.sitesProvider.getCurrentSite().write('core_user_view_user_list', {\n            courseid: courseId\n        });\n    }\n\n    /**\n     * Store user basic information in local DB to be retrieved if the WS call fails.\n     *\n     * @param {number} userId   User ID.\n     * @param {string} fullname User full name.\n     * @param {string} avatar   User avatar URL.\n     * @param  {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<any>}         Promise resolve when the user is stored.\n     */\n    protected storeUser(userId: number, fullname: string, avatar: string, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const userRecord = {\n                id: userId,\n                fullname: fullname,\n                profileimageurl: avatar\n            };\n\n            return site.getDb().insertOrUpdateRecord(this.USERS_TABLE, userRecord, { id: userId });\n        });\n    }\n\n    /**\n     * Store users basic information in local DB.\n     *\n     * @param  {any[]} users     Users to store. Fields stored: id, fullname, profileimageurl.\n     * @param  {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<any>}        Promise resolve when the user is stored.\n     */\n    storeUsers(users: any[], siteId?: string): Promise<any> {\n        const promises = [];\n\n        users.forEach((user) => {\n            if (typeof user.id != 'undefined' && !isNaN(parseInt(user.id, 10))) {\n                promises.push(this.storeUser(parseInt(user.id, 10), user.fullname, user.profileimageurl, siteId));\n            }\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Update a preference for a user.\n     *\n     * @param  {string} name     Preference name.\n     * @param  {any} value       Preference new value.\n     * @param  {number} [userId] User ID. If not defined, site's current user.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved if success.\n     */\n    updateUserPreference(name: string, value: any, userId?: number, siteId?: string): Promise<any> {\n        const preferences = [\n            {\n                type: name,\n                value: value\n            }\n        ];\n\n        return this.updateUserPreferences(preferences, undefined, userId, siteId);\n    }\n\n    /**\n     * Update some preferences for a user.\n     *\n     * @param  {any} preferences                List of preferences.\n     * @param  {boolean} [disableNotifications] Whether to disable all notifications. Undefined to not update this value.\n     * @param  {number} [userId]                User ID. If not defined, site's current user.\n     * @param  {string} [siteId]                Site ID. If not defined, current site.\n     * @return {Promise<any>}                   Promise resolved if success.\n     */\n    updateUserPreferences(preferences: any, disableNotifications: boolean, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            const data = {\n                    userid: userId,\n                    preferences: preferences\n                },\n                preSets = {\n                    responseExpected: false\n                };\n\n            if (typeof disableNotifications != 'undefined') {\n                data['emailstop'] = disableNotifications ? 1 : 0;\n            }\n\n            return site.write('core_user_update_user_preferences', data, preSets);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/providers/user.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { CoreLoggerProvider } from './logger';\nimport { CoreUtilsProvider } from './utils/utils';\n\n/**\n * Interface that all init handlers must implement.\n */\nexport interface CoreInitHandler {\n    /**\n     * A name to identify the handler.\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Function to execute during the init process.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    load(): Promise<any>;\n\n    /**\n     * The highest priority is executed first. You should use values lower than MAX_RECOMMENDED_PRIORITY.\n     * @type {number}\n     */\n    priority?: number;\n\n    /**\n     * Set this to true when this process should be resolved before any following one.\n     * @type {boolean}\n     */\n    blocking?: boolean;\n}\n\n/*\n * Provider for initialisation mechanisms.\n */\n@Injectable()\nexport class CoreInitDelegate {\n    static DEFAULT_PRIORITY = 100; // Default priority for init processes.\n    static MAX_RECOMMENDED_PRIORITY = 600;\n\n    protected initProcesses = {};\n    protected logger;\n    protected readiness;\n\n    constructor(logger: CoreLoggerProvider, platform: Platform, private utils: CoreUtilsProvider) {\n        this.logger = logger.getInstance('CoreInitDelegate');\n    }\n\n    /**\n     * Executes the registered init processes.\n     *\n     * Reserved for core use, do not call directly.\n     */\n    executeInitProcesses(): void {\n        let ordered = [];\n\n        if (typeof this.readiness == 'undefined') {\n            this.initReadiness();\n        }\n\n        // Re-ordering by priority.\n        for (const name in this.initProcesses) {\n            ordered.push(this.initProcesses[name]);\n        }\n        ordered.sort((a, b) => {\n            return b.priority - a.priority;\n        });\n\n        ordered = ordered.map((data: CoreInitHandler) => {\n            return {\n                context: this,\n                func: this.prepareProcess,\n                params: [data],\n                blocking: !!data.blocking\n            };\n        });\n\n        // Execute all the processes in order to solve dependencies.\n        this.utils.executeOrderedPromises(ordered).finally(this.readiness.resolve);\n    }\n\n    /**\n     * Init the readiness promise.\n     */\n    protected initReadiness(): void {\n        this.readiness = this.utils.promiseDefer();\n        this.readiness.promise.then(() => this.readiness.resolved = true);\n    }\n\n    /**\n     * Instantly returns if the app is ready.\n     *\n     * To be notified when the app is ready, refer to {@link $mmApp#ready}.\n     *\n     * @return {boolean} Whether it's ready.\n     */\n    isReady(): boolean {\n        return this.readiness.resolved;\n    }\n\n    /**\n     * Convenience function to return a function that executes the process.\n     *\n     * @param {CoreInitHandler} data The data of the process.\n     * @return {Promise<any>} Promise of the process.\n     */\n    protected prepareProcess(data: CoreInitHandler): Promise<any> {\n        let promise;\n\n        this.logger.debug(`Executing init process '${data.name}'`);\n\n        try {\n            promise = data.load();\n        } catch (e) {\n            this.logger.error('Error while calling the init process \\'' + data.name + '\\'. ' + e);\n\n            return;\n        }\n\n        return promise;\n    }\n\n    /**\n     * Notifies when the app is ready. This returns a promise that is resolved when the app is initialised.\n     *\n     * @return {Promise<any>} Resolved when the app is initialised. Never rejected.\n     */\n    ready(): Promise<any> {\n        if (typeof this.readiness === 'undefined') {\n            // Prevent race conditions if this is called before executeInitProcesses.\n            this.initReadiness();\n        }\n\n        return this.readiness.promise;\n    }\n\n    /**\n     * Registers an initialisation process.\n     *\n     * @description\n     * Init processes can be used to add initialisation logic to the app. Anything that should block the user interface while\n     * some processes are done should be an init process. It is recommended to use a priority lower than MAX_RECOMMENDED_PRIORITY\n     * to make sure that your process does not happen before some essential other core processes.\n     *\n     * An init process should never change state or prompt user interaction.\n     *\n     * This delegate cannot be used by site plugins.\n     *\n     * @param {CoreInitHandler} instance The instance of the handler.\n     */\n    registerProcess(handler: CoreInitHandler): void {\n        if (typeof handler.priority == 'undefined') {\n            handler.priority = CoreInitDelegate.DEFAULT_PRIORITY;\n        }\n\n        if (typeof this.initProcesses[handler.name] != 'undefined') {\n            this.logger.log(`Process '${handler.name}' already registered.`);\n\n            return;\n        }\n\n        this.logger.log(`Registering process '${handler.name}'.`);\n        this.initProcesses[handler.name] = handler;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/init.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreEventsProvider } from '@providers/events';\n\nexport interface CoreDelegateHandler {\n    /**\n     * Name of the handler, or name and sub context (AddonMessages, AddonMessages:blockContact, ...).\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     * @return {boolean|Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean>;\n}\n\n/**\n * Superclass to help creating delegates\n */\n@Injectable()\nexport class CoreDelegate {\n\n    /**\n     * Logger instance get from CoreLoggerProvider.\n     * @type {any}\n     */\n    protected logger;\n\n    /**\n     * List of registered handlers.\n     * @type {any}\n     */\n    protected handlers: { [s: string]: CoreDelegateHandler } = {};\n\n    /**\n     * List of registered handlers enabled for the current site.\n     * @type {any}\n     */\n    protected enabledHandlers: { [s: string]: CoreDelegateHandler } = {};\n\n    /**\n     * Default handler\n     * @type {CoreDelegateHandler}\n     */\n    protected defaultHandler: CoreDelegateHandler;\n\n    /**\n     * Time when last updateHandler functions started.\n     * @type {number}\n     */\n    protected lastUpdateHandlersStart: number;\n\n    /**\n     * Feature prefix to check is feature is enabled or disabled in site.\n     * This check is only made if not false. Override on the subclass or override isFeatureDisabled function.\n     * @type {string}\n     */\n    protected featurePrefix: string;\n\n    /**\n     * Constructor of the Delegate.\n     *\n     * @param {string} delegateName Delegate name used for logging purposes.\n     * @param {CoreLoggerProvider}   loggerProvider CoreLoggerProvider instance, cannot be directly injected.\n     * @param {CoreSitesProvider}    sitesProvider  CoreSitesProvider instance, cannot be directly injected.\n     * @param {CoreEventsProvider}   [eventsProvider]  CoreEventsProvider instance, cannot be directly injected.\n     *                                                  If not set, no events will be fired.\n     */\n    constructor(delegateName: string, protected loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider,\n            protected eventsProvider?: CoreEventsProvider) {\n        this.logger = this.loggerProvider.getInstance(delegateName);\n\n        if (eventsProvider) {\n            // Update handlers on this cases.\n            eventsProvider.on(CoreEventsProvider.LOGIN, this.updateHandlers.bind(this));\n            eventsProvider.on(CoreEventsProvider.SITE_UPDATED, this.updateHandlers.bind(this));\n            eventsProvider.on(CoreEventsProvider.SITE_PLUGINS_LOADED, this.updateHandlers.bind(this));\n        }\n    }\n\n    /**\n     * Execute a certain function in a enabled handler.\n     * If the handler isn't found or function isn't defined, call the same function in the default handler.\n     *\n     * @param {string} handlerName The handler name.\n     * @param {string} fnName Name of the function to execute.\n     * @param {any[]} params Parameters to pass to the function.\n     * @return {any} Function returned value or default value.\n     */\n    protected executeFunctionOnEnabled(handlerName: string, fnName: string, params?: any[]): any {\n        return this.execute(this.enabledHandlers[handlerName], fnName, params);\n    }\n\n    /**\n     * Execute a certain function in a handler.\n     * If the handler isn't found or function isn't defined, call the same function in the default handler.\n     *\n     * @param {string} handlerName The handler name.\n     * @param {string} fnName Name of the function to execute.\n     * @param {any[]} params Parameters to pass to the function.\n     * @return {any} Function returned value or default value.\n     */\n    protected executeFunction(handlerName: string, fnName: string, params?: any[]): any {\n        return this.execute(this.handlers[handlerName], fnName, params);\n    }\n\n    /**\n     * Execute a certain function in a handler.\n     * If the handler isn't found or function isn't defined, call the same function in the default handler.\n     *\n     * @param {any} handler The handler.\n     * @param {string} fnName Name of the function to execute.\n     * @param {any[]} params Parameters to pass to the function.\n     * @return {any} Function returned value or default value.\n     */\n    private execute(handler: any, fnName: string, params?: any[]): any {\n        if (handler && handler[fnName]) {\n            return handler[fnName].apply(handler, params);\n        } else if (this.defaultHandler && this.defaultHandler[fnName]) {\n            return this.defaultHandler[fnName].apply(this.defaultHandler, params);\n        }\n    }\n\n    /**\n     * Get a handler.\n     *\n     * @param  {string} handlerName The handler name.\n     * @param  {boolean} [enabled]  Only enabled, or any.\n     * @return {CoreDelegateHandler} Handler.\n     */\n    protected getHandler(handlerName: string, enabled: boolean = false): CoreDelegateHandler {\n        return enabled ? this.enabledHandlers[handlerName] : this.handlers[handlerName];\n    }\n\n    /**\n     * Check if a handler name has a registered handler (not necessarily enabled).\n     *\n     * @param {string} name The handler name.\n     * @param  {boolean} [enabled]  Only enabled, or any.\n     * @return {boolean} If the handler is registered or not.\n     */\n    hasHandler(name: string, enabled: boolean = false): boolean {\n        return enabled ? typeof this.enabledHandlers[name] !== 'undefined' : typeof this.handlers[name] !== 'undefined';\n    }\n\n    /**\n     * Check if a time belongs to the last update handlers call.\n     * This is to handle the cases where updateHandlers don't finish in the same order as they're called.\n     *\n     * @param {number} time Time to check.\n     * @return {boolean} Whether it's the last call.\n     */\n    isLastUpdateCall(time: number): boolean {\n        if (!this.lastUpdateHandlersStart) {\n            return true;\n        }\n\n        return time == this.lastUpdateHandlersStart;\n    }\n\n    /**\n     * Register a handler.\n     *\n     * @param {CoreDelegateHandler} handler The handler delegate object to register.\n     * @return {boolean} True when registered, false if already registered.\n     */\n    registerHandler(handler: CoreDelegateHandler): boolean {\n        if (typeof this.handlers[handler.name] !== 'undefined') {\n            this.logger.log(`Addon '${handler.name}' already registered`);\n\n            return false;\n        }\n\n        this.logger.log(`Registered addon '${handler.name}'`);\n        this.handlers[handler.name] = handler;\n\n        return true;\n    }\n\n    /**\n     * Update the handler for the current site.\n     *\n     * @param {CoreDelegateHandler} handler The handler to check.\n     * @param {number} time Time this update process started.\n     * @return {Promise<void>} Resolved when done.\n     */\n    protected updateHandler(handler: CoreDelegateHandler, time: number): Promise<void> {\n        const siteId = this.sitesProvider.getCurrentSiteId(),\n            currentSite = this.sitesProvider.getCurrentSite();\n        let promise;\n\n        if (!this.sitesProvider.isLoggedIn()) {\n            promise = Promise.reject(null);\n        } else if (this.isFeatureDisabled(handler, currentSite)) {\n            promise = Promise.resolve(false);\n        } else {\n            promise = Promise.resolve(handler.isEnabled());\n        }\n\n        // Checks if the handler is enabled.\n        return promise.catch(() => {\n            return false;\n        }).then((enabled: boolean) => {\n            // Verify that this call is the last one that was started.\n            // Check that site hasn't changed since the check started.\n            if (this.isLastUpdateCall(time) && this.sitesProvider.getCurrentSiteId() === siteId) {\n                if (enabled) {\n                    this.enabledHandlers[handler.name] = handler;\n                } else {\n                    delete this.enabledHandlers[handler.name];\n                }\n            }\n        });\n    }\n\n    /**\n     * Check if feature is enabled or disabled in the site, depending on the feature prefix and the handler name.\n     *\n     * @param  {CoreDelegateHandler} handler Handler to check.\n     * @param  {any}                 site    Site to check.\n     * @return {boolean}                     Whether is enabled or disabled in site.\n     */\n    protected isFeatureDisabled(handler: CoreDelegateHandler, site: any): boolean {\n        return typeof this.featurePrefix != 'undefined' && site.isFeatureDisabled(this.featurePrefix + handler.name);\n    }\n\n    /**\n     * Update the handlers for the current site.\n     *\n     * @return {Promise<void>} Resolved when done.\n     */\n    protected updateHandlers(): Promise<void> {\n        const promises = [],\n            now = Date.now();\n\n        this.logger.debug('Updating handlers for current site.');\n\n        this.lastUpdateHandlersStart = now;\n\n        // Loop over all the handlers.\n        for (const name in this.handlers) {\n            promises.push(this.updateHandler(this.handlers[name], now));\n        }\n\n        return Promise.all(promises).then(() => {\n            return true;\n        }, () => {\n            // Never reject.\n            return true;\n        }).then(() => {\n\n            // Verify that this call is the last one that was started.\n            if (this.isLastUpdateCall(now)) {\n                this.updateData();\n            }\n        });\n    }\n\n    /**\n     * Update handlers Data.\n     * Override this function to update handlers data.\n     */\n    updateData(): any {\n        // To be overridden.\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreUserProvider } from '@core/user/providers/user';\nimport { AddonMessagesOfflineProvider } from './messages-offline';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\n\n/**\n * Service to handle messages.\n */\n@Injectable()\nexport class AddonMessagesProvider {\n    protected ROOT_CACHE_KEY = 'mmaMessages:';\n    protected LIMIT_MESSAGES = 50;\n    protected LIMIT_SEARCH_MESSAGES = 50;\n    static NEW_MESSAGE_EVENT = 'addon_messages_new_message_event';\n    static READ_CHANGED_EVENT = 'addon_messages_read_changed_event';\n    static READ_CRON_EVENT = 'addon_messages_read_cron_event';\n    static SPLIT_VIEW_LOAD_EVENT = 'addon_messages_split_view_load_event';\n    static POLL_INTERVAL = 10000;\n    static PUSH_SIMULATION_COMPONENT = 'AddonMessagesPushSimulation';\n\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private appProvider: CoreAppProvider,\n            private userProvider: CoreUserProvider, private messagesOffline: AddonMessagesOfflineProvider,\n            private utils: CoreUtilsProvider, private timeUtils: CoreTimeUtilsProvider) {\n        this.logger = logger.getInstance('AddonMessagesProvider');\n    }\n\n    /**\n     * Add a contact.\n     *\n     * @param {number} userId  User ID of the person to add.\n     * @param {string} [siteId]  Site ID. If not defined, use current site.\n     * @return {Promise<any>}  Resolved when done.\n     */\n    addContact(userId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                userids: [ userId ]\n            };\n\n            return site.write('core_message_create_contacts', params).then(() => {\n                return this.invalidateAllContactsCache(site.getUserId(), site.getId());\n            });\n        });\n    }\n\n    /**\n     * Block a contact.\n     *\n     * @param {number} userId User ID of the person to block.\n     * @param {string} [siteId]  Site ID. If not defined, use current site.\n     * @return {Promise<any>} Resolved when done.\n     */\n    blockContact(userId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                userids: [ userId ]\n            };\n\n            return site.write('core_message_block_contacts', params).then(() => {\n                return this.invalidateAllContactsCache(site.getUserId(), site.getId());\n            });\n        });\n    }\n\n    /**\n     * Delete a message (online or offline).\n     *\n     * @param {any} message    Message to delete.\n     * @return {Promise<any>}  Promise resolved when the message has been deleted.\n     */\n    deleteMessage(message: any): Promise<any> {\n        if (message.id) {\n            // Message has ID, it means it has been sent to the server.\n            return this.deleteMessageOnline(message.id, message.read);\n        }\n\n        // It's an offline message.\n        return this.messagesOffline.deleteMessage(message.touserid, message.smallmessage, message.timecreated);\n    }\n\n    /**\n     * Delete a message from the server.\n     *\n     * @param {number} id       Message ID.\n     * @param {number} read     1 if message is read, 0 otherwise.\n     * @param {number} [userId] User we want to delete the message for. If not defined, use current user.\n     * @return {Promise<any>}   Promise resolved when the message has been deleted.\n     */\n    deleteMessageOnline(id: number, read: number, userId?: number): Promise<any> {\n        userId = userId || this.sitesProvider.getCurrentSiteUserId();\n        const params = {\n            messageid: id,\n            userid: userId,\n            read: read\n        };\n\n        return this.sitesProvider.getCurrentSite().write('core_message_delete_message', params).then(() => {\n            return this.invalidateDiscussionCache(userId);\n        });\n    }\n\n    /**\n     * Get the cache key for blocked contacts.\n     *\n     * @param {number} userId The user who's contacts we're looking for.\n     * @return {string} Cache key.\n     */\n    protected getCacheKeyForBlockedContacts(userId: number): string {\n        return this.ROOT_CACHE_KEY + 'blockedContacts:' + userId;\n    }\n\n    /**\n     * Get the cache key for contacts.\n     *\n     * @return {string} Cache key.\n     */\n    protected getCacheKeyForContacts(): string {\n        return this.ROOT_CACHE_KEY + 'contacts';\n    }\n\n    /**\n     * Get the cache key for a discussion.\n     *\n     * @param {number} userId The other person with whom the current user is having the discussion.\n     * @return {string} Cache key.\n     */\n    protected getCacheKeyForDiscussion(userId: number): string {\n        return this.ROOT_CACHE_KEY + 'discussion:' + userId;\n    }\n\n    /**\n     * Get the cache key for the message count.\n     *\n     * @param {number} userId  User ID.\n     * @return {string} Cache key.\n     */\n    protected getCacheKeyForMessageCount(userId: number): string {\n        return this.ROOT_CACHE_KEY + 'count:' + userId;\n    }\n\n    /**\n     * Get the cache key for the list of discussions.\n     *\n     * @return {string} Cache key.\n     */\n    protected getCacheKeyForDiscussions(): string {\n        return this.ROOT_CACHE_KEY + 'discussions';\n    }\n\n    /**\n     * Get all the contacts of the current user.\n     *\n     * @param  {string} [siteId]  Site ID. If not defined, use current site.\n     * @return {Promise<any>} Resolved with the WS data.\n     */\n    getAllContacts(siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.getContacts(siteId).then((contacts) => {\n            return this.getBlockedContacts(siteId).then((blocked) => {\n                contacts.blocked = blocked.users;\n                this.storeUsersFromAllContacts(contacts);\n\n                return contacts;\n            }).catch(() => {\n                // The WS for blocked contacts might fail, but we still want the contacts.\n                contacts.blocked = [];\n                this.storeUsersFromAllContacts(contacts);\n\n                return contacts;\n            });\n        });\n    }\n\n    /**\n     * Get all the blocked contacts of the current user.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>} Resolved with the WS data.\n     */\n    getBlockedContacts(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const userId = site.getUserId(),\n                params = {\n                    userid: userId\n                },\n                preSets = {\n                    cacheKey: this.getCacheKeyForBlockedContacts(userId)\n                };\n\n            return site.read('core_message_get_blocked_users', params, preSets);\n        });\n    }\n\n    /**\n     * Get the contacts of the current user.\n     *\n     * This excludes the blocked users.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>} Resolved with the WS data.\n     */\n    getContacts(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const preSets = {\n                cacheKey: this.getCacheKeyForContacts()\n            };\n\n            return site.read('core_message_get_contacts', undefined, preSets).then((contacts) => {\n                // Filter contacts with negative ID, they are notifications.\n                const validContacts = {};\n                for (const typeName in contacts) {\n                    if (!validContacts[typeName]) {\n                        validContacts[typeName] = [];\n                    }\n\n                    contacts[typeName].forEach((contact) => {\n                        if (contact.id > 0) {\n                            validContacts[typeName].push(contact);\n                        }\n                    });\n                }\n\n                return validContacts;\n            });\n        });\n    }\n\n    /**\n     * Return the current user's discussion with another user.\n     *\n     * @param  {number} userId               The ID of the other user.\n     * @param  {boolean} excludePending      True to exclude messages pending to be sent.\n     * @param  {number} [lfReceivedUnread=0] Number of unread received messages already fetched, so fetch will be done from this.\n     * @param  {number} [lfReceivedRead=0]   Number of read received messages already fetched, so fetch will be done from this.\n     * @param  {number} [lfSentUnread=0]     Number of unread sent messages already fetched, so fetch will be done from this.\n     * @param  {number} [lfSentRead=0]       Number of read sent messages already fetched, so fetch will be done from this.\n     * @param  {boolean} [toDisplay=true]    True if messages will be displayed to the user, either in view or in a notification.\n     * @param  {string} [siteId]             Site ID. If not defined, use current site.\n     * @return {Promise<any>}                     Promise resolved with messages and a boolean telling if can load more messages.\n     */\n    getDiscussion(userId: number, excludePending: boolean, lfReceivedUnread: number = 0, lfReceivedRead: number = 0,\n            lfSentUnread: number = 0, lfSentRead: number = 0, toDisplay: boolean = true, siteId?: string): Promise<any> {\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const result = {},\n                preSets = {\n                    cacheKey: this.getCacheKeyForDiscussion(userId)\n                },\n                params = {\n                    useridto: site.getUserId(),\n                    useridfrom: userId,\n                    limitnum: this.LIMIT_MESSAGES\n                };\n\n            let hasReceived,\n                hasSent;\n\n            if (lfReceivedUnread > 0 || lfReceivedRead > 0 || lfSentUnread > 0 || lfSentRead > 0) {\n                // Do not use cache when retrieving older messages.\n                // This is to prevent storing too much data and to prevent inconsistencies between \"pages\" loaded.\n                preSets['getFromCache'] = false;\n                preSets['saveToCache'] = false;\n                preSets['emergencyCache'] = false;\n            }\n\n            // Get message received by current user.\n            return this.getRecentMessages(params, preSets, lfReceivedUnread, lfReceivedRead, toDisplay, site.getId())\n                    .then((response) => {\n                result['messages'] = response;\n                params.useridto = userId;\n                params.useridfrom = site.getUserId();\n                hasReceived = response.length > 0;\n\n                // Get message sent by current user.\n                return this.getRecentMessages(params, preSets, lfSentUnread, lfSentRead, toDisplay, siteId);\n            }).then((response) => {\n                result['messages'] = result['messages'].concat(response);\n                hasSent = response.length > 0;\n\n                if (result['messages'].length > this.LIMIT_MESSAGES) {\n                    // Sort messages and get the more recent ones.\n                    result['canLoadMore'] = true;\n                    result['messages'] = this.sortMessages(result['messages']);\n                    result['messages'] = result['messages'].slice(-this.LIMIT_MESSAGES);\n                } else {\n                    result['canLoadMore'] = result['messages'].length == this.LIMIT_MESSAGES && (!hasReceived || !hasSent);\n                }\n\n                if (excludePending) {\n                    // No need to get offline messages, return the ones we have.\n                    return result;\n                }\n\n                // Get offline messages.\n                return this.messagesOffline.getMessages(userId).then((offlineMessages) => {\n                    // Mark offline messages as pending.\n                    offlineMessages.forEach((message) => {\n                        message.pending = true;\n                        message.text = message.smallmessage;\n                    });\n\n                    result['messages'] = result['messages'].concat(offlineMessages);\n\n                    return result;\n                });\n            });\n        });\n    }\n\n    /**\n     * Get the discussions of the current user.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Resolved with an object where the keys are the user ID of the other user.\n     */\n    getDiscussions(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const discussions = {},\n                currentUserId = site.getUserId(),\n                params = {\n                    useridto: currentUserId,\n                    useridfrom: 0,\n                    limitnum: this.LIMIT_MESSAGES\n                },\n                preSets = {\n                    cacheKey: this.getCacheKeyForDiscussions()\n                };\n\n            /**\n             * Convenience function to treat a recent message, adding it to discussions list if needed.\n             */\n            const treatRecentMessage = (message: any, userId: number, userFullname: string): void => {\n                if (typeof discussions[userId] === 'undefined') {\n                    discussions[userId] = {\n                        fullname: userFullname,\n                        profileimageurl: ''\n                    };\n\n                    if (!message.timeread && !message.pending && message.useridfrom != currentUserId) {\n                        discussions[userId].unread = true;\n                    }\n                }\n\n                // Extract the most recent message. Pending messages are considered more recent than messages already sent.\n                const discMessage = discussions[userId].message;\n                if (typeof discMessage === 'undefined' || (!discMessage.pending && message.pending) ||\n                        (discMessage.pending == message.pending && (discMessage.timecreated < message.timecreated ||\n                        (discMessage.timecreated == message.timecreated && discMessage.id < message.id)))) {\n\n                    discussions[userId].message = {\n                        id: message.id,\n                        user: userId,\n                        message: message.text,\n                        timecreated: message.timecreated,\n                        pending: !!message.pending\n                    };\n                }\n            };\n\n            // Get recent messages sent to current user.\n            return this.getRecentMessages(params, preSets, undefined, undefined, undefined, site.getId()).then((messages) => {\n\n                // Extract the discussions by filtering same senders.\n                messages.forEach((message) => {\n                    treatRecentMessage(message, message.useridfrom, message.userfromfullname);\n                });\n\n                // Now get the last messages sent by the current user.\n                params.useridfrom = params.useridto;\n                params.useridto = 0;\n\n                return this.getRecentMessages(params, preSets);\n            }).then((messages) => {\n\n                // Extract the discussions by filtering same senders.\n                messages.forEach((message) => {\n                    treatRecentMessage(message, message.useridto, message.usertofullname);\n                });\n\n                // Now get unsent messages.\n                return this.messagesOffline.getAllMessages(site.getId());\n            }).then((offlineMessages) => {\n                offlineMessages.forEach((message) => {\n                    message.pending = true;\n                    message.text = message.smallmessage;\n                    treatRecentMessage(message, message.touserid, '');\n                });\n\n                return this.getDiscussionsUserImg(discussions, site.getId()).then((discussions) => {\n                    this.storeUsersFromDiscussions(discussions);\n\n                    return discussions;\n                });\n            });\n        });\n    }\n\n    /**\n     * Get user images for all the discussions that don't have one already.\n     *\n     * @param {any} discussions List of discussions.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}             Promise always resolved. Resolve param is the formatted discussions.\n     */\n    protected getDiscussionsUserImg(discussions: any, siteId?: string): Promise<any> {\n        const promises = [];\n\n        for (const userId in discussions) {\n            if (!discussions[userId].profileimageurl) {\n                // We don't have the user image. Try to retrieve it.\n                promises.push(this.userProvider.getProfile(discussions[userId].message.user, 0, true, siteId).then((user) => {\n                    discussions[userId].profileimageurl = user.profileimageurl;\n                }).catch(() => {\n                    // Error getting profile, resolve promise without adding any extra data.\n                }));\n            }\n        }\n\n        return Promise.all(promises).then(() => {\n            return discussions;\n        });\n    }\n\n    /**\n     * Get the cache key for the get message preferences call.\n     *\n     * @return {string} Cache key.\n     */\n    protected getMessagePreferencesCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'messagePreferences';\n    }\n\n    /**\n     * Get message preferences.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>}         Promise resolved with the message preferences.\n     */\n    getMessagePreferences(siteId?: string): Promise<any> {\n        this.logger.debug('Get message preferences');\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const preSets = {\n                    cacheKey: this.getMessagePreferencesCacheKey()\n                };\n\n            return site.read('core_message_get_user_message_preferences', {}, preSets).then((data) => {\n                if (data.preferences) {\n                    data.preferences.blocknoncontacts = !!data.blocknoncontacts;\n\n                    return data.preferences;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get messages according to the params.\n     *\n     * @param  {any} params            Parameters to pass to the WS.\n     * @param  {any} preSets           Set of presets for the WS.\n     * @param  {boolean} [toDisplay=true] True if messages will be displayed to the user, either in view or in a notification.\n     * @param  {string} [siteId]          Site ID. If not defined, use current site.\n     * @return {Promise<any>}\n     */\n    protected getMessages(params: any, preSets: any, toDisplay: boolean = true, siteId?: string): Promise<any> {\n        params['type'] = 'conversations';\n        params['newestfirst'] = 1;\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const userId = site.getUserId();\n\n            return site.read('core_message_get_messages', params, preSets).then((response) => {\n                response.messages.forEach((message) => {\n                    message.read = params.read == 0 ? 0 : 1;\n                    // Convert times to milliseconds.\n                    message.timecreated = message.timecreated ? message.timecreated * 1000 : 0;\n                    message.timeread = message.timeread ? message.timeread * 1000 : 0;\n                });\n\n                if (toDisplay && this.appProvider.isDesktop() && !params.read && params.useridto == userId &&\n                        params.limitfrom === 0) {\n                    // Store the last unread received messages. Don't block the user for this.\n                    this.storeLastReceivedMessageIfNeeded(params.useridfrom, response.messages[0], site.getId());\n                }\n\n                return response;\n            });\n        });\n    }\n\n    /**\n     * Get the most recent messages.\n     *\n     * @param  {any} params              Parameters to pass to the WS.\n     * @param  {any} preSets             Set of presets for the WS.\n     * @param  {number} [limitFromUnread=0] Number of read messages already fetched, so fetch will be done from this number.\n     * @param  {number} [limitFromRead=0]   Number of unread messages already fetched, so fetch will be done from this number.\n     * @param  {boolean} [toDisplay=true]   True if messages will be displayed to the user, either in view or in a notification.\n     * @param  {string} [siteId]            Site ID. If not defined, use current site.\n     * @return {Promise<any>}\n     */\n    protected getRecentMessages(params: any, preSets: any, limitFromUnread: number = 0, limitFromRead: number = 0,\n            toDisplay: boolean = true, siteId?: string): Promise<any> {\n        limitFromUnread = limitFromUnread || 0;\n        limitFromRead = limitFromRead || 0;\n\n        params['read'] = 0;\n        params['limitfrom'] = limitFromUnread;\n\n        return this.getMessages(params, preSets, toDisplay, siteId).then((response) => {\n            let messages = response.messages;\n            if (messages) {\n                if (messages.length >= params.limitnum) {\n                    return messages;\n                }\n\n                // We need to fetch more messages.\n                params.limitnum = params.limitnum - messages.length;\n                params.read = 1;\n                params.limitfrom = limitFromRead;\n\n                return this.getMessages(params, preSets, toDisplay, siteId).then((response) => {\n                    if (response.messages) {\n                        messages = messages.concat(response.messages);\n                    }\n\n                    return messages;\n                }).catch(() => {\n                    return messages;\n                });\n\n            } else {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Get unread conversations count. Do not cache calls.\n     *\n     * @param  {number} [userId] The user id who received the message. If not defined, use current user.\n     * @param  {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>}    Promise resolved with the message unread count.\n     */\n    getUnreadConversationsCount(userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            // @since 3.2\n            if (site.wsAvailable('core_message_get_unread_conversations_count')) {\n                const params = {\n                        useridto: userId\n                    },\n                    preSets = {\n                        cacheKey: this.getCacheKeyForMessageCount(userId),\n                        getFromCache: false,\n                        emergencyCache: true,\n                        saveToCache: true,\n                        typeExpected: 'number'\n                    };\n\n                return site.read('core_message_get_unread_conversations_count', params, preSets).catch(() => {\n                    // Return no messages if the call fails.\n                    return 0;\n                });\n            }\n\n            // Fallback call.\n            const params = {\n                read: 0,\n                limitfrom: 0,\n                limitnum: this.LIMIT_MESSAGES + 1,\n                useridto: userId,\n                useridfrom: 0,\n            };\n\n            return this.getMessages(params, undefined, false, siteId).then((response) => {\n                // Count the discussions by filtering same senders.\n                const discussions = {};\n\n                response.messages.forEach((message) => {\n                    discussions[message.useridto] = 1;\n                });\n                const count = Object.keys(discussions).length;\n\n                // Add + sign if there are more than the limit reachable.\n                return (count > this.LIMIT_MESSAGES) ? count + '+' : count;\n            }).catch(() => {\n                // Return no messages if the call fails.\n                return 0;\n            });\n        });\n    }\n\n    /**\n     * Get the latest unread received messages.\n     *\n     * @param  {boolean} [toDisplay=true] True if messages will be displayed to the user, either in view or in a notification.\n     * @param  {boolean} [forceCache]     True if it should return cached data. Has priority over ignoreCache.\n     * @param  {boolean} [ignoreCache]    True if it should ignore cached data (it will always fail in offline or server down).\n     * @param  {string} [siteId]          Site ID. If not defined, use current site.\n     * @return {Promise<any>}                  Promise resolved with the message unread count.\n     */\n    getUnreadReceivedMessages(toDisplay: boolean = true, forceCache: boolean = false, ignoreCache: boolean = false,\n            siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    read: 0,\n                    limitfrom: 0,\n                    limitnum: this.LIMIT_MESSAGES,\n                    useridto: site.getUserId(),\n                    useridfrom: 0\n                },\n                preSets = {};\n\n            if (forceCache) {\n                preSets['omitExpires'] = true;\n            } else if (ignoreCache) {\n                preSets['getFromCache'] = false;\n                preSets['emergencyCache'] = false;\n            }\n\n            return this.getMessages(params, preSets, toDisplay, siteId);\n        });\n    }\n\n    /**\n     * Invalidate all contacts cache.\n     *\n     * @param {number} userId    The user ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Resolved when done.\n     */\n    invalidateAllContactsCache(userId: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.invalidateContactsCache(siteId).then(() => {\n            return this.invalidateBlockedContactsCache(userId, siteId);\n        });\n    }\n\n    /**\n     * Invalidate blocked contacts cache.\n     *\n     * @param {number} userId    The user ID.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}\n     */\n    invalidateBlockedContactsCache(userId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCacheKeyForBlockedContacts(userId));\n        });\n    }\n\n    /**\n     * Invalidate contacts cache.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Resolved when done.\n     */\n    invalidateContactsCache(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCacheKeyForContacts());\n        });\n    }\n\n    /**\n     * Invalidate discussion cache.\n     *\n     * @param {number} userId    The user ID with whom the current user is having the discussion.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Resolved when done.\n     */\n    invalidateDiscussionCache(userId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCacheKeyForDiscussion(userId));\n        });\n    }\n\n    /**\n     * Invalidate discussions cache.\n     *\n     * Note that {@link this.getDiscussions} uses the contacts, so we need to invalidate contacts too.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Resolved when done.\n     */\n    invalidateDiscussionsCache(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const promises = [];\n            promises.push(site.invalidateWsCacheForKey(this.getCacheKeyForDiscussions()));\n            promises.push(this.invalidateContactsCache(site.getId()));\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Invalidate get message preferences.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}         Promise resolved when data is invalidated.\n     */\n    invalidateMessagePreferences(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getMessagePreferencesCacheKey());\n        });\n    }\n\n    /**\n     * Checks if the a user is blocked by the current user.\n     *\n     * @param {number} userId The user ID to check against.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<boolean>} Resolved with boolean, rejected when we do not know.\n     */\n    isBlocked(userId: number, siteId?: string): Promise<boolean> {\n        return this.getBlockedContacts(siteId).then((blockedContacts) => {\n            if (!blockedContacts.users || blockedContacts.users.length < 1) {\n                return false;\n            }\n\n            return blockedContacts.users.some((user) => {\n                return userId == user.id;\n            });\n        });\n    }\n\n    /**\n     * Checks if the a user is a contact of the current user.\n     *\n     * @param {number} userId The user ID to check against.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<boolean>} Resolved with boolean, rejected when we do not know.\n     */\n    isContact(userId: number, siteId?: string): Promise<boolean> {\n        return this.getContacts(siteId).then((contacts) => {\n            return ['online', 'offline'].some((type) => {\n                if (contacts[type] && contacts[type].length > 0) {\n                    return contacts[type].some((user) => {\n                        return userId == user.id;\n                    });\n                }\n\n                return false;\n            });\n        });\n    }\n\n    /**\n     * Returns whether or not we can mark all messages as read.\n     *\n     * @return {boolean} If related WS is avalaible on current site.\n     * @since  3.2\n     */\n    isMarkAllMessagesReadEnabled(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('core_message_mark_all_messages_as_read');\n    }\n\n    /**\n     * Returns whether or not we can count unread messages.\n     *\n     * @return {boolean} True if enabled, false otherwise.\n     * @since  3.2\n     */\n    isMessageCountEnabled(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('core_message_get_unread_conversations_count');\n    }\n\n    /**\n     * Returns whether or not the message preferences are enabled for the current site.\n     *\n     * @return {boolean} True if enabled, false otherwise.\n     * @since  3.2\n     */\n    isMessagePreferencesEnabled(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('core_message_get_user_message_preferences');\n    }\n\n    /**\n     * Returns whether or not messaging is enabled for a certain site.\n     *\n     * This could call a WS so do not abuse this method.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}   Resolved when enabled, otherwise rejected.\n     */\n    isMessagingEnabledForSite(siteId?: string): Promise<any> {\n        return this.isPluginEnabled(siteId).then((enabled) => {\n            if (!enabled) {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Returns whether or not the plugin is enabled in a certain site.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved with true if enabled, rejected or resolved with false otherwise.\n     */\n    isPluginEnabled(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.canUseAdvancedFeature('messaging');\n        });\n    }\n\n    /**\n     * Returns whether or not we can search messages.\n     *\n     * @return {boolean}\n     * @since  3.2\n     */\n    isSearchMessagesEnabled(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('core_message_data_for_messagearea_search_messages');\n    }\n\n    /**\n     * Mark message as read.\n     *\n     * @param   {number}  messageId   ID of message to mark as read\n     * @returns {Promise<any>} Promise resolved with boolean marking success or not.\n     */\n    markMessageRead(messageId: number): Promise<any> {\n        const params = {\n            messageid: messageId,\n            timeread: this.timeUtils.timestamp()\n        };\n\n        return this.sitesProvider.getCurrentSite().write('core_message_mark_message_read', params);\n    }\n\n    /**\n     * Mark all messages of a discussion as read.\n     *\n     * @param   {number}  userIdFrom  User Id for the sender.\n     * @returns {Promise<any>} Promise resolved with boolean marking success or not.\n     */\n    markAllMessagesRead(userIdFrom?: number): Promise<any> {\n        const params = {\n                useridto: this.sitesProvider.getCurrentSiteUserId(),\n                useridfrom: userIdFrom\n            },\n            preSets = {\n                typeExpected: 'boolean'\n            };\n\n        return this.sitesProvider.getCurrentSite().write('core_message_mark_all_messages_as_read', params, preSets);\n    }\n\n    /**\n     * Remove a contact.\n     *\n     * @param {number} userId User ID of the person to remove.\n     * @param {string} [siteId]  Site ID. If not defined, use current site.\n     * @return {Promise<any>}  Resolved when done.\n     */\n    removeContact(userId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    userids: [ userId ]\n                },\n                preSets = {\n                    responseExpected: false\n                };\n\n            return site.write('core_message_delete_contacts', params, preSets).then(() => {\n                return this.invalidateContactsCache(site.getId());\n            });\n        });\n    }\n\n    /**\n     * Search for contacts.\n     *\n     * By default this only returns the first 100 contacts, but note that the WS can return thousands\n     * of results which would take a while to process. The limit here is just a convenience to\n     * prevent viewed to crash because too many DOM elements are created.\n     *\n     * @param {string} query The query string.\n     * @param {number} [limit=100] The number of results to return, 0 for none.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}\n     */\n    searchContacts(query: string, limit: number = 100, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const data = {\n                    searchtext: query,\n                    onlymycourses: 0\n                },\n                preSets = {\n                    getFromCache: false // Always try to get updated data. If it fails, it will get it from cache.\n                };\n\n            return site.read('core_message_search_contacts', data, preSets).then((contacts) => {\n                if (limit && contacts.length > limit) {\n                    contacts = contacts.splice(0, limit);\n                }\n                this.userProvider.storeUsers(contacts);\n\n                return contacts;\n            });\n        });\n    }\n\n    /**\n     * Search for all the messges with a specific text.\n     *\n     * @param  {string} query        The query string\n     * @param  {number} [userId]     The user ID. If not defined, current user.\n     * @param  {number} [from=0]     Position of the first result to get. Defaults to 0.\n     * @param  {number} [limit]      Number of results to get. Defaults to LIMIT_SEARCH_MESSAGES.\n     * @param  {string} [siteId]     Site ID. If not defined, current site.\n     * @return {Promise<any>}              Promise resolved with the results.\n     */\n    searchMessages(query: string, userId?: number, from: number = 0, limit: number = this.LIMIT_SEARCH_MESSAGES, siteId?: string):\n            Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const param = {\n                    userid: userId || site.getUserId(),\n                    search: query,\n                    limitfrom: from,\n                    limitnum: limit\n                },\n                preSets = {\n                    getFromCache: false // Always try to get updated data. If it fails, it will get it from cache.\n                };\n\n            return site.read('core_message_data_for_messagearea_search_messages', param, preSets).then((searchResults) => {\n                return searchResults.contacts;\n            });\n        });\n    }\n\n    /**\n     * Send a message to someone.\n     *\n     * @param {number} userIdTo  User ID to send the message to.\n     * @param {string} message   The message to send\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}       Promise resolved with:\n     *                                 - sent (Boolean) True if message was sent to server, false if stored in device.\n     *                                 - message (Object) If sent=false, contains the stored message.\n     */\n    sendMessage(toUserId: number, message: string, siteId?: string): Promise<any> {\n        // Convenience function to store a message to be synchronized later.\n        const storeOffline = (): Promise<any> => {\n            return this.messagesOffline.saveMessage(toUserId, message, siteId).then((entry) => {\n                return {\n                    sent: false,\n                    message: entry\n                };\n            });\n        };\n\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (!this.appProvider.isOnline()) {\n            // App is offline, store the message.\n            return storeOffline();\n        }\n\n        // Check if this conversation already has offline messages.\n        // If so, store this message since they need to be sent in order.\n        return this.messagesOffline.hasMessages(toUserId, siteId).catch(() => {\n            // Error, it's safer to assume it has messages.\n            return true;\n        }).then((hasStoredMessages) => {\n            if (hasStoredMessages) {\n                return storeOffline();\n            }\n\n            // Online and no messages stored. Send it to server.\n            return this.sendMessageOnline(toUserId, message).then(() => {\n                return { sent: true };\n            }).catch((error) => {\n                if (this.utils.isWebServiceError(error)) {\n                    // It's a WebService error, the user cannot send the message so don't store it.\n                    return Promise.reject(error);\n                }\n\n                // Error sending message, store it to retry later.\n                return storeOffline();\n            });\n        });\n    }\n\n    /**\n     * Send a message to someone. It will fail if offline or cannot connect.\n     *\n     * @param {number} toUserId  User ID to send the message to.\n     * @param {string} message   The message to send\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved if success, rejected if failure.\n     */\n    sendMessageOnline(toUserId: number, message: string, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const messages = [\n                {\n                    touserid: toUserId,\n                    text: message,\n                    textformat: 1\n                }\n            ];\n\n        return this.sendMessagesOnline(messages, siteId).then((response) => {\n            if (response && response[0] && response[0].msgid === -1) {\n                // There was an error, and it should be translated already.\n                return this.utils.createFakeWSError(response[0].errormessage);\n            }\n\n            return this.invalidateDiscussionCache(toUserId, siteId).catch(() => {\n                // Ignore errors.\n            });\n        });\n    }\n\n    /**\n     * Send some messages. It will fail if offline or cannot connect.\n     * IMPORTANT: Sending several messages at once for the same discussions can cause problems with display order,\n     * since messages with same timecreated aren't ordered by ID.\n     *\n     * @param  {any} messages Messages to send. Each message must contain touserid, text and textformat.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved if success, rejected if failure. Promise resolved doesn't mean that messages\n     *                           have been sent, the resolve param can contain errors for messages not sent.\n     */\n    sendMessagesOnline(messages: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const data = {\n                messages: messages\n            };\n\n            return site.write('core_message_send_instant_messages', data);\n        });\n    }\n\n    /**\n     * Helper method to sort messages by time.\n     *\n     * @param {any} messages Array of messages containing the key 'timecreated'.\n     * @return {any} Messages sorted with most recent last.\n     */\n    sortMessages(messages: any): any {\n        return messages.sort((a, b) => {\n            // Pending messages last.\n            if (a.pending && !b.pending) {\n                return 1;\n            } else if (!a.pending && b.pending) {\n                return -1;\n            }\n\n            const timecreatedA = parseInt(a.timecreated, 10),\n                timecreatedB = parseInt(b.timecreated, 10);\n            if (timecreatedA == timecreatedB && a.id) {\n                // Same time, sort by ID.\n                return a.id >= b.id ? 1 : -1;\n            }\n\n            return timecreatedA >= timecreatedB ? 1 : -1;\n        });\n    }\n\n    /**\n     * Store the last received message if it's newer than the last stored.\n     * @todo\n     *\n     * @param  {number} userIdFrom ID of the useridfrom retrieved, 0 for all users.\n     * @param  {any} message       Last message received.\n     * @param  {string} [siteId]   Site ID. If not defined, current site.\n     * @return {Promise<any>}      Promise resolved when done.\n     */\n    protected storeLastReceivedMessageIfNeeded(userIdFrom: number, message: any, siteId?: string): Promise<any> {\n        /*let component = mmaMessagesPushSimulationComponent;\n\n        // Get the last received message.\n        return $mmEmulatorHelper.getLastReceivedNotification(component, siteId).then((lastMessage) => {\n            if (userIdFrom > 0 && (!message || !lastMessage)) {\n                // Seeing a single discussion. No received message or cannot know if it really is the last received message. Stop.\n                return;\n            }\n\n            if (message && lastMessage && message.timecreated <= lastMessage.timecreated) {\n                // The message isn't newer than the stored message, don't store it.\n                return;\n            }\n\n            return $mmEmulatorHelper.storeLastReceivedNotification(component, message, siteId);\n        });*/\n        return Promise.resolve();\n    }\n\n    /**\n     * Store user data from contacts in local DB.\n     *\n     * @param {any} contactTypes List of contacts grouped in types.\n     */\n    protected storeUsersFromAllContacts(contactTypes: any): void {\n        for (const x in contactTypes) {\n            this.userProvider.storeUsers(contactTypes[x]);\n        }\n    }\n\n    /**\n     * Store user data from discussions in local DB.\n     *\n     * @param {any} discussions List of discussions.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    protected storeUsersFromDiscussions(discussions: any, siteId?: string): void {\n        const users = [];\n        for (const userId in discussions) {\n            users.push({\n                id: userId,\n                fullname: discussions[userId].fullname,\n                profileimageurl: discussions[userId].profileimageurl\n            });\n        }\n        this.userProvider.storeUsers(users, siteId);\n    }\n\n    /**\n     * Unblock a user.\n     *\n     * @param {number} userId User ID of the person to unblock.\n     * @param {string} [siteId]  Site ID. If not defined, use current site.\n     * @return {Promise<any>}  Resolved when done.\n     */\n    unblockContact(userId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    userids: [ userId ]\n                },\n                preSets = {\n                    responseExpected: false\n                };\n\n            return site.write('core_message_unblock_contacts', params, preSets).then(() => {\n                return this.invalidateAllContactsCache(site.getUserId(), site.getId());\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/messages.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { Subject, BehaviorSubject } from 'rxjs';\n\n/**\n * Interface that all main menu handlers must implement.\n */\nexport interface CoreMainMenuHandler extends CoreDelegateHandler {\n    /**\n     * The highest priority is displayed first.\n     * @type {number}\n     */\n    priority: number;\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerData} Data.\n     */\n    getDisplayData(): CoreMainMenuHandlerData;\n}\n\n/**\n * Data needed to render a main menu handler. It's returned by the handler.\n */\nexport interface CoreMainMenuHandlerData {\n    /**\n     * Name of the page to load for the handler.\n     * @type {string}\n     */\n    page: string;\n\n    /**\n     * Title to display for the handler.\n     * @type {string}\n     */\n    title: string;\n\n    /**\n     * Name of the icon to display for the handler.\n     * @type {string}\n     */\n    icon: string; // Name of the icon to display in the tab.\n\n    /**\n     * Class to add to the displayed handler.\n     * @type {string}\n     */\n    class?: string;\n\n    /**\n     * If the handler has badge to show or not.\n     * @type {boolean}\n     */\n    showBadge?: boolean;\n\n    /**\n     * Text to display on the badge. Only used if showBadge is true.\n     * @type {string}\n     */\n    badge?: string;\n\n    /**\n     * If true, the badge number is being loaded. Only used if showBadge is true.\n     * @type {boolean}\n     */\n    loading?: boolean;\n\n    /**\n     * Params to pass to the page.\n     * @type {any}\n     */\n    pageParams?: any;\n}\n\n/**\n * Data returned by the delegate for each handler.\n */\nexport interface CoreMainMenuHandlerToDisplay extends CoreMainMenuHandlerData {\n    /**\n     * Name of the handler.\n     * @type {string}\n     */\n    name?: string;\n}\n\n/**\n * Service to interact with plugins to be shown in the main menu. Provides functions to register a plugin\n * and notify an update in the data.\n */\n@Injectable()\nexport class CoreMainMenuDelegate extends CoreDelegate {\n    protected handlers: { [s: string]: CoreMainMenuHandler } = {};\n    protected enabledHandlers: { [s: string]: CoreMainMenuHandler } = {};\n    protected loaded = false;\n    protected siteHandlers: Subject<CoreMainMenuHandlerToDisplay[]> = new BehaviorSubject<CoreMainMenuHandlerToDisplay[]>([]);\n    protected featurePrefix = '$mmSideMenuDelegate_';\n\n    constructor(protected loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider,\n            protected eventsProvider: CoreEventsProvider) {\n        super('CoreMainMenuDelegate', loggerProvider, sitesProvider, eventsProvider);\n\n        eventsProvider.on(CoreEventsProvider.LOGOUT, this.clearSiteHandlers.bind(this));\n    }\n\n    /**\n     * Check if handlers are loaded.\n     *\n     * @return {boolean} True if handlers are loaded, false otherwise.\n     */\n    areHandlersLoaded(): boolean {\n        return this.loaded;\n    }\n\n    /**\n     * Clear current site handlers. Reserved for core use.\n     */\n    protected clearSiteHandlers(): void {\n        this.loaded = false;\n        this.siteHandlers.next([]);\n    }\n\n    /**\n     * Get the handlers for the current site.\n     *\n     * @return {Subject<CoreMainMenuHandlerToDisplay[]>} An observable that will receive the handlers.\n     */\n    getHandlers(): Subject<CoreMainMenuHandlerToDisplay[]> {\n        return this.siteHandlers;\n    }\n\n    /**\n     * Update handlers Data.\n     */\n    updateData(): void {\n        const handlersData: any[] = [];\n\n        for (const name in this.enabledHandlers) {\n            const handler = this.enabledHandlers[name],\n                data = handler.getDisplayData();\n\n            handlersData.push({\n                name: name,\n                data: data,\n                priority: handler.priority\n            });\n        }\n\n        // Sort them by priority.\n        handlersData.sort((a, b) => {\n            return b.priority - a.priority;\n        });\n\n        // Return only the display data.\n        const displayData = handlersData.map((item) => {\n            item.data.name = item.name;\n\n            return item.data;\n        });\n\n        this.loaded = true;\n        this.siteHandlers.next(displayData);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/mainmenu/providers/delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreAppProvider } from './app';\nimport { SQLiteDB } from '@classes/sqlitedb';\n\n/**\n * Factory to provide access to dynamic and permanent config and settings.\n * It should not be abused into a temporary storage.\n */\n@Injectable()\nexport class CoreConfigProvider {\n    protected appDB: SQLiteDB;\n    protected TABLE_NAME = 'core_config';\n    protected tableSchema = {\n        name: this.TABLE_NAME,\n        columns: [\n            {\n                name: 'name',\n                type: 'TEXT',\n                unique: true,\n                notNull: true\n            },\n            {\n                name: 'value'\n            }\n        ]\n    };\n\n    constructor(appProvider: CoreAppProvider) {\n        this.appDB = appProvider.getDB();\n        this.appDB.createTableFromSchema(this.tableSchema);\n    }\n\n    /**\n     * Deletes an app setting.\n     *\n     * @param {string} name The config name.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    delete(name: string): Promise<any> {\n        return this.appDB.deleteRecords(this.TABLE_NAME, { name: name });\n    }\n\n    /**\n     * Get an app setting.\n     *\n     * @param {string} name The config name.\n     * @param {any} [defaultValue] Default value to use if the entry is not found.\n     * @return {Promise<any>} Resolves upon success along with the config data. Reject on failure.\n     */\n    get(name: string, defaultValue?: any): Promise<any> {\n        return this.appDB.getRecord(this.TABLE_NAME, { name: name }).then((entry) => {\n            return entry.value;\n        }).catch((error) => {\n            if (typeof defaultValue != 'undefined') {\n                return defaultValue;\n            }\n\n            return Promise.reject(error);\n        });\n    }\n\n    /**\n     * Set an app setting.\n     *\n     * @param {string} name The config name.\n     * @param {boolean|number|string} value The config value. Can only store primitive values, not objects.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    set(name: string, value: boolean | number | string): Promise<any> {\n        return this.appDB.insertOrUpdateRecord(this.TABLE_NAME, { name: name, value: value }, { name: name });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/config.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { LocalNotifications, ILocalNotification } from '@ionic-native/local-notifications';\nimport { CoreAppProvider } from './app';\nimport { CoreConfigProvider } from './config';\nimport { CoreLoggerProvider } from './logger';\nimport { CoreDomUtilsProvider } from './utils/dom';\nimport { CoreTextUtilsProvider } from './utils/text';\nimport { CoreUtilsProvider } from './utils/utils';\nimport { SQLiteDB } from '@classes/sqlitedb';\nimport { CoreConstants } from '@core/constants';\nimport { Subject } from 'rxjs';\n\n/**\n * Local notification.\n */\nexport interface CoreILocalNotification extends ILocalNotification {\n    /**\n     * Number of milliseconds to turn the led on (Android only).\n     * @type {number}\n     */\n    ledOnTime?: number;\n\n    /**\n     * Number of milliseconds to turn the led off (Android only).\n     * @type {number}\n     */\n    ledOffTime?: number;\n}\n\n/*\n * Generated class for the LocalNotificationsProvider provider.\n *\n * See https://angular.io/guide/dependency-injection for more info on providers\n * and Angular DI.\n *\n * @todo We might have to translate the old component name to the new one.\n *       Otherwise the unique ID of local notifications could change.\n*/\n@Injectable()\nexport class CoreLocalNotificationsProvider {\n    // Variables for the database.\n    protected SITES_TABLE = 'notification_sites'; // Store to asigne unique codes to each site.\n    protected COMPONENTS_TABLE = 'notification_components'; // Store to asigne unique codes to each component.\n    protected TRIGGERED_TABLE = 'notifications_triggered'; // Store to prevent re-triggering notifications.\n    protected tablesSchema = [\n        {\n            name: this.SITES_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'TEXT',\n                    primaryKey: true\n                },\n                {\n                    name: 'code',\n                    type: 'INTEGER',\n                    notNull: true\n                }\n            ]\n        },\n        {\n            name: this.COMPONENTS_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'TEXT',\n                    primaryKey: true\n                },\n                {\n                    name: 'code',\n                    type: 'INTEGER',\n                    notNull: true\n                }\n            ]\n        },\n        {\n            name: this.TRIGGERED_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'INTEGER',\n                    primaryKey: true\n                },\n                {\n                    name: 'at',\n                    type: 'INTEGER',\n                    notNull: true\n                }\n            ]\n        }\n    ];\n\n    protected logger;\n    protected appDB: SQLiteDB;\n    protected codes: { [s: string]: number } = {};\n    protected codeRequestsQueue = {};\n    protected observables = {};\n\n    constructor(logger: CoreLoggerProvider, private localNotifications: LocalNotifications, private platform: Platform,\n            private appProvider: CoreAppProvider, private utils: CoreUtilsProvider, private configProvider: CoreConfigProvider,\n            private domUtils: CoreDomUtilsProvider, private textUtils: CoreTextUtilsProvider) {\n        this.logger = logger.getInstance('CoreLocalNotificationsProvider');\n        this.appDB = appProvider.getDB();\n        this.appDB.createTablesFromSchema(this.tablesSchema);\n    }\n\n    /**\n     * Cancel a local notification.\n     *\n     * @param {number} id Notification id.\n     * @param {string} component Component of the notification.\n     * @param {string} siteId Site ID.\n     * @return {Promise<any>} Promise resolved when the notification is cancelled.\n     */\n    cancel(id: number, component: string, siteId: string): Promise<any> {\n        return this.getUniqueNotificationId(id, component, siteId).then((uniqueId) => {\n            return this.localNotifications.cancel(uniqueId);\n        });\n    }\n\n    /**\n     * Cancel all the scheduled notifications belonging to a certain site.\n     *\n     * @param {string} siteId Site ID.\n     * @return {Promise<any>} Promise resolved when the notifications are cancelled.\n     */\n    cancelSiteNotifications(siteId: string): Promise<any> {\n\n        if (!this.isAvailable()) {\n            return Promise.resolve();\n        } else if (!siteId) {\n            return Promise.reject(null);\n        }\n\n        return this.localNotifications.getAllScheduled().then((scheduled) => {\n            const ids = [];\n\n            scheduled.forEach((notif) => {\n                if (typeof notif.data == 'string') {\n                    notif.data = this.textUtils.parseJSON(notif.data);\n                }\n\n                if (typeof notif.data == 'object' && notif.data.siteId === siteId) {\n                    ids.push(notif.id);\n                }\n            });\n\n            return this.localNotifications.cancel(ids);\n        });\n    }\n\n    /**\n     * Get a code to create unique notifications. If there's no code assigned, create a new one.\n     *\n     * @param {string} table Table to search in local DB.\n     * @param {string} id ID of the element to get its code.\n     * @return {Promise<number>} Promise resolved when the code is retrieved.\n     */\n    protected getCode(table: string, id: string): Promise<number> {\n        const key = table + '#' + id;\n\n        // Check if the code is already in memory.\n        if (typeof this.codes[key] != 'undefined') {\n            return Promise.resolve(this.codes[key]);\n        }\n\n        // Check if we already have a code stored for that ID.\n        return this.appDB.getRecord(table, { id: id }).then((entry) => {\n            this.codes[key] = entry.code;\n\n            return entry.code;\n        }).catch(() => {\n            // No code stored for that ID. Create a new code for it.\n            return this.appDB.getRecords(table, undefined, 'code DESC').then((entries) => {\n                let newCode = 0;\n                if (entries.length > 0) {\n                    newCode = entries[0].code + 1;\n                }\n\n                return this.appDB.insertRecord(table, { id: id, code: newCode }).then(() => {\n                    this.codes[key] = newCode;\n\n                    return newCode;\n                });\n            });\n        });\n    }\n\n    /**\n     * Get a notification component code to be used.\n     * If it's the first time this component is used to send notifications, create a new code for it.\n     *\n     * @param {string} component Component name.\n     * @return {Promise<number>} Promise resolved when the component code is retrieved.\n     */\n    protected getComponentCode(component: string): Promise<number> {\n        return this.requestCode(this.COMPONENTS_TABLE, component);\n    }\n\n    /**\n     * Get a site code to be used.\n     * If it's the first time this site is used to send notifications, create a new code for it.\n     *\n     * @param {string} siteId Site ID.\n     * @return {Promise<number>} Promise resolved when the site code is retrieved.\n     */\n    protected getSiteCode(siteId: string): Promise<number> {\n        return this.requestCode(this.SITES_TABLE, siteId);\n    }\n\n    /**\n     * Create a unique notification ID, trying to prevent collisions. Generated ID must be a Number (Android).\n     * The generated ID shouldn't be higher than 2147483647 or it's going to cause problems in Android.\n     * This function will prevent collisions and keep the number under Android limit if:\n     *     -User has used less than 21 sites.\n     *     -There are less than 11 components.\n     *     -The notificationId passed as parameter is lower than 10000000.\n     *\n     * @param {number} notificationId Notification ID.\n     * @param {string} component Component triggering the notification.\n     * @param {string} siteId Site ID.\n     * @return {Promise<number>} Promise resolved when the notification ID is generated.\n     */\n    protected getUniqueNotificationId(notificationId: number, component: string, siteId: string): Promise<number> {\n        if (!siteId || !component) {\n            return Promise.reject(null);\n        }\n\n        return this.getSiteCode(siteId).then((siteCode) => {\n            return this.getComponentCode(component).then((componentCode) => {\n                // We use the % operation to keep the number under Android's limit.\n                return (siteCode * 100000000 + componentCode * 10000000 + notificationId) % 2147483647;\n            });\n        });\n    }\n\n    /**\n     * Returns whether local notifications plugin is installed.\n     *\n     * @return {boolean} Whether local notifications plugin is installed.\n     */\n    isAvailable(): boolean {\n        const win = <any> window;\n\n        return this.appProvider.isDesktop() || !!(win.plugin && win.plugin.notification && win.plugin.notification.local);\n    }\n\n    /**\n     * Check if a notification has been triggered with the same trigger time.\n     *\n     * @param {CoreILocalNotification} notification Notification to check.\n     * @return {Promise<any>} Promise resolved with a boolean indicating if promise is triggered (true) or not.\n     */\n    isTriggered(notification: CoreILocalNotification): Promise<any> {\n        return this.appDB.getRecord(this.TRIGGERED_TABLE, { id: notification.id }).then((stored) => {\n            return stored.at === notification.at.getTime() / 1000;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    /**\n     * Notify notification click to observers. Only the observers with the same component as the notification will be notified.\n     *\n     * @param {any} data Data received by the notification.\n     */\n    notifyClick(data: any): void {\n        const component = data.component;\n        if (component) {\n            if (this.observables[component]) {\n                this.observables[component].next(data);\n            }\n        }\n    }\n\n    /**\n     * Process the next request in queue.\n     */\n    protected processNextRequest(): void {\n        const nextKey = Object.keys(this.codeRequestsQueue)[0];\n        let request,\n            promise;\n\n        if (typeof nextKey == 'undefined') {\n            // No more requests in queue, stop.\n            return;\n        }\n\n        request = this.codeRequestsQueue[nextKey];\n\n        // Check if request is valid.\n        if (typeof request == 'object' && typeof request.table != 'undefined' && typeof request.id != 'undefined') {\n            // Get the code and resolve/reject all the promises of this request.\n            promise = this.getCode(request.table, request.id).then((code) => {\n                request.promises.forEach((p) => {\n                    p.resolve(code);\n                });\n            }).catch((error) => {\n                request.promises.forEach((p) => {\n                    p.reject(error);\n                });\n            });\n        } else {\n            promise = Promise.resolve();\n        }\n\n        // Once this item is treated, remove it and process next.\n        promise.finally(() => {\n            delete this.codeRequestsQueue[nextKey];\n            this.processNextRequest();\n        });\n    }\n\n    /**\n     * Register an observer to be notified when a notification belonging to a certain component is clicked.\n     *\n     * @param {string} component Component to listen notifications for.\n     * @param {Function} callback Function to call with the data received by the notification.\n     * @return {any} Object with an \"off\" property to stop listening for clicks.\n     */\n    registerClick(component: string, callback: Function): any {\n        this.logger.debug(`Register observer '${component}' for notification click.`);\n\n        if (typeof this.observables[component] == 'undefined') {\n            // No observable for this component, create a new one.\n            this.observables[component] = new Subject<any>();\n        }\n\n        this.observables[component].subscribe(callback);\n\n        return {\n            off: (): void => {\n                this.observables[component].unsubscribe(callback);\n            }\n        };\n    }\n\n    /**\n     * Remove a notification from triggered store.\n     *\n     * @param {number} id Notification ID.\n     * @return {Promise<any>} Promise resolved when it is removed.\n     */\n    removeTriggered(id: number): Promise<any> {\n        return this.appDB.deleteRecords(this.TRIGGERED_TABLE, { id: id });\n    }\n\n    /**\n     * Request a unique code. The request will be added to the queue and the queue is going to be started if it's paused.\n     *\n     * @param {string} table Table to search in local DB.\n     * @param {string} id ID of the element to get its code.\n     * @return {Promise}      Promise resolved when the code is retrieved.\n     */\n    protected requestCode(table: string, id: string): Promise<number> {\n        const deferred = this.utils.promiseDefer(),\n            key = table + '#' + id,\n            isQueueEmpty = Object.keys(this.codeRequestsQueue).length == 0;\n\n        if (typeof this.codeRequestsQueue[key] != 'undefined') {\n            // There's already a pending request for this store and ID, add the promise to it.\n            this.codeRequestsQueue[key].promises.push(deferred);\n        } else {\n            // Add a pending request to the queue.\n            this.codeRequestsQueue[key] = {\n                table: table,\n                id: id,\n                promises: [deferred]\n            };\n        }\n\n        if (isQueueEmpty) {\n            this.processNextRequest();\n        }\n\n        return deferred.promise;\n    }\n\n    /**\n     * Reschedule all notifications that are already scheduled.\n     *\n     * @return {Promise<any>} Promise resolved when all notifications have been rescheduled.\n     */\n    rescheduleAll(): Promise<any> {\n        // Get all the scheduled notifications.\n        return this.localNotifications.getAllScheduled().then((notifications) => {\n            const promises = [];\n\n            notifications.forEach((notification) => {\n                // Convert some properties to the needed types.\n                notification.at = new Date(notification.at * 1000);\n                notification.data = notification.data ? this.textUtils.parseJSON(notification.data, {}) : {};\n\n                promises.push(this.scheduleNotification(notification));\n            });\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Schedule a local notification.\n     *\n     * @param {CoreILocalNotification} notification Notification to schedule. Its ID should be lower than 10000000 and it should\n     *                                              be unique inside its component and site.\n     * @param {string} component Component triggering the notification. It is used to generate unique IDs.\n     * @param {string} siteId Site ID.\n     * @return {Promise<any>} Promise resolved when the notification is scheduled.\n     */\n    schedule(notification: CoreILocalNotification, component: string, siteId: string): Promise<any> {\n        return this.getUniqueNotificationId(notification.id, component, siteId).then((uniqueId) => {\n            notification.id = uniqueId;\n            notification.data = notification.data || {};\n            notification.data.component = component;\n            notification.data.siteId = siteId;\n\n            if (this.platform.is('android')) {\n                notification.icon = notification.icon || 'res://icon';\n                notification.smallIcon = notification.smallIcon || 'res://icon';\n                notification.led = notification.led || 'FF9900';\n                notification.ledOnTime = notification.ledOnTime || 1000;\n                notification.ledOffTime = notification.ledOffTime || 1000;\n            }\n\n            return this.scheduleNotification(notification);\n        });\n    }\n\n    /**\n     * Helper function to schedule a notification object if it hasn't been triggered already.\n     *\n     * @param {CoreILocalNotification} notification Notification to schedule.\n     * @return {Promise<any>} Promise resolved when scheduled.\n     */\n    protected scheduleNotification(notification: CoreILocalNotification): Promise<any> {\n        // Check if the notification has been triggered already.\n        return this.isTriggered(notification).then((triggered) => {\n            if (!triggered) {\n                // Check if sound is enabled for notifications.\n                return this.configProvider.get(CoreConstants.SETTINGS_NOTIFICATION_SOUND, true).then((soundEnabled) => {\n                    if (!soundEnabled) {\n                        notification.sound = null;\n                    } else {\n                        delete notification.sound; // Use default value.\n                    }\n\n                    // Remove from triggered, since the notification could be in there with a different time.\n                    this.removeTriggered(notification.id);\n                    this.localNotifications.schedule(notification);\n                });\n            }\n        });\n    }\n\n    /**\n     * Show an in app notification popover.\n     *\n     * @param {CoreILocalNotification} notification Notification.\n     */\n    showNotificationPopover(notification: CoreILocalNotification): void {\n        // @todo Improve it. For now, show Toast.\n        if (!notification || !notification.title || !notification.text) {\n            // Invalid data.\n            return;\n        }\n\n        this.domUtils.showToast(notification.text, false, 4000);\n    }\n\n    /**\n     * Function to call when a notification is triggered. Stores the notification so it's not scheduled again unless the\n     * time is changed.\n     *\n     * @param {CoreILocalNotification} notification Triggered notification.\n     * @return {Promise<any>} Promise resolved when stored, rejected otherwise.\n     */\n    trigger(notification: CoreILocalNotification): Promise<any> {\n        if (this.platform.is('ios') && this.platform.version().num >= 10) {\n            // In iOS10 show in app notification.\n            this.showNotificationPopover(notification);\n        }\n\n        const entry = {\n            id: notification.id,\n            at: parseInt(notification.at, 10)\n        };\n\n        return this.appDB.insertOrUpdateRecord(this.TRIGGERED_TABLE, entry, { id: notification.id });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/local-notifications.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\n\n/**\n * Service to provide grade functionalities.\n */\n@Injectable()\nexport class CoreGradesProvider {\n    protected ROOT_CACHE_KEY = 'mmGrades:';\n\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider,\n            private coursesProvider: CoreCoursesProvider) {\n        this.logger = logger.getInstance('CoreGradesProvider');\n    }\n\n    /**\n     * Get cache key for grade table data WS calls.\n     *\n     * @param {number} courseId ID of the course to get the grades from.\n     * @param {number} userId   ID of the user to get the grades from.\n     * @return {string}         Cache key.\n     */\n    protected getCourseGradesCacheKey(courseId: number, userId: number): string {\n        return this.getCourseGradesPrefixCacheKey(courseId) + userId;\n    }\n\n    /**\n     * Get cache key for grade items data WS calls.\n     *\n     * @param {number} courseId     ID of the course to get the grades from.\n     * @param {number} userId       ID of the user to get the grades from.\n     * @param {number} [groupId]    ID of the group to get the grades from. Default: 0.\n     * @return {string}         Cache key.\n     */\n    protected getCourseGradesItemsCacheKey(courseId: number, userId: number, groupId: number): string {\n        groupId = groupId || 0;\n\n        return this.getCourseGradesPrefixCacheKey(courseId) + userId + ':' + groupId;\n    }\n\n    /**\n     * Get prefix cache key for grade table data WS calls.\n     *\n     * @param {number} courseId ID of the course to get the grades from.\n     * @return {string}         Cache key.\n     */\n    protected getCourseGradesPrefixCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'items:' + courseId + ':';\n    }\n\n    /**\n     * Get cache key for courses grade WS calls.\n     *\n     * @return {string}   Cache key.\n     */\n    protected getCoursesGradesCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'coursesgrades';\n    }\n\n    /**\n     * Get the grade items for a certain module. Keep in mind that may have more than one item to include outcomes and scales.\n     * Fallback function only used if 'gradereport_user_get_grade_items' WS is not avalaible Moodle < 3.2.\n     *\n     * @param  {number}  courseId             ID of the course to get the grades from.\n     * @param  {number}  [userId]             ID of the user to get the grades from. If not defined use site's current user.\n     * @param  {number}  [groupId]            ID of the group to get the grades from. Not used for old gradebook table.\n     * @param  {string}  [siteId]             Site ID. If not defined, current site.\n     * @param  {boolean} [ignoreCache=false]  True if it should ignore cached data (it will always fail in offline or server down).\n     * @return {Promise<any>}                Promise to be resolved when the grades are retrieved.\n     */\n    getGradeItems(courseId: number, userId?: number, groupId?: number, siteId?: string, ignoreCache: boolean = false):\n            Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return this.isGradeItemsAvalaible(siteId).then((enabled) => {\n                if (enabled) {\n                    return this.getCourseGradesItems(courseId, userId, groupId, siteId, ignoreCache).catch(() => {\n                        // FallBack while solving MDL-57255.\n                        return this.getCourseGradesTable(courseId, userId, siteId, ignoreCache);\n                    });\n                } else {\n                    return this.getCourseGradesTable(courseId, userId, siteId, ignoreCache);\n                }\n            });\n        });\n    }\n\n    /**\n     * Get the grade items for a certain course.\n     *\n     * @param  {number}  courseId             ID of the course to get the grades from.\n     * @param  {number}  [userId]             ID of the user to get the grades from.\n     * @param  {number}  [groupId]            ID of the group to get the grades from. Default 0.\n     * @param  {string}  [siteId]             Site ID. If not defined, current site.\n     * @param  {boolean} [ignoreCache=false]  True if it should ignore cached data (it will always fail in offline or server down).\n     * @return {Promise<any>}                      Promise to be resolved when the grades table is retrieved.\n     */\n    getCourseGradesItems(courseId: number, userId?: number, groupId?: number, siteId?: string,\n            ignoreCache: boolean = false): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n            groupId = groupId || 0;\n\n            this.logger.debug(`Get grades for course '${courseId}' and user '${userId}'`);\n\n            const data = {\n                    courseid : courseId,\n                    userid   : userId,\n                    groupid  : groupId\n                },\n                preSets = {\n                    cacheKey: this.getCourseGradesItemsCacheKey(courseId, userId, groupId)\n                };\n\n            if (ignoreCache) {\n                preSets['getFromCache'] = 0;\n                preSets['emergencyCache'] = 0;\n            }\n\n            return site.read('gradereport_user_get_grade_items', data, preSets).then((grades) => {\n                if (grades && grades.usergrades && grades.usergrades[0]) {\n                    return grades.usergrades[0].gradeitems;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get the grades for a certain course.\n     *\n     * @param  {number}  courseId             ID of the course to get the grades from.\n     * @param  {number}  [userId]             ID of the user to get the grades from.\n     * @param  {string}  [siteId]             Site ID. If not defined, current site.\n     * @param  {boolean} [ignoreCache=false]  True if it should ignore cached data (it will always fail in offline or server down).\n     * @return {Promise<any>}                      Promise to be resolved when the grades table is retrieved.\n     */\n    getCourseGradesTable(courseId: number, userId?: number, siteId?: string, ignoreCache: boolean = false): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            this.logger.debug(`Get grades for course '${courseId}' and user '${userId}'`);\n\n            const data = {\n                    courseid : courseId,\n                    userid   : userId\n                },\n                preSets = {\n                    cacheKey: this.getCourseGradesCacheKey(courseId, userId)\n                };\n\n            if (ignoreCache) {\n                preSets['getFromCache'] = 0;\n                preSets['emergencyCache'] = 0;\n            }\n\n            return site.read('gradereport_user_get_grades_table', data, preSets).then((table) => {\n                if (table && table.tables && table.tables[0]) {\n                    return table.tables[0];\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get the grades for a certain course.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}   Promise to be resolved when the grades are retrieved.\n     */\n    getCoursesGrades(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            this.logger.debug('Get course grades');\n\n            const preSets = {\n                cacheKey: this.getCoursesGradesCacheKey()\n            };\n\n            return site.read('gradereport_overview_get_course_grades', undefined, preSets).then((data) => {\n                if (data && data.grades) {\n                    return data.grades;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Invalidates grade table data WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} [userId]   User ID.\n     * @param {string} [siteId]   Site id (empty for current site).\n     * @return {Promise<any>}        Promise resolved when the data is invalidated.\n     */\n    invalidateCourseGradesData(courseId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return site.invalidateWsCacheForKey(this.getCourseGradesCacheKey(courseId, userId));\n        });\n    }\n\n    /**\n     * Invalidates courses grade data WS calls.\n     *\n     * @param {string} [siteId]   Site id (empty for current site).\n     * @return {Promise<any>}     Promise resolved when the data is invalidated.\n     */\n    invalidateCoursesGradesData(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCoursesGradesCacheKey());\n        });\n    }\n\n    /**\n     * Invalidates courses grade items data WS calls.\n     *\n     * @param {number} courseId     ID of the course to get the grades from.\n     * @param {number} userId       ID of the user to get the grades from.\n     * @param {number} [groupId]    ID of the group to get the grades from. Default: 0.\n     * @param {string} [siteId]     Site id (empty for current site).\n     * @return {Promise<any>}     Promise resolved when the data is invalidated.\n     */\n    invalidateCourseGradesItemsData(courseId: number, userId: number, groupId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCourseGradesItemsCacheKey(courseId, userId, groupId));\n        });\n    }\n\n    /**\n     * Returns whether or not the plugin is enabled for a certain site.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>}  Resolve with true if plugin is enabled, false otherwise.\n     * @since  Moodle 3.2\n     */\n    isCourseGradesEnabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (!site.wsAvailable('gradereport_overview_get_course_grades')) {\n                return false;\n            }\n            // Now check that the configurable mygradesurl is pointing to the gradereport_overview plugin.\n            const url = site.getStoredConfig('mygradesurl') || '';\n\n            return url.indexOf('/grade/report/overview/') !== -1;\n        });\n    }\n\n    /**\n     * Returns whether or not the grade addon is enabled for a certain course.\n     *\n     * @param {number} courseId  Course ID.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promisee<boolean>} Promise resolved with true if plugin is enabled, rejected or resolved with false otherwise.\n     */\n    isPluginEnabledForCourse(courseId: number, siteId?: string): Promise<boolean> {\n        if (!courseId) {\n            return Promise.reject(null);\n        }\n\n        return this.coursesProvider.getUserCourse(courseId, true, siteId).then((course) => {\n            return !(course && typeof course.showgrades != 'undefined' && course.showgrades == 0);\n        });\n    }\n\n    /**\n     * Returns whether or not WS Grade Items is avalaible.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>}         True if ws is avalaible, false otherwise.\n     * @since  Moodle 3.2\n     */\n    isGradeItemsAvalaible(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.wsAvailable('gradereport_user_get_grade_items');\n        });\n    }\n\n    /**\n     * Log Course grades view in Moodle.\n     *\n     * @param  {number}  courseId Course ID.\n     * @param  {number}  userId   User ID.\n     * @return {Promise<any>}     Promise resolved when done.\n     */\n    logCourseGradesView(courseId: number, userId: number): Promise<any> {\n        userId = userId || this.sitesProvider.getCurrentSiteUserId();\n\n        return this.sitesProvider.getCurrentSite().write('gradereport_user_view_grade_report', {\n            courseid: courseId,\n            userid: userId\n        });\n    }\n\n    /**\n     * Log Courses grades view in Moodle.\n     *\n     * @param  {number}  [courseId] Course ID. If not defined, site Home ID.\n     * @return {Promise<any>}     Promise resolved when done.\n     */\n    logCoursesGradesView(courseId?: number): Promise<any> {\n        if (!courseId) {\n            courseId = this.sitesProvider.getCurrentSiteHomeId();\n        }\n\n        return this.sitesProvider.getCurrentSite().write('gradereport_overview_view_grade_report', {\n            courseid: courseId\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/providers/grades.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreCourseProvider } from './course';\nimport { CoreCourseFormatDefaultHandler } from './default-format';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\n\n/**\n * Interface that all course format handlers must implement.\n */\nexport interface CoreCourseFormatHandler extends CoreDelegateHandler {\n    /**\n     * Get the title to use in course page. If not defined, course fullname.\n     * This function will be called without sections first, and then call it again when the sections are retrieved.\n     *\n     * @param {any} course The course.\n     * @param {any[]} [sections] List of sections.\n     * @return {string} Title.\n     */\n    getCourseTitle?(course: any, sections?: any[]): string;\n\n    /**\n     * Whether it allows seeing all sections at the same time. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether it can view all sections.\n     */\n    canViewAllSections?(course: any): boolean;\n\n    /**\n     * Whether the option to enable section/module download should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether the option to enable section/module download should be displayed.\n     */\n    displayEnableDownload?(course: any): boolean;\n\n    /**\n     * Whether the default section selector should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether the default section selector should be displayed.\n     */\n    displaySectionSelector?(course: any): boolean;\n\n    /**\n     * Given a list of sections, get the \"current\" section that should be displayed first. Defaults to first section.\n     *\n     * @param {any} course The course to get the title.\n     * @param {any[]} sections List of sections.\n     * @return {any|Promise<any>} Current section (or promise resolved with current section). If a promise is returned, it should\n     *                            never fail.\n     */\n    getCurrentSection?(course: any, sections: any[]): any | Promise<any>;\n\n    /**\n     * Open the page to display a course. If not defined, the page CoreCourseSectionPage will be opened.\n     * Implement it only if you want to create your own page to display the course. In general it's better to use the method\n     * getCourseFormatComponent because it will display the course handlers at the top.\n     * Your page should include the course handlers using CoreCoursesDelegate.\n     *\n     * @param {NavController} navCtrl The NavController instance to use.\n     * @param {any} course The course to open. It should contain a \"format\" attribute.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    openCourse?(navCtrl: NavController, course: any): Promise<any>;\n\n    /**\n     * Return the Component to use to display the course format instead of using the default one.\n     * Use it if you want to display a format completely different from the default one.\n     * If you want to customize the default format there are several methods to customize parts of it.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getCourseFormatComponent?(injector: Injector, course: any): any | Promise<any>;\n\n    /**\n     * Return the Component to use to display the course summary inside the default course format.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getCourseSummaryComponent?(injector: Injector, course: any): any | Promise<any>;\n\n    /**\n     * Return the Component to use to display the section selector inside the default course format.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getSectionSelectorComponent?(injector: Injector, course: any): any | Promise<any>;\n\n    /**\n     * Return the Component to use to display a single section. This component will only be used if the user is viewing a\n     * single section. If all the sections are displayed at once then it won't be used.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getSingleSectionComponent?(injector: Injector, course: any): any | Promise<any>;\n\n    /**\n     * Return the Component to use to display all sections in a course.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getAllSectionsComponent?(injector: Injector, course: any): any | Promise<any>;\n\n    /**\n     * Invalidate the data required to load the course format.\n     *\n     * @param {any} course The course to get the title.\n     * @param {any[]} sections List of sections.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateData?(course: any, sections: any[]): Promise<any>;\n}\n\n/**\n * Service to interact with course formats. Provides the functions to register and interact with the addons.\n */\n@Injectable()\nexport class CoreCourseFormatDelegate extends CoreDelegate {\n    protected handlers: { [s: string]: CoreCourseFormatHandler } = {}; // All registered handlers.\n    protected enabledHandlers: { [s: string]: CoreCourseFormatHandler } = {}; // Handlers enabled for the current site.\n    protected featurePrefix = 'CoreCourseFormatHandler_';\n\n    constructor(loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider, eventsProvider: CoreEventsProvider,\n            protected defaultHandler: CoreCourseFormatDefaultHandler) {\n        super('CoreCoursesCourseFormatDelegate', loggerProvider, sitesProvider, eventsProvider);\n    }\n\n    /**\n     * Whether it allows seeing all sections at the same time. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @return {boolean} Whether it allows seeing all sections at the same time.\n     */\n    canViewAllSections(course: any): boolean {\n        return this.executeFunction(course.format, 'canViewAllSections', [course]);\n    }\n\n    /**\n     * Whether the option to enable section/module download should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @return {boolean} Whether the option to enable section/module download should be displayed\n     */\n    displayEnableDownload(course: any): boolean {\n        return this.executeFunction(course.format, 'displayEnableDownload', [course]);\n    }\n\n    /**\n     * Whether the default section selector should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @return {boolean} Whether the section selector should be displayed.\n     */\n    displaySectionSelector(course: any): boolean {\n        return this.executeFunction(course.format, 'displaySectionSelector', [course]);\n    }\n\n    /**\n     * Execute a certain function in a course format handler.\n     * If the handler isn't found or function isn't defined, call the same function in the default handler.\n     *\n     * @param {string} format The format name.\n     * @param {string} fnName Name of the function to execute.\n     * @param {any[]} params Parameters to pass to the function.\n     * @return {any} Function returned value or default value.\n     */\n    protected executeFunction(format: string, fnName: string, params?: any[]): any {\n        const handler = this.enabledHandlers[format];\n        if (handler && handler[fnName]) {\n            return handler[fnName].apply(handler, params);\n        } else if (this.defaultHandler[fnName]) {\n            return this.defaultHandler[fnName].apply(this.defaultHandler, params);\n        }\n    }\n\n    /**\n     * Get the component to use to display all sections in a course.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {Promise<any>} Promise resolved with component to use, undefined if not found.\n     */\n    getAllSectionsComponent(injector: Injector, course: any): Promise<any> {\n        return Promise.resolve(this.executeFunction(course.format, 'getAllSectionsComponent', [injector, course])).catch((e) => {\n            this.logger.error('Error getting all sections component', e);\n        });\n    }\n\n    /**\n     * Get the component to use to display a course format.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {Promise<any>} Promise resolved with component to use, undefined if not found.\n     */\n    getCourseFormatComponent(injector: Injector, course: any): Promise<any> {\n        return Promise.resolve(this.executeFunction(course.format, 'getCourseFormatComponent', [injector, course])).catch((e) => {\n            this.logger.error('Error getting course format component', e);\n        });\n    }\n\n    /**\n     * Get the component to use to display the course summary in the default course format.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {Promise<any>} Promise resolved with component to use, undefined if not found.\n     */\n    getCourseSummaryComponent(injector: Injector, course: any): Promise<any> {\n        return Promise.resolve(this.executeFunction(course.format, 'getCourseSummaryComponent', [injector, course])).catch((e) => {\n            this.logger.error('Error getting course summary component', e);\n        });\n    }\n\n    /**\n     * Given a course, return the title to use in the course page.\n     *\n     * @param {any} course The course to get the title.\n     * @param {any[]} [sections] List of sections.\n     * @return {string} Course title.\n     */\n    getCourseTitle(course: any, sections?: any[]): string {\n        return this.executeFunction(course.format, 'getCourseTitle', [course, sections]);\n    }\n\n    /**\n     * Given a course and a list of sections, return the current section that should be displayed first.\n     *\n     * @param {any} course The course to get the title.\n     * @param {any[]} sections List of sections.\n     * @return {Promise<any>} Promise resolved with current section.\n     */\n    getCurrentSection(course: any, sections: any[]): Promise<any> {\n        // Convert the result to a Promise if it isn't.\n        return Promise.resolve(this.executeFunction(course.format, 'getCurrentSection', [course, sections])).catch(() => {\n            // This function should never fail. Just return the first section.\n            if (sections[0].id != CoreCourseProvider.ALL_SECTIONS_ID) {\n                return sections[0];\n            }\n\n            return sections[1];\n        });\n    }\n\n    /**\n     * Get the component to use to display the section selector inside the default course format.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {Promise<any>} Promise resolved with component to use, undefined if not found.\n     */\n    getSectionSelectorComponent(injector: Injector, course: any): Promise<any> {\n        return Promise.resolve(this.executeFunction(course.format, 'getSectionSelectorComponent', [injector, course]))\n                .catch((e) => {\n            this.logger.error('Error getting section selector component', e);\n        });\n    }\n\n    /**\n     * Get the component to use to display a single section. This component will only be used if the user is viewing\n     * a single section. If all the sections are displayed at once then it won't be used.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {Promise<any>} Promise resolved with component to use, undefined if not found.\n     */\n    getSingleSectionComponent(injector: Injector, course: any): Promise<any> {\n        return Promise.resolve(this.executeFunction(course.format, 'getSingleSectionComponent', [injector, course])).catch((e) => {\n            this.logger.error('Error getting single section component', e);\n        });\n    }\n\n    /**\n     * Invalidate the data required to load the course format.\n     *\n     * @param {any} course The course to get the title.\n     * @param {any[]} sections List of sections.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateData(course: any, sections: any[]): Promise<any> {\n        return this.executeFunction(course.format, 'invalidateData', [course, sections]);\n    }\n\n    /**\n     * Open a course.\n     *\n     * @param {NavController} navCtrl The NavController instance to use.\n     * @param {any} course The course to open. It should contain a \"format\" attribute.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    openCourse(navCtrl: NavController, course: any): Promise<any> {\n        if (this.enabledHandlers[course.format] && this.enabledHandlers[course.format].openCourse) {\n            return this.enabledHandlers[course.format].openCourse(navCtrl, course);\n        }\n\n        return navCtrl.push('CoreCourseSectionPage', { course: course });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/providers/format-delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreEventsProvider } from '@providers/events';\n\nexport interface CoreUserProfileFieldHandler extends CoreDelegateHandler {\n\n    /**\n     * Return the Component to use to display the user profile field.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(injector: Injector): any | Promise<any>;\n\n    /**\n     * Get the data to send for the field based on the input data.\n     * @param  {any}     field          User field to get the data for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @param  {string}  [registerAuth] Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form Values.\n     * @return {Promise<CoreUserProfileFieldHandlerData>|CoreUserProfileFieldHandlerData}  Data to send for the field.\n     */\n    getData?(field: any, signup: boolean, registerAuth: string, formValues: any):\n        Promise<CoreUserProfileFieldHandlerData> | CoreUserProfileFieldHandlerData;\n}\n\nexport interface CoreUserProfileFieldHandlerData {\n    /**\n     * Name to display.\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    type?: string;\n\n    /**\n     * Value of the field.\n     * @type {any}\n     */\n    value: any;\n}\n\n/**\n * Service to interact with user profile fields. Provides functions to register a plugin.\n */\n@Injectable()\nexport class CoreUserProfileFieldDelegate extends CoreDelegate {\n    protected handlers: { [s: string]: CoreUserProfileFieldHandler } = {};\n    protected enabledHandlers: { [s: string]: CoreUserProfileFieldHandler } = {};\n\n    constructor(protected loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider,\n            protected eventsProvider: CoreEventsProvider) {\n        super('CoreUserProfileFieldDelegate', loggerProvider, sitesProvider, eventsProvider);\n    }\n\n    /**\n     * Get the component to use to display an user field.\n     *\n     * @param {Injector} injector Injector.\n     * @param  {any} field      User field to get the directive for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @return {Promise<any>} Promise resolved with component to use, undefined if not found.\n     */\n    getComponent(injector: Injector, field: any, signup: boolean): Promise<any> {\n        const type = field.type || field.datatype;\n        let result;\n        if (signup) {\n            result = this.executeFunction(type, 'getComponent', [injector]);\n        } else {\n            result = this.executeFunctionOnEnabled(type, 'getComponent', [injector]);\n        }\n\n        return Promise.resolve(result).catch((err) => {\n            this.logger.error('Error getting component for field', type, err);\n        });\n    }\n\n    /**\n     * Get the data to send for a certain field based on the input data.\n     *\n     * @param  {any}     field          User field to get the data for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @param  {string}  registerAuth   Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form values.\n     * @return {Promise<any>}           Data to send for the field.\n     */\n    getDataForField(field: any, signup: boolean, registerAuth: string, formValues: any): Promise<any> {\n        const type = field.type || field.datatype,\n            handler = <CoreUserProfileFieldHandler> this.getHandler(type, !signup);\n\n        if (handler) {\n            const name = 'profile_field_' + field.shortname;\n            if (handler.getData) {\n                return Promise.resolve(handler.getData(field, signup, registerAuth, formValues));\n            } else if (field.shortname && typeof formValues[name] != 'undefined') {\n                // Handler doesn't implement the function, but the form has data for the field.\n                return Promise.resolve({\n                    type: type,\n                    name: name,\n                    value: formValues[name]\n                });\n            }\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Get the data to send for a list of fields based on the input data.\n     *\n     * @param  {any[]}   fields           User fields to get the data for.\n     * @param  {boolean} [signup]       True if user is in signup page.\n     * @param  {string}  [registerAuth] Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form values.\n     * @return {Promise<any>}           Data to send.\n     */\n    getDataForFields(fields: any[], signup: boolean = false, registerAuth: string = '', formValues: any): Promise<any> {\n        const result = [],\n            promises = [];\n\n        fields.forEach((field) => {\n            promises.push(this.getDataForField(field, signup, registerAuth, formValues).then((data) => {\n                if (data) {\n                    result.push(data);\n                }\n            }).catch(() => {\n                // Ignore errors.\n            }));\n        });\n\n        return Promise.all(promises).then(() => {\n            return result;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/providers/user-profile-field-delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSitePluginsProvider } from '../../providers/siteplugins';\nimport { Subject } from 'rxjs';\n\n/**\n * Component to render a site plugin content.\n */\n@Component({\n    selector: 'core-site-plugins-plugin-content',\n    templateUrl: 'plugin-content.html',\n})\nexport class CoreSitePluginsPluginContentComponent implements OnInit {\n    @Input() component: string;\n    @Input() method: string;\n    @Input() args: any;\n    @Input() bootstrapResult: any; // Result of the bootstrap WS call of the handler.\n    @Output() onContentLoaded?: EventEmitter<boolean>; // Emits an event when the content is loaded.\n    @Output() onLoadingContent?: EventEmitter<boolean>; // Emits an event when starts to load the content.\n\n    content: string; // Content.\n    javascript: string; // Javascript to execute.\n    otherData: any; // Other data of the content.\n    dataLoaded: boolean;\n    invalidateObservable: Subject<void>; // An observable to notify observers when to invalidate data.\n    jsData: any; // Data to pass to the component.\n\n    constructor(protected domUtils: CoreDomUtilsProvider, protected sitePluginsProvider: CoreSitePluginsProvider) {\n        this.onContentLoaded = new EventEmitter();\n        this.onLoadingContent = new EventEmitter();\n        this.invalidateObservable = new Subject<void>();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.fetchContent();\n    }\n\n    /**\n     * Fetches the content to render.\n     *\n     * @param {boolean} [refresh] Whether the user is refreshing.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    fetchContent(refresh?: boolean): Promise<any> {\n        this.onLoadingContent.emit(refresh);\n\n        return this.sitePluginsProvider.getContent(this.component, this.method, this.args).then((result) => {\n            this.content = result.templates.length ? result.templates[0].html : ''; // Load first template.\n            this.javascript = result.javascript;\n            this.otherData = result.otherdata;\n            this.jsData = this.sitePluginsProvider.createDataForJS(this.bootstrapResult, result);\n\n            this.onContentLoaded.emit(refresh);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'core.errorloadingcontent', true);\n        }).finally(() => {\n            this.dataLoaded = true;\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {boolean} [showSpinner] Whether to show spinner while refreshing.\n     */\n    refreshData(showSpinner?: boolean): Promise<any> {\n        if (showSpinner) {\n            this.dataLoaded = false;\n        }\n\n        this.invalidateObservable.next(); // Notify observers.\n\n        return this.sitePluginsProvider.invalidateContent(this.component, this.method, this.args).finally(() => {\n            return this.fetchContent(true);\n        });\n    }\n\n    /**\n     * Update the content, usually with a different method or params.\n     *\n     * @param {string} component New component.\n     * @param {string} method New method.\n     * @param {any} args New params.\n     */\n    updateContent(component: string, method: string, args: any): void {\n        this.component = component;\n        this.method = method;\n        this.args = args;\n        this.dataLoaded = false;\n\n        this.fetchContent();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/components/plugin-content/plugin-content.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreBytesToSizePipe } from './bytes-to-size';\nimport { CoreCreateLinksPipe } from './create-links';\nimport { CoreDateDayOrTimePipe } from './date-day-or-time';\nimport { CoreDurationPipe } from './duration';\nimport { CoreFormatDatePipe } from './format-date';\nimport { CoreNoTagsPipe } from './no-tags';\nimport { CoreSecondsToHMSPipe } from './seconds-to-hms';\nimport { CoreTimeAgoPipe } from './time-ago';\nimport { CoreToLocaleStringPipe } from './to-locale-string';\n\n@NgModule({\n    declarations: [\n        CoreBytesToSizePipe,\n        CoreCreateLinksPipe,\n        CoreDateDayOrTimePipe,\n        CoreDurationPipe,\n        CoreFormatDatePipe,\n        CoreNoTagsPipe,\n        CoreSecondsToHMSPipe,\n        CoreTimeAgoPipe,\n        CoreToLocaleStringPipe\n    ],\n    imports: [],\n    exports: [\n        CoreBytesToSizePipe,\n        CoreCreateLinksPipe,\n        CoreDateDayOrTimePipe,\n        CoreDurationPipe,\n        CoreFormatDatePipe,\n        CoreNoTagsPipe,\n        CoreSecondsToHMSPipe,\n        CoreTimeAgoPipe,\n        CoreToLocaleStringPipe\n    ]\n})\nexport class CorePipesModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/pipes.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreCourseFormatComponent } from './format/format';\nimport { CoreCourseModuleComponent } from './module/module';\nimport { CoreCourseModuleCompletionComponent } from './module-completion/module-completion';\nimport { CoreCourseModuleDescriptionComponent } from './module-description/module-description';\nimport { CoreCourseUnsupportedModuleComponent } from './unsupported-module/unsupported-module';\n\n@NgModule({\n    declarations: [\n        CoreCourseFormatComponent,\n        CoreCourseModuleComponent,\n        CoreCourseModuleCompletionComponent,\n        CoreCourseModuleDescriptionComponent,\n        CoreCourseUnsupportedModuleComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule\n    ],\n    providers: [\n    ],\n    exports: [\n        CoreCourseFormatComponent,\n        CoreCourseModuleComponent,\n        CoreCourseModuleCompletionComponent,\n        CoreCourseModuleDescriptionComponent,\n        CoreCourseUnsupportedModuleComponent\n    ],\n    entryComponents: [\n        CoreCourseUnsupportedModuleComponent\n    ]\n})\nexport class CoreCourseComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { ActionSheetController, ActionSheet, Platform } from 'ionic-angular';\nimport { MediaCapture, MediaFile } from '@ionic-native/media-capture';\nimport { Camera, CameraOptions } from '@ionic-native/camera';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider, PromiseDefer } from '@providers/utils/utils';\nimport { CoreFileUploaderProvider, CoreFileUploaderOptions } from './fileuploader';\nimport { CoreFileUploaderDelegate } from './delegate';\n\n/**\n * Helper service to upload files.\n */\n@Injectable()\nexport class CoreFileUploaderHelperProvider {\n\n    protected logger;\n    protected filePickerDeferred: PromiseDefer;\n    protected actionSheet: ActionSheet;\n\n    constructor(logger: CoreLoggerProvider, private appProvider: CoreAppProvider, private translate: TranslateService,\n            private fileUploaderProvider: CoreFileUploaderProvider, private domUtils: CoreDomUtilsProvider,\n            private textUtils: CoreTextUtilsProvider, private fileProvider: CoreFileProvider, private utils: CoreUtilsProvider,\n            private actionSheetCtrl: ActionSheetController, private uploaderDelegate: CoreFileUploaderDelegate,\n            private mediaCapture: MediaCapture, private camera: Camera, private platform: Platform) {\n        this.logger = logger.getInstance('CoreFileUploaderProvider');\n    }\n\n    /**\n     * Show a confirmation modal to the user if the size of the file is bigger than the allowed threshold.\n     *\n     * @param {number} size File size.\n     * @param {boolean} [alwaysConfirm] True to show a confirm even if the size isn't high.\n     * @param {boolean} [allowOffline] True to allow uploading in offline.\n     * @param {number} [wifiThreshold] Threshold for WiFi connection. Default: CoreFileUploaderProvider.WIFI_SIZE_WARNING.\n     * @param {number} [limitedThreshold] Threshold for limited connection. Default: CoreFileUploaderProvider.LIMITED_SIZE_WARNING.\n     * @return {Promise<void>} Promise resolved when the user confirms or if there's no need to show a modal.\n     */\n    confirmUploadFile(size: number, alwaysConfirm?: boolean, allowOffline?: boolean, wifiThreshold?: number,\n            limitedThreshold?: number): Promise<void> {\n        if (size == 0) {\n            return Promise.resolve();\n        }\n\n        if (!allowOffline && !this.appProvider.isOnline()) {\n            return Promise.reject(this.translate.instant('core.fileuploader.errormustbeonlinetoupload'));\n        }\n\n        wifiThreshold = typeof wifiThreshold == 'undefined' ? CoreFileUploaderProvider.WIFI_SIZE_WARNING : wifiThreshold;\n        limitedThreshold = typeof limitedThreshold == 'undefined' ?\n            CoreFileUploaderProvider.LIMITED_SIZE_WARNING : limitedThreshold;\n\n        if (size < 0) {\n            return this.domUtils.showConfirm(this.translate.instant('core.fileuploader.confirmuploadunknownsize'));\n        } else if (size >= wifiThreshold || (this.appProvider.isNetworkAccessLimited() && size >= limitedThreshold)) {\n            const readableSize = this.textUtils.bytesToSize(size, 2);\n\n            return this.domUtils.showConfirm(this.translate.instant('core.fileuploader.confirmuploadfile', { size: readableSize }));\n        } else if (alwaysConfirm) {\n            return this.domUtils.showConfirm(this.translate.instant('core.areyousure'));\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    /**\n     * Create a temporary copy of a file and upload it.\n     *\n     * @param {any} file File to copy and upload.\n     * @param {boolean} [upload] True if the file should be uploaded, false to return the copy of the file.\n     * @param {string} [name] Name to use when uploading the file. If not defined, use the file's name.\n     * @return {Promise<any>} Promise resolved when the file is uploaded.\n     */\n    copyAndUploadFile(file: any, upload?: boolean, name?: string): Promise<any> {\n        name = name || file.name;\n\n        const modal = this.domUtils.showModalLoading('core.fileuploader.readingfile', true);\n        let fileData;\n\n        // We have the data of the file to be uploaded, but not its URL (needed). Create a copy of the file to upload it.\n        return this.fileProvider.readFileData(file, CoreFileProvider.FORMATARRAYBUFFER).then((data) => {\n            fileData = data;\n\n            // Get unique name for the copy.\n            return this.fileProvider.getUniqueNameInFolder(CoreFileProvider.TMPFOLDER, name);\n        }).then((newName) => {\n            const filePath = this.textUtils.concatenatePaths(CoreFileProvider.TMPFOLDER, newName);\n\n            return this.fileProvider.writeFile(filePath, fileData);\n        }).catch((error) => {\n            this.logger.error('Error reading file to upload.', error);\n            modal.dismiss();\n\n            return Promise.reject(this.translate.instant('core.fileuploader.errorreadingfile'));\n        }).then((fileEntry) => {\n            modal.dismiss();\n\n            if (upload) {\n                // Pass true to delete the copy after the upload.\n                return this.uploadGenericFile(fileEntry.toURL(), name, file.type, true);\n            } else {\n                return fileEntry;\n            }\n        });\n    }\n\n    /**\n     * Copy or move a file to the app temporary folder.\n     *\n     * @param {string} path  Path of the file.\n     * @param {boolean} shouldDelete True if original file should be deleted (move), false otherwise (copy).\n     * @param {number} [maxSize] Max size of the file. If not defined or -1, no max size.\n     * @param {string} [defaultExt] Defaut extension to use if the file doesn't have any.\n     * @return {Promise<any>} Promise resolved with the copied file.\n     */\n    protected copyToTmpFolder(path: string, shouldDelete: boolean, maxSize?: number, defaultExt?: string): Promise<any> {\n        let fileName = this.fileProvider.getFileAndDirectoryFromPath(path).name,\n            promise,\n            fileTooLarge;\n\n        // Check that size isn't too large.\n        if (typeof maxSize != 'undefined' && maxSize != -1) {\n            promise = this.fileProvider.getExternalFile(path).then((fileEntry) => {\n                return this.fileProvider.getFileObjectFromFileEntry(fileEntry).then((file) => {\n                    if (file.size > maxSize) {\n                        fileTooLarge = file;\n                    }\n                });\n            }).catch(() => {\n                // Ignore failures.\n            });\n        } else {\n            promise = Promise.resolve();\n        }\n\n        return promise.then(() => {\n            if (fileTooLarge) {\n                return this.errorMaxBytes(maxSize, fileTooLarge.name);\n            }\n\n            // File isn't too large.\n            // Picking an image from album in Android adds a timestamp at the end of the file. Delete it.\n            fileName = fileName.replace(/(\\.[^\\.]*)\\?[^\\.]*$/, '$1');\n\n            // Get a unique name in the folder to prevent overriding another file.\n            return this.fileProvider.getUniqueNameInFolder(CoreFileProvider.TMPFOLDER, fileName, defaultExt);\n        }).then((newName) => {\n            // Now move or copy the file.\n            const destPath = this.textUtils.concatenatePaths(CoreFileProvider.TMPFOLDER, newName);\n            if (shouldDelete) {\n                return this.fileProvider.moveExternalFile(path, destPath);\n            } else {\n                return this.fileProvider.copyExternalFile(path, destPath);\n            }\n        });\n    }\n\n    /**\n     * Function called when trying to upload a file bigger than max size. Shows an error.\n     *\n     * @param {number} maxSize Max size (bytes).\n     * @param {string} fileName Name of the file.\n     * @return {Promise<any>} Rejected promise.\n     */\n    protected errorMaxBytes(maxSize: number, fileName: string): Promise<any> {\n        const errorMessage = this.translate.instant('core.fileuploader.maxbytesfile', {\n            $a: {\n                file: fileName,\n                size: this.textUtils.bytesToSize(maxSize, 2)\n            }\n        });\n\n        this.domUtils.showErrorModal(errorMessage);\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Function called when the file picker is closed.\n     */\n    filePickerClosed(): void {\n        if (this.filePickerDeferred) {\n            this.filePickerDeferred.reject();\n            this.filePickerDeferred = undefined;\n        }\n        // Close the action sheet if it's opened.\n        if (this.actionSheet) {\n            this.actionSheet.dismiss();\n        }\n    }\n\n    /**\n     * Function to call once a file is uploaded using the file picker.\n     *\n     * @param {any} result Result of the upload process.\n     */\n    fileUploaded(result: any): void {\n        if (this.filePickerDeferred) {\n            this.filePickerDeferred.resolve(result);\n            this.filePickerDeferred = undefined;\n        }\n        // Close the action sheet if it's opened.\n        if (this.actionSheet) {\n            this.actionSheet.dismiss();\n        }\n    }\n\n    /**\n     * Open the \"file picker\" to select and upload a file.\n     *\n     * @param {number} [maxSize] Max size of the file to upload. If not defined or -1, no max size.\n     * @param {string} [title] File picker title.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {Promise<any>} Promise resolved when a file is uploaded, rejected if file picker is closed without a file uploaded.\n     *                        The resolve value is the response of the upload request.\n     */\n    selectAndUploadFile(maxSize?: number, title?: string, mimetypes?: string[]): Promise<any> {\n        return this.selectFileWithPicker(maxSize, false, title, mimetypes, true);\n    }\n\n    /**\n     * Open the \"file picker\" to select a file without uploading it.\n     *\n     * @param {number} [maxSize] Max size of the file. If not defined or -1, no max size.\n     * @param {boolean} [allowOffline] True to allow selecting in offline, false to require connection.\n     * @param {string} [title] File picker title.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {Promise<any>} Promise resolved when a file is selected, rejected if file picker is closed without selecting a file.\n     *                        The resolve value is the FileEntry of a copy of the picked file, so it can be deleted afterwards.\n     */\n    selectFile(maxSize?: number, allowOffline?: boolean, title?: string, mimetypes?: string[])\n            : Promise<any> {\n        return this.selectFileWithPicker(maxSize, allowOffline, title, mimetypes, false);\n    }\n\n    /**\n     * Open the \"file picker\" to select a file and maybe uploading it.\n     *\n     * @param {number} [maxSize] Max size of the file. If not defined or -1, no max size.\n     * @param {boolean} [allowOffline] True to allow selecting in offline, false to require connection.\n     * @param {string} [title] File picker title.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @param {boolean} [upload] Whether the file should be uploaded.\n     * @return {Promise<any>} Promise resolved when a file is selected/uploaded, rejected if file picker is closed.\n     */\n    protected selectFileWithPicker(maxSize?: number, allowOffline?: boolean, title?: string, mimetypes?: string[],\n            upload?: boolean): Promise<any> {\n        // Create the cancel button and get the handlers to upload the file.\n        const buttons: any[] = [{\n                text: this.translate.instant('core.cancel'),\n                role: 'cancel',\n                handler: (): void => {\n                    // User cancelled the action sheet.\n                    this.filePickerClosed();\n                }\n            }],\n            handlers = this.uploaderDelegate.getHandlers(mimetypes);\n\n        this.filePickerDeferred = this.utils.promiseDefer();\n\n        // Sort the handlers by priority.\n        handlers.sort((a, b) => {\n            return a.priority <= b.priority ? 1 : -1;\n        });\n\n        // Create a button for each handler.\n        handlers.forEach((handler) => {\n            buttons.push({\n                text: this.translate.instant(handler.title),\n                icon: handler.icon,\n                cssClass: handler.class,\n                handler: (): boolean => {\n                    if (!handler.action) {\n                        // Nothing to do.\n                        return false;\n                    }\n\n                    if (!allowOffline && !this.appProvider.isOnline()) {\n                        // Not allowed, show error.\n                        this.domUtils.showErrorModal('core.fileuploader.errormustbeonlinetoupload', true);\n\n                        return false;\n                    }\n\n                    handler.action(maxSize, upload, allowOffline, handler.mimetypes).then((data) => {\n                        if (data.treated) {\n                            // The handler already treated the file. Return the result.\n                            return data.result;\n                        } else {\n                            // The handler didn't treat the file, we need to do it.\n                            if (data.fileEntry) {\n                                // The handler provided us a fileEntry, use it.\n                                return this.uploadFileEntry(data.fileEntry, data.delete, maxSize, upload, allowOffline);\n                            } else if (data.path) {\n                                // The handler provided a path. First treat it like it's a relative path.\n                                return this.fileProvider.getFile(data.path).catch(() => {\n                                    // File not found, it's probably an absolute path.\n                                    return this.fileProvider.getExternalFile(data.path);\n                                }).then((fileEntry) => {\n                                    // File found, treat it.\n                                    return this.uploadFileEntry(fileEntry, data.delete, maxSize, upload, allowOffline);\n                                });\n                            }\n\n                            // Nothing received, fail.\n                            return Promise.reject('No file received');\n                        }\n                    }).then((result) => {\n                        // Success uploading or picking, return the result.\n                        this.fileUploaded(result);\n                    }).catch((error) => {\n                        if (error) {\n                            this.domUtils.showErrorModal(error);\n                        }\n                    });\n\n                    // Do not close the action sheet, it will be closed if success.\n                    return false;\n                }\n            });\n        });\n\n        this.actionSheet = this.actionSheetCtrl.create({\n            title: title ? title : this.translate.instant('core.fileuploader.' + (upload ? 'uploadafile' : 'selectafile')),\n            buttons: buttons\n        });\n        this.actionSheet.present();\n\n        // Call afterRender for each button.\n        setTimeout(() => {\n            handlers.forEach((handler) => {\n                if (handler.afterRender) {\n                    handler.afterRender(maxSize, upload, allowOffline, handler.mimetypes);\n                }\n            });\n        }, 500);\n\n        return this.filePickerDeferred.promise;\n    }\n\n    /**\n     * Convenience function to upload a file on a certain site, showing a confirm if needed.\n     *\n     * @param {any} fileEntry FileEntry of the file to upload.\n     * @param {boolean} [deleteAfterUpload] Whether the file should be deleted after upload.\n     * @param {string} [siteId] Id of the site to upload the file to. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the file is uploaded.\n     */\n    showConfirmAndUploadInSite(fileEntry: any, deleteAfterUpload?: boolean, siteId?: string): Promise<void> {\n        return this.fileProvider.getFileObjectFromFileEntry(fileEntry).then((file) => {\n            return this.confirmUploadFile(file.size).then(() => {\n                return this.uploadGenericFile(fileEntry.toURL(), file.name, file.type, deleteAfterUpload, siteId).then(() => {\n                    this.domUtils.showToast('core.fileuploader.fileuploaded', true, undefined, 'core-toast-success');\n                });\n            }).catch((err) => {\n                if (err) {\n                    this.domUtils.showErrorModal(err);\n                }\n\n                return Promise.reject(null);\n            });\n        }, () => {\n            this.domUtils.showErrorModal('core.fileuploader.errorreadingfile', true);\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Treat a capture audio/video error.\n     *\n     * @param {any} error Error returned by the Cordova plugin. Can be a string or an object.\n     * @param {string} defaultMessage Key of the default message to show.\n     * @return {Promise<any>} Rejected promise. If it doesn't have an error message it means it was cancelled.\n     */\n    protected treatCaptureError(error: any, defaultMessage: string): Promise<any> {\n        // Cancelled or error. If cancelled, error is an object with code = 3.\n        if (error) {\n            if (typeof error === 'string') {\n                this.logger.error('Error while recording audio/video: ' + error);\n                if (error.indexOf('No Activity found') > -1) {\n                    // User doesn't have an app to do this.\n                    return Promise.reject(this.translate.instant('core.fileuploader.errornoapp'));\n                } else {\n                    return Promise.reject(this.translate.instant(defaultMessage));\n                }\n            } else {\n                if (error.code != 3) {\n                    // Error, not cancelled.\n                    this.logger.error('Error while recording audio/video', error);\n\n                    return Promise.reject(this.translate.instant(defaultMessage));\n                } else {\n                    this.logger.debug('Cancelled');\n                }\n            }\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Treat a capture image or browse album error.\n     *\n     * @param {string} error Error returned by the Cordova plugin.\n     * @param {string} defaultMessage Key of the default message to show.\n     * @return {Promise<any>} Rejected promise. If it doesn't have an error message it means it was cancelled.\n     */\n    protected treatImageError(error: string, defaultMessage: string): Promise<any> {\n        // Cancelled or error.\n        if (error) {\n            if (typeof error == 'string') {\n                if (error.toLowerCase().indexOf('error') > -1 || error.toLowerCase().indexOf('unable') > -1) {\n                    this.logger.error('Error getting image: ' + error);\n\n                    return Promise.reject(error);\n                } else {\n                    // User cancelled.\n                    this.logger.debug('Cancelled');\n                }\n            } else {\n                return Promise.reject(this.translate.instant(defaultMessage));\n            }\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Convenient helper for the user to record and upload a video.\n     *\n     * @param {boolean} isAudio True if uploading an audio, false if it's a video.\n     * @param {number} maxSize Max size of the upload. -1 for no max size.\n     * @param {boolean} [upload] True if the file should be uploaded, false to return the picked file.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    uploadAudioOrVideo(isAudio: boolean, maxSize: number, upload?: boolean, mimetypes?: string[]): Promise<any> {\n        this.logger.debug('Trying to record a video file');\n\n        const options = { limit: 1, mimetypes: mimetypes },\n            promise = isAudio ? this.mediaCapture.captureAudio(options) : this.mediaCapture.captureVideo(options);\n\n        // The mimetypes param is only for desktop apps, the Cordova plugin doesn't support it.\n        return promise.then((medias) => {\n            // We used limit 1, we only want 1 media.\n            const media: MediaFile = medias[0],\n                path = media.fullPath,\n                error = this.fileUploaderProvider.isInvalidMimetype(mimetypes, path); // Verify that the mimetype is supported.\n\n            if (error) {\n                return Promise.reject(error);\n            }\n\n            if (upload) {\n                return this.uploadFile(path, maxSize, true, this.fileUploaderProvider.getMediaUploadOptions(media));\n            } else {\n                // Copy or move the file to our temporary folder.\n                return this.copyToTmpFolder(path, true, maxSize);\n            }\n        }, (error) => {\n            const defaultError = isAudio ? 'core.fileuploader.errorcapturingaudio' : 'core.fileuploader.errorcapturingvideo';\n\n            return this.treatCaptureError(error, defaultError);\n        });\n    }\n\n    /**\n     * Uploads a file of any type.\n     * This function will not check the size of the file, please check it before calling this function.\n     *\n     * @param {string} uri File URI.\n     * @param {string} name File name.\n     * @param {string} type File type.\n     * @param {boolean} [deleteAfterUpload] Whether the file should be deleted after upload.\n     * @param {string} [siteId] Id of the site to upload the file to. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the file is uploaded.\n     */\n    uploadGenericFile(uri: string, name: string, type: string, deleteAfterUpload?: boolean, siteId?: string): Promise<any> {\n        const options = this.fileUploaderProvider.getFileUploadOptions(uri, name, type, deleteAfterUpload);\n\n        return this.uploadFile(uri, -1, false, options, siteId);\n    }\n\n    /**\n     * Convenient helper for the user to upload an image, either from the album or taking it with the camera.\n     *\n     * @param {boolean} fromAlbum True if the image should be selected from album, false if it should be taken with camera.\n     * @param {number} maxSize Max size of the upload. -1 for no max size.\n     * @param {boolean} [upload] True if the file should be uploaded, false to return the picked file.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    uploadImage(fromAlbum: boolean, maxSize: number, upload?: boolean, mimetypes?: string[]): Promise<any> {\n        this.logger.debug('Trying to capture an image with camera');\n\n        const options: CameraOptions = {\n            quality: 50,\n            destinationType: this.camera.DestinationType.FILE_URI,\n            correctOrientation: true\n        };\n\n        if (fromAlbum) {\n            const imageSupported = !mimetypes || this.utils.indexOfRegexp(mimetypes, /^image\\//) > -1,\n                videoSupported = !mimetypes || this.utils.indexOfRegexp(mimetypes, /^video\\//) > -1;\n\n            options.sourceType = this.camera.PictureSourceType.PHOTOLIBRARY;\n            options.popoverOptions = {\n                x: 10,\n                y: 10,\n                width: this.platform.width() - 200,\n                height: this.platform.height() - 200,\n                arrowDir: this.camera.PopoverArrowDirection.ARROW_ANY\n            };\n\n            // Determine the mediaType based on the mimetypes.\n            if (imageSupported && !videoSupported) {\n                options.mediaType = this.camera.MediaType.PICTURE;\n            } else if (!imageSupported && videoSupported) {\n                options.mediaType = this.camera.MediaType.VIDEO;\n            } else if (this.platform.is('ios')) {\n                // Only get all media in iOS because in Android using this option allows uploading any kind of file.\n                options.mediaType = this.camera.MediaType.ALLMEDIA;\n            }\n        } else if (mimetypes) {\n            if (mimetypes.indexOf('image/jpeg') > -1) {\n                options.encodingType = this.camera.EncodingType.JPEG;\n            } else if (mimetypes.indexOf('image/png') > -1) {\n                options.encodingType = this.camera.EncodingType.PNG;\n            }\n        }\n\n        return this.camera.getPicture(options).then((path) => {\n            const error = this.fileUploaderProvider.isInvalidMimetype(mimetypes, path); // Verify that the mimetype is supported.\n            if (error) {\n                return Promise.reject(error);\n            }\n\n            if (upload) {\n                return this.uploadFile(path, maxSize, true, this.fileUploaderProvider.getCameraUploadOptions(path, fromAlbum));\n            } else {\n                // Copy or move the file to our temporary folder.\n                return this.copyToTmpFolder(path, !fromAlbum, maxSize, 'jpg');\n            }\n        }, (error) => {\n            const defaultError = fromAlbum ? 'core.fileuploader.errorgettingimagealbum' : 'core.fileuploader.errorcapturingimage';\n\n            return this.treatImageError(error, defaultError);\n        });\n    }\n\n    /**\n     * Upload a file given the file entry.\n     *\n     * @param {any} fileEntry The file entry.\n     * @param {boolean} deleteAfter True if the file should be deleted once treated.\n     * @param {number} [maxSize] Max size of the file. If not defined or -1, no max size.\n     * @param {boolean} [upload] True if the file should be uploaded, false to return the picked file.\n     * @param {boolean} [allowOffline] True to allow selecting in offline, false to require connection.\n     * @param {string} [name] Name to use when uploading the file. If not defined, use the file's name.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    uploadFileEntry(fileEntry: any, deleteAfter: boolean, maxSize?: number, upload?: boolean, allowOffline?: boolean,\n            name?: string): Promise<any> {\n        return this.fileProvider.getFileObjectFromFileEntry(fileEntry).then((file) => {\n            return this.uploadFileObject(file, maxSize, upload, allowOffline, name).then((result) => {\n                if (deleteAfter) {\n                    // We have uploaded and deleted a copy of the file. Now delete the original one.\n                    this.fileProvider.removeFileByFileEntry(fileEntry);\n                }\n\n                return result;\n            });\n        });\n    }\n\n    /**\n     * Upload a file given the file object.\n     *\n     * @param {any} file The file object.\n     * @param {number} [maxSize] Max size of the file. If not defined or -1, no max size.\n     * @param {boolean} [upload] True if the file should be uploaded, false to return the picked file.\n     * @param {boolean} [allowOffline] True to allow selecting in offline, false to require connection.\n     * @param {string} [name] Name to use when uploading the file. If not defined, use the file's name.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    uploadFileObject(file: any, maxSize?: number, upload?: boolean, allowOffline?: boolean, name?: string): Promise<any> {\n        if (maxSize != -1 && file.size > maxSize) {\n            return this.errorMaxBytes(maxSize, file.name);\n        }\n\n        return this.confirmUploadFile(file.size, false, allowOffline).then(() => {\n            // We have the data of the file to be uploaded, but not its URL (needed). Create a copy of the file to upload it.\n            return this.copyAndUploadFile(file, upload, name);\n        });\n    }\n\n    /**\n     * Convenience function to upload a file, allowing to retry if it fails.\n     *\n     * @param {string} path Absolute path of the file to upload.\n     * @param {number} maxSize Max size of the upload. -1 for no max size.\n     * @param {boolean} checkSize True to check size.\n     * @param {CoreFileUploaderOptions} Options.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved if the file is uploaded, rejected otherwise.\n     */\n    protected uploadFile(path: string, maxSize: number, checkSize: boolean, options: CoreFileUploaderOptions, siteId?: string)\n            : Promise<any> {\n\n        const errorStr = this.translate.instant('core.error'),\n            retryStr = this.translate.instant('core.retry'),\n            uploadingStr = this.translate.instant('core.fileuploader.uploading'),\n            errorUploading = (error): Promise<any> => {\n                // Allow the user to retry.\n                return this.domUtils.showConfirm(error, errorStr, retryStr).then(() => {\n                    // Try again.\n                    return this.uploadFile(path, maxSize, checkSize, options, siteId);\n                }, () => {\n                    // User cancelled. Delete the file if needed.\n                    if (options.deleteAfterUpload) {\n                        this.fileProvider.removeExternalFile(path);\n                    }\n\n                    return Promise.reject(null);\n                });\n            };\n\n        let promise,\n            file;\n\n        if (!this.appProvider.isOnline()) {\n            return errorUploading(this.translate.instant('core.fileuploader.errormustbeonlinetoupload'));\n        }\n\n        if (checkSize) {\n            // Check that file size is the right one.\n            promise = this.fileProvider.getExternalFile(path).then((fileEntry) => {\n                return this.fileProvider.getFileObjectFromFileEntry(fileEntry).then((f) => {\n                    file = f;\n\n                    return file.size;\n                });\n            }).catch(() => {\n                // Ignore failures.\n            });\n        } else {\n            promise = Promise.resolve(0);\n        }\n\n        return promise.then((size) => {\n            if (maxSize != -1 && size > maxSize) {\n                return this.errorMaxBytes(maxSize, file.name);\n            }\n\n            if (size > 0) {\n                return this.confirmUploadFile(size);\n            }\n        }).then(() => {\n            // File isn't too large and user confirmed, let's upload.\n            const modal = this.domUtils.showModalLoading(uploadingStr);\n\n            return this.fileUploaderProvider.uploadFile(path, options, (progress: ProgressEvent) => {\n                // Progress uploading.\n                if (progress && progress.lengthComputable) {\n                    const perc = Math.min((progress.loaded / progress.total) * 100, 100);\n                    if (perc >= 0) {\n                        modal.setContent(this.translate.instant('core.fileuploader.uploadingperc', { $a: perc.toFixed(1) }));\n                        if (modal._cmp && modal._cmp.changeDetectorRef) {\n                            // Force a change detection, otherwise the content is not updated.\n                            modal._cmp.changeDetectorRef.detectChanges();\n                        }\n                    }\n                }\n            }, siteId).catch((error) => {\n                this.logger.error('Error uploading file.', error);\n\n                modal.dismiss();\n                if (typeof error != 'string') {\n                    error = this.translate.instant('core.fileuploader.errorwhileuploading');\n                }\n\n                return errorUploading(error);\n            }).finally(() => {\n                modal.dismiss();\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { Globalization } from '@ionic-native/globalization';\nimport { Platform } from 'ionic-angular';\nimport { CoreConfigProvider } from './config';\nimport { CoreConfigConstants } from '../configconstants';\n\n/*\n * Service to handle language features, like changing the current language.\n*/\n@Injectable()\nexport class CoreLangProvider {\n    protected fallbackLanguage = CoreConfigConstants.default_lang || 'en';\n    protected currentLanguage: string; // Save current language in a variable to speed up the get function.\n    protected customStrings = {}; // Strings defined using the admin tool.\n    protected customStringsRaw: string;\n    protected sitePluginsStrings = {}; // Strings defined by site plugins.\n\n    constructor(private translate: TranslateService, private configProvider: CoreConfigProvider, platform: Platform,\n            private globalization: Globalization) {\n        // Set fallback language and language to use until the app determines the right language to use.\n        translate.setDefaultLang(this.fallbackLanguage);\n        translate.use(this.fallbackLanguage);\n\n        platform.ready().then(() => {\n            this.getCurrentLanguage().then((language) => {\n                translate.use(language);\n                moment.locale(language);\n            });\n        });\n    }\n\n    /**\n     * Add a set of site plugins strings for a certain language.\n     *\n     * @param {string} lang The language where to add the strings.\n     * @param {any} strings Object with the strings to add.\n     * @param {string} [prefix] A prefix to add to all keys.\n     */\n    addSitePluginsStrings(lang: string, strings: any, prefix?: string): void {\n        // Initialize structures if they don't exist.\n        if (!this.sitePluginsStrings[lang]) {\n            this.sitePluginsStrings[lang] = {};\n        }\n        if (!this.translate.translations[lang]) {\n            this.translate.translations[lang] = {};\n        }\n\n        for (const key in strings) {\n            const prefixedKey = prefix + key;\n            let value = strings[key];\n\n            if (this.customStrings[lang] && this.customStrings[lang][prefixedKey]) {\n                // This string is overridden by a custom string, ignore it.\n                continue;\n            }\n\n            // Add another curly bracket to string params ({$a} -> {{$a}}).\n            value = value.replace(/{([^ ]+)}/gm, '{{$1}}');\n            // Make sure we didn't add to many brackets in some case.\n            value = value.replace(/{{{([^ ]+)}}}/gm, '{{$1}}');\n\n            if (!this.sitePluginsStrings[lang][prefixedKey]) {\n                // It's a new site plugin string. Store the original value.\n                this.sitePluginsStrings[lang][prefixedKey] = {\n                    original: this.translate.translations[lang][prefixedKey],\n                    value: value\n                };\n            } else {\n                // Site plugin string already defined. Store the new value.\n                this.sitePluginsStrings[lang][prefixedKey].value = value;\n            }\n\n            // Store the string in the translations table.\n            this.translate.translations[lang][prefixedKey] = value;\n        }\n    }\n\n    /**\n     * Change current language.\n     *\n     * @param {string} language New language to use.\n     * @return {Promise<any>} Promise resolved when the change is finished.\n     */\n    changeCurrentLanguage(language: string): Promise<any> {\n        const promises = [];\n\n        promises.push(this.translate.use(language));\n        promises.push(this.configProvider.set('current_language', language));\n\n        moment.locale(language);\n        this.currentLanguage = language;\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Clear current custom strings.\n     */\n    clearCustomStrings(): void {\n        this.unloadStrings(this.customStrings);\n        this.customStrings = {};\n        this.customStringsRaw = '';\n    }\n\n    /**\n     * Clear current site plugins strings.\n     */\n    clearSitePluginsStrings(): void {\n        this.unloadStrings(this.sitePluginsStrings);\n        this.sitePluginsStrings = {};\n    }\n\n    /**\n     * Get all current custom strings.\n     *\n     * @return {any} Custom strings.\n     */\n    getAllCustomStrings(): any {\n        return this.customStrings;\n    }\n\n    /**\n     * Get all current site plugins strings.\n     *\n     * @return {any} Site plugins strings.\n     */\n    getAllSitePluginsStrings(): any {\n        return this.sitePluginsStrings;\n    }\n\n    /**\n     * Get current language.\n     *\n     * @return {Promise<string>} Promise resolved with the current language.\n     */\n    getCurrentLanguage(): Promise<string> {\n\n        if (typeof this.currentLanguage != 'undefined') {\n            return Promise.resolve(this.currentLanguage);\n        }\n\n        // Get current language from config (user might have changed it).\n        return this.configProvider.get('current_language').then((language) => {\n            return language;\n        }).catch(() => {\n            // User hasn't defined a language. If default language is forced, use it.\n            if (!CoreConfigConstants.forcedefaultlanguage) {\n                return CoreConfigConstants.default_lang;\n            }\n\n            try {\n                // No forced language, try to get current language from cordova globalization.\n                return this.globalization.getPreferredLanguage().then((result) => {\n                    let language = result.value.toLowerCase();\n                    if (language.indexOf('-') > -1) {\n                        // Language code defined by locale has a dash, like en-US or es-ES. Check if it's supported.\n                        if (CoreConfigConstants.languages && typeof CoreConfigConstants.languages[language] == 'undefined') {\n                            // Code is NOT supported. Fallback to language without dash. E.g. 'en-US' would fallback to 'en'.\n                            language = language.substr(0, language.indexOf('-'));\n\n                        }\n                    }\n\n                    return language;\n                }).catch(() => {\n                    // Error getting locale. Use default language.\n                    return this.fallbackLanguage;\n                });\n            } catch (err) {\n                // Error getting locale. Use default language.\n                return Promise.resolve(this.fallbackLanguage);\n            }\n        }).then((language) => {\n            this.currentLanguage = language; // Save it for later.\n\n            return language;\n        });\n    }\n\n    /**\n     * Load certain custom strings.\n     *\n     * @param {string} strings Custom strings to load (tool_mobile_customlangstrings).\n     */\n    loadCustomStrings(strings: string): void {\n        if (strings == this.customStringsRaw) {\n            // Strings haven't changed, stop.\n            return;\n        }\n\n        // Reset current values.\n        this.clearCustomStrings();\n\n        if (!strings) {\n            return;\n        }\n\n        const list: string[] = strings.split(/(?:\\r\\n|\\r|\\n)/);\n        list.forEach((entry: string) => {\n            const values: string[] = entry.split('|');\n            let lang: string;\n\n            if (values.length < 3) {\n                // Not enough data, ignore the entry.\n                return;\n            }\n\n            lang = values[2];\n\n            if (!this.customStrings[lang]) {\n                this.customStrings[lang] = {};\n            }\n\n            // Store the original value of the custom string.\n            this.customStrings[lang][values[0]] = {\n                original: this.translate.translations[lang][values[0]],\n                value: values[1]\n            };\n\n            // Store the string in the translations table.\n            this.translate.translations[lang][values[0]] = values[1];\n        });\n    }\n\n    /**\n     * Unload custom or site plugin strings, removing them from the translations table.\n     *\n     * @param {any} strings Strings to unload.\n     */\n    protected unloadStrings(strings: any): void {\n        // Iterate over all languages and strings.\n        for (const lang in strings) {\n            const langStrings = strings[lang];\n            for (const key in langStrings) {\n                const entry = langStrings[key];\n                if (entry.original) {\n                    // The string had a value, restore it.\n                    this.translate.translations[lang][key] = entry.original;\n                } else {\n                    // The string didn't exist, delete it.\n                    delete this.translate.translations[lang][key];\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/lang.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreContentLinksAction } from '../providers/delegate';\nimport { CoreContentLinksHandlerBase } from './base-handler';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\n\n/**\n * Handler to handle URLs pointing to the index of a module.\n */\nexport class CoreContentLinksModuleIndexHandler extends CoreContentLinksHandlerBase {\n\n    /**\n     * Construct the handler.\n     *\n     * @param {CoreCourseHelperProvider} courseHelper The CoreCourseHelperProvider instance.\n     * @param {string} addon Name of the addon as it's registered in course delegate. It'll be used to check if it's disabled.\n     * @param {string} modName Name of the module (assign, book, ...).\n     */\n    constructor(protected courseHelper: CoreCourseHelperProvider, public addon: string, public modName: string) {\n        super();\n\n        // Match the view.php URL with an id param.\n        this.pattern = new RegExp('\\/mod\\/' + modName + '\\/view\\.php.*([\\&\\?]id=\\\\d+)');\n        this.featureName = '$mmCourseDelegate_' + addon;\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n\n        courseId = courseId || params.courseid || params.cid;\n\n        return [{\n            action: (siteId, navCtrl?): void => {\n                this.courseHelper.navigateToModule(parseInt(params.id, 10), siteId, courseId);\n            }\n        }];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/contentlinks/classes/module-index-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider, PromiseDefer } from '@providers/utils/utils';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreCourseProvider } from './course';\n\n/**\n * Interface that all course options handlers must implement.\n */\nexport interface CoreCourseOptionsHandler extends CoreDelegateHandler {\n    /**\n     * The highest priority is displayed first.\n     * @type {number}\n     */\n    priority: number;\n\n    /**\n     * Whether or not the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} accessData Access type and data. Default, guest, ...\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabledForCourse(courseId: number, accessData: any, navOptions?: any, admOptions?: any): boolean | Promise<boolean>;\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @param {Injector} injector Injector.\n     * @param {number} courseId The course ID.\n     * @return {CoreCourseOptionsHandlerData|Promise<CoreCourseOptionsHandlerData>} Data or promise resolved with the data.\n     */\n    getDisplayData?(injector: Injector, courseId: number): CoreCourseOptionsHandlerData | Promise<CoreCourseOptionsHandlerData>;\n\n    /**\n     * Should invalidate the data to determine if the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    invalidateEnabledForCourse?(courseId: number, navOptions?: any, admOptions?: any): Promise<any>;\n\n    /**\n     * Called when a course is downloaded. It should prefetch all the data to be able to see the addon in offline.\n     *\n     * @param {any} course The course.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    prefetch?(course: any): Promise<any>;\n}\n\n/**\n * Data needed to render a course handler. It's returned by the handler.\n */\nexport interface CoreCourseOptionsHandlerData {\n    /**\n     * Title to display for the handler.\n     * @type {string}\n     */\n    title: string;\n\n    /**\n     * Class to add to the displayed handler.\n     * @type {string}\n     */\n    class?: string;\n\n    /**\n     * The component to render the handler. It must be the component class, not the name or an instance.\n     * When the component is created, it will receive the courseId as input.\n     */\n    component: any;\n\n    /**\n     * Data to pass to the component. All the properties in this object will be passed to the component as inputs.\n     * @type {any}\n     */\n    componentData?: any;\n}\n\n/**\n * Data returned by the delegate for each handler.\n */\nexport interface CoreCourseOptionsHandlerToDisplay {\n    /**\n     * Data to display.\n     * @type {CoreCourseOptionsHandlerData}\n     */\n    data: CoreCourseOptionsHandlerData;\n\n    /**\n     * The highest priority is displayed first.\n     * @type {number}\n     */\n    priority?: number;\n\n    /**\n     * Called when a course is downloaded. It should prefetch all the data to be able to see the addon in offline.\n     *\n     * @param {any} course The course.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    prefetch?(course: any): Promise<any>;\n}\n\n/**\n * Service to interact with plugins to be shown in each course (participants, learning plans, ...).\n */\n@Injectable()\nexport class CoreCourseOptionsDelegate extends CoreDelegate {\n    protected handlers: { [s: string]: CoreCourseOptionsHandler } = {}; // All registered handlers.\n    protected enabledHandlers: { [s: string]: CoreCourseOptionsHandler } = {}; // Handlers enabled for the current site.\n    protected loaded: { [courseId: number]: boolean } = {};\n    protected lastUpdateHandlersForCoursesStart: any = {};\n    protected coursesHandlers: {\n        [courseId: number]: {\n            access?: any, navOptions?: any, admOptions?: any, deferred?: PromiseDefer, enabledHandlers?: CoreCourseOptionsHandler[]\n        }\n    } = {};\n\n    protected featurePrefix = '$mmCoursesDelegate_';\n\n    constructor(loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider, private utils: CoreUtilsProvider,\n            protected eventsProvider: CoreEventsProvider, private coursesProvider: CoreCoursesProvider) {\n        super('CoreCourseOptionsDelegate', loggerProvider, sitesProvider, eventsProvider);\n\n        eventsProvider.on(CoreEventsProvider.LOGOUT, () => {\n            this.clearCoursesHandlers();\n        });\n    }\n\n    /**\n     * Check if handlers are loaded for a certain course.\n     *\n     * @param {number} courseId The course ID to check.\n     * @return {boolean} True if handlers are loaded, false otherwise.\n     */\n    areHandlersLoaded(courseId: number): boolean {\n        return !!this.loaded[courseId];\n    }\n\n    /**\n     * Clear all course options handlers.\n     *\n     * @param {number} [courseId] The course ID. If not defined, all handlers will be cleared.\n     */\n    protected clearCoursesHandlers(courseId?: number): void {\n        if (courseId) {\n            this.loaded[courseId] = false;\n            delete this.coursesHandlers[courseId];\n        } else {\n            this.loaded = {};\n            this.coursesHandlers = {};\n        }\n    }\n\n    /**\n     * Clear all courses handlers and invalidate its options.\n     *\n     * @param {number} [courseId] The course ID. If not defined, all handlers will be cleared.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    clearAndInvalidateCoursesOptions(courseId?: number): Promise<any> {\n        const promises = [];\n\n        this.eventsProvider.trigger(CoreCoursesProvider.EVENT_MY_COURSES_REFRESHED);\n\n        // Invalidate course enabled data for the handlers that are enabled at site level.\n        if (courseId) {\n            // Invalidate only options for this course.\n            promises.push(this.coursesProvider.invalidateCoursesAdminAndNavOptions([courseId]));\n            promises.push(this.invalidateCourseHandlers(courseId));\n        } else {\n            // Invalidate all options.\n            promises.push(this.coursesProvider.invalidateUserNavigationOptions());\n            promises.push(this.coursesProvider.invalidateUserAdministrationOptions());\n\n            for (const cId in this.coursesHandlers) {\n                promises.push(this.invalidateCourseHandlers(parseInt(cId, 10)));\n            }\n        }\n\n        this.clearCoursesHandlers(courseId);\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Get the handlers for a course using a certain access type.\n     *\n     * @param {number} courseId The course ID.\n     * @param {boolean} refresh True if it should refresh the list.\n     * @param {any} accessData Access type and data. Default, guest, ...\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<CoreCourseOptionsHandler[]>} Promise resolved with array of handlers.\n     */\n    protected getHandlersForAccess(courseId: number, refresh: boolean, accessData: any, navOptions?: any,\n            admOptions?: any): Promise<CoreCourseOptionsHandler[]> {\n\n        // If the handlers aren't loaded, do not refresh.\n        if (!this.loaded[courseId]) {\n            refresh = false;\n        }\n\n        if (refresh || !this.coursesHandlers[courseId] || this.coursesHandlers[courseId].access.type != accessData.type) {\n            if (!this.coursesHandlers[courseId]) {\n                this.coursesHandlers[courseId] = {};\n            }\n            this.coursesHandlers[courseId].access = accessData;\n            this.coursesHandlers[courseId].navOptions = navOptions;\n            this.coursesHandlers[courseId].admOptions = admOptions;\n            this.coursesHandlers[courseId].deferred = this.utils.promiseDefer();\n            this.updateHandlersForCourse(courseId, accessData, navOptions, admOptions);\n        }\n\n        return this.coursesHandlers[courseId].deferred.promise.then(() => {\n            return this.coursesHandlers[courseId].enabledHandlers;\n        });\n    }\n\n    /**\n     * Get the list of handlers that should be displayed for a course.\n     * This function should be called only when the handlers need to be displayed, since it can call several WebServices.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course object.\n     * @param {boolean} [refresh] True if it should refresh the list.\n     * @param {boolean} [isGuest] Whether it's guest.\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<CoreCourseOptionsHandlerToDisplay[]>} Promise resolved with array of handlers.\n     */\n    getHandlersToDisplay(injector: Injector, course: any, refresh?: boolean, isGuest?: boolean, navOptions?: any, admOptions?: any):\n            Promise<CoreCourseOptionsHandlerToDisplay[]> {\n        course.id = parseInt(course.id, 10);\n\n        const accessData = {\n            type: isGuest ? CoreCourseProvider.ACCESS_GUEST : CoreCourseProvider.ACCESS_DEFAULT\n        };\n\n        if (navOptions) {\n            course.navOptions = navOptions;\n        }\n        if (admOptions) {\n            course.admOptions = admOptions;\n        }\n\n        return this.loadCourseOptions(course, refresh).then(() => {\n            // Call getHandlersForAccess to make sure the handlers have been loaded.\n            return this.getHandlersForAccess(course.id, refresh, accessData, course.navOptions, course.admOptions);\n        }).then(() => {\n            const handlersToDisplay: CoreCourseOptionsHandlerToDisplay[] = [],\n                promises = [];\n\n            this.coursesHandlers[course.id].enabledHandlers.forEach((handler) => {\n                promises.push(Promise.resolve(handler.getDisplayData(injector, course)).then((data) => {\n                    handlersToDisplay.push({\n                        data: data,\n                        priority: handler.priority,\n                        prefetch: handler.prefetch\n                    });\n                }).catch((err) => {\n                    this.logger.error('Error getting data for handler', handler.name, err);\n                }));\n            });\n\n            // Sort them by priority.\n            handlersToDisplay.sort((a, b) => {\n                return b.priority - a.priority;\n            });\n\n            return handlersToDisplay;\n        });\n    }\n\n    /**\n     * Check if a course has any handler enabled for default access, using course object.\n     *\n     * @param {any} course The course object.\n     * @param {boolean} [refresh] True if it should refresh the list.\n     * @return {Promise<boolean>} Promise resolved with boolean: true if it has handlers, false otherwise.\n     */\n    hasHandlersForCourse(course: any, refresh?: boolean): Promise<boolean> {\n        // Load course options if missing.\n        return this.loadCourseOptions(course, refresh).then(() => {\n            return this.hasHandlersForDefault(course.id, refresh, course.navOptions, course.admOptions);\n        });\n    }\n\n    /**\n     * Check if a course has any handler enabled for default access.\n     *\n     * @param {number} courseId The course ID.\n     * @param {boolean} [refresh] True if it should refresh the list.\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<boolean>} Promise resolved with boolean: true if it has handlers, false otherwise.\n     */\n    hasHandlersForDefault(courseId: number, refresh?: boolean, navOptions?: any, admOptions?: any): Promise<boolean> {\n        // Default access.\n        const accessData = {\n            type: CoreCourseProvider.ACCESS_DEFAULT\n        };\n\n        return this.getHandlersForAccess(courseId, refresh, accessData, navOptions, admOptions).then((handlers) => {\n            return !!(handlers && handlers.length);\n        });\n    }\n\n    /**\n     * Check if a course has any handler enabled for guest access.\n     *\n     * @param {number} courseId The course ID.\n     * @param {boolean} [refresh] True if it should refresh the list.\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<boolean>} Promise resolved with boolean: true if it has handlers, false otherwise.\n     */\n    hasHandlersForGuest(courseId: number, refresh?: boolean, navOptions?: any, admOptions?: any): Promise<boolean> {\n        // Guest access.\n        const accessData = {\n            type: CoreCourseProvider.ACCESS_GUEST\n        };\n\n        return this.getHandlersForAccess(courseId, refresh, accessData, navOptions, admOptions).then((handlers) => {\n            return !!(handlers && handlers.length);\n        });\n    }\n\n    /**\n     * Invalidate the data to be able to determine if handlers are enabled for a certain course.\n     *\n     * @param {number} courseId Course ID.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    invalidateCourseHandlers(courseId: number): Promise<any> {\n        const promises = [],\n            courseData = this.coursesHandlers[courseId];\n\n        if (!courseData) {\n            return Promise.resolve();\n        }\n\n        courseData.enabledHandlers.forEach((handler) => {\n            if (handler && handler.invalidateEnabledForCourse) {\n                promises.push(Promise.resolve(\n                    handler.invalidateEnabledForCourse(courseId, courseData.navOptions, courseData.admOptions)));\n            }\n        });\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Check if a time belongs to the last update handlers for course call.\n     * This is to handle the cases where updateHandlersForCourse don't finish in the same order as they're called.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} time Time to check.\n     * @return {boolean} Whether it's the last call.\n     */\n    isLastUpdateCourseCall(courseId: number, time: number): boolean {\n        if (!this.lastUpdateHandlersForCoursesStart[courseId]) {\n            return true;\n        }\n\n        return time == this.lastUpdateHandlersForCoursesStart[courseId];\n    }\n\n    /**\n     * Load course options if missing.\n     *\n     * @param {any} course The course object.\n     * @param {boolean} [refresh] True if it should refresh the list.\n     * @return {Promise<void>} Promise resolved when done.\n     */\n    protected loadCourseOptions(course: any, refresh?: boolean): Promise<void> {\n        if (typeof course.navOptions == 'undefined' || typeof course.admOptions == 'undefined' || refresh) {\n            return this.coursesProvider.getCoursesAdminAndNavOptions([course.id]).then((options) => {\n                course.navOptions = options.navOptions[course.id];\n                course.admOptions = options.admOptions[course.id];\n            });\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    /**\n     * Update handlers for each course.\n     *\n     * @param {string} [siteId] Site ID.\n     */\n    updateData(siteId?: string): void {\n        if (this.sitesProvider.getCurrentSiteId() === siteId) {\n            // Update handlers for all courses.\n            for (const courseId in this.coursesHandlers) {\n                const handler = this.coursesHandlers[courseId];\n                this.updateHandlersForCourse(parseInt(courseId, 10), handler.access, handler.navOptions, handler.admOptions);\n            }\n        }\n    }\n\n    /**\n     * Update the handlers for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} accessData Access type and data. Default, guest, ...\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<any>} Resolved when updated.\n     */\n    updateHandlersForCourse(courseId: number, accessData: any, navOptions?: any, admOptions?: any): Promise<any> {\n        const promises = [],\n            enabledForCourse = [],\n            siteId = this.sitesProvider.getCurrentSiteId(),\n            now = Date.now();\n\n        this.lastUpdateHandlersForCoursesStart[courseId] = now;\n\n        for (const name in this.enabledHandlers) {\n            const handler = this.enabledHandlers[name];\n\n            // Checks if the handler is enabled for the user.\n            promises.push(Promise.resolve(handler.isEnabledForCourse(courseId, accessData, navOptions, admOptions))\n                .then((enabled) => {\n                    if (enabled) {\n                        enabledForCourse.push(handler);\n                    } else {\n                        return Promise.reject(null);\n                    }\n                }).catch(() => {\n                    // Nothing to do here, it is not enabled for this user.\n                }));\n        }\n\n        return Promise.all(promises).then(() => {\n            return true;\n        }).catch(() => {\n            // Never fails.\n            return true;\n        }).finally(() => {\n            // Verify that this call is the last one that was started.\n            // Check that site hasn't changed since the check started.\n            if (this.isLastUpdateCourseCall(courseId, now) && this.sitesProvider.getCurrentSiteId() === siteId) {\n                // Update the coursesHandlers array with the new enabled addons.\n                this.coursesHandlers[courseId].enabledHandlers = enabledForCourse;\n                this.loaded[courseId] = true;\n\n                // Resolve the promise.\n                this.coursesHandlers[courseId].deferred.resolve();\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/providers/options-delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseProvider } from '../providers/course';\nimport { CoreCourseModulePrefetchHandler } from '../providers/module-prefetch-delegate';\nimport { CoreConstants } from '../../constants';\n\n/**\n * A prefetch function to be passed to prefetchPackage.\n * This function should NOT call storePackageStatus, downloadPackage or prefetchPakage from filepool.\n * It receives the same params as prefetchPackage except the function itself. This includes all extra parameters sent after siteId.\n * The string returned by this function will be stored as \"extra\" data in the filepool package. If you don't need to store\n * extra data, don't return anything.\n *\n * @param {any} module Module.\n * @param {number} courseId Course ID the module belongs to.\n * @param {boolean} single True if we're downloading a single module, false if we're downloading a whole section.\n * @param {string} siteId Site ID. If not defined, current site.\n * @return {Promise<string>} Promise resolved when the prefetch finishes. The string returned will be stored as \"extra\" data in the\n *                           filepool package. If you don't need to store extra data, don't return anything.\n */\nexport type prefetchFunction = (module: any, courseId: number, single: boolean, siteId: string, ...args: any[]) => Promise<string>;\n\n/**\n * Base prefetch handler to be registered in CoreCourseModulePrefetchDelegate. It is useful to minimize the amount of\n * functions that handlers need to implement. It also provides some helper features like preventing a module to be\n * downloaded twice at the same time.\n *\n * If your handler inherits from this service, you just need to override the functions that you want to change.\n *\n * The implementation of this default handler is aimed for resources that only need to prefetch files, not WebService calls.\n *\n * By default, prefetching a module will only download its files (downloadOrPrefetch). This might be enough for resources.\n * If you need to prefetch WebServices, then you need to override the \"download\" and \"prefetch\" functions. In this case, it's\n * recommended to call the prefetchPackage function since it'll handle changing the status of the module.\n */\nexport class CoreCourseModulePrefetchHandlerBase implements CoreCourseModulePrefetchHandler {\n    /**\n     * Name of the module. It should match the \"modname\" of the module returned in core_course_get_contents.\n     * @type {string}\n     */\n    name = '';\n\n    /**\n     * The handler's component.\n     * @type {string}\n     */\n    component = 'core_module';\n\n    /**\n     * The RegExp to check updates. If a module has an update whose name matches this RegExp, the module will be marked\n     * as outdated. This RegExp is ignored if hasUpdates function is defined.\n     * @type {RegExp}\n     */\n    updatesNames = /^.*files$/;\n\n    /**\n     * Whether the module is a resource (true) or an activity (false).\n     * @type {boolean}\n     */\n    isResource: boolean;\n\n    /**\n     * List of download promises to prevent downloading the module twice at the same time.\n     * @type {{[s: string]: {[s: string]: Promise<any>}}}\n     */\n    protected downloadPromises: { [s: string]: { [s: string]: Promise<any> } } = {};\n\n    // List of services that will be injected using injector.\n    // It's done like this so subclasses don't have to send all the services to the parent in the constructor.\n    protected translate: TranslateService;\n    protected appProvider: CoreAppProvider;\n    protected courseProvider: CoreCourseProvider;\n    protected filepoolProvider: CoreFilepoolProvider;\n    protected sitesProvider: CoreSitesProvider;\n    protected domUtils: CoreDomUtilsProvider;\n    protected utils: CoreUtilsProvider;\n\n    constructor(injector: Injector) {\n        this.translate = injector.get(TranslateService);\n        this.appProvider = injector.get(CoreAppProvider);\n        this.courseProvider = injector.get(CoreCourseProvider);\n        this.filepoolProvider = injector.get(CoreFilepoolProvider);\n        this.sitesProvider = injector.get(CoreSitesProvider);\n        this.domUtils = injector.get(CoreDomUtilsProvider);\n        this.utils = injector.get(CoreUtilsProvider);\n    }\n\n    /**\n     * Add an ongoing download to the downloadPromises list. When the promise finishes it will be removed.\n     *\n     * @param {number} id Unique identifier per component.\n     * @param {Promise<any>} promise Promise to add.\n     * @param {String} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise of the current download.\n     */\n    addOngoingDownload(id: number, promise: Promise<any>, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const uniqueId = this.getUniqueId(id);\n\n        if (!this.downloadPromises[siteId]) {\n            this.downloadPromises[siteId] = {};\n        }\n\n        this.downloadPromises[siteId][uniqueId] = promise.finally(() => {\n            delete this.downloadPromises[siteId][uniqueId];\n        });\n\n        return this.downloadPromises[siteId][uniqueId];\n    }\n\n    /**\n     * Download the module.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. @see downloadOrPrefetch.\n     * @return {Promise<any>} Promise resolved when all content is downloaded.\n     */\n    download(module: any, courseId: number, dirPath?: string): Promise<any> {\n        return this.downloadOrPrefetch(module, courseId, false, dirPath);\n    }\n\n    /**\n     * Download or prefetch the content.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. This is to keep the files\n     *                           relative paths and make the package work in an iframe. Undefined to download the files\n     *                           in the filepool root folder.\n     * @return {Promise<any>} Promise resolved when all content is downloaded. Data returned is not reliable.\n     */\n    downloadOrPrefetch(module: any, courseId: number, prefetch?: boolean, dirPath?: string): Promise<any> {\n        if (!this.appProvider.isOnline()) {\n            // Cannot download in offline.\n            return Promise.reject(this.translate.instant('core.networkerrormsg'));\n        }\n\n        const siteId = this.sitesProvider.getCurrentSiteId();\n\n        // Load module contents (ignore cache so we always have the latest data).\n        return this.loadContents(module, courseId, true).then(() => {\n            // Get the intro files.\n            return this.getIntroFiles(module, courseId);\n        }).then((introFiles) => {\n            const downloadFn = prefetch ? this.filepoolProvider.prefetchPackage.bind(this.filepoolProvider) :\n                        this.filepoolProvider.downloadPackage.bind(this.filepoolProvider),\n                contentFiles = this.getContentDownloadableFiles(module),\n                promises = [];\n\n            if (dirPath) {\n                // Download intro files in filepool root folder.\n                promises.push(this.filepoolProvider.downloadOrPrefetchFiles(siteId, introFiles, prefetch, false,\n                    this.component, module.id));\n\n                // Download content files inside dirPath.\n                promises.push(downloadFn(siteId, contentFiles, this.component, module.id, undefined, dirPath));\n            } else {\n                // No dirPath, download everything in filepool root folder.\n                const files = introFiles.concat(contentFiles);\n                promises.push(downloadFn(siteId, files, this.component, module.id));\n            }\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Returns a list of content files that can be downloaded.\n     *\n     * @param {any} module The module object returned by WS.\n     * @return {any[]} List of files.\n     */\n    getContentDownloadableFiles(module: any): any[] {\n        const files = [];\n\n        if (module.contents && module.contents.length) {\n            module.contents.forEach((content) => {\n                if (this.isFileDownloadable(content)) {\n                    files.push(content);\n                }\n            });\n        }\n\n        return files;\n    }\n\n    /**\n     * Get the download size of a module.\n     *\n     * @param {any} module Module.\n     * @param {Number} courseId Course ID the module belongs to.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @return {Promise<{size: number, total: boolean}>} Promise resolved with the size and a boolean indicating if it was able\n     *                                                   to calculate the total size.\n     */\n    getDownloadSize(module: any, courseId: number, single?: boolean): Promise<{ size: number, total: boolean }> {\n        return this.getFiles(module, courseId).then((files) => {\n            return this.utils.sumFileSizes(files);\n        }).catch(() => {\n            return { size: -1, total: false };\n        });\n    }\n\n    /**\n     * Get the downloaded size of a module. If not defined, we'll use getFiles to calculate it (it can be slow).\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {number|Promise<number>} Size, or promise resolved with the size.\n     */\n    getDownloadedSize(module: any, courseId: number): number | Promise<number> {\n        const siteId = this.sitesProvider.getCurrentSiteId();\n\n        return this.filepoolProvider.getFilesSizeByComponent(siteId, this.component, module.id);\n    }\n\n    /**\n     * Get list of files. If not defined, we'll assume they're in module.contents.\n     *\n     * @param {any} module Module.\n     * @param {Number} courseId Course ID the module belongs to.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @return {Promise<any[]>} Promise resolved with the list of files.\n     */\n    getFiles(module: any, courseId: number, single?: boolean): Promise<any[]> {\n        // Load module contents if needed.\n        return this.loadContents(module, courseId).then(() => {\n            return this.getIntroFiles(module, courseId).then((files) => {\n                return files.concat(this.getContentDownloadableFiles(module));\n            });\n        });\n    }\n\n    /**\n     * Returns module intro files.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @return {Promise<any[]>} Promise resolved with list of intro files.\n     */\n    getIntroFiles(module: any, courseId: number): Promise<any[]> {\n        return Promise.resolve(this.getIntroFilesFromInstance(module));\n    }\n\n    /**\n     * Returns module intro files from instance.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {any} [instance] The instance to get the intro files (book, assign, ...). If not defined, module will be used.\n     * @return {any[]} List of intro files.\n     */\n    getIntroFilesFromInstance(module: any, instance?: any): any[] {\n        if (instance) {\n            if (typeof instance.introfiles != 'undefined') {\n                return instance.introfiles;\n            } else if (instance.intro) {\n                return this.domUtils.extractDownloadableFilesFromHtmlAsFakeFileObjects(instance.intro);\n            }\n        }\n\n        if (module.description) {\n            return this.domUtils.extractDownloadableFilesFromHtmlAsFakeFileObjects(module.description);\n        }\n\n        return [];\n    }\n\n    /**\n     * If there's an ongoing download for a certain identifier return it.\n     *\n     * @param {number} id Unique identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise of the current download.\n     */\n    getOngoingDownload(id: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (this.isDownloading(id, siteId)) {\n            // There's already a download ongoing, return the promise.\n            return this.downloadPromises[siteId][this.getUniqueId(id)];\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Create unique identifier using component and id.\n     *\n     * @param {number} id Unique ID inside component.\n     * @return {string} Unique ID.\n     */\n    getUniqueId(id: number): string {\n        return this.component + '#' + id;\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {number} courseId The course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number): Promise<any> {\n        const promises = [],\n            siteId = this.sitesProvider.getCurrentSiteId();\n\n        promises.push(this.courseProvider.invalidateModule(moduleId));\n        promises.push(this.filepoolProvider.invalidateFilesByComponent(siteId, this.component, moduleId));\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Invalidate WS calls needed to determine module status (usually, to check if module is downloadable).\n     * It doesn't need to invalidate check updates. It should NOT invalidate files nor all the prefetched data.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when invalidated.\n     */\n    invalidateModule(module: any, courseId: number): Promise<any> {\n        return this.courseProvider.invalidateModule(module.id);\n    }\n\n    /**\n     * Check if a module can be downloaded. If the function is not defined, we assume that all modules are downloadable.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {boolean|Promise<boolean>} Whether the module can be downloaded. The promise should never be rejected.\n     */\n    isDownloadable(module: any, courseId: number): boolean | Promise<boolean> {\n        // By default, mark all instances as downloadable.\n        return true;\n    }\n\n    /**\n     * Check if a there's an ongoing download for the given identifier.\n     *\n     * @param {number} id Unique identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {boolean} True if downloading, false otherwise.\n     */\n    isDownloading(id: number, siteId?: string): boolean {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return !!(this.downloadPromises[siteId] && this.downloadPromises[siteId][this.getUniqueId(id)]);\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} A boolean, or a promise resolved with a boolean, indicating if the handler is enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Check if a file is downloadable.\n     *\n     * @param {any} file File to check.\n     * @return {boolean} Whether the file is downloadable.\n     */\n    isFileDownloadable(file: any): boolean {\n        return file.type === 'file';\n    }\n\n    /**\n     * Load module contents into module.contents if they aren't loaded already.\n     *\n     * @param {any} module Module to load the contents.\n     * @param {number} [courseId] The course ID. Recommended to speed up the process and minimize data usage.\n     * @param {boolean} [ignoreCache] True if it should ignore cached data (it will always fail in offline or server down).\n     * @return {Promise}           Promise resolved when loaded.\n     */\n    loadContents(module: any, courseId: number, ignoreCache?: boolean): Promise<void> {\n        if (this.isResource) {\n            return this.courseProvider.loadModuleContents(module, courseId, undefined, false, ignoreCache);\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Prefetch a module.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. @see downloadOrPrefetch.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    prefetch(module: any, courseId?: number, single?: boolean, dirPath?: string): Promise<any> {\n        return this.downloadOrPrefetch(module, courseId, true, dirPath);\n    }\n\n    /**\n     * Prefetch the module, setting package status at start and finish.\n     *\n     * Example usage from a child instance:\n     *     return this.prefetchPackage(module, courseId, single, this.prefetchModule.bind(this), siteId, someParam, anotherParam);\n     *\n     * Then the function \"prefetchModule\" will receive params:\n     *     prefetchModule(module, courseId, single, siteId, someParam, anotherParam)\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @param {prefetchFunction} downloadFn Function to perform the prefetch. Please check the documentation of prefetchFunction.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the module has been downloaded. Data returned is not reliable.\n     */\n    prefetchPackage(module: any, courseId: number, single: boolean, downloadFn: prefetchFunction, siteId?: string, ...args: any[])\n            : Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (!this.appProvider.isOnline()) {\n            // Cannot prefetch in offline.\n            return Promise.reject(this.translate.instant('core.networkerrormsg'));\n        }\n\n        if (this.isDownloading(module.id, siteId)) {\n            // There's already a download ongoing for this module, return the promise.\n            return this.getOngoingDownload(module.id, siteId);\n        }\n\n        const prefetchPromise = this.setDownloading(module.id, siteId).then(() => {\n            // Package marked as downloading, call the download function.\n            // Send all the params except downloadFn. This includes all params passed after siteId.\n            return downloadFn.apply(downloadFn, [module, courseId, single, siteId].concat(args));\n        }).then((extra: string) => {\n            // Prefetch finished, mark as downloaded.\n            return this.setDownloaded(module.id, siteId, extra);\n        }).catch((error) => {\n            // Error prefetching, go back to previous status and reject the promise.\n            return this.setPreviousStatusAndReject(module.id, error, siteId);\n        });\n\n        return this.addOngoingDownload(module.id, prefetchPromise, siteId);\n    }\n\n    /**\n     * Mark the module as downloaded.\n     *\n     * @param {number} id Unique identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {string} [extra] Extra data to store.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    setDownloaded(id: number, siteId?: string, extra?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.filepoolProvider.storePackageStatus(siteId, CoreConstants.DOWNLOADED, this.component, id, extra);\n    }\n\n    /**\n     * Mark the module as downloading.\n     *\n     * @param {number} id Unique identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    setDownloading(id: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.filepoolProvider.storePackageStatus(siteId, CoreConstants.DOWNLOADING, this.component, id);\n    }\n\n    /**\n     * Set previous status and return a rejected promise.\n     *\n     * @param {number} id Unique identifier per component.\n     * @param {any} [error] Error to return.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<never>} Rejected promise.\n     */\n    setPreviousStatusAndReject(id: number, error?: any, siteId?: string): Promise<never> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.filepoolProvider.setPackagePreviousStatus(siteId, this.component, id).then(() => {\n            return Promise.reject(error);\n        });\n    }\n\n    /**\n     * Remove module downloaded files. If not defined, we'll use getFiles to remove them (slow).\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    removeFiles(module: any, courseId: number): Promise<any> {\n        return this.filepoolProvider.removeFilesByComponent(this.sitesProvider.getCurrentSiteId(), this.component, module.id);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/classes/module-prefetch-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreFilepoolProvider } from '@providers/filepool';\n\n/**\n * Service that provides some features for page.\n */\n@Injectable()\nexport class AddonModPageProvider {\n    static COMPONENT = 'mmaModPage';\n\n    protected ROOT_CACHE_KEY = 'mmaModPage:';\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private courseProvider: CoreCourseProvider,\n            private utils: CoreUtilsProvider, private filepoolProvider: CoreFilepoolProvider) {\n        this.logger = logger.getInstance('mmaModPageProvider');\n    }\n\n    /**\n     * Get a page by course module ID.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} cmId     Course module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}        Promise resolved when the book is retrieved.\n     */\n    getPageData(courseId: number, cmId: number, siteId?: string): Promise<any> {\n        return this.getPageByKey(courseId, 'coursemodule', cmId, siteId);\n    }\n\n    /**\n     * Get a page.\n     *\n     * @param {number} courseId  Course ID.\n     * @param {string} key       Name of the property to check.\n     * @param {any}  value     Value to search.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}          Promise resolved when the book is retrieved.\n     */\n    protected getPageByKey(courseId: number, key: string, value: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    courseids: [courseId]\n                },\n                preSets = {\n                    cacheKey: this.getPageCacheKey(courseId)\n                };\n\n            return site.read('mod_page_get_pages_by_courses', params, preSets).then((response) => {\n                if (response && response.pages) {\n                    const currentPage = response.pages.find((page) => {\n                        return page[key] == value;\n                    });\n                    if (currentPage) {\n                        return currentPage;\n                    }\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for page data WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @return {string}         Cache key.\n     */\n    protected getPageCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'page:' + courseId;\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param  {number} moduleId The module ID.\n     * @param  {number} courseId Course ID of the module.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}\n     */\n    invalidateContent(moduleId: number, courseId: number, siteId?: string): Promise<any> {\n        const promises = [];\n\n        promises.push(this.invalidatePageData(courseId, siteId));\n        promises.push(this.filepoolProvider.invalidateFilesByComponent(siteId, AddonModPageProvider.COMPONENT, moduleId));\n        promises.push(this.courseProvider.invalidateModule(moduleId, siteId));\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Invalidates page data.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}   Promise resolved when the data is invalidated.\n     */\n    invalidatePageData(courseId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getPageCacheKey(courseId));\n        });\n    }\n\n    /**\n     * Returns whether or not getPage WS available or not.\n     *\n     * @return {boolean} If WS is avalaible.\n     * @since 3.3\n     */\n    isGetPageWSAvailable(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('mod_page_get_pages_by_courses');\n    }\n\n    /**\n     * Return whether or not the plugin is enabled.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with true if plugin is enabled, rejected or resolved with false otherwise.\n     */\n    isPluginEnabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.canDownloadFiles();\n        });\n    }\n\n    /**\n     * Report a page as being viewed.\n     *\n     * @param {number} id Module ID.\n     * @return {Promise<any>}  Promise resolved when the WS call is successful.\n     */\n    logView(id: number): Promise<any> {\n        const params = {\n            pageid: id\n        };\n\n        return this.sitesProvider.getCurrentSite().write('mod_page_view_page', params);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/providers/page.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreFilepoolProvider } from '@providers/filepool';\n\n/**\n * Service that provides some features for resources.\n */\n@Injectable()\nexport class AddonModResourceProvider {\n    static COMPONENT = 'mmaModResource';\n\n    protected ROOT_CACHE_KEY = 'mmaModResource:';\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private courseProvider: CoreCourseProvider,\n            private filepoolProvider: CoreFilepoolProvider, private utils: CoreUtilsProvider) {\n        this.logger = logger.getInstance('AddonModResourceProvider');\n    }\n\n    /**\n     * Get cache key for resource data WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @return {string}         Cache key.\n     */\n    protected getResourceCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'resource:' + courseId;\n    }\n\n    /**\n     * Get a resource data.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} key     Name of the property to check.\n     * @param {any}  value   Value to search.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}  Promise resolved when the resource is retrieved.\n     */\n    protected getResourceDataByKey(courseId: number, key: string, value: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    courseids: [courseId]\n                },\n                preSets = {\n                    cacheKey: this.getResourceCacheKey(courseId)\n                };\n\n            return site.read('mod_resource_get_resources_by_courses', params, preSets).then((response) => {\n                if (response && response.resources) {\n                    const currentResource = response.resources.find((resource) => {\n                        return resource[key] == value;\n                    });\n                    if (currentResource) {\n                        return currentResource;\n                    }\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get a resource by course module ID.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} cmId     Course module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}   Promise resolved when the resource is retrieved.\n     */\n    getResourceData(courseId: number, cmId: number, siteId?: string): Promise<any> {\n        return this.getResourceDataByKey(courseId, 'coursemodule', cmId, siteId);\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param  {number} moduleId The module ID.\n     * @param  {number} courseId Course ID of the module.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const promises = [];\n\n        promises.push(this.invalidateResourceData(courseId, siteId));\n        promises.push(this.filepoolProvider.invalidateFilesByComponent(siteId, AddonModResourceProvider.COMPONENT, moduleId));\n        promises.push(this.courseProvider.invalidateModule(moduleId, siteId));\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Invalidates resource data.\n     *\n     * @param {number} courseid Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}   Promise resolved when the data is invalidated.\n     */\n    invalidateResourceData(courseId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getResourceCacheKey(courseId));\n        });\n    }\n\n    /**\n     * Returns whether or not getResource WS available or not.\n     *\n     * @return {boolean} If WS is abalaible.\n     * @since 3.3\n     */\n    isGetResourceWSAvailable(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('mod_resource_get_resources_by_courses');\n    }\n\n    /**\n     * Return whether or not the plugin is enabled.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with true if plugin is enabled, rejected or resolved with false otherwise.\n     */\n    isPluginEnabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.canDownloadFiles();\n        });\n    }\n\n    /**\n     * Report the resource as being viewed.\n     *\n     * @param {number} id Module ID.\n     * @return {Promise<any>}  Promise resolved when the WS call is successful.\n     */\n    logView(id: number): Promise<any> {\n        const params = {\n            resourceid: id\n        };\n\n        return this.sitesProvider.getCurrentSite().write('mod_resource_view_resource', params);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/providers/resource.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreDelegateHandler } from '@classes/delegate';\n\n/**\n * Super class for handlers for site plugins.\n */\nexport class CoreSitePluginsBaseHandler implements CoreDelegateHandler {\n\n    constructor(public name: string) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} A boolean, or a promise resolved with a boolean, indicating if the handler is enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/base-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\n\n/**\n * Service to handle caompetency learning plans.\n */\n@Injectable()\nexport class AddonCompetencyProvider {\n\n    static STATUS_DRAFT = 0;\n    static STATUS_ACTIVE = 1;\n    static STATUS_COMPLETE = 2;\n    static STATUS_WAITIN_GFOR_REVIEW = 3;\n    static STATUS_IN_REVIEW = 4;\n    static REVIEW_STATUS_IDLE = 0;\n    static REVIEW_STATUS_WAITING_FOR_REVIEW = 1;\n    static REVIEW_STATUS_IN_REVIEW = 2;\n    protected ROOT_CACHE_KEY = 'mmaCompetency:';\n\n    protected logger;\n\n    constructor(loggerProvider: CoreLoggerProvider, private sitesProvider: CoreSitesProvider) {\n        this.logger = loggerProvider.getInstance('AddonCompetencyProvider');\n    }\n\n    /**\n     * Get cache key for user learning plans data WS calls.\n     *\n     * @param {number} userId User ID.\n     * @return {string}         Cache key.\n     */\n    protected getLearningPlansCacheKey(userId: number): string {\n        return this.ROOT_CACHE_KEY + 'userplans:' + userId;\n    }\n\n    /**\n     * Get cache key for learning plan data WS calls.\n     *\n     * @param {number} planId Plan ID.\n     * @return {string}         Cache key.\n     */\n    protected getLearningPlanCacheKey(planId: number): string {\n        return this.ROOT_CACHE_KEY + 'learningplan:' + planId;\n    }\n\n    /**\n     * Get cache key for competency in plan data WS calls.\n     *\n     * @param {number} planId Plan ID.\n     * @param {number} competencyId Competency ID.\n     * @return {string}         Cache key.\n     */\n    protected getCompetencyInPlanCacheKey(planId: number, competencyId: number): string {\n        return this.ROOT_CACHE_KEY + 'plancompetency:' + planId + ':' + competencyId;\n    }\n\n    /**\n     * Get cache key for competency in course data WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} competencyId Competency ID.\n     * @param {number} userId User ID.\n     * @return {string}         Cache key.\n     */\n    protected getCompetencyInCourseCacheKey(courseId: number, competencyId: number, userId: number): string {\n        return this.ROOT_CACHE_KEY + 'coursecompetency:' + userId + ':' + courseId + ':' + competencyId;\n    }\n\n    /**\n     * Get cache key for competency summary data WS calls.\n     *\n     * @param {number} competencyId Competency ID.\n     * @param {number} userId User ID.\n     * @return {string}         Cache key.\n     */\n    protected getCompetencySummaryCacheKey(competencyId: number, userId: number): string {\n        return this.ROOT_CACHE_KEY + 'competencysummary:' + userId + ':' + competencyId;\n    }\n\n    /**\n     * Get cache key for course competencies data WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @return {string}         Cache key.\n     */\n    protected getCourseCompetenciesCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'coursecompetencies:' + courseId;\n    }\n\n    /**\n     * Returns whether competencies are enabled.\n     *\n     * @param  {number} courseId Course ID.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} competencies if enabled for the given course, false otherwise.\n     */\n    isPluginForCourseEnabled(courseId: number, siteId?: string): Promise<any> {\n        if (!this.sitesProvider.isLoggedIn()) {\n            return Promise.resolve(false);\n        }\n\n        return this.getCourseCompetencies(courseId, 0, siteId).catch(() => {\n            return false;\n        });\n    }\n\n    /**\n     * Get plans for a certain user.\n     *\n     * @param  {number} [userId]    ID of the user. If not defined, current user.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}            Promise to be resolved when the plans are retrieved.\n     */\n    getLearningPlans(userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            this.logger.debug('Get plans for user ' + userId);\n\n            const params = {\n                    userid: userId\n                },\n                preSets = {\n                    cacheKey: this.getLearningPlansCacheKey(userId)\n                };\n\n            return site.read('tool_lp_data_for_plans_page', params, preSets).then((response) => {\n                if (response.plans) {\n                    return response.plans;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get a certain plan.\n     *\n     * @param  {number} planId    ID of the plan.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}            Promise to be resolved when the plans are retrieved.\n     */\n    getLearningPlan(planId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n\n            this.logger.debug('Get plan ' + planId);\n\n            const params = {\n                    planid: planId\n                },\n                preSets = {\n                    cacheKey: this.getLearningPlanCacheKey(planId)\n                };\n\n            return site.read('tool_lp_data_for_plan_page', params, preSets).then((response) => {\n                if (response.plan) {\n                    return response;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get a certain competency in a plan.\n     *\n     * @param  {number} planId    ID of the plan.\n     * @param  {number} competencyId    ID of the competency.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}            Promise to be resolved when the plans are retrieved.\n     */\n    getCompetencyInPlan(planId: number, competencyId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n\n            this.logger.debug('Get competency ' + competencyId + ' in plan ' + planId);\n\n            const params = {\n                    planid: planId,\n                    competencyid: competencyId\n                },\n                preSets = {\n                    cacheKey: this.getCompetencyInPlanCacheKey(planId, competencyId)\n                };\n\n            return site.read('tool_lp_data_for_user_competency_summary_in_plan', params, preSets).then((response) => {\n                if (response.usercompetencysummary) {\n                    return response;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get a certain competency in a course.\n     *\n     * @param  {number} courseId    ID of the course.\n     * @param  {number} competencyId    ID of the competency.\n     * @param  {number} [userId]    ID of the user. If not defined, current user.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}            Promise to be resolved when the plans are retrieved.\n     */\n    getCompetencyInCourse(courseId: number, competencyId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            this.logger.debug('Get competency ' + competencyId + ' in course ' + courseId);\n\n            const params = {\n                    courseid: courseId,\n                    competencyid: competencyId,\n                    userid: userId\n                },\n                preSets = {\n                    cacheKey: this.getCompetencyInCourseCacheKey(courseId, competencyId, userId)\n                };\n\n            return site.read('tool_lp_data_for_user_competency_summary_in_course', params, preSets).then((response) => {\n                if (response.usercompetencysummary) {\n                    return response;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get a certain competency summary.\n     *\n     * @param  {number} competencyId    ID of the competency.\n     * @param  {number} [userId]    ID of the user. If not defined, current user.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}            Promise to be resolved when the plans are retrieved.\n     */\n    getCompetencySummary(competencyId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            this.logger.debug('Get competency ' + competencyId + ' summary for user' + userId);\n\n            const params = {\n                    competencyid: competencyId,\n                    userid: userId\n                },\n                preSets = {\n                    cacheKey: this.getCompetencySummaryCacheKey(competencyId, userId)\n                };\n\n            return site.read('tool_lp_data_for_user_competency_summary', params, preSets).then((response) => {\n                if (response.competency) {\n                    return response.competency;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get all competencies in a course.\n     *\n     * @param  {number} courseId    ID of the course.\n     * @param  {number} [userId]    ID of the user.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}            Promise to be resolved when the course competencies are retrieved.\n     */\n    getCourseCompetencies(courseId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n\n            this.logger.debug('Get course competencies for course ' + courseId);\n\n            const params = {\n                    courseid: courseId\n                },\n                preSets = {\n                    cacheKey: this.getCourseCompetenciesCacheKey(courseId)\n                };\n\n            return site.read('tool_lp_data_for_course_competencies_page', params, preSets).then((response) => {\n                if (response.competencies) {\n                    return response;\n                }\n\n                return Promise.reject(null);\n            });\n\n        }).then((response) => {\n\n            if (!userId || userId == this.sitesProvider.getCurrentSiteUserId()) {\n                return response;\n            }\n\n            const promises = response.competencies.map((competency) =>\n                this.getCompetencyInCourse(courseId, competency.competency.id, userId, siteId)\n            );\n\n            return Promise.all(promises).then((responses: any[]) => {\n                responses.forEach((resp, index) => {\n                    response.competencies[index].usercompetencycourse = resp.usercompetencysummary.usercompetencycourse;\n                });\n\n                return response;\n            });\n        });\n    }\n\n    /**\n     * Invalidates User Learning Plans data.\n     *\n     * @param  {number} [userId]    ID of the user. If not defined, current user.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}            Promise resolved when the data is invalidated.\n     */\n    invalidateLearningPlans(userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return site.invalidateWsCacheForKey(this.getLearningPlansCacheKey(userId));\n        });\n    }\n\n    /**\n     * Invalidates Learning Plan data.\n     *\n     * @param  {number} planId    ID of the plan.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}        Promise resolved when the data is invalidated.\n     */\n    invalidateLearningPlan(planId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getLearningPlanCacheKey(planId));\n        });\n    }\n\n    /**\n     * Invalidates Competency in Plan data.\n     *\n     * @param  {number} planId    ID of the plan.\n     * @param  {number} competencyId    ID of the competency.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}        Promise resolved when the data is invalidated.\n     */\n    invalidateCompetencyInPlan(planId: number, competencyId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCompetencyInPlanCacheKey(planId, competencyId));\n        });\n    }\n\n    /**\n     * Invalidates Competency in Course data.\n     *\n     * @param  {number} courseId    ID of the course.\n     * @param  {number} competencyId    ID of the competency.\n     * @param  {number} [userId]    ID of the user. If not defined, current user.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}        Promise resolved when the data is invalidated.\n     */\n    invalidateCompetencyInCourse(courseId: number, competencyId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return site.invalidateWsCacheForKey(this.getCompetencyInCourseCacheKey(courseId, competencyId, userId));\n        });\n    }\n\n    /**\n     * Invalidates Competency Summary data.\n     *\n     * @param  {number} competencyId    ID of the competency.\n     * @param  {number} [userId]    ID of the user. If not defined, current user.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}        Promise resolved when the data is invalidated.\n     */\n    invalidateCompetencySummary(competencyId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return site.invalidateWsCacheForKey(this.getCompetencySummaryCacheKey(competencyId, userId));\n        });\n    }\n\n    /**\n     * Invalidates Course Competencies data.\n     *\n     * @param  {number} courseId    ID of the course.\n     * @param  {number} [userId]      ID of the user.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}        Promise resolved when the data is invalidated.\n     */\n    invalidateCourseCompetencies(courseId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getCourseCompetenciesCacheKey(courseId));\n        }).then(() => {\n            if (!userId || userId == this.sitesProvider.getCurrentSiteUserId()) {\n                return;\n            }\n\n            /* Competencies for other users are fetched with getCompetencyInCourse (and saved in their own cache).\n               We need to fecth the list of competencies to know which ones to invalidate. We can pass 0 as userId\n               to getCourseCompetencies, we just need the competency IDs and this way we avid extra WS calls. */\n            return this.getCourseCompetencies(courseId, 0, siteId).then((competencies) => {\n                const promises = competencies.competencies.map((competency) => {\n                    return this.invalidateCompetencyInCourse(courseId, competency.competency.id, userId, siteId);\n                });\n\n                return Promise.all(promises);\n            });\n        });\n    }\n\n    /**\n     * Report the competency as being viewed in plan.\n     *\n     * @param  {number} planId    ID of the plan.\n     * @param  {number} competencyId  ID of the competency.\n     * @param  {number} planStatus    Current plan Status to decide what action should be logged.\n     * @param  {number} [userId] User ID. If not defined, current user.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}  Promise resolved when the WS call is successful.\n     */\n    logCompetencyInPlanView(planId: number, competencyId: number, planStatus: number, userId?: number, siteId?: string)\n            : Promise<any> {\n        if (planId && competencyId) {\n            return this.sitesProvider.getSite(siteId).then((site) => {\n                userId = userId || site.getUserId();\n\n                const params = {\n                        planid: planId,\n                        competencyid: competencyId,\n                        userid: userId\n                    },\n                    preSets = {\n                        typeExpected: 'boolean'\n                    };\n\n                if (planStatus == AddonCompetencyProvider.STATUS_COMPLETE) {\n                    return site.write('core_competency_user_competency_plan_viewed', params, preSets);\n                } else {\n                    return site.write('core_competency_user_competency_viewed_in_plan', params, preSets);\n                }\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Report the competency as being viewed in course.\n     *\n     * @param  {number} courseId        ID of the course.\n     * @param  {number} competencyId    ID of the competency.\n     * @param  {number} [userId] User ID. If not defined, current user.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}  Promise resolved when the WS call is successful.\n     */\n    logCompetencyInCourseView(courseId: number, competencyId: number, userId?: number, siteId?: string): Promise<any> {\n        if (courseId && competencyId) {\n            return this.sitesProvider.getSite(siteId).then((site) => {\n                userId = userId || site.getUserId();\n\n                const params = {\n                    courseid: courseId,\n                    competencyid: competencyId,\n                    userid: userId\n                };\n                const preSets = {\n                    typeExpected: 'boolean'\n                };\n\n                return site.write('core_competency_user_competency_viewed_in_course', params, preSets);\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Report the competency as being viewed.\n     *\n     * @param  {number} competencyId    ID of the competency.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}  Promise resolved when the WS call is successful.\n     */\n    logCompetencyView(competencyId: number, siteId?: string): Promise<any> {\n        if (competencyId) {\n            return this.sitesProvider.getSite(siteId).then((site) => {\n                const params = {\n                    id: competencyId,\n                };\n                const preSets = {\n                    typeExpected: 'boolean'\n                };\n\n                return site.write('core_competency_competency_viewed', params, preSets);\n            });\n        }\n\n        return Promise.reject(null);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/providers/competency.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from './logger';\n\n/**\n * Interface that all plugin file handlers must implement.\n */\nexport interface CorePluginFileHandler {\n    /**\n     * A name to identify the handler. It should match the \"component\" of pluginfile URLs.\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Return the RegExp to match the revision on pluginfile URLs.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {RegExp} RegExp to match the revision on pluginfile URLs.\n     */\n    getComponentRevisionRegExp?(args: string[]): RegExp;\n\n    /**\n     * Should return the string to remove the revision on pluginfile url.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {string} String to remove the revision on pluginfile url.\n     */\n    getComponentRevisionReplace?(args: string[]): string;\n}\n\n/**\n * Delegate to register pluginfile information handlers.\n */\n@Injectable()\nexport class CorePluginFileDelegate {\n    protected logger;\n    protected handlers: { [s: string]: CorePluginFileHandler } = {};\n\n    constructor(logger: CoreLoggerProvider) {\n        this.logger = logger.getInstance('CorePluginFileDelegate');\n    }\n\n    /**\n     * Get the handler for a certain pluginfile url.\n     *\n     * @param {string} pluginType Type of the plugin.\n     * @return {CorePluginFileHandler} Handler. Undefined if no handler found for the plugin.\n     */\n    protected getPluginHandler(pluginType: string): CorePluginFileHandler {\n        if (typeof this.handlers[pluginType] != 'undefined') {\n            return this.handlers[pluginType];\n        }\n    }\n\n    /**\n     * Get the RegExp of the component and filearea described in the URL.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {RegExp}  RegExp to match the revision or undefined if not found.\n     */\n    getComponentRevisionRegExp(args: string[]): RegExp {\n        // Get handler based on component (args[1]).\n        const handler = this.getPluginHandler(args[1]);\n\n        if (handler && handler.getComponentRevisionRegExp) {\n            return handler.getComponentRevisionRegExp(args);\n        }\n    }\n\n    /**\n     * Register a handler.\n     *\n     * @param {CorePluginFileHandler} handler The handler to register.\n     * @return {boolean} True if registered successfully, false otherwise.\n     */\n    registerHandler(handler: CorePluginFileHandler): boolean {\n        if (typeof this.handlers[handler.name] !== 'undefined') {\n            this.logger.log(`Addon '${handler.name}' already registered`);\n\n            return false;\n        }\n\n        this.logger.log(`Registered addon '${handler.name}'`);\n        this.handlers[handler.name] = handler;\n\n        return true;\n    }\n\n    /**\n     * Removes the revision number from a file URL.\n     *\n     * @param {string} url URL to be replaced.\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {string} Replaced URL without revision.\n     */\n    removeRevisionFromUrl(url: string, args: string[]): string {\n        // Get handler based on component (args[1]).\n        const handler = this.getPluginHandler(args[1]);\n\n        if (handler && handler.getComponentRevisionRegExp && handler.getComponentRevisionReplace) {\n            const revisionRegex = handler.getComponentRevisionRegExp(args);\n            if (revisionRegex) {\n                return url.replace(revisionRegex, handler.getComponentRevisionReplace(args));\n            }\n        }\n\n        return url;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/plugin-file-delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseModuleMainComponent } from '@core/course/providers/module-delegate';\n\n/**\n * Template class to easily create CoreCourseModuleMainComponent of resources (or activities without syncing).\n */\nexport class CoreCourseModuleMainResourceComponent implements OnInit, OnDestroy, CoreCourseModuleMainComponent {\n    @Input() module: any; // The module of the component.\n    @Input() courseId: number; // Course ID the component belongs to.\n    @Output() dataRetrieved?: EventEmitter<any>; // Called to notify changes the index page from the main component.\n\n    loaded: boolean; // If the component has been loaded.\n    component: string; // Component name.\n    componentId: number; // Component ID.\n\n    // Data for context menu.\n    externalUrl: string; // External URL to open in browser.\n    description: string; // Module description.\n    refreshIcon: string; // Refresh icon, normally spinner or refresh.\n    prefetchStatusIcon: string; // Used when calling fillContextMenu.\n    prefetchText: string; // Used when calling fillContextMenu.\n    size: string; // Used when calling fillContextMenu.\n\n    protected isDestroyed; // Whether the component is destroyed, used when calling fillContextMenu.\n    protected statusObserver; // Observer of package status changed, used when calling fillContextMenu.\n    protected fetchContentDefaultError = 'core.course.errorgetmodule'; // Default error to show when loading contents.\n\n    constructor(protected textUtils: CoreTextUtilsProvider, protected courseHelper: CoreCourseHelperProvider,\n            protected translate: TranslateService, protected domUtils: CoreDomUtilsProvider) {\n        this.dataRetrieved = new EventEmitter();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.description = this.module.description;\n        this.componentId = this.module.id;\n        this.externalUrl = this.module.url;\n        this.loaded = false;\n        this.refreshIcon = 'spinner';\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} [refresher] Refresher.\n     * @param {Function} [done] Function to call when done.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void): Promise<any> {\n        if (this.loaded) {\n            this.refreshIcon = 'spinner';\n\n            return this.refreshContent().finally(() => {\n                this.refreshIcon = 'refresh';\n                refresher && refresher.complete();\n                done && done();\n            });\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Perform the refresh content function.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected refreshContent(): Promise<any> {\n        return this.invalidateContent().catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            return this.loadContent(true);\n        });\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected invalidateContent(): Promise<any> {\n        return Promise.resolve();\n    }\n\n    /**\n     * Download the component contents.\n     *\n     * @param {boolean} [refresh] Whether we're refreshing data.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchContent(refresh?: boolean): Promise<any> {\n        return Promise.resolve();\n    }\n\n    /**\n     * Loads the component contents and shows the corresponding error.\n     *\n     * @param {boolean} [refresh] Whether we're refreshing data.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected loadContent(refresh?: boolean): Promise<any> {\n        return this.fetchContent(refresh).catch((error) => {\n            // Error getting data, fail.\n            this.domUtils.showErrorModalDefault(error, this.fetchContentDefaultError, true);\n        }).finally(() => {\n            this.loaded = true;\n            this.refreshIcon = 'refresh';\n        });\n    }\n\n    /**\n     * Fill the context menu options\n     */\n    protected fillContextMenu(refresh: boolean = false): void {\n        // All data obtained, now fill the context menu.\n        this.courseHelper.fillContextMenu(this, this.module, this.courseId, refresh, this.component);\n    }\n\n    /**\n     * Expand the description.\n     */\n    expandDescription(): void {\n        this.textUtils.expandText(this.translate.instant('core.description'), this.description, this.component, this.module.id);\n    }\n\n    /**\n     * Prefetch the module.\n     */\n    prefetch(): void {\n        this.courseHelper.contextMenuPrefetch(this, this.module, this.courseId);\n    }\n\n    /**\n     * Confirm and remove downloaded files.\n     */\n    removeFiles(): void {\n        this.courseHelper.confirmAndRemoveFiles(this.module, this.courseId);\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.statusObserver && this.statusObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/classes/main-resource-component.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * A book chapter inside the toc list.\n */\nexport interface AddonModBookTocChapter {\n    /**\n     * ID to identify the chapter.\n     * @type {string}\n     */\n    id: string;\n\n    /**\n     * Chapter's title.\n     * @type {string}\n     */\n    title: string;\n\n    /**\n     * The chapter's level.\n     * @type {number}\n     */\n    level: number;\n}\n\n/**\n * Map of book contents. For each chapter it has its index URL and the list of paths of the files the chapter has. Each path\n * is identified by the relative path in the book, and the value is the URL of the file.\n */\nexport type AddonModBookContentsMap = {[chapter: string]: {indexUrl?: string, paths: {[path: string]: string}}};\n\n/**\n * Service that provides some features for books.\n */\n@Injectable()\nexport class AddonModBookProvider {\n    static COMPONENT = 'mmaModBook';\n\n    protected ROOT_CACHE_KEY = 'mmaModBook:';\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private textUtils: CoreTextUtilsProvider,\n            private fileProvider: CoreFileProvider, private filepoolProvider: CoreFilepoolProvider, private http: Http,\n            private utils: CoreUtilsProvider, private courseProvider: CoreCourseProvider, private domUtils: CoreDomUtilsProvider) {\n        this.logger = logger.getInstance('AddonModBookProvider');\n    }\n\n    /**\n     * Get a book by course module ID.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} cmId Course module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the book is retrieved.\n     */\n    getBook(courseId: number, cmId: number, siteId?: string): Promise<any> {\n        return this.getBookByField(courseId, 'coursemodule', cmId, siteId);\n    }\n\n    /**\n     * Get a book with key=value. If more than one is found, only the first will be returned.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} key Name of the property to check.\n     * @param {any} value Value to search.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the book is retrieved.\n     */\n    protected getBookByField(courseId: number, key: string, value: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    courseids: [courseId]\n                },\n                preSets = {\n                    cacheKey: this.getBookDataCacheKey(courseId)\n                };\n\n            return site.read('mod_book_get_books_by_courses', params, preSets).then((response) => {\n                // Search the book.\n                if (response && response.books) {\n                    for (const i in response.books) {\n                        const book = response.books[i];\n                        if (book[key] == value) {\n                            return book;\n                        }\n                    }\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for get book data WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @return {string} Cache key.\n     */\n    protected getBookDataCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'book:' + courseId;\n    }\n\n    /**\n     * Gets a chapter contents.\n     *\n     * @param {AddonModBookContentsMap} contentsMap Contents map returned by getContentsMap.\n     * @param {string} chapterId Chapter to retrieve.\n     * @param {number} moduleId The module ID.\n     * @return {Promise<string>} Promise resolved with the contents.\n     */\n    getChapterContent(contentsMap: AddonModBookContentsMap, chapterId: string, moduleId: number): Promise<string> {\n        const indexUrl = contentsMap[chapterId] ? contentsMap[chapterId].indexUrl : undefined,\n            siteId = this.sitesProvider.getCurrentSiteId();\n        let promise;\n\n        if (!indexUrl) {\n            // It shouldn't happen.\n            this.logger.debug('Could not locate the index chapter');\n\n            return Promise.reject(null);\n        }\n\n        if (this.fileProvider.isAvailable()) {\n            promise = this.filepoolProvider.downloadUrl(siteId, indexUrl, false, AddonModBookProvider.COMPONENT, moduleId);\n        } else {\n            // We return the live URL.\n            return Promise.resolve(this.sitesProvider.getCurrentSite().fixPluginfileURL(indexUrl));\n        }\n\n        return promise.then((url) => {\n            // Fetch the URL content.\n            const promise = this.http.get(url).toPromise();\n\n            return promise.then((response: Response): any => {\n                const content = response.text();\n                if (typeof content !== 'string') {\n                    return Promise.reject(null);\n                } else {\n                    // Now that we have the content, we update the SRC to point back to the external resource.\n                    return this.domUtils.restoreSourcesInHtml(content, contentsMap[chapterId].paths);\n                }\n            });\n        });\n    }\n\n    /**\n     * Convert an array of book contents into an object where contents are organized in chapters.\n     * Each chapter has an indexUrl and the list of contents in that chapter.\n     *\n     * @param {any[]} contents The module contents.\n     * @return {AddonModBookContentsMap} Contents map.\n     */\n    getContentsMap(contents: any[]): AddonModBookContentsMap {\n        const map: AddonModBookContentsMap = {};\n\n        if (!contents) {\n            return map;\n        }\n\n        contents.forEach((content) => {\n            if (this.isFileDownloadable(content)) {\n                let chapter,\n                    matches,\n                    split,\n                    filepathIsChapter,\n                    key;\n\n                // Search the chapter number in the filepath.\n                matches = content.filepath.match(/\\/(\\d+)\\//);\n                if (matches && matches[1]) {\n                    chapter = matches[1];\n                    filepathIsChapter = content.filepath == '/' + chapter + '/';\n\n                    // Init the chapter if it's not defined yet.\n                    map[chapter] = map[chapter] || { paths: {} };\n\n                    if (content.filename == 'index.html' && filepathIsChapter) {\n                        // Index of the chapter, set indexUrl of the chapter.\n                        map[chapter].indexUrl = content.fileurl;\n                    } else {\n                        if (filepathIsChapter) {\n                            // It's a file in the root folder OR the WS isn't returning the filepath as it should (MDL-53671).\n                            // Try to get the path to the file from the URL.\n                            split = content.fileurl.split('mod_book/chapter' + content.filepath);\n                            key = split[1] || content.filename; // Use filename if we couldn't find the path.\n                        } else {\n                            // Remove the chapter folder from the path and add the filename.\n                            key = content.filepath.replace('/' + chapter + '/', '') + content.filename;\n                        }\n\n                        map[chapter].paths[this.textUtils.decodeURIComponent(key)] = content.fileurl;\n                    }\n                }\n            }\n        });\n\n        return map;\n    }\n\n    /**\n     * Get the first chapter of a book.\n     *\n     * @param {AddonModBookTocChapter[]} chapters The chapters list.\n     * @return {string} The chapter id.\n     */\n    getFirstChapter(chapters: AddonModBookTocChapter[]): string {\n        if (!chapters || !chapters.length) {\n            return;\n        }\n\n        return chapters[0].id;\n    }\n\n    /**\n     * Get the next chapter to the given one.\n     *\n     * @param {AddonModBookTocChapter[]} chapters The chapters list.\n     * @param {string} chapterId The current chapter.\n     * @return {string} The next chapter id.\n     */\n    getNextChapter(chapters: AddonModBookTocChapter[], chapterId: string): string {\n        let next = '0';\n\n        for (let i = 0; i < chapters.length; i++) {\n            if (chapters[i].id == chapterId) {\n                if (typeof chapters[i + 1] != 'undefined') {\n                    next = chapters[i + 1].id;\n                    break;\n                }\n            }\n        }\n\n        return next;\n    }\n\n    /**\n     * Get the previous chapter to the given one.\n     *\n     * @param {AddonModBookTocChapter[]} chapters The chapters list.\n     * @param {string} chapterId The current chapter.\n     * @return {string} The next chapter id.\n     */\n    getPreviousChapter(chapters: AddonModBookTocChapter[], chapterId: string): string {\n        let previous = '0';\n\n        for (let i = 0; i < chapters.length; i++) {\n            if (chapters[i].id == chapterId) {\n                break;\n            }\n            previous = chapters[i].id;\n        }\n\n        return previous;\n    }\n\n    /**\n     * Get the book toc as an array.\n     *\n     * @param {any[]} contents The module contents.\n     * @return {any[]} The toc.\n     */\n    getToc(contents: any[]): any[] {\n        if (!contents || !contents.length) {\n            return [];\n        }\n\n        return this.textUtils.parseJSON(contents[0].content, []);\n    }\n\n    /**\n     * Get the book toc as an array of chapters (not nested).\n     *\n     * @param {any[]} contents The module contents.\n     * @return {AddonModBookTocChapter[]} The toc as a list.\n     */\n    getTocList(contents: any[]): AddonModBookTocChapter[] {\n        const chapters = [],\n            toc = this.getToc(contents);\n\n        toc.forEach((chapter) => {\n            // Add the chapter to the list.\n            let chapterId = chapter.href.replace('/index.html', '');\n            chapters.push({id: chapterId, title: chapter.title, level: chapter.level});\n\n            if (chapter.subitems) {\n                // Add all the subchapters to the list.\n                chapter.subitems.forEach((subChapter) => {\n                    chapterId = subChapter.href.replace('/index.html', '');\n                    chapters.push({id: chapterId, title: subChapter.title, level: subChapter.level});\n                });\n            }\n        });\n\n        return chapters;\n    }\n\n    /**\n     * Invalidates book data.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateBookData(courseId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getBookDataCacheKey(courseId));\n        });\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {number} courseId Course ID of the module.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const promises = [];\n\n        promises.push(this.invalidateBookData(courseId, siteId));\n        promises.push(this.filepoolProvider.invalidateFilesByComponent(siteId, AddonModBookProvider.COMPONENT, moduleId));\n        promises.push(this.courseProvider.invalidateModule(moduleId, siteId));\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Check if a file is downloadable. The file param must have a 'type' attribute like in core_course_get_contents response.\n     *\n     * @param {any} file File to check.\n     * @return {boolean} Whether it's downloadable.\n     */\n    isFileDownloadable(file: any): boolean {\n        return file.type === 'file';\n    }\n\n    /**\n     * Return whether or not the plugin is enabled.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with true if plugin is enabled, rejected or resolved with false otherwise.\n     */\n    isPluginEnabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.canDownloadFiles();\n        });\n    }\n\n    /**\n     * Report a book as being viewed.\n     *\n     * @param {number} id Module ID.\n     * @param {string} chapterId Chapter ID.\n     * @return {Promise<any>} Promise resolved when the WS call is successful.\n     */\n    logView(id: number, chapterId: string): Promise<any> {\n        const params = {\n            bookid: id,\n            chapterid: chapterId\n        };\n\n        return this.sitesProvider.getCurrentSite().write('mod_book_view_book', params);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/providers/book.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\n\n/**\n * Service to handle badges.\n */\n@Injectable()\nexport class AddonBadgesProvider {\n    protected logger;\n    protected ROOT_CACHE_KEY = 'mmaBadges:';\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider) {\n        this.logger = logger.getInstance('AddonBadgesProvider');\n    }\n\n    /**\n     * Returns whether or not the badge plugin is enabled for a certain site.\n     *\n     * This method is called quite often and thus should only perform a quick\n     * check, we should not be calling WS from here.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with true if enabled, false otherwise.\n     */\n    isPluginEnabled(siteId?: string): Promise<boolean> {\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (!site.canUseAdvancedFeature('enablebadges')) {\n                return false;\n            } else if (!site.wsAvailable('core_course_get_user_navigation_options')) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * Get the cache key for the get badges call.\n     *\n     * @param {number} courseId ID of the course to get the badges from.\n     * @param {number} userId ID of the user to get the badges from.\n     * @return {string} Cache key.\n     */\n    protected getBadgesCacheKey(courseId: number, userId: number): string {\n        return this.ROOT_CACHE_KEY + 'badges:' + courseId + ':' + userId;\n    }\n\n    /**\n     * Get issued badges for a certain user in a course.\n     *\n     * @param {number} courseId ID of the course to get the badges from.\n     * @param {number} userId ID of the user to get the badges from.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}Promise to be resolved when the badges are retrieved.\n     */\n    getUserBadges(courseId: number, userId: number, siteId?: string): Promise<any> {\n\n        this.logger.debug('Get badges for course ' + courseId);\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n\n            const data = {\n                    courseid : courseId,\n                    userid : userId\n                },\n                presets = {\n                    cacheKey: this.getBadgesCacheKey(courseId, userId)\n                };\n\n            return site.read('core_badges_get_user_badges', data, presets).then((response) => {\n                if (response && response.badges) {\n                    return response.badges;\n                } else {\n                    return Promise.reject(null);\n                }\n            });\n        });\n    }\n\n    /**\n     * Invalidate get badges WS call.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} userId ID of the user to get the badges from.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when data is invalidated.\n     */\n    invalidateUserBadges(courseId: number, userId: number, siteId?: string): Promise<any> {\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getBadgesCacheKey(courseId, userId));\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/providers/badges.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { Subject } from 'rxjs';\n\n/**\n * Service to handle push notifications actions to perform when clicked and received.\n */\n@Injectable()\nexport class AddonPushNotificationsDelegate {\n\n    protected logger;\n    protected observables: { [s: string]: Subject<any> } = {};\n    protected counterHandlers: { [s: string]: string } = {};\n\n    constructor(loggerProvider: CoreLoggerProvider) {\n        this.logger = loggerProvider.getInstance('AddonPushNotificationsDelegate');\n        this.observables['click'] = new Subject<any>();\n        this.observables['receive'] = new Subject<any>();\n    }\n\n    /**\n     * Function called when a push notification is clicked. Sends notification to handlers.\n     *\n     * @param {any} notification Notification clicked.\n     */\n    clicked(notification: any): void {\n        this.observables['click'].next(notification);\n    }\n\n    /**\n     * Function called when a push notification is received in foreground (cannot tell when it's received in background).\n     * Sends notification to all handlers.\n     *\n     * @param {any} notification Notification received.\n     */\n    received(notification: any): void {\n        this.observables['receive'].next(notification);\n    }\n\n    /**\n     * Register a push notifications observable for click and receive notification event.\n     * When a notification is clicked or received, the observable will receive a notification to treat.\n     * let observer = pushNotificationsDelegate.on('click').subscribe((notification) => {\n     * ...\n     * observer.unsuscribe();\n     *\n     * @param {string}  eventName Only click and receive are permitted.\n     * @return {Subject<any>} Observer to subscribe.\n     */\n    on(eventName: string): Subject<any> {\n        if (typeof this.observables[eventName] == 'undefined') {\n            const eventNames = Object.keys(this.observables).join(', ');\n            this.logger.warn(`'${eventName}' event name is not allowed. Use one of the following: '${eventNames}'.`);\n\n            return new Subject<any>();\n        }\n\n        return this.observables[eventName];\n    }\n\n    /**\n     * Register a push notifications handler for update badge counter.\n     *\n     * @param {string} name  Handler's name.\n     */\n    registerCounterHandler(name: string): void {\n        if (typeof this.counterHandlers[name] == 'undefined') {\n            this.logger.debug(`Registered handler '${name}' as badge counter handler.`);\n            this.counterHandlers[name] = name;\n        } else {\n            this.logger.log(`Handler '${name}' as badge counter handler already registered.`);\n        }\n    }\n\n    /**\n     * Check if a counter handler is present.\n     *\n     * @param {string} name       Handler's name.\n     * @return {boolean}  If handler name is present.\n     */\n    isCounterHandlerRegistered(name: string): boolean {\n        return typeof this.counterHandlers[name] != 'undefined';\n    }\n\n    /**\n     * Get all counter badge handlers.\n     *\n     * @return {any}  with all the handler names.\n     */\n    getCounterHandlers(): any {\n        return this.counterHandlers;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/pushnotifications/providers/delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { FileTransfer, FileUploadOptions } from '@ionic-native/file-transfer';\nimport { CoreAppProvider } from './app';\nimport { CoreFileProvider } from './file';\nimport { CoreLoggerProvider } from './logger';\nimport { CoreMimetypeUtilsProvider } from './utils/mimetype';\nimport { CoreTextUtilsProvider } from './utils/text';\nimport { CoreUtilsProvider } from './utils/utils';\nimport { CoreConstants } from '@core/constants';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { CoreInterceptor } from '@classes/interceptor';\n\n/**\n * PreSets accepted by the WS call.\n */\nexport interface CoreWSPreSets {\n    /**\n     * The site URL.\n     * @type {string}\n     */\n    siteUrl: string;\n\n    /**\n     * The Webservice token.\n     * @type {string}\n     */\n    wsToken: string;\n\n    /**\n     * Defaults to true. Set to false when the expected response is null.\n     * @type {boolean}\n     */\n    responseExpected?: boolean;\n\n    /**\n     * Defaults to 'object'. Use it when you expect a type that's not an object|array.\n     * @type {string}\n     */\n    typeExpected?: string;\n\n    /**\n     * Defaults to false. Clean multibyte Unicode chars from data.\n     * @type {string}\n     */\n    cleanUnicode?: boolean;\n}\n\n/**\n * PreSets accepted by AJAX WS calls.\n */\nexport interface CoreWSAjaxPreSets {\n    /**\n     * The site URL.\n     * @type {string}\n     */\n    siteUrl: string;\n\n    /**\n     * Defaults to true. Set to false when the expected response is null.\n     * @type {boolean}\n     */\n    responseExpected?: boolean;\n}\n\n/**\n * Error returned by a WS call.\n */\nexport interface CoreWSError {\n    /**\n     * The error message.\n     * @type {string}\n     */\n    message: string;\n\n    /**\n     * Name of the exception. Undefined for local errors (fake WS errors).\n     * @type {string}\n     */\n    exception?: string;\n\n    /**\n     * The error code. Undefined for local errors (fake WS errors).\n     * @type {string}\n     */\n    errorcode?: string;\n}\n\n/**\n * File upload options.\n */\nexport interface CoreWSFileUploadOptions extends FileUploadOptions {\n    /**\n     * The file area where to put the file. By default, 'draft'.\n     * @type {string}\n     */\n    fileArea?: string;\n\n    /**\n     * Item ID of the area where to put the file. By default, 0.\n     * @type {number}\n     */\n    itemId?: number;\n}\n\n/**\n * This service allows performing WS calls and download/upload files.\n */\n@Injectable()\nexport class CoreWSProvider {\n    protected logger;\n    protected mimeTypeCache = {}; // A \"cache\" to store file mimetypes to prevent performing too many HEAD requests.\n    protected ongoingCalls = {};\n    protected retryCalls = [];\n    protected retryTimeout = 0;\n\n    constructor(private http: HttpClient, private translate: TranslateService, private appProvider: CoreAppProvider,\n            private textUtils: CoreTextUtilsProvider, logger: CoreLoggerProvider, private utils: CoreUtilsProvider,\n            private fileProvider: CoreFileProvider, private fileTransfer: FileTransfer, private commonHttp: Http,\n            private mimeUtils: CoreMimetypeUtilsProvider) {\n        this.logger = logger.getInstance('CoreWSProvider');\n    }\n\n    /**\n     * Adds the call data to an special queue to be processed when retrying.\n     *\n     * @param {string} method The WebService method to be called.\n     * @param {string} siteUrl Complete site url to perform the call.\n     * @param {any} ajaxData Arguments to pass to the method.\n     * @param {CoreWSPreSets} preSets Extra settings and information.\n     * @return {Promise<any>} Deferred promise resolved with the response data in success and rejected with the error message\n     *                        if it fails.\n     */\n    protected addToRetryQueue(method: string, siteUrl: string, ajaxData: any, preSets: CoreWSPreSets): Promise<any> {\n        const call = {\n            method: method,\n            siteUrl: siteUrl,\n            ajaxData: ajaxData,\n            preSets: preSets,\n            deferred: this.utils.promiseDefer(),\n        };\n\n        this.retryCalls.push(call);\n\n        return call.deferred.promise;\n    }\n\n    /**\n     * A wrapper function for a moodle WebService call.\n     *\n     * @param {string} method The WebService method to be called.\n     * @param {any} data Arguments to pass to the method. It's recommended to call convertValuesToString before passing the data.\n     * @param {CoreWSPreSets} preSets Extra settings and information.\n     * @return {Promise<any>} Promise resolved with the response data in success and rejected if it fails.\n     */\n    call(method: string, data: any, preSets: CoreWSPreSets): Promise<any> {\n\n        let siteUrl;\n\n        if (!preSets) {\n            return Promise.reject(this.utils.createFakeWSError('core.unexpectederror', true));\n        } else if (!this.appProvider.isOnline()) {\n            return Promise.reject(this.utils.createFakeWSError('core.networkerrormsg', true));\n        }\n\n        preSets.typeExpected = preSets.typeExpected || 'object';\n        if (typeof preSets.responseExpected == 'undefined') {\n            preSets.responseExpected = true;\n        }\n\n        data = data || {};\n        data = this.utils.clone(data); // Clone the data so the changes don't affect the original data.\n        data.wsfunction = method;\n        data.wstoken = preSets.wsToken;\n        siteUrl = preSets.siteUrl + '/webservice/rest/server.php?moodlewsrestformat=json';\n\n        let promise = this.getPromiseHttp('post', preSets.siteUrl, data);\n\n        if (!promise) {\n            // There are some ongoing retry calls, wait for timeout.\n            if (this.retryCalls.length > 0) {\n                this.logger.warn('Calls locked, trying later...');\n                promise = this.addToRetryQueue(method, siteUrl, data, preSets);\n            } else {\n                promise = this.performPost(method, siteUrl, data, preSets);\n            }\n        }\n\n        return promise;\n    }\n\n    /**\n     * Call a Moodle WS using the AJAX API. Please use it if the WS layer is not an option.\n     *\n     * @param {string} method The WebService method to be called.\n     * @param {any} data Arguments to pass to the method.\n     * @param {CoreWSAjaxPreSets} preSets Extra settings and information. Only some\n     * @return {Promise<any>} Promise resolved with the response data in success and rejected with an object containing:\n     *                                 - error: Error message.\n     *                                 - errorcode: Error code returned by the site (if any).\n     *                                 - available: 0 if unknown, 1 if available, -1 if not available.\n     */\n    callAjax(method: string, data: any, preSets: CoreWSAjaxPreSets): Promise<any> {\n        let siteUrl,\n            ajaxData;\n\n        if (typeof preSets.siteUrl == 'undefined') {\n            return rejectWithError(this.translate.instant('core.unexpectederror'));\n        } else if (!this.appProvider.isOnline()) {\n            return rejectWithError(this.translate.instant('core.networkerrormsg'));\n        }\n\n        if (typeof preSets.responseExpected == 'undefined') {\n            preSets.responseExpected = true;\n        }\n\n        ajaxData = [{\n            index: 0,\n            methodname: method,\n            args: this.convertValuesToString(data)\n        }];\n\n        siteUrl = preSets.siteUrl + '/lib/ajax/service.php';\n\n        const promise = this.http.post(siteUrl, JSON.stringify(ajaxData)).timeout(CoreConstants.WS_TIMEOUT).toPromise();\n\n        return promise.then((data: any) => {\n            // Some moodle web services return null.\n            // If the responseExpected value is set then so long as no data is returned, we create a blank object.\n            if (!data && !preSets.responseExpected) {\n                data = [{}];\n            }\n\n            // Check if error. Ajax layer should always return an object (if error) or an array (if success).\n            if (!data || typeof data != 'object') {\n                return rejectWithError(this.translate.instant('core.serverconnection'));\n            } else if (data.error) {\n                return rejectWithError(data.error, data.errorcode);\n            }\n\n            // Get the first response since only one request was done.\n            data = data[0];\n\n            if (data.error) {\n                return rejectWithError(data.exception.message, data.exception.errorcode);\n            }\n\n            return data.data;\n        }, (data) => {\n            const available = data.status == 404 ? -1 : 0;\n\n            return rejectWithError(this.translate.instant('core.serverconnection'), '', available);\n        });\n\n        // Convenience function to return an error.\n        function rejectWithError(message: string, code?: string, available?: number): Promise<never> {\n            if (typeof available == 'undefined') {\n                if (code) {\n                    available = code == 'invalidrecord' ? -1 : 1;\n                } else {\n                    available = 0;\n                }\n            }\n\n            return Promise.reject({\n                error: message,\n                errorcode: code,\n                available: available\n            });\n        }\n    }\n\n    /**\n     * Converts an objects values to strings where appropriate.\n     * Arrays (associative or otherwise) will be maintained.\n     *\n     * @param {object} data The data that needs all the non-object values set to strings.\n     * @param {boolean} [stripUnicode] If Unicode long chars need to be stripped.\n     * @return {object} The cleaned object, with multilevel array and objects preserved.\n     */\n    convertValuesToString(data: object, stripUnicode?: boolean): object {\n        let result;\n        if (!Array.isArray(data) && typeof data == 'object') {\n            result = {};\n        } else {\n            result = [];\n        }\n\n        for (const el in data) {\n            if (typeof data[el] == 'object') {\n                result[el] = this.convertValuesToString(data[el], stripUnicode);\n            } else {\n                if (typeof data[el] == 'string') {\n                    result[el] = stripUnicode ? this.textUtils.stripUnicode(data[el]) : data[el];\n                    if (stripUnicode && data[el] != result[el] && result[el].trim().length == 0) {\n                        throw new Error();\n                    }\n                } else {\n                    result[el] = data[el] + '';\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Downloads a file from Moodle using Cordova File API.\n     *\n     * @param {string} url Download url.\n     * @param {string} path Local path to store the file.\n     * @param {boolean} [addExtension] True if extension need to be added to the final path.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {Promise<any>} Promise resolved with the downloaded file.\n     */\n    downloadFile(url: string, path: string, addExtension?: boolean, onProgress?: (event: ProgressEvent) => any): Promise<any> {\n        this.logger.debug('Downloading file', url, path, addExtension);\n\n        if (!this.appProvider.isOnline()) {\n            return Promise.reject(this.translate.instant('core.networkerrormsg'));\n        }\n\n        // Use a tmp path to download the file and then move it to final location.\n        // This is because if the download fails, the local file is deleted.\n        const tmpPath = path + '.tmp';\n\n        // Create the tmp file as an empty file.\n        return this.fileProvider.createFile(tmpPath).then((fileEntry) => {\n            const transfer = this.fileTransfer.create();\n            transfer.onProgress(onProgress);\n\n            return transfer.download(url, fileEntry.toURL(), true).then(() => {\n                let promise;\n\n                if (addExtension) {\n                    const ext = this.mimeUtils.getFileExtension(path);\n\n                    // Google Drive extensions will be considered invalid since Moodle usually converts them.\n                    if (!ext || ext == 'gdoc' || ext == 'gsheet' || ext == 'gslides' || ext == 'gdraw') {\n                        // Not valid, get the file's mimetype.\n                        promise = this.getRemoteFileMimeType(url).then((mime) => {\n                            if (mime) {\n                                const remoteExt = this.mimeUtils.getExtension(mime, url);\n                                // If the file is from Google Drive, ignore mimetype application/json.\n                                if (remoteExt && (!ext || mime != 'application/json')) {\n                                    if (ext) {\n                                        // Remove existing extension since we will use another one.\n                                        path = this.mimeUtils.removeExtension(path);\n                                    }\n                                    path += '.' + remoteExt;\n\n                                    return remoteExt;\n                                }\n                            }\n\n                            return ext;\n                        });\n                    } else {\n                        promise = Promise.resolve(ext);\n                    }\n                } else {\n                    promise = Promise.resolve('');\n                }\n\n                return promise.then((extension) => {\n                    return this.fileProvider.moveFile(tmpPath, path).then((movedEntry) => {\n                        // Save the extension.\n                        movedEntry.extension = extension;\n                        movedEntry.path = path;\n                        this.logger.debug(`Success downloading file ${url} to ${path} with extension ${extension}`);\n\n                        return movedEntry;\n                    });\n                });\n            });\n        }).catch((err) => {\n            this.logger.error(`Error downloading ${url} to ${path}`, err);\n\n            return Promise.reject(err);\n        });\n    }\n\n    /**\n     * Get a promise from the cache.\n     *\n     * @param {string} method Method of the HTTP request.\n     * @param {string} url Base URL of the HTTP request.\n     * @param {any} [params] Params of the HTTP request.\n     */\n    protected getPromiseHttp(method: string, url: string, params?: any): any {\n        const queueItemId = this.getQueueItemId(method, url, params);\n        if (typeof this.ongoingCalls[queueItemId] != 'undefined') {\n            return this.ongoingCalls[queueItemId];\n        }\n\n        return false;\n    }\n\n    /**\n     * Perform a HEAD request to get the mimetype of a remote file.\n     *\n     * @param {string} url File URL.\n     * @param {boolean} [ignoreCache] True to ignore cache, false otherwise.\n     * @return {Promise<string>} Promise resolved with the mimetype or '' if failure.\n     */\n    getRemoteFileMimeType(url: string, ignoreCache?: boolean): Promise<string> {\n        if (this.mimeTypeCache[url] && !ignoreCache) {\n            return Promise.resolve(this.mimeTypeCache[url]);\n        }\n\n        return this.performHead(url).then((data) => {\n            let mimeType = data.headers.get('Content-Type');\n            if (mimeType) {\n                // Remove \"parameters\" like charset.\n                mimeType = mimeType.split(';')[0];\n            }\n            this.mimeTypeCache[url] = mimeType;\n\n            return mimeType || '';\n        }).catch(() => {\n            // Error, resolve with empty mimetype.\n            return '';\n        });\n    }\n\n    /**\n     * Perform a HEAD request to get the size of a remote file.\n     *\n     * @param {string} url File URL.\n     * @return {Promise<number>} Promise resolved with the size or -1 if failure.\n     */\n    getRemoteFileSize(url: string): Promise<number> {\n        return this.performHead(url).then((data) => {\n            const size = parseInt(data.headers.get('Content-Length'), 10);\n\n            if (size) {\n                return size;\n            }\n\n            return -1;\n        }).catch(() => {\n            // Error, return -1.\n            return -1;\n        });\n    }\n\n    /**\n     * Get the unique queue item id of the cache for a HTTP request.\n     *\n     * @param {string} method Method of the HTTP request.\n     * @param {string} url Base URL of the HTTP request.\n     * @param {object} [params] Params of the HTTP request.\n     * @return {string} Queue item ID.\n     */\n    protected getQueueItemId(method: string, url: string, params?: any): string {\n        if (params) {\n            url += '###' + CoreInterceptor.serialize(params);\n        }\n\n        return method + '#' + Md5.hashAsciiStr(url);\n    }\n\n    /**\n     * Perform a HEAD request and save the promise while waiting to be resolved.\n     *\n     * @param {string} url URL to perform the request.\n     * @return {Promise<any>} Promise resolved with the response.\n     */\n    performHead(url: string): Promise<any> {\n        let promise = this.getPromiseHttp('head', url);\n\n        if (!promise) {\n            promise = this.commonHttp.head(url).timeout(CoreConstants.WS_TIMEOUT).toPromise();\n            promise = this.setPromiseHttp(promise, 'head', url);\n        }\n\n        return promise;\n    }\n\n    /**\n     * Perform the post call and save the promise while waiting to be resolved.\n     *\n     * @param {string} method The WebService method to be called.\n     * @param {string} siteUrl Complete site url to perform the call.\n     * @param {any} ajaxData Arguments to pass to the method.\n     * @param {CoreWSPreSets} preSets Extra settings and information.\n     * @return {Promise<any>} Promise resolved with the response data in success and rejected with CoreWSError if it fails.\n     */\n    performPost(method: string, siteUrl: string, ajaxData: any, preSets: CoreWSPreSets): Promise<any> {\n        const options = {};\n\n        // This is done because some returned values like 0 are treated as null if responseType is json.\n        if (preSets.typeExpected == 'number' || preSets.typeExpected == 'boolean' || preSets.typeExpected == 'string') {\n            // Avalaible values are: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType\n            options['responseType'] = 'text';\n        }\n\n        // Perform the post request.\n        let promise = this.http.post(siteUrl, ajaxData, options).timeout(CoreConstants.WS_TIMEOUT).toPromise();\n\n        promise = promise.then((data: any) => {\n            // Some moodle web services return null.\n            // If the responseExpected value is set to false, we create a blank object if the response is null.\n            if (!data && !preSets.responseExpected) {\n                data = {};\n            }\n\n            if (!data) {\n                return Promise.reject(this.utils.createFakeWSError('core.serverconnection', true));\n            } else if (typeof data != preSets.typeExpected) {\n                // If responseType is text an string will be returned, parse before returning.\n                if (typeof data == 'string') {\n                    if (preSets.typeExpected == 'number') {\n                        data = Number(data);\n                        if (isNaN(data)) {\n                            this.logger.warn(`Response expected type \"${preSets.typeExpected}\" cannot be parsed to number`);\n\n                            return Promise.reject(this.utils.createFakeWSError('core.errorinvalidresponse', true));\n                        }\n                    } else if (preSets.typeExpected == 'boolean') {\n                        if (data === 'true') {\n                            data = true;\n                        } else if (data === 'false') {\n                            data = false;\n                        } else {\n                            this.logger.warn(`Response expected type \"${preSets.typeExpected}\" is not true or false`);\n\n                            return Promise.reject(this.utils.createFakeWSError('core.errorinvalidresponse', true));\n                        }\n                    } else {\n                        this.logger.warn('Response of type \"' + typeof data + `\" received, expecting \"${preSets.typeExpected}\"`);\n\n                        return Promise.reject(this.utils.createFakeWSError('core.errorinvalidresponse', true));\n                    }\n                } else {\n                    this.logger.warn('Response of type \"' + typeof data + `\" received, expecting \"${preSets.typeExpected}\"`);\n\n                    return Promise.reject(this.utils.createFakeWSError('core.errorinvalidresponse', true));\n                }\n            }\n\n            if (typeof data.exception !== 'undefined') {\n                // Special debugging for site plugins, otherwise it's hard to debug errors if the data is cached.\n                if (method == 'tool_mobile_get_content') {\n                    this.logger.error('Error calling WS', method, data);\n                }\n\n                return Promise.reject(data);\n            }\n\n            if (typeof data.debuginfo != 'undefined') {\n                return Promise.reject(this.utils.createFakeWSError('Error. ' + data.message));\n            }\n\n            return data;\n        }, (error) => {\n            // If server has heavy load, retry after some seconds.\n            if (error.status == 429) {\n                const retryPromise = this.addToRetryQueue(method, siteUrl, ajaxData, preSets);\n\n                // Only process the queue one time.\n                if (this.retryTimeout == 0) {\n                    this.retryTimeout = parseInt(error.headers.get('Retry-After'), 10) || 5;\n                    this.logger.warn(`${error.statusText}. Retrying in ${this.retryTimeout} seconds. ` +\n                        `${this.retryCalls.length} calls left.`);\n\n                    setTimeout(() => {\n                        this.logger.warn(`Retrying now with ${this.retryCalls.length} calls to process.`);\n                        // Finish timeout.\n                        this.retryTimeout = 0;\n                        this.processRetryQueue();\n                    }, this.retryTimeout * 1000);\n                } else {\n                    this.logger.warn('Calls locked, trying later...');\n                }\n\n                return retryPromise;\n            }\n\n            return Promise.reject(this.utils.createFakeWSError('core.serverconnection', true));\n        });\n\n        promise = this.setPromiseHttp(promise, 'post', preSets.siteUrl, ajaxData);\n\n        return promise;\n    }\n\n    /**\n     * Retry all requests in the queue.\n     * This function uses recursion in order to add a delay between requests to reduce stress.\n     */\n    protected processRetryQueue(): void {\n        if (this.retryCalls.length > 0 && this.retryTimeout == 0) {\n            const call = this.retryCalls.shift();\n            // Add a delay between calls.\n            setTimeout(() => {\n                call.deferred.resolve(this.performPost(call.method, call.siteUrl, call.ajaxData, call.preSets));\n                this.processRetryQueue();\n            }, 200);\n        } else {\n            this.logger.warn(`Retry queue has stopped with ${this.retryCalls.length} calls and ${this.retryTimeout} timeout secs.`);\n        }\n    }\n\n    /**\n     * Save promise on the cache.\n     *\n     * @param {Promise<any>} promise Promise to be saved.\n     * @param {string} method Method of the HTTP request.\n     * @param {string} url Base URL of the HTTP request.\n     * @param {any} [params] Params of the HTTP request.\n     * @return {Promise<any>} The promise saved.\n     */\n    protected setPromiseHttp(promise: Promise<any>, method: string, url: string, params?: any): Promise<any> {\n        const queueItemId = this.getQueueItemId(method, url, params);\n        let timeout;\n\n        this.ongoingCalls[queueItemId] = promise;\n\n        // HTTP not finished, but we should delete the promise after timeout.\n        timeout = setTimeout(() => {\n            delete this.ongoingCalls[queueItemId];\n        }, CoreConstants.WS_TIMEOUT);\n\n        // HTTP finished, delete from ongoing.\n        return promise.finally(() => {\n            delete this.ongoingCalls[queueItemId];\n\n            clearTimeout(timeout);\n        });\n    }\n\n    /**\n     * A wrapper function for a synchronous Moodle WebService call.\n     * Warning: This function should only be used if synchronous is a must. It's recommended to use call.\n     *\n     * @param {string} method The WebService method to be called.\n     * @param {any} data Arguments to pass to the method.\n     * @param {CoreWSPreSets} preSets Extra settings and information.\n     * @return {Promise} Promise resolved with the response data in success and rejected with the error message if it fails.\n     * @return {any} Request response. If the request fails, returns an object with 'error'=true and 'message' properties.\n     */\n    syncCall(method: string, data: any, preSets: CoreWSPreSets): any {\n        const errorResponse = {\n                error: true,\n                message: ''\n            };\n        let siteUrl,\n            xhr;\n\n        if (!preSets) {\n            errorResponse.message = this.translate.instant('core.unexpectederror');\n\n            return errorResponse;\n        } else if (!this.appProvider.isOnline()) {\n            errorResponse.message = this.translate.instant('core.networkerrormsg');\n\n            return errorResponse;\n        }\n\n        preSets.typeExpected = preSets.typeExpected || 'object';\n        if (typeof preSets.responseExpected == 'undefined') {\n            preSets.responseExpected = true;\n        }\n\n        try {\n            data = this.convertValuesToString(data, preSets.cleanUnicode);\n        } catch (e) {\n            // Empty cleaned text found.\n            errorResponse.message = this.translate.instant('core.unicodenotsupportedcleanerror');\n\n            return errorResponse;\n        }\n\n        data.wsfunction = method;\n        data.wstoken = preSets.wsToken;\n        siteUrl = preSets.siteUrl + '/webservice/rest/server.php?moodlewsrestformat=json';\n\n        // Serialize data.\n        data = CoreInterceptor.serialize(data);\n\n        // Perform sync request using XMLHttpRequest.\n        xhr = new (<any> window).XMLHttpRequest();\n        xhr.open('post', siteUrl, false);\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8');\n\n        xhr.send(data);\n\n        // Get response.\n        data = ('response' in xhr) ? xhr.response : xhr.responseText;\n\n        // Check status.\n        xhr.status = Math.max(xhr.status === 1223 ? 204 : xhr.status, 0);\n        if (xhr.status < 200 || xhr.status >= 300) {\n            // Request failed.\n            errorResponse.message = data;\n\n            return errorResponse;\n        }\n\n        // Treat response.\n        data = this.textUtils.parseJSON(data);\n\n        // Some moodle web services return null.\n        // If the responseExpected value is set then so long as no data is returned, we create a blank object.\n        if ((!data || !data.data) && !preSets.responseExpected) {\n            data = {};\n        }\n\n        if (!data) {\n            errorResponse.message = this.translate.instant('core.serverconnection');\n        } else if (typeof data != preSets.typeExpected) {\n            this.logger.warn('Response of type \"' + typeof data + '\" received, expecting \"' + preSets.typeExpected + '\"');\n            errorResponse.message = this.translate.instant('core.errorinvalidresponse');\n        }\n\n        if (typeof data.exception != 'undefined' || typeof data.debuginfo != 'undefined') {\n            errorResponse.message = data.message;\n        }\n\n        if (errorResponse.message !== '') {\n            return errorResponse;\n        }\n\n        return data;\n    }\n\n    /*\n     * Uploads a file.\n     *\n     * @param {string} filePath File path.\n     * @param {CoreWSFileUploadOptions} options File upload options.\n     * @param {CoreWSPreSets} preSets Must contain siteUrl and wsToken.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {Promise<any>} Promise resolved when uploaded.\n     */\n    uploadFile(filePath: string, options: CoreWSFileUploadOptions, preSets: CoreWSPreSets,\n            onProgress?: (event: ProgressEvent) => any): Promise<any> {\n        this.logger.debug(`Trying to upload file: ${filePath}`);\n\n        if (!filePath || !options || !preSets) {\n            return Promise.reject(null);\n        }\n\n        if (!this.appProvider.isOnline()) {\n            return Promise.reject(this.translate.instant('core.networkerrormsg'));\n        }\n\n        const uploadUrl = preSets.siteUrl + '/webservice/upload.php',\n            transfer = this.fileTransfer.create();\n\n        transfer.onProgress(onProgress);\n\n        options.httpMethod = 'POST';\n        options.params = {\n            token: preSets.wsToken,\n            filearea: options.fileArea || 'draft',\n            itemid: options.itemId || 0\n        };\n        options.chunkedMode = false;\n        options.headers = {\n            Connection: 'close'\n        };\n\n        return transfer.upload(filePath, uploadUrl, options, true).then((success) => {\n            const data = this.textUtils.parseJSON(success.response, null,\n                    this.logger.error.bind(this.logger, 'Error parsing response from upload'));\n            if (data === null) {\n                return Promise.reject(this.translate.instant('core.errorinvalidresponse'));\n            }\n\n            if (!data) {\n                return Promise.reject(this.translate.instant('core.serverconnection'));\n            } else if (typeof data != 'object') {\n                this.logger.warn('Upload file: Response of type \"' + typeof data + '\" received, expecting \"object\"');\n\n                return Promise.reject(this.translate.instant('core.errorinvalidresponse'));\n            }\n\n            if (typeof data.exception !== 'undefined') {\n                return Promise.reject(data.message);\n            } else if (data && typeof data.error !== 'undefined') {\n                return Promise.reject(data.error);\n            } else if (data[0] && typeof data[0].error !== 'undefined') {\n                return Promise.reject(data[0].error);\n            }\n\n            // We uploaded only 1 file, so we only return the first file returned.\n            this.logger.debug('Successfully uploaded file', filePath);\n\n            return data[0];\n        }).catch((error) => {\n            this.logger.error('Error while uploading file', filePath, error);\n\n            return Promise.reject(this.translate.instant('core.errorinvalidresponse'));\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/ws.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSite } from '@classes/site';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Service that provides some features regarding site home.\n */\n@Injectable()\nexport class CoreSiteHomeProvider {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private courseProvider: CoreCourseProvider) {\n        this.logger = logger.getInstance('CoreSiteHomeProvider');\n    }\n\n    /**\n     * Returns whether or not the frontpage is available for the current site.\n     *\n     * @param {string} [siteId] The site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with boolean: whether it's available.\n     */\n    isAvailable(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            // First check if it's disabled.\n            if (this.isDisabledInSite(site)) {\n                return false;\n            }\n\n            // Use a WS call to check if there's content in the site home.\n            const siteHomeId = site.getSiteHomeId(),\n                preSets = { emergencyCache: false };\n\n            this.logger.debug('Using WS call to check if site home is available.');\n\n            return this.courseProvider.getSections(siteHomeId, false, true, preSets, site.id).then((sections): any => {\n                if (!sections || !sections.length) {\n                    return Promise.reject(null);\n                }\n\n                for (let i = 0; i < sections.length; i++) {\n                    const section = sections[i];\n                    if (section.summary || (section.modules && section.modules.length)) {\n                        // It has content, return true.\n                        return true;\n                    }\n                }\n\n                return Promise.reject(null);\n            }).catch(() => {\n                const config = site.getStoredConfig();\n                if (config && config.frontpageloggedin) {\n                    const items = config.frontpageloggedin.split(',');\n                    if (items.length > 0) {\n                        // It's enabled.\n                        return true;\n                    }\n                }\n\n                return false;\n            });\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    /**\n     * Check if Site Home is disabled in a certain site.\n     *\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>} Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Check if Site Home is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isDisabledInSite(site: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('$mmSideMenuDelegate_mmaFrontpage');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/providers/sitehome.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from './app';\nimport { CoreFileProvider } from './file';\nimport { CoreFilepoolProvider } from './filepool';\nimport { CoreSitesProvider } from './sites';\nimport { CoreUtilsProvider } from './utils/utils';\nimport { CoreConstants } from '@core/constants';\n\n/**\n * Provider to provide some helper functions regarding files and packages.\n */\n@Injectable()\nexport class CoreFileHelperProvider {\n\n    constructor(private fileProvider: CoreFileProvider, private filepoolProvider: CoreFilepoolProvider,\n            private sitesProvider: CoreSitesProvider, private appProvider: CoreAppProvider, private translate: TranslateService,\n            private utils: CoreUtilsProvider) { }\n\n    /**\n     * Convenience function to open a file, downloading it if needed.\n     *\n     * @param {any} file The file to download.\n     * @param {string} [component] The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {string} [state] The file's state. If not provided, it will be calculated.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @param {string} [siteId] The site ID. If not defined, current site.\n     * @return {Promise<any>} Resolved on success.\n     */\n    downloadAndOpenFile(file: any, component: string, componentId: string | number, state?: string,\n            onProgress?: (event: any) => any, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const fileUrl = this.getFileUrl(file),\n            timemodified = this.getFileTimemodified(file);\n\n        return this.downloadFileIfNeeded(file, fileUrl, component, componentId, timemodified, state, onProgress, siteId)\n                .then((url) => {\n            if (!url) {\n                return;\n            }\n\n            if (url.indexOf('http') === 0) {\n                return this.utils.openOnlineFile(url).catch((error) => {\n                    // Error opening the file, some apps don't allow opening online files.\n                    if (!this.fileProvider.isAvailable()) {\n                        return Promise.reject(error);\n                    }\n\n                    // Get the state.\n                    if (state) {\n                        return state;\n                    } else {\n                        return this.filepoolProvider.getFileStateByUrl(siteId, fileUrl, timemodified);\n                    }\n                }).then((state) => {\n                    if (state == CoreConstants.DOWNLOADING) {\n                        return Promise.reject(this.translate.instant('core.erroropenfiledownloading'));\n                    }\n\n                    let promise;\n\n                    if (state === CoreConstants.NOT_DOWNLOADED) {\n                        // File is not downloaded, download and then return the local URL.\n                        promise = this.downloadFile(fileUrl, component, componentId, timemodified, onProgress, file, siteId);\n                    } else {\n                        // File is outdated and can't be opened in online, return the local URL.\n                        promise = this.filepoolProvider.getInternalUrlByUrl(siteId, fileUrl);\n                    }\n\n                    return promise.then((url) => {\n                        return this.utils.openFile(url);\n                    });\n                });\n            } else {\n                return this.utils.openFile(url);\n            }\n        });\n    }\n\n    /**\n     * Download a file if it needs to be downloaded.\n     *\n     * @param {any} file The file to download.\n     * @param {string} fileUrl The file URL.\n     * @param {string} [component] The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {number} [timemodified] The time this file was modified.\n     * @param {string} [state] The file's state. If not provided, it will be calculated.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @param {string} [siteId] The site ID. If not defined, current site.\n     * @return {Promise<string>} Resolved with the URL to use on success.\n     */\n    protected downloadFileIfNeeded(file: any, fileUrl: string, component?: string, componentId?: string | number,\n            timemodified?: number, state?: string, onProgress?: (event: any) => any, siteId?: string): Promise<string> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const fixedUrl = site.fixPluginfileURL(fileUrl);\n\n            if (this.fileProvider.isAvailable()) {\n                let promise;\n                if (state) {\n                    promise = Promise.resolve(state);\n                } else {\n                    // Calculate the state.\n                    promise = this.filepoolProvider.getFileStateByUrl(siteId, fileUrl, timemodified);\n                }\n\n                return promise.then((state) => {\n                    // The file system is available.\n                    const isWifi = !this.appProvider.isNetworkAccessLimited(),\n                        isOnline = this.appProvider.isOnline();\n\n                    if (state == CoreConstants.DOWNLOADED) {\n                        // File is downloaded, get the local file URL.\n                        return this.filepoolProvider.getUrlByUrl(\n                                siteId, fileUrl, component, componentId, timemodified, false, false, file);\n                    } else {\n                        if (!isOnline && !this.isStateDownloaded(state)) {\n                            // Not downloaded and user is offline, reject.\n                            return Promise.reject(this.translate.instant('core.networkerrormsg'));\n                        }\n\n                        if (onProgress) {\n                            // This call can take a while. Send a fake event to notify that we're doing some calculations.\n                            onProgress({calculating: true});\n                        }\n\n                        return this.filepoolProvider.shouldDownloadBeforeOpen(fixedUrl, file.filesize).then(() => {\n                            if (state == CoreConstants.DOWNLOADING) {\n                                // It's already downloading, stop.\n                                return;\n                            }\n\n                            // Download and then return the local URL.\n                            return this.downloadFile(fileUrl, component, componentId, timemodified, onProgress, file, siteId);\n                        }, () => {\n                            // Start the download if in wifi, but return the URL right away so the file is opened.\n                            if (isWifi && isOnline) {\n                                this.downloadFile(fileUrl, component, componentId, timemodified, onProgress, file, siteId);\n                            }\n\n                            if (!this.isStateDownloaded(state) || isOnline) {\n                                // Not downloaded or online, return the online URL.\n                                return fixedUrl;\n                            } else {\n                                // Outdated but offline, so we return the local URL.\n                                return this.filepoolProvider.getUrlByUrl(\n                                        siteId, fileUrl, component, componentId, timemodified, false, false, file);\n                            }\n                        });\n                    }\n                });\n            } else {\n                // Use the online URL.\n                return fixedUrl;\n            }\n        });\n    }\n\n    /**\n     * Download the file.\n     *\n     * @param {string} fileUrl The file URL.\n     * @param {string} [component] The component to link the file to.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {number} [timemodified] The time this file was modified.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @param {any} [file] The file to download.\n     * @param {string} [siteId] The site ID. If not defined, current site.\n     * @return {Promise<string>} Resolved with internal URL on success, rejected otherwise.\n     */\n    downloadFile(fileUrl: string, component?: string, componentId?: string | number, timemodified?: number,\n            onProgress?: (event: any) => any, file?: any, siteId?: string): Promise<string> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        // Get the site and check if it can download files.\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (!site.canDownloadFiles()) {\n                return Promise.reject(this.translate.instant('core.cannotdownloadfiles'));\n            }\n\n            return this.filepoolProvider.downloadUrl(siteId, fileUrl, false, component, componentId,\n                    timemodified, onProgress, undefined, file).catch((error) => {\n\n                // Download failed, check the state again to see if the file was downloaded before.\n                return this.filepoolProvider.getFileStateByUrl(siteId, fileUrl, timemodified).then((state) => {\n                    if (this.isStateDownloaded(state)) {\n                        return this.filepoolProvider.getInternalUrlByUrl(siteId, fileUrl);\n                    } else {\n                        return Promise.reject(error);\n                    }\n                });\n            });\n        });\n    }\n\n    /**\n     * Get the file's URL.\n     *\n     * @param {any} file The file.\n     */\n    getFileUrl(file: any): string {\n        return file.fileurl || file.url;\n    }\n\n    /**\n     * Get the file's timemodified.\n     *\n     * @param {any} file The file.\n     */\n    getFileTimemodified(file: any): number {\n        return file.timemodified || 0;\n    }\n\n    /**\n     * Check if a state is downloaded or outdated.\n     *\n     * @param {string} state The state to check.\n     */\n    isStateDownloaded(state: string): boolean {\n        return state === CoreConstants.DOWNLOADED || state === CoreConstants.OUTDATED;\n    }\n\n    /**\n     * Whether the file has to be opened in browser (external repository).\n     * The file must have a mimetype attribute.\n     *\n     * @param {any} file The file to check.\n     * @return {boolean} Whether the file should be opened in browser.\n     */\n    shouldOpenInBrowser(file: any): boolean {\n        if (!file || !file.isexternalfile || !file.mimetype) {\n            return false;\n        }\n\n        const mimetype = file.mimetype;\n        if (mimetype.indexOf('application/vnd.google-apps.') != -1) {\n            // Google Docs file, always open in browser.\n            return true;\n        }\n\n        if (file.repositorytype == 'onedrive') {\n            // In OneDrive, open in browser the office docs\n            return mimetype.indexOf('application/vnd.openxmlformats-officedocument') != -1 ||\n                    mimetype == 'text/plain' || mimetype == 'document/unknown';\n        }\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/file-helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { MediaFile } from '@ionic-native/media-capture';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreWSFileUploadOptions } from '@providers/ws';\n\n/**\n * File upload options.\n */\nexport interface CoreFileUploaderOptions extends CoreWSFileUploadOptions {\n    /**\n     * Whether the file should be deleted after the upload (if success).\n     * @type {boolean}\n     */\n    deleteAfterUpload?: boolean;\n}\n\n/**\n * Service to upload files.\n */\n@Injectable()\nexport class CoreFileUploaderProvider {\n    static LIMITED_SIZE_WARNING = 1048576; // 1 MB.\n    static WIFI_SIZE_WARNING = 10485760; // 10 MB.\n\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private fileProvider: CoreFileProvider, private textUtils: CoreTextUtilsProvider,\n            private utils: CoreUtilsProvider, private sitesProvider: CoreSitesProvider, private timeUtils: CoreTimeUtilsProvider,\n            private mimeUtils: CoreMimetypeUtilsProvider, private filepoolProvider: CoreFilepoolProvider,\n            private platform: Platform, private translate: TranslateService) {\n        this.logger = logger.getInstance('CoreFileUploaderProvider');\n    }\n\n    /**\n     * Add a dot to the beginning of an extension.\n     *\n     * @param {string} extension Extension.\n     * @return {string}           Treated extension.\n     */\n    protected addDot(extension: string): string {\n        return '.' + extension;\n    }\n\n    /**\n     * Compares two file lists and returns if they are different.\n     *\n     * @param {any[]} a First file list.\n     * @param {any[]} b Second file list.\n     * @return {boolean} Whether both lists are different.\n     */\n    areFileListDifferent(a: any[], b: any[]): boolean {\n        a = a || [];\n        b = b || [];\n        if (a.length != b.length) {\n            return true;\n        }\n\n        // Currently we are going to compare the order of the files as well.\n        // This function can be improved comparing more fields or not comparing the order.\n        for (let i = 0; i < a.length; i++) {\n            if ((a[i].name || a[i].filename) != (b[i].name || b[i].filename)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Clear temporary attachments to be uploaded.\n     * Attachments already saved in an offline store will NOT be deleted.\n     *\n     * @param {any[]} files List of files.\n     */\n    clearTmpFiles(files: any[]): void {\n        // Delete the local files.\n        files.forEach((file) => {\n            if (!file.offline && file.remove) {\n                // Pass an empty function to prevent missing parameter error.\n                file.remove(() => {\n                    // Nothing to do.\n                });\n            }\n        });\n    }\n\n    /**\n     * Get the upload options for a file taken with the Camera Cordova plugin.\n     *\n     * @param {string} uri File URI.\n     * @param {boolean} [isFromAlbum] True if the image was taken from album, false if it's a new image taken with camera.\n     * @return {CoreFileUploaderOptions} Options.\n     */\n    getCameraUploadOptions(uri: string, isFromAlbum?: boolean): CoreFileUploaderOptions {\n        const extension = this.mimeUtils.getExtension(uri),\n            mimetype = this.mimeUtils.getMimeType(extension),\n            isIOS = this.platform.is('ios'),\n            options: CoreFileUploaderOptions = {\n                deleteAfterUpload: !isFromAlbum,\n                mimeType: mimetype\n            };\n\n        if (isIOS && (mimetype == 'image/jpeg' || mimetype == 'image/png')) {\n            // In iOS, the pictures can have repeated names, even if they come from the album.\n            options.fileName = 'image_' + this.timeUtils.readableTimestamp() + '.' + extension;\n        } else {\n            // Use the same name that the file already has.\n            options.fileName = this.fileProvider.getFileAndDirectoryFromPath(uri).name;\n        }\n\n        if (isFromAlbum) {\n            // If the file was picked from the album, delete it only if it was copied to the app's folder.\n            options.deleteAfterUpload = this.fileProvider.isFileInAppFolder(uri);\n\n            if (this.platform.is('android')) {\n                // Picking an image from album in Android adds a timestamp at the end of the file. Delete it.\n                options.fileName = options.fileName.replace(/(\\.[^\\.]*)\\?[^\\.]*$/, '$1');\n            }\n        }\n\n        return options;\n    }\n\n    /**\n     * Get the upload options for a file of any type.\n     *\n     * @param {string} uri File URI.\n     * @param {string} name File name.\n     * @param {string} type File type.\n     * @param {boolean} [deleteAfterUpload] Whether the file should be deleted after upload.\n     * @param {string} [fileArea] File area to upload the file to. It defaults to 'draft'.\n     * @param {number} [itemId] Draft ID to upload the file to, 0 to create new.\n     * @return {CoreFileUploaderOptions} Options.\n     */\n    getFileUploadOptions(uri: string, name: string, type: string, deleteAfterUpload?: boolean, fileArea?: string, itemId?: number)\n            : CoreFileUploaderOptions {\n        const options: CoreFileUploaderOptions = {};\n        options.fileName = name;\n        options.mimeType = type || this.mimeUtils.getMimeType(this.mimeUtils.getFileExtension(options.fileName));\n        options.deleteAfterUpload = !!deleteAfterUpload;\n        options.itemId = itemId || 0;\n        options.fileArea = fileArea;\n\n        return options;\n    }\n\n    /**\n     * Get the upload options for a file taken with the media capture Cordova plugin.\n     *\n     * @param {MediaFile} mediaFile File object to upload.\n     * @return {CoreFileUploaderOptions} Options.\n     */\n    getMediaUploadOptions(mediaFile: MediaFile): CoreFileUploaderOptions {\n        const options: CoreFileUploaderOptions = {};\n        let filename = mediaFile.name,\n            split;\n\n        // Add a timestamp to the filename to make it unique.\n        split = filename.split('.');\n        split[0] += '_' + this.timeUtils.readableTimestamp();\n        filename = split.join('.');\n\n        options.fileName = filename;\n        options.deleteAfterUpload = true;\n        if (mediaFile.type) {\n            options.mimeType = mediaFile.type;\n        } else {\n            options.mimeType = this.mimeUtils.getMimeType(this.mimeUtils.getFileExtension(options.fileName));\n        }\n\n        return options;\n    }\n\n    /**\n     * Get the files stored in a folder, marking them as offline.\n     *\n     * @param {string} folderPath Folder where to get the files.\n     * @return {Promise<any[]>} Promise resolved with the list of files.\n     */\n    getStoredFiles(folderPath: string): Promise<any[]> {\n        return this.fileProvider.getDirectoryContents(folderPath).then((files) => {\n            return this.markOfflineFiles(files);\n        });\n    }\n\n    /**\n     * Get stored files from combined online and offline file object.\n     *\n     * @param {{online: any[], offline: number}} filesObject The combined offline and online files object.\n     * @param {string} folderPath Folder path to get files from.\n     * @return {Promise<any[]>} Promise resolved with files.\n     */\n    getStoredFilesFromOfflineFilesObject(filesObject: { online: any[], offline: number }, folderPath: string): Promise<any[]> {\n        let files = [];\n\n        if (filesObject) {\n            if (filesObject.online && filesObject.online.length > 0) {\n                files = this.utils.clone(filesObject.online);\n            }\n\n            if (filesObject.offline > 0) {\n                return this.getStoredFiles(folderPath).then((offlineFiles) => {\n                    return files.concat(offlineFiles);\n                }).catch(() => {\n                    // Ignore not found files.\n                    return files;\n                });\n            }\n        }\n\n        return Promise.resolve(files);\n    }\n\n    /**\n     * Check if a file's mimetype is invalid based on the list of accepted mimetypes. This function needs either the file's\n     * mimetype or the file's path/name.\n     *\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @param {string} [path] File's path or name.\n     * @param {string} [mimetype] File's mimetype.\n     * @return {string} Undefined if file is valid, error message if file is invalid.\n     */\n    isInvalidMimetype(mimetypes?: string[], path?: string, mimetype?: string): string {\n        let extension;\n\n        if (mimetypes) {\n            // Verify that the mimetype of the file is supported.\n            if (mimetype) {\n                extension = this.mimeUtils.getExtension(mimetype);\n            } else {\n                extension = this.mimeUtils.getFileExtension(path);\n                mimetype = this.mimeUtils.getMimeType(extension);\n            }\n\n            if (mimetype && mimetypes.indexOf(mimetype) == -1) {\n                extension = extension || this.translate.instant('core.unknown');\n\n                return this.translate.instant('core.fileuploader.invalidfiletype', { $a: extension });\n            }\n        }\n    }\n\n    /**\n     * Mark files as offline.\n     *\n     * @param {any[]} files Files to mark as offline.\n     * @return {any[]} Files marked as offline.\n     */\n    markOfflineFiles(files: any[]): any[] {\n        // Mark the files as pending offline.\n        files.forEach((file) => {\n            file.offline = true;\n            file.filename = file.name;\n        });\n\n        return files;\n    }\n\n    /**\n     * Parse filetypeList to get the list of allowed mimetypes and the data to render information.\n     *\n     * @param {string} filetypeList Formatted string list where the mimetypes can be checked.\n     * @return {{info: any[], mimetypes: string[]}}  Mimetypes and the filetypes informations.\n     */\n    prepareFiletypeList(filetypeList: string): { info: any[], mimetypes: string[] } {\n        const filetypes = filetypeList.split(/[;, ]+/g),\n            mimetypes = {}, // Use an object to prevent duplicates.\n            typesInfo = [];\n\n        filetypes.forEach((filetype) => {\n            filetype = filetype.trim();\n\n            if (filetype) {\n                if (filetype.indexOf('/') != -1) {\n                    // It's a mimetype.\n                    typesInfo.push({\n                        name: this.mimeUtils.getMimetypeDescription(filetype),\n                        extlist: this.mimeUtils.getExtensions(filetype).map(this.addDot).join(' ')\n                    });\n\n                    mimetypes[filetype] = true;\n                } else if (filetype.indexOf('.') === 0) {\n                    // It's an extension.\n                    const mimetype = this.mimeUtils.getMimeType(filetype);\n                    typesInfo.push({\n                        name: mimetype ? this.mimeUtils.getMimetypeDescription(mimetype) : false,\n                        extlist: filetype\n                    });\n\n                    if (mimetype) {\n                        mimetypes[mimetype] = true;\n                    }\n                } else {\n                    // It's a group.\n                    const groupExtensions = this.mimeUtils.getGroupMimeInfo(filetype, 'extensions'),\n                        groupMimetypes = this.mimeUtils.getGroupMimeInfo(filetype, 'mimetypes');\n\n                    if (groupExtensions.length > 0) {\n                        typesInfo.push({\n                            name: this.mimeUtils.getTranslatedGroupName(filetype),\n                            extlist: groupExtensions ? groupExtensions.map(this.addDot).join(' ') : ''\n                        });\n\n                        groupMimetypes.forEach((mimetype) => {\n                            if (mimetype) {\n                                mimetypes[mimetype] = true;\n                            }\n                        });\n                    } else {\n                        // Treat them as extensions.\n                        filetype = this.addDot(filetype);\n\n                        const mimetype = this.mimeUtils.getMimeType(filetype);\n                        typesInfo.push({\n                            name: mimetype ? this.mimeUtils.getMimetypeDescription(mimetype) : false,\n                            extlist: filetype\n                        });\n\n                        if (mimetype) {\n                            mimetypes[mimetype] = true;\n                        }\n                    }\n                }\n            }\n        });\n\n        return {\n            info: typesInfo,\n            mimetypes: Object.keys(mimetypes)\n        };\n    }\n\n    /**\n     * Given a list of files (either online files or local files), store the local files in a local folder\n     * to be uploaded later.\n     *\n     * @param {string} folderPath Path of the folder where to store the files.\n     * @param {any[]} files List of files.\n     * @return {Promise<{online: any[], offline: number}>} Promise resolved if success.\n     */\n    storeFilesToUpload(folderPath: string, files: any[]): Promise<{ online: any[], offline: number }> {\n        const result = {\n            online: [],\n            offline: 0\n        };\n\n        if (!files || !files.length) {\n            return Promise.resolve(result);\n        }\n\n        // Remove unused files from previous saves.\n        return this.fileProvider.removeUnusedFiles(folderPath, files).then(() => {\n            const promises = [];\n\n            files.forEach((file) => {\n                if (file.filename && !file.name) {\n                    // It's an online file, add it to the result and ignore it.\n                    result.online.push({\n                        filename: file.filename,\n                        fileurl: file.fileurl\n                    });\n                } else if (!file.name) {\n                    // Error.\n                    promises.push(Promise.reject(null));\n                } else if (file.fullPath && file.fullPath.indexOf(folderPath) != -1) {\n                    // File already in the submission folder.\n                    result.offline++;\n                } else {\n                    // Local file, copy it.\n                    // Use copy instead of move to prevent having a unstable state if some copies succeed and others don't.\n                    const destFile = this.textUtils.concatenatePaths(folderPath, file.name);\n                    promises.push(this.fileProvider.copyFile(file.toURL(), destFile));\n                    result.offline++;\n                }\n            });\n\n            return Promise.all(promises).then(() => {\n                return result;\n            });\n        });\n    }\n\n    /**\n     * Upload a file.\n     *\n     * @param {string} uri File URI.\n     * @param {CoreFileUploaderOptions} [options] Options for the upload.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @param {string} [siteId] Id of the site to upload the file to. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    uploadFile(uri: string, options?: CoreFileUploaderOptions, onProgress?: (event: ProgressEvent) => any,\n            siteId?: string): Promise<any> {\n        options = options || {};\n\n        const deleteAfterUpload = options.deleteAfterUpload,\n            ftOptions = this.utils.clone(options);\n\n        delete ftOptions.deleteAfterUpload;\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.uploadFile(uri, ftOptions, onProgress);\n        }).then((result) => {\n            if (deleteAfterUpload) {\n                setTimeout(() => {\n                    // Use set timeout, otherwise in Electron the upload threw an error sometimes.\n                    this.fileProvider.removeExternalFile(uri);\n                }, 500);\n            }\n\n            return result;\n        });\n    }\n\n    /**\n     * Upload a file to a draft area. If the file is an online file it will be downloaded and then re-uploaded.\n     *\n     * @param {any} file Online file or local FileEntry.\n     * @param {number} [itemId] Draft ID to use. Undefined or 0 to create a new draft ID.\n     * @param {string} [component] The component to set to the downloaded files.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<number>} Promise resolved with the itemId.\n     */\n    uploadOrReuploadFile(file: any, itemId?: number, component?: string, componentId?: string | number,\n            siteId?: string): Promise<number> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        let promise,\n            fileName;\n\n        if (file.filename && !file.name) {\n            // It's an online file. We need to download it and re-upload it.\n            fileName = file.filename;\n            promise = this.filepoolProvider.downloadUrl(siteId, file.url || file.fileurl, false, component, componentId,\n                file.timemodified, undefined, undefined, file).then((path) => {\n                    return this.fileProvider.getExternalFile(path);\n                });\n        } else {\n            // Local file, we already have the file entry.\n            fileName = file.name;\n            promise = Promise.resolve(file);\n        }\n\n        return promise.then((fileEntry) => {\n            // Now upload the file.\n            const options = this.getFileUploadOptions(fileEntry.toURL(), fileName, fileEntry.type, true, 'draft', itemId);\n\n            return this.uploadFile(fileEntry.toURL(), options, undefined, siteId).then((result) => {\n                return result.itemid;\n            });\n        });\n    }\n\n    /**\n     * Given a list of files (either online files or local files), upload them to a draft area and return the draft ID.\n     * Online files will be downloaded and then re-uploaded.\n     * If there are no files to upload it will return a fake draft ID (1).\n     *\n     * @param {any[]} files List of files.\n     * @param {string} [component] The component to set to the downloaded files.\n     * @param {string|number} [componentId] An ID to use in conjunction with the component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<number>} Promise resolved with the itemId.\n     */\n    uploadOrReuploadFiles(files: any[], component?: string, componentId?: string | number, siteId?: string): Promise<number> {\n            siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (!files || !files.length) {\n            // Return fake draft ID.\n            return Promise.resolve(1);\n        }\n\n        // Upload only the first file first to get a draft id.\n        return this.uploadOrReuploadFile(files[0], 0, component, componentId, siteId).then((itemId) => {\n            const promises = [];\n\n            for (let i = 1; i < files.length; i++) {\n                const file = files[i];\n                promises.push(this.uploadOrReuploadFile(file, itemId, component, componentId, siteId));\n            }\n\n            return Promise.all(promises).then(() => {\n                return itemId;\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/providers/fileuploader.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Service that provides some features for folder.\n */\n@Injectable()\nexport class AddonModFolderProvider {\n    static COMPONENT = 'mmaModFolder';\n\n    protected ROOT_CACHE_KEY = 'mmaModFolder:';\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private courseProvider: CoreCourseProvider,\n            private utils: CoreUtilsProvider) {\n        this.logger = logger.getInstance('mmaModFolderProvider');\n    }\n\n    /**\n     * Get a folder by course module ID.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} cmId     Course module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}        Promise resolved when the book is retrieved.\n     */\n    getFolder(courseId: number, cmId: number, siteId?: string): Promise<any> {\n        return this.getFolderByKey(courseId, 'coursemodule', cmId, siteId);\n    }\n\n    /**\n     * Get a folder.\n     *\n     * @param {number} courseId  Course ID.\n     * @param {string} key       Name of the property to check.\n     * @param {any}  value     Value to search.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}          Promise resolved when the book is retrieved.\n     */\n    protected getFolderByKey(courseId: number, key: string, value: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    courseids: [courseId]\n                },\n                preSets = {\n                    cacheKey: this.getFolderCacheKey(courseId)\n                };\n\n            return site.read('mod_folder_get_folders_by_courses', params, preSets).then((response) => {\n                if (response && response.folders) {\n                    const currentFolder = response.folders.find((folder) => {\n                        return folder[key] == value;\n                    });\n                    if (currentFolder) {\n                        return currentFolder;\n                    }\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for folder data WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @return {string}         Cache key.\n     */\n    protected getFolderCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'folder:' + courseId;\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param  {number} moduleId The module ID.\n     * @param  {number} courseId Course ID of the module.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}\n     */\n    invalidateContent(moduleId: number, courseId: number, siteId?: string): Promise<any> {\n        const promises = [];\n\n        promises.push(this.invalidateFolderData(courseId, siteId));\n        promises.push(this.courseProvider.invalidateModule(moduleId, siteId));\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Invalidates folder data.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}   Promise resolved when the data is invalidated.\n     */\n    invalidateFolderData(courseId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getFolderCacheKey(courseId));\n        });\n    }\n\n    /**\n     * Returns whether or not getFolder WS available or not.\n     *\n     * @return {boolean} If WS is avalaible.\n     * @since 3.3\n     */\n    isGetFolderWSAvailable(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('mod_folder_get_folders_by_courses');\n    }\n\n    /**\n     * Report a folder as being viewed.\n     *\n     * @param {number} id Module ID.\n     * @return {Promise<any>}  Promise resolved when the WS call is successful.\n     */\n    logView(id: number): Promise<any> {\n        const params = {\n            folderid: id\n        };\n\n        return this.sitesProvider.getCurrentSite().write('mod_folder_view_folder', params);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/providers/folder.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { AddonModResourceProvider } from './resource';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\n\n/**\n * Service that provides helper functions for resources.\n */\n@Injectable()\nexport class AddonModResourceHelperProvider {\n\n    /* Constants to determine how a resource should be displayed in Moodle. */\n    // Try the best way.\n    protected DISPLAY_AUTO = 0;\n    // Display using object tag.\n    protected DISPLAY_EMBED = 1;\n\n    constructor(private courseProvider: CoreCourseProvider, private domUtils: CoreDomUtilsProvider,\n            private resourceProvider: AddonModResourceProvider, private courseHelper: CoreCourseHelperProvider,\n            private textUtils: CoreTextUtilsProvider, private mimetypeUtils: CoreMimetypeUtilsProvider,\n            private fileProvider: CoreFileProvider, private appProvider: CoreAppProvider,\n            private filepoolProvider: CoreFilepoolProvider, private sitesProvider: CoreSitesProvider) {\n    }\n\n    /**\n     * Get the HTML to display an embedded resource.\n     *\n     * @param {any} module The module object.\n     * @return {Promise<any>}      Promise resolved with the iframe src.\n     */\n    getEmbeddedHtml(module: any): Promise<any> {\n        return this.courseHelper.downloadModuleWithMainFileIfNeeded(module, module.course, AddonModResourceProvider.COMPONENT,\n                module.id, module.contents).then((result) => {\n            const file = module.contents[0],\n                ext = this.mimetypeUtils.getFileExtension(file.filename),\n                type = this.mimetypeUtils.getExtensionType(ext),\n                mimeType = this.mimetypeUtils.getMimeType(ext);\n\n            if (type == 'image') {\n                return '<img src=\"' + result.path + '\"></img>';\n            }\n\n            if (type == 'audio' || type == 'video') {\n                return '<' + type + ' controls title=\"' + file.filename + '\"\" src=\"' + result.path + '\">' +\n                    '<source src=\"' + result.path + '\" type=\"' + mimeType + '\">' +\n                    '</' + type + '>';\n            }\n\n            // Shouldn't reach here, the user should have called CoreMimetypeUtilsProvider#canBeEmbedded.\n            return '';\n        });\n    }\n\n    /**\n     * Download all the files needed and returns the src of the iframe.\n     *\n     * @param {any} module The module object.\n     * @return {Promise<string>} Promise resolved with the iframe src.\n     */\n    getIframeSrc(module: any): Promise<string> {\n        if (!module.contents.length) {\n            return Promise.reject(null);\n        }\n\n        const mainFile = module.contents[0];\n        let mainFilePath = mainFile.filename;\n\n        if (mainFile.filepath !== '/') {\n            mainFilePath = mainFile.filepath.substr(1) + mainFilePath;\n        }\n\n        return this.filepoolProvider.getPackageDirUrlByUrl(this.sitesProvider.getCurrentSiteId(), module.url).then((dirPath) => {\n            // This URL is going to be injected in an iframe, we need trustAsResourceUrl to make it work in a browser.\n            return this.textUtils.concatenatePaths(dirPath, mainFilePath);\n        }).catch(() => {\n            // Error getting directory, there was an error downloading or we're in browser. Return online URL.\n            if (this.appProvider.isOnline() && mainFile.fileurl) {\n                // This URL is going to be injected in an iframe, we need this to make it work.\n                return Promise.resolve(this.sitesProvider.getCurrentSite().fixPluginfileURL(mainFile.fileurl));\n            }\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Whether the resource has to be displayed embedded.\n     *\n     * @param {any} module    The module object.\n     * @param {number} [display] The display mode (if available).\n     * @return {boolean}         Whether the resource should be displayed embeded.\n     */\n    isDisplayedEmbedded(module: any, display: number): boolean {\n        if (!module.contents.length || !this.fileProvider.isAvailable()) {\n            return false;\n        }\n\n        const ext = this.mimetypeUtils.getFileExtension(module.contents[0].filename);\n\n        return (display == this.DISPLAY_EMBED || display == this.DISPLAY_AUTO) && this.mimetypeUtils.canBeEmbedded(ext);\n    }\n\n    /**\n     * Whether the resource has to be displayed in an iframe.\n     *\n     * @param {any} module The module object.\n     * @return {boolean}   Whether the resource should be displayed in an iframe.\n     */\n    isDisplayedInIframe(module: any): boolean {\n        if (!module.contents.length || !this.fileProvider.isAvailable()) {\n            return false;\n        }\n\n        const ext = this.mimetypeUtils.getFileExtension(module.contents[0].filename),\n            mimetype = this.mimetypeUtils.getMimeType(ext);\n\n        return mimetype == 'text/html';\n    }\n\n    /**\n     * Opens a file of the resource activity.\n     *\n     * @param  {any} module        Module where to get the contents.\n     * @param  {number} courseId   Course Id, used for completion purposes.\n     * @return {Promise<any>}      Resolved when done.\n     */\n    openModuleFile(module: any, courseId: number): Promise<any> {\n        const modal = this.domUtils.showModalLoading();\n\n        // Download and open the file from the resource contents.\n        return this.courseHelper.downloadModuleAndOpenFile(module, courseId, AddonModResourceProvider.COMPONENT, module.id,\n                module.contents).then(() => {\n            this.resourceProvider.logView(module.instance).then(() => {\n                this.courseProvider.checkModuleCompletion(courseId, module.completionstatus);\n            });\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.mod_resource.errorwhileloadingthecontent', true);\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Service that provides some features for urls.\n */\n@Injectable()\nexport class AddonModUrlProvider {\n    static COMPONENT = 'mmaModUrl';\n\n    protected ROOT_CACHE_KEY = 'mmaModUrl:';\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private courseProvider: CoreCourseProvider,\n            private utils: CoreUtilsProvider) {\n        this.logger = logger.getInstance('AddonModUrlProvider');\n    }\n\n    /**\n     * Get cache key for url data WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @return {string}         Cache key.\n     */\n    protected getUrlCacheKey(courseId: number): string {\n        return this.ROOT_CACHE_KEY + 'url:' + courseId;\n    }\n\n    /**\n     * Get a url data.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} key     Name of the property to check.\n     * @param {any}  value   Value to search.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}  Promise resolved when the url is retrieved.\n     */\n    protected getUrlDataByKey(courseId: number, key: string, value: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    courseids: [courseId]\n                },\n                preSets = {\n                    cacheKey: this.getUrlCacheKey(courseId)\n                };\n\n            return site.read('mod_url_get_urls_by_courses', params, preSets).then((response) => {\n                if (response && response.urls) {\n                    const currentUrl = response.urls.find((url) => {\n                        return url[key] == value;\n                    });\n                    if (currentUrl) {\n                        return currentUrl;\n                    }\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get a url by course module ID.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} cmId     Course module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}   Promise resolved when the url is retrieved.\n     */\n    getUrl(courseId: number, cmId: number, siteId?: string): Promise<any> {\n        return this.getUrlDataByKey(courseId, 'coursemodule', cmId, siteId);\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param  {number} moduleId The module ID.\n     * @param  {number} courseId Course ID of the module.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const promises = [];\n\n        promises.push(this.invalidateUrlData(courseId, siteId));\n        promises.push(this.courseProvider.invalidateModule(moduleId, siteId));\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Invalidates url data.\n     *\n     * @param {number} courseid Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}   Promise resolved when the data is invalidated.\n     */\n    invalidateUrlData(courseId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getUrlCacheKey(courseId));\n        });\n    }\n\n    /**\n     * Returns whether or not getUrl WS available or not.\n     *\n     * @return {boolean} If WS is abalaible.\n     * @since 3.3\n     */\n    isGetUrlWSAvailable(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('mod_url_get_urls_by_courses');\n    }\n\n    /**\n     * Report the url as being viewed.\n     *\n     * @param {number} id Module ID.\n     * @return {Promise<any>}  Promise resolved when the WS call is successful.\n     */\n    logView(id: number): Promise<any> {\n        const params = {\n            urlid: id\n        };\n\n        return this.sitesProvider.getCurrentSite().write('mod_url_view_url', params);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/url/providers/url.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { ModalController, Modal } from 'ionic-angular';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Helper service with some features to capture media (image, audio, video).\n */\n@Injectable()\nexport class CoreEmulatorCaptureHelperProvider {\n    protected possibleAudioMimeTypes = {\n        'audio/webm': 'weba',\n        'audio/ogg': 'ogg'\n    };\n    protected possibleVideoMimeTypes = {\n        'video/webm;codecs=vp9': 'webm',\n        'video/webm;codecs=vp8': 'webm',\n        'video/ogg': 'ogv'\n    };\n    protected win: any;\n    videoMimeType: string;\n    audioMimeType: string;\n\n    constructor(private utils: CoreUtilsProvider, private mimeUtils: CoreMimetypeUtilsProvider,\n            private modalCtrl: ModalController) {\n        // Convert the window to \"any\" type because some of the variables used (like MediaRecorder) aren't in the window spec.\n        this.win = <any> window;\n    }\n\n    /**\n     * Capture media (image, audio, video).\n     *\n     * @param {string} type Type of media: image, audio, video.\n     * @param {any} [options] Optional options.\n     * @return {Promise<any>} Promise resolved when captured, rejected if error.\n     */\n    captureMedia(type: string, options: any): Promise<any> {\n        options = options || {};\n\n        try {\n            // Build the params to send to the modal.\n            const deferred = this.utils.promiseDefer(),\n                params: any = {\n                    type: type\n                };\n            let mimeAndExt,\n                modal: Modal;\n\n            // Initialize some data based on the type of media to capture.\n            if (type == 'video') {\n                mimeAndExt = this.getMimeTypeAndExtension(type, options.mimetypes);\n                params.mimetype = mimeAndExt.mimetype;\n                params.extension = mimeAndExt.extension;\n            } else if (type == 'audio') {\n                mimeAndExt = this.getMimeTypeAndExtension(type, options.mimetypes);\n                params.mimetype = mimeAndExt.mimetype;\n                params.extension = mimeAndExt.extension;\n            } else if (type == 'image') {\n                if (typeof options.sourceType != 'undefined' && options.sourceType != 1) {\n                    return Promise.reject('This source type is not supported in desktop.');\n                }\n\n                if (options.cameraDirection == 1) {\n                    params.facingMode = 'user';\n                }\n\n                if (options.encodingType == 1) {\n                    params.mimetype = 'image/png';\n                    params.extension = 'png';\n                } else {\n                    params.mimetype = 'image/jpeg';\n                    params.extension = 'jpeg';\n                }\n\n                if (options.quality >= 0 && options.quality <= 100) {\n                    params.quality = options.quality / 100;\n                }\n\n                if (options.destinationType == 0) {\n                    params.returnDataUrl = true;\n                }\n            }\n\n            if (options.duration) {\n                params.maxTime = options.duration * 1000;\n            }\n\n            modal = this.modalCtrl.create('CoreEmulatorCaptureMediaPage', params);\n            modal.present();\n            modal.onDidDismiss((data: any, role: string) => {\n                if (role == 'success') {\n                    deferred.resolve(data);\n                } else {\n                    deferred.reject(data);\n                }\n            });\n\n            return deferred.promise;\n        } catch (ex) {\n            return Promise.reject(ex.toString());\n        }\n    }\n\n    /**\n     * Get the mimetype and extension to capture media.\n     *\n     * @param {string} type Type of media: image, audio, video.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {{extension: string, mimetype: string}} An object with mimetype and extension to use.\n     */\n    protected getMimeTypeAndExtension(type: string, mimetypes: string[]): { extension: string, mimetype: string } {\n        const result: any = {};\n\n        if (mimetypes && mimetypes.length) {\n            // Search for a supported mimetype.\n            for (let i = 0; i < mimetypes.length; i++) {\n                const mimetype = mimetypes[i],\n                    matches = mimetype.match(new RegExp('^' + type + '/'));\n\n                if (matches && matches.length && this.win.MediaRecorder.isTypeSupported(mimetype)) {\n                    result.mimetype = mimetype;\n                    break;\n                }\n            }\n        }\n\n        if (result.mimetype) {\n            // Found a supported mimetype in the mimetypes array, get the extension.\n            result.extension = this.mimeUtils.getExtension(result.mimetype);\n        } else if (type == 'video') {\n            // No mimetype found, use default extension.\n            result.mimetype = this.videoMimeType;\n            result.extension = this.possibleVideoMimeTypes[result.mimetype];\n        } else if (type == 'audio') {\n            // No mimetype found, use default extension.\n            result.mimetype = this.audioMimeType;\n            result.extension = this.possibleAudioMimeTypes[result.mimetype];\n        }\n\n        return result;\n    }\n\n    /**\n     * Init the getUserMedia function, using a deprecated function as fallback if the new one doesn't exist.\n     *\n     * @return {boolean} Whether the function is supported.\n     */\n    protected initGetUserMedia(): boolean {\n        const nav = <any> navigator;\n        // Check if there is a function to get user media.\n        if (typeof nav.mediaDevices == 'undefined') {\n            nav.mediaDevices = {};\n        }\n\n        if (!nav.mediaDevices.getUserMedia) {\n            // New function doesn't exist, check if the deprecated function is supported.\n            nav.getUserMedia = nav.getUserMedia || nav.webkitGetUserMedia || nav.mozGetUserMedia || nav.msGetUserMedia;\n\n            if (nav.getUserMedia) {\n                // Deprecated function exists, support the new function using the deprecated one.\n                navigator.mediaDevices.getUserMedia = (constraints): Promise<any> => {\n                    const deferred = this.utils.promiseDefer();\n                    nav.getUserMedia(constraints, deferred.resolve, deferred.reject);\n\n                    return deferred.promise;\n                };\n            } else {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Initialize the mimetypes to use when capturing.\n     */\n    protected initMimeTypes(): void {\n        // Determine video and audio mimetype to use.\n        for (const mimeType in this.possibleVideoMimeTypes) {\n            if (this.win.MediaRecorder.isTypeSupported(mimeType)) {\n                this.videoMimeType = mimeType;\n                break;\n            }\n        }\n\n        for (const mimeType in this.possibleAudioMimeTypes) {\n            if (this.win.MediaRecorder.isTypeSupported(mimeType)) {\n                this.audioMimeType = mimeType;\n                break;\n            }\n        }\n    }\n\n    /**\n     * Load the Mocks that need it.\n     *\n     * @return {Promise<void>} Promise resolved when loaded.\n     */\n    load(): Promise<void> {\n        if (typeof this.win.MediaRecorder != 'undefined' && this.initGetUserMedia()) {\n            this.initMimeTypes();\n        }\n\n        return Promise.resolve();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/capture-helper.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// electron (ignored)\n// module id = 167\n// module chunks = 60","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Code based on https://github.com/martinpritchardelevate/ionic-split-pane-demo\n\nimport { Component, ViewChild, Input, ElementRef, OnInit, Optional } from '@angular/core';\nimport { NavController, Nav } from 'ionic-angular';\n\n/**\n * Directive to create a split view layout.\n *\n * @description\n * To init/change the right pane contents (content pane), inject this component in the master page.\n * @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\n * Then use the push function to load.\n *\n * Accepts the following params:\n *\n * @param {string|boolean} [when] When the split-pane should be shown. Can be a CSS media query expression, or a shortcut\n * expression. Can also be a boolean expression. Check split-pane component documentation for more information.\n *\n * Example:\n *\n * <core-split-view [when]=\"lg\">\n *     <ion-content><!-- CONTENT TO SHOW ON THE LEFT PANEL (MENU) --></ion-content>\n * </core-split-view>\n */\n@Component({\n    selector: 'core-split-view',\n    templateUrl: 'split-view.html'\n})\nexport class CoreSplitViewComponent implements OnInit {\n    // @todo Mix both panels header buttons\n\n    @ViewChild('detailNav') detailNav: Nav;\n    @Input() when?: string | boolean = 'md';\n    protected isEnabled = false;\n    protected masterPageName = '';\n    protected masterPageIndex = 0;\n    protected loadDetailPage: any = false;\n    protected element: HTMLElement; // Current element.\n\n    // Empty placeholder for the 'detail' page.\n    detailPage: any = null;\n\n    constructor(@Optional() private masterNav: NavController, element: ElementRef) {\n        this.element = element.nativeElement;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Get the master page name and set an empty page as a placeholder.\n        this.masterPageName = this.masterNav.getActive().component.name;\n        this.masterPageIndex = this.masterNav.indexOf(this.masterNav.getActive());\n        this.emptyDetails();\n    }\n\n    /**\n     * Get the details NavController. If split view is not enabled, it will return the master nav.\n     *\n     * @return {NavController} Details NavController.\n     */\n    getDetailsNav(): NavController {\n        if (this.isEnabled) {\n            return this.detailNav;\n        } else {\n            return this.masterNav;\n        }\n    }\n\n    /**\n     * Get the master NavController.\n     *\n     * @return {NavController} Master NavController.\n     */\n    getMasterNav(): NavController {\n        return this.masterNav;\n    }\n\n    /**\n     * Check if both panels are shown. It depends on screen width.\n     *\n     * @return {boolean} If split view is enabled.\n     */\n    isOn(): boolean {\n        return this.isEnabled;\n    }\n\n    /**\n     * Push a page to the navigation stack. It will decide where to load it depending on the size of the screen.\n     *\n     * @param {any} page   The component class or deeplink name you want to push onto the navigation stack.\n     * @param {any} params Any NavParams you want to pass along to the next view.\n     */\n    push(page: any, params?: any): void {\n        if (this.isEnabled) {\n            this.detailNav.setRoot(page, params);\n        } else {\n            this.loadDetailPage = {\n                component: page,\n                data: params\n            };\n            this.masterNav.push(page, params);\n        }\n    }\n\n    /**\n     * Set the details panel to default info.\n     */\n    emptyDetails(): void {\n        this.loadDetailPage = false;\n        this.detailNav.setRoot('CoreSplitViewPlaceholderPage');\n    }\n\n    /**\n     * Splitpanel visibility has changed.\n     *\n     * @param {Boolean} isOn If it fits both panels at the same time.\n     */\n    onSplitPaneChanged(isOn: boolean): void {\n        this.isEnabled = isOn;\n        if (this.masterNav && this.detailNav) {\n            (isOn) ? this.activateSplitView() : this.deactivateSplitView();\n        }\n    }\n\n    /**\n     * Enable the split view, show both panels and do some magical navigation.\n     */\n    activateSplitView(): void {\n        const currentView = this.masterNav.getActive(),\n            currentPageName = currentView.component.name;\n        if (this.masterNav.getPrevious() && this.masterNav.getPrevious().component.name == this.masterPageName) {\n            if (currentPageName != this.masterPageName) {\n                // CurrentView is a 'Detail' page remove it from the 'master' nav stack.\n                this.masterNav.pop();\n\n                // And add it to the 'detail' nav stack.\n                this.detailNav.setRoot(currentView.component, currentView.data);\n            } else if (this.loadDetailPage) {\n                // MasterPage is shown, load the last detail page if found.\n                this.detailNav.setRoot(this.loadDetailPage.component, this.loadDetailPage.data);\n            }\n            this.loadDetailPage = false;\n        }\n    }\n\n    /**\n     * Disabled the split view, show only one panel and do some magical navigation.\n     */\n    deactivateSplitView(): void {\n        const detailView = this.detailNav.getActive(),\n            currentPageName = detailView.component.name;\n        if (currentPageName != 'CoreSplitViewPlaceholderPage') {\n            // Current detail view is a 'Detail' page so, not the placeholder page, push it on 'master' nav stack.\n            this.masterNav.insert(this.masterPageIndex + 1, detailView.component, detailView.data);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/split-view/split-view.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreSite } from '@classes/site';\n\n/**\n * Service to handle my files and site files.\n */\n@Injectable()\nexport class AddonFilesProvider {\n    protected ROOT_CACHE_KEY = 'mmaFiles:';\n    static PRIVATE_FILES_COMPONENT = 'mmaFilesMy';\n    static SITE_FILES_COMPONENT = 'mmaFilesSite';\n\n    constructor(private sitesProvider: CoreSitesProvider, private mimeUtils: CoreMimetypeUtilsProvider) { }\n\n    /**\n     * Check if core_user_get_private_files_info WS call is available.\n     *\n     * @return {boolean} Whether the WS is available, false otherwise.\n     */\n    canGetPrivateFilesInfo(): boolean {\n        return this.sitesProvider.wsAvailableInCurrentSite('core_user_get_private_files_info');\n    }\n\n    /**\n     * Check if user can view his private files.\n     *\n     * @return {boolean} Whether the user can view his private files.\n     */\n    canViewPrivateFiles(): boolean {\n        return this.sitesProvider.getCurrentSite().canAccessMyFiles() && !this.isPrivateFilesDisabledInSite();\n    }\n\n    /**\n     * Check if user can view site files.\n     *\n     * @return {boolean} Whether the user can view site files.\n     */\n    canViewSiteFiles(): boolean {\n        return !this.isSiteFilesDisabledInSite();\n    }\n\n    /**\n     * Check if user can upload private files.\n     *\n     * @return {boolean} Whether the user can upload private files.\n     */\n    canUploadFiles(): boolean {\n        const currentSite = this.sitesProvider.getCurrentSite();\n\n        return currentSite.canAccessMyFiles() && currentSite.canUploadFiles() && !this.isUploadDisabledInSite();\n    }\n\n    /**\n     * Get the list of files.\n     *\n     * @param {any} params A list of parameters accepted by the Web service.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any[]>} Promise resolved with the files.\n     */\n    getFiles(params: any, siteId?: string): Promise<any[]> {\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const preSets = {\n                cacheKey: this.getFilesListCacheKey(params)\n            };\n\n            return site.read('core_files_get_files', params, preSets);\n        }).then((result) => {\n            const entries = [];\n\n            if (result.files) {\n                result.files.forEach((entry) => {\n                    if (entry.isdir) {\n                        // Create a \"link\" to load the folder.\n                        entry.link = {\n                            contextid: entry.contextid || '',\n                            component: entry.component || '',\n                            filearea: entry.filearea || '',\n                            itemid: entry.itemid || 0,\n                            filepath: entry.filepath || '',\n                            filename: entry.filename || ''\n                        };\n\n                        if (entry.component) {\n                            // Delete unused elements that may break the request.\n                            entry.link.filename = '';\n                        }\n                    }\n\n                    if (entry.isdir) {\n                        entry.imgPath = this.mimeUtils.getFolderIcon();\n                    } else {\n                        entry.imgPath = this.mimeUtils.getFileIcon(entry.filename);\n                    }\n\n                    entries.push(entry);\n                });\n            }\n\n            return entries;\n        });\n    }\n\n    /**\n     * Get cache key for file list WS calls.\n     *\n     * @param {any} params Params of the WS.\n     * @return {string} Cache key.\n     */\n    protected getFilesListCacheKey(params: any): string {\n        const root = !params.component ? 'site' : 'my';\n\n        return this.ROOT_CACHE_KEY + 'list:' + root + ':' + params.contextid + ':' + params.filepath;\n    }\n\n    /**\n     * Get the private files of the current user.\n     *\n     * @return {Promise<any[]>} Promise resolved with the files.\n     */\n    getPrivateFiles(): Promise<any[]> {\n        return this.getFiles(this.getPrivateFilesRootParams());\n    }\n\n    /**\n     * Get params to get root private files directory.\n     *\n     * @return {any} Params.\n     */\n    protected getPrivateFilesRootParams(): any {\n        return {\n            contextid: -1,\n            component: 'user',\n            filearea: 'private',\n            contextlevel: 'user',\n            instanceid: this.sitesProvider.getCurrentSite().getUserId(),\n            itemid: 0,\n            filepath: '',\n            filename: ''\n        };\n    }\n\n    /**\n     * Get private files info.\n     *\n     * @param {number} [userId] User ID. If not defined, current user in the site.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved with the info.\n     */\n    getPrivateFilesInfo(userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            const params = {\n                userid: userId\n            },\n                preSets = {\n                    cacheKey: this.getPrivateFilesInfoCacheKey(userId)\n                };\n\n            return site.read('core_user_get_private_files_info', params, preSets);\n        });\n    }\n\n    /**\n     * Get the cache key for private files info WS calls.\n     *\n     * @param {number} userId User ID.\n     * @return {string} Cache key.\n     */\n    protected getPrivateFilesInfoCacheKey(userId: number): string {\n        return this.getPrivateFilesInfoCommonCacheKey() + ':' + userId;\n    }\n\n    /**\n     * Get the common part of the cache keys for private files info WS calls.\n     *\n     * @return {string} Cache key.\n     */\n    protected getPrivateFilesInfoCommonCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'privateInfo';\n    }\n\n    /**\n     * Get the site files.\n     *\n     * @return {Promise<any[]>} Promise resolved with the files.\n     */\n    getSiteFiles(): Promise<any[]> {\n        return this.getFiles(this.getSiteFilesRootParams());\n    }\n\n    /**\n     * Get params to get root site files directory.\n     *\n     * @return {any} Params.\n     */\n    protected getSiteFilesRootParams(): any {\n        return {\n            contextid: 0,\n            component: '',\n            filearea: '',\n            itemid: 0,\n            filepath: '',\n            filename: ''\n        };\n    }\n\n    /**\n     * Invalidates list of files in a certain directory.\n     *\n     * @param {string} root Root of the directory ('my' for private files, 'site' for site files).\n     * @param {string} path Path to the directory.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateDirectory(root: string, path: string, siteId?: string): Promise<any> {\n        let params;\n        if (!path) {\n            if (root === 'site') {\n                params = this.getSiteFilesRootParams();\n            } else if (root === 'my') {\n                params = this.getPrivateFilesRootParams();\n            }\n        } else {\n            params = path;\n        }\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getFilesListCacheKey(params));\n        });\n    }\n\n    /**\n     * Invalidates private files info for all users.\n     *\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidatePrivateFilesInfo(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKeyStartingWith(this.getPrivateFilesInfoCommonCacheKey());\n        });\n    }\n\n    /**\n     * Invalidates private files info for a certain user.\n     *\n     * @param {number} [userId] User ID. If not defined, current user in the site.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidatePrivateFilesInfoForUser(userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return site.invalidateWsCacheForKey(this.getPrivateFilesInfoCacheKey(userId));\n        });\n    }\n\n    /**\n     * Check if Files is disabled in a certain site.\n     *\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>} Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Check if Files is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isDisabledInSite(site: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('$mmSideMenuDelegate_mmaFiles');\n    }\n\n    /**\n     * Return whether or not the plugin is enabled.\n     *\n     * @return {boolean} True if enabled, false otherwise.\n     */\n    isPluginEnabled(): boolean {\n        return this.canViewPrivateFiles() || this.canViewSiteFiles() || this.canUploadFiles();\n    }\n\n    /**\n     * Check if private files is disabled in a certain site.\n     *\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>} Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isPrivateFilesDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isPrivateFilesDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Check if private files is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isPrivateFilesDisabledInSite(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('files_privatefiles');\n    }\n\n    /**\n     * Check if site files is disabled in a certain site.\n     *\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>} Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isSiteFilesDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isSiteFilesDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Check if site files is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isSiteFilesDisabledInSite(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('files_sitefiles');\n    }\n\n    /**\n     * Check if upload files is disabled in a certain site.\n     *\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>} Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isUploadDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isUploadDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Check if upload files is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isUploadDisabledInSite(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('files_upload');\n    }\n\n    /**\n     * Move a file from draft area to private files.\n     *\n     * @param {number} draftId The draft area ID of the file.\n     * @param {string} [siteid] ID of the site. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved in success, rejected otherwise.\n     */\n    moveFromDraftToPrivate(draftId: number, siteId?: string): Promise<any> {\n        const params = {\n                draftid: draftId\n            },\n            preSets = {\n                responseExpected: false\n            };\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.write('core_user_add_user_private_files', params, preSets);\n        });\n    }\n\n    /**\n     * Check the Moodle version in order to check if upload files is working.\n     *\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<boolean>} Promise resolved with true if WS is working, false otherwise.\n     */\n    versionCanUploadFiles(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            // Upload private files doesn't work for Moodle 3.1.0 due to a bug.\n            return site.isVersionGreaterEqualThan('3.1.1');\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/files/providers/files.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSite } from '@classes/site';\nimport * as moment from 'moment';\n\n/**\n * Service that provides some features regarding course overview.\n */\n@Injectable()\nexport class CoreCoursesMyOverviewProvider {\n    static EVENTS_LIMIT = 20;\n    static EVENTS_LIMIT_PER_COURSE = 10;\n    protected ROOT_CACHE_KEY = 'myoverview:';\n\n    constructor(private sitesProvider: CoreSitesProvider) { }\n\n    /**\n     * Get calendar action events for the given course.\n     *\n     * @param {number} courseId Only events in this course.\n     * @param {number} [afterEventId] The last seen event id.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<{events: any[], canLoadMore: number}>} Promise resolved when the info is retrieved.\n     */\n    getActionEventsByCourse(courseId: number, afterEventId?: number, siteId?: string):\n            Promise<{ events: any[], canLoadMore: number }> {\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const time = moment().subtract(14, 'days').unix(), // Check two weeks ago.\n                data: any = {\n                    timesortfrom: time,\n                    courseid: courseId,\n                    limitnum: CoreCoursesMyOverviewProvider.EVENTS_LIMIT_PER_COURSE\n                },\n                preSets = {\n                    cacheKey: this.getActionEventsByCourseCacheKey(courseId)\n                };\n\n            if (afterEventId) {\n                data.aftereventid = afterEventId;\n            }\n\n            return site.read('core_calendar_get_action_events_by_course', data, preSets).then((courseEvents): any => {\n                if (courseEvents && courseEvents.events) {\n                    return this.treatCourseEvents(courseEvents, time);\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for get calendar action events for the given course value WS call.\n     *\n     * @param {number} courseId Only events in this course.\n     * @return {string} Cache key.\n     */\n    protected getActionEventsByCourseCacheKey(courseId: number): string {\n        return this.getActionEventsByCoursesCacheKey() + ':' + courseId;\n    }\n\n    /**\n     * Get calendar action events for a given list of courses.\n     *\n     * @param {number[]} courseIds Course IDs.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<{[s: string]: {events: any[], canLoadMore: number}}>} Promise resolved when the info is retrieved.\n     */\n    getActionEventsByCourses(courseIds: number[], siteId?: string): Promise<{ [s: string]:\n            { events: any[], canLoadMore: number } }> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const time = moment().subtract(14, 'days').unix(), // Check two weeks ago.\n                data = {\n                    timesortfrom: time,\n                    courseids: courseIds,\n                    limitnum: CoreCoursesMyOverviewProvider.EVENTS_LIMIT_PER_COURSE\n                },\n                preSets = {\n                    cacheKey: this.getActionEventsByCoursesCacheKey()\n                };\n\n            return site.read('core_calendar_get_action_events_by_courses', data, preSets).then((events): any => {\n                if (events && events.groupedbycourse) {\n                    const courseEvents = {};\n\n                    events.groupedbycourse.forEach((course) => {\n                        courseEvents[course.courseid] = this.treatCourseEvents(course, time);\n                    });\n\n                    return courseEvents;\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for get calendar action events for a given list of courses value WS call.\n     *\n     * @return {string} Cache key.\n     */\n    protected getActionEventsByCoursesCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'bycourse';\n    }\n\n    /**\n     * Get calendar action events based on the timesort value.\n     *\n     * @param {number} [afterEventId] The last seen event id.\n     * @param {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<{events: any[], canLoadMore: number}>} Promise resolved when the info is retrieved.\n     */\n    getActionEventsByTimesort(afterEventId: number, siteId?: string): Promise<{ events: any[], canLoadMore: number }> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const time = moment().subtract(14, 'days').unix(), // Check two weeks ago.\n                data: any = {\n                    timesortfrom: time,\n                    limitnum: CoreCoursesMyOverviewProvider.EVENTS_LIMIT\n                },\n                preSets = {\n                    cacheKey: this.getActionEventsByTimesortCacheKey(afterEventId, data.limitnum),\n                    getCacheUsingCacheKey: true,\n                    uniqueCacheKey: true\n                };\n\n            if (afterEventId) {\n                data.aftereventid = afterEventId;\n            }\n\n            return site.read('core_calendar_get_action_events_by_timesort', data, preSets).then((events): any => {\n                if (events && events.events) {\n                    const canLoadMore = events.events.length >= data.limitnum ? events.lastid : undefined;\n\n                    // Filter events by time in case it uses cache.\n                    events = events.events.filter((element) => {\n                        return element.timesort >= time;\n                    });\n\n                    return {\n                        events: events,\n                        canLoadMore: canLoadMore\n                    };\n                }\n\n                return Promise.reject(null);\n            });\n        });\n    }\n\n    /**\n     * Get prefix cache key for calendar action events based on the timesort value WS calls.\n     *\n     * @return {string} Cache key.\n     */\n    protected getActionEventsByTimesortPrefixCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'bytimesort:';\n    }\n\n    /**\n     * Get cache key for get calendar action events based on the timesort value WS call.\n     *\n     * @param {number} [afterEventId] The last seen event id.\n     * @param {number} [limit] Limit num of the call.\n     * @return {string} Cache key.\n     */\n    protected getActionEventsByTimesortCacheKey(afterEventId?: number, limit?: number): string {\n        afterEventId = afterEventId || 0;\n        limit = limit || 0;\n\n        return this.getActionEventsByTimesortPrefixCacheKey() + afterEventId + ':' + limit;\n    }\n\n    /**\n     * Invalidates get calendar action events for a given list of courses WS call.\n     *\n     * @param {string} [siteId] Site ID to invalidate. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateActionEventsByCourses(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKeyStartingWith(this.getActionEventsByCoursesCacheKey());\n        });\n    }\n\n    /**\n     * Invalidates get calendar action events based on the timesort value WS call.\n     *\n     * @param {string} [siteId] Site ID to invalidate. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateActionEventsByTimesort(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKeyStartingWith(this.getActionEventsByTimesortPrefixCacheKey());\n        });\n    }\n\n    /**\n     * Returns whether or not My Overview is available for a certain site.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with true if available, resolved with false or rejected otherwise.\n     */\n    isAvailable(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.wsAvailable('core_calendar_get_action_events_by_courses');\n        });\n    }\n\n    /**\n     * Check if My Overview is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isDisabledInSite(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('$mmSideMenuDelegate_mmaMyOverview');\n    }\n\n    /**\n     * Check if My Overview is available and not disabled.\n     *\n     * @return {Promise<boolean>} Promise resolved with true if enabled, resolved with false otherwise.\n     */\n    isEnabled(): Promise<boolean> {\n        if (!this.isDisabledInSite()) {\n            return this.isAvailable().catch(() => {\n                return false;\n            });\n        }\n\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Handles course events, filtering and treating if more can be loaded.\n     *\n     * @param {any} course Object containing response course events info.\n     * @param {number} timeFrom Current time to filter events from.\n     * @return {{events: any[], canLoadMore: number}} Object with course events and last loaded event id if more can be loaded.\n     */\n    protected treatCourseEvents(course: any, timeFrom: number): { events: any[], canLoadMore: number } {\n        const canLoadMore: number =\n            course.events.length >= CoreCoursesMyOverviewProvider.EVENTS_LIMIT_PER_COURSE ? course.lastid : undefined;\n\n        // Filter events by time in case it uses cache.\n        course.events = course.events.filter((element) => {\n            return element.timesort >= timeFrom;\n        });\n\n        return {\n            events: course.events,\n            canLoadMore: canLoadMore\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/providers/my-overview.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, Input, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreSitePluginsProvider } from '../../providers/siteplugins';\nimport { CoreCourseModuleMainComponent } from '@core/course/providers/module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@core/course/providers/module-prefetch-delegate';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreSitePluginsPluginContentComponent } from '../plugin-content/plugin-content';\n\n/**\n * Component that displays the index of a module site plugin.\n */\n@Component({\n    selector: 'core-site-plugins-module-index',\n    templateUrl: 'module-index.html',\n})\nexport class CoreSitePluginsModuleIndexComponent implements OnInit, OnDestroy, CoreCourseModuleMainComponent {\n    @Input() module: any; // The module.\n    @Input() courseId: number; // Course ID the module belongs to.\n\n    @ViewChild(CoreSitePluginsPluginContentComponent) content: CoreSitePluginsPluginContentComponent;\n\n    component: string;\n    method: string;\n    args: any;\n    bootstrapResult: any;\n\n    // Data for context menu.\n    externalUrl: string;\n    description: string;\n    refreshIcon: string;\n    prefetchStatusIcon: string;\n    prefetchText: string;\n    size: string;\n\n    protected isDestroyed = false;\n    protected statusObserver;\n\n    constructor(protected sitePluginsProvider: CoreSitePluginsProvider, protected courseHelper: CoreCourseHelperProvider,\n            protected prefetchDelegate: CoreCourseModulePrefetchDelegate, protected textUtils: CoreTextUtilsProvider,\n            protected translate: TranslateService) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.refreshIcon = 'spinner';\n\n        if (this.module) {\n            const handler = this.sitePluginsProvider.getSitePluginHandler(this.module.modname);\n            if (handler) {\n                this.component = handler.plugin.component;\n                this.method = handler.handlerSchema.method;\n                this.args = {\n                    courseid: this.courseId,\n                    cmid: this.module.id\n                };\n                this.bootstrapResult = handler.bootstrapResult;\n            }\n\n            // Get the data for the context menu.\n            this.description = this.module.description;\n            this.externalUrl = this.module.url;\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} [refresher] Refresher.\n     * @param {Function} [done] Function to call when done.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void): Promise<any> {\n        if (this.content) {\n            this.refreshIcon = 'spinner';\n\n            return Promise.resolve(this.content.refreshData()).finally(() => {\n                refresher && refresher.complete();\n                done && done();\n            });\n        } else {\n            refresher && refresher.complete();\n            done && done();\n\n            return Promise.resolve();\n        }\n    }\n\n    /**\n     * Function called when the data of the site plugin content is loaded.\n     */\n    contentLoaded(refresh: boolean): void {\n        this.refreshIcon = 'refresh';\n\n        // Check if there is a prefetch handler for this type of module.\n        if (this.prefetchDelegate.getPrefetchHandlerFor(this.module)) {\n            this.courseHelper.fillContextMenu(this, this.module, this.courseId, refresh, this.component);\n        }\n    }\n\n    /**\n     * Function called when starting to load the data of the site plugin content.\n     */\n    contentLoading(refresh: boolean): void {\n        this.refreshIcon = 'spinner';\n    }\n\n    /**\n     * Expand the description.\n     */\n    expandDescription(): void {\n        this.textUtils.expandText(this.translate.instant('core.description'), this.description, this.component, this.module.id);\n    }\n\n    /**\n     * Prefetch the module.\n     */\n    prefetch(): void {\n        this.courseHelper.contextMenuPrefetch(this, this.module, this.courseId);\n    }\n\n    /**\n     * Confirm and remove downloaded files.\n     */\n    removeFiles(): void {\n        this.courseHelper.confirmAndRemoveFiles(this.module, this.courseId);\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.statusObserver && this.statusObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/components/module-index/module-index.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { Platform } from 'ionic-angular';\nimport { SQLiteDB } from '@classes/sqlitedb';\nimport { SQLiteDBMock } from '@core/emulator/classes/sqlitedb';\n\n/**\n * This service allows interacting with the local database to store and retrieve data.\n */\n@Injectable()\nexport class CoreDbProvider {\n\n    protected dbInstances = {};\n\n    constructor(private sqlite: SQLite, private platform: Platform) { }\n\n    /**\n     * Get or create a database object.\n     *\n     * The database objects are cached statically.\n     *\n     * @param {string} name DB name.\n     * @param {boolean} forceNew True if it should always create a new instance.\n     * @return {SQLiteDB} DB.\n     */\n    getDB(name: string, forceNew?: boolean): SQLiteDB {\n        if (typeof this.dbInstances[name] === 'undefined' || forceNew) {\n            if (this.platform.is('cordova')) {\n                this.dbInstances[name] = new SQLiteDB(name, this.sqlite, this.platform);\n            } else {\n                this.dbInstances[name] = new SQLiteDBMock(name);\n            }\n        }\n\n        return this.dbInstances[name];\n    }\n\n    /**\n     * Delete a DB.\n     *\n     * @param {string} name DB name.\n     * @return {Promise<any>} Promise resolved when the DB is deleted.\n     */\n    deleteDB(name: string): Promise<any> {\n        let promise;\n\n        if (typeof this.dbInstances[name] != 'undefined') {\n            // Close the database first.\n            promise = this.dbInstances[name].close();\n        } else {\n            promise = Promise.resolve();\n        }\n\n        return promise.then(() => {\n            const db = this.dbInstances[name];\n            delete this.dbInstances[name];\n\n            if (this.platform.is('cordova')) {\n                return this.sqlite.deleteDatabase({\n                    name: name,\n                    location: 'default'\n                });\n            } else {\n                // In WebSQL we cannot delete the database, just empty it.\n                return db.emptyDatabase();\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/db.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// electron (ignored)\n// module id = 238\n// module chunks = 60","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    Component, Input, ViewChild, OnInit, OnChanges, DoCheck, ViewContainerRef, ComponentFactoryResolver, ComponentRef,\n    KeyValueDiffers, SimpleChange, ChangeDetectorRef, Optional, ElementRef\n} from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreLoggerProvider } from '@providers/logger';\n\n/**\n * Component to create another component dynamically.\n *\n * You need to pass the class of the component to this component (the class, not the name), along with the input data.\n *\n * So you should do something like:\n *\n *     import { MyComponent } from './component';\n *\n *     ...\n *\n *         this.component = MyComponent;\n *\n * And in the template:\n *\n *     <core-dynamic-component [component]=\"component\" [data]=\"data\">\n *         <p>Cannot render the data.</p>\n *     </core-dynamic-component>\n *\n * Please notice that the component that you pass needs to be declared in entryComponents of the module to be created dynamically.\n *\n * Alternatively, you can also supply a ComponentRef instead of the class of the component. In this case, the component won't\n * be instantiated because it already is, it will be attached to the view and the right data will be passed to it.\n * Passing ComponentRef is meant for site plugins, so we'll inject a NavController instance to the component.\n *\n * The contents of this component will be displayed if no component is supplied or it cannot be created. In the example above,\n * if no component is supplied then the template will show the message \"Cannot render the data.\".\n */\n@Component({\n    selector: 'core-dynamic-component',\n    templateUrl: 'dynamic-component.html'\n})\nexport class CoreDynamicComponent implements OnInit, OnChanges, DoCheck {\n\n    @Input() component: any;\n    @Input() data: any;\n\n    // Get the container where to put the dynamic component.\n    @ViewChild('dynamicComponent', { read: ViewContainerRef }) set dynamicComponent(el: ViewContainerRef) {\n        this.container = el;\n        this.createComponent();\n    }\n\n    instance: any;\n    container: ViewContainerRef;\n    protected logger: any;\n    protected differ: any; // To detect changes in the data input.\n\n    constructor(logger: CoreLoggerProvider, protected factoryResolver: ComponentFactoryResolver, differs: KeyValueDiffers,\n            @Optional() protected navCtrl: NavController, protected cdr: ChangeDetectorRef, protected element: ElementRef) {\n        this.logger = logger.getInstance('CoreDynamicComponent');\n        this.differ = differs.find([]).create();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.createComponent();\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if (!this.instance && changes.component) {\n            this.createComponent();\n        }\n    }\n\n    /**\n     * Detect and act upon changes that Angular can’t or won’t detect on its own (objects and arrays).\n     */\n    ngDoCheck(): void {\n        if (this.instance) {\n            // Check if there's any change in the data object.\n            const changes = this.differ.diff(this.data);\n            if (changes) {\n                this.setInputData();\n                if (this.instance.ngOnChanges) {\n                    this.instance.ngOnChanges(this.createChangesForComponent(changes));\n                }\n            }\n        }\n    }\n\n    /**\n     * Call a certain function on the component.\n     *\n     * @param {string} name Name of the function to call.\n     * @param {any[]} params List of params to send to the function.\n     * @return {any} Result of the call. Undefined if no component instance or the function doesn't exist.\n     */\n    callComponentFunction(name: string, params: any[]): any {\n        if (this.instance && typeof this.instance[name] == 'function') {\n            return this.instance[name].apply(this.instance, params);\n        }\n    }\n\n    /**\n     * Create a component, add it to a container and set the input data.\n     *\n     * @return {boolean} Whether the component was successfully created.\n     */\n    protected createComponent(): boolean {\n        if (!this.component || !this.container) {\n            // No component to instantiate or container doesn't exist right now.\n            return false;\n        }\n\n        if (this.instance) {\n            // Component already instantiated.\n            return true;\n        }\n\n        if (this.component instanceof ComponentRef) {\n            // A ComponentRef was supplied instead of the component class. Add it to the view.\n            this.container.insert(this.component.hostView);\n            this.instance = this.component.instance;\n\n            // This feature is usually meant for site plugins. Inject some properties.\n            this.instance['ChangeDetectorRef'] = this.cdr;\n            this.instance['NavController'] = this.navCtrl;\n            this.instance['componentContainer'] = this.element.nativeElement;\n        } else {\n            try {\n                // Create the component and add it to the container.\n                const factory = this.factoryResolver.resolveComponentFactory(this.component),\n                    componentRef = this.container.createComponent(factory);\n\n                this.instance = componentRef.instance;\n            } catch (ex) {\n                this.logger.error('Error creating component', ex);\n\n                return false;\n            }\n        }\n\n        this.setInputData();\n\n        return true;\n    }\n\n    /**\n     * Set the input data for the component.\n     */\n    protected setInputData(): void {\n        for (const name in this.data) {\n            this.instance[name] = this.data[name];\n        }\n    }\n\n    /**\n     * Given the changes on the data input, create the changes object for the component.\n     *\n     * @param {any} changes Changes in the data input (detected by KeyValueDiffer).\n     * @return {{[name: string]: SimpleChange}} List of changes for the component.\n     */\n    protected createChangesForComponent(changes: any): { [name: string]: SimpleChange } {\n        const newChanges: { [name: string]: SimpleChange } = {};\n\n        // Added items are considered first change.\n        changes.forEachAddedItem((item) => {\n            newChanges[item.key] = new SimpleChange(item.previousValue, item.currentValue, true);\n        });\n\n        // Changed or removed items aren't first change.\n        changes.forEachChangedItem((item) => {\n            newChanges[item.key] = new SimpleChange(item.previousValue, item.currentValue, false);\n        });\n        changes.forEachRemovedItem((item) => {\n            newChanges[item.key] = new SimpleChange(item.previousValue, item.currentValue, true);\n        });\n\n        return newChanges;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/dynamic-component/dynamic-component.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\n\n/**\n * Interface that all handlers must implement.\n */\nexport interface CoreFileUploaderHandler extends CoreDelegateHandler {\n    /**\n     * Handler's priority. The highest priority, the highest position.\n     * @type {string}\n     */\n    priority?: number;\n\n    /**\n     * Given a list of mimetypes, return the ones that are supported by the handler.\n     *\n     * @param {string[]} [mimetypes] List of mimetypes.\n     * @return {string[]} Supported mimetypes.\n     */\n    getSupportedMimetypes(mimetypes: string[]): string[];\n\n    /**\n     * Get the data to display the handler.\n     *\n     * @return {CoreFileUploaderHandlerData} Data.\n     */\n    getData(): CoreFileUploaderHandlerData;\n}\n\n/**\n * Data needed to render the handler in the file picker. It must be returned by the handler.\n */\nexport interface CoreFileUploaderHandlerData {\n    /**\n     * The title to display in the handler.\n     * @type {string}\n     */\n    title: string;\n\n    /**\n     * The icon to display in the handler.\n     * @type {string}\n     */\n    icon?: string;\n\n    /**\n     * The class to assign to the handler item.\n     * @type {string}\n     */\n    class?: string;\n\n    /**\n     * Action to perform when the handler is clicked.\n     *\n     * @param {number} [maxSize] Max size of the file. If not defined or -1, no max size.\n     * @param {boolean} [upload] Whether the file should be uploaded.\n     * @param {boolean} [allowOffline] True to allow selecting in offline, false to require connection.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {Promise<CoreFileUploaderHandlerResult>} Promise resolved with the result of picking/uploading the file.\n     */\n    action?(maxSize?: number, upload?: boolean, allowOffline?: boolean, mimetypes?: string[])\n        : Promise<CoreFileUploaderHandlerResult>;\n\n    /**\n     * Function called after the handler is rendered.\n     *\n     * @param {number} [maxSize] Max size of the file. If not defined or -1, no max size.\n     * @param {boolean} [upload] Whether the file should be uploaded.\n     * @param {boolean} [allowOffline] True to allow selecting in offline, false to require connection.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     */\n    afterRender?(maxSize: number, upload: boolean, allowOffline: boolean, mimetypes: string[]): void;\n}\n\n/**\n * The result of clicking a handler.\n */\nexport interface CoreFileUploaderHandlerResult {\n    /**\n     * Whether the file was treated (uploaded or copied to tmp folder).\n     * @type {boolean}\n     */\n    treated: boolean;\n\n    /**\n     * The path of the file picked. Required if treated=false and fileEntry is not set.\n     * @type {string}\n     */\n    path?: string;\n\n    /**\n     * The fileEntry of the file picked. Required if treated=false and path is not set.\n     * @type {any}\n     */\n    fileEntry?: any;\n\n    /**\n     * Whether the file should be deleted after the upload. Ignored if treated=true.\n     * @type {boolean}\n     */\n    delete?: boolean;\n\n    /**\n     * The result of picking/uploading the file. Ignored if treated=false.\n     * @type {any}\n     */\n    result?: any;\n}\n\n/**\n * Data returned by the delegate for each handler.\n */\nexport interface CoreFileUploaderHandlerDataToReturn extends CoreFileUploaderHandlerData {\n    /**\n     * Handler's priority.\n     * @type {number}\n     */\n    priority?: number;\n\n    /**\n     * Supported mimetypes.\n     * @type {string[]}\n     */\n    mimetypes?: string[];\n}\n\n/**\n * Delegate to register handlers to be shown in the file picker.\n */\n@Injectable()\nexport class CoreFileUploaderDelegate extends CoreDelegate {\n    protected handlers: { [s: string]: CoreFileUploaderHandler } = {}; // All registered handlers.\n    protected enabledHandlers: { [s: string]: CoreFileUploaderHandler } = {}; // Handlers enabled for the current site.\n\n    constructor(loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider,\n            protected eventsProvider: CoreEventsProvider) {\n        super('CoreFileUploaderDelegate', loggerProvider, sitesProvider, eventsProvider);\n\n        eventsProvider.on(CoreEventsProvider.LOGOUT, this.clearSiteHandlers.bind(this));\n    }\n\n    /**\n     * Clear current site handlers. Reserved for core use.\n     */\n    protected clearSiteHandlers(): void {\n        this.enabledHandlers = {};\n    }\n\n    /**\n     * Get the handlers for the current site.\n     *\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {CoreFileUploaderHandlerDataToReturn[]} List of handlers data.\n     */\n    getHandlers(mimetypes: string[]): CoreFileUploaderHandlerDataToReturn[] {\n        const handlers = [];\n\n        for (const name in this.enabledHandlers) {\n            const handler = this.enabledHandlers[name];\n            let supportedMimetypes;\n\n            if (mimetypes) {\n                if (!handler.getSupportedMimetypes) {\n                    // Handler doesn't implement a required function, don't add it.\n                    continue;\n                }\n\n                supportedMimetypes = handler.getSupportedMimetypes(mimetypes);\n\n                if (!supportedMimetypes.length) {\n                    // Handler doesn't support any mimetype, don't add it.\n                    continue;\n                }\n            }\n\n            const data: CoreFileUploaderHandlerDataToReturn = handler.getData();\n            data.priority = handler.priority;\n            data.mimetypes = supportedMimetypes;\n            handlers.push(data);\n        }\n\n        return handlers;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/providers/delegate.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreAppProvider } from '@providers/app';\n\n/**\n * Service to handle Offline messages.\n */\n@Injectable()\nexport class AddonMessagesOfflineProvider {\n\n    protected logger;\n\n    // Variables for database.\n    protected MESSAGES_TABLE = 'addon_messages_offline_messages';\n    protected tablesSchema = [\n        {\n            name: this.MESSAGES_TABLE,\n            columns: [\n                {\n                    name: 'touserid',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'useridfrom',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'smallmessage',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'timecreated',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'deviceoffline', // If message was stored because device was offline.\n                    type: 'INTEGER'\n                }\n            ],\n            primaryKeys: ['touserid', 'smallmessage', 'timecreated']\n        }\n    ];\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private appProvider: CoreAppProvider) {\n        this.logger = logger.getInstance('AddonMessagesOfflineProvider');\n        this.sitesProvider.createTablesFromSchema(this.tablesSchema);\n    }\n\n    /**\n     * Delete a message.\n     *\n     * @param  {number} toUserId    User ID to send the message to.\n     * @param  {string} message     The message.\n     * @param  {number} timeCreated The time the message was created.\n     * @param  {string} [siteId]    Site ID. If not defined, current site.\n     * @return {Promise<any>}       Promise resolved if stored, rejected if failure.\n     */\n    deleteMessage(toUserId: number, message: string, timeCreated: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.getDb().deleteRecords(this.MESSAGES_TABLE, {\n                    touserid: toUserId,\n                    smallmessage: message,\n                    timecreated: timeCreated\n                });\n        });\n    }\n\n    /**\n     * Get all messages where deviceoffline is set to 1.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved with messages.\n     */\n    getAllDeviceOfflineMessages(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.getDb().getRecords(this.MESSAGES_TABLE, {deviceoffline: 1});\n        });\n    }\n\n    /**\n     * Get offline messages to send to a certain user.\n     *\n     * @param  {number} toUserId       User ID to get messages to.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved with messages.\n     */\n    getMessages(toUserId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.getDb().getRecords(this.MESSAGES_TABLE, {touserid: toUserId});\n        });\n    }\n\n    /**\n     * Get all offline messages.\n     *\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}         Promise resolved with messages.\n     */\n    getAllMessages(siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.getDb().getAllRecords(this.MESSAGES_TABLE);\n        });\n    }\n\n    /**\n     * Check if there are offline messages to send to a certain user.\n     *\n     * @param  {number} toUserId User ID to check.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved with boolean: true if has offline messages, false otherwise.\n     */\n    hasMessages(toUserId: number, siteId?: string): Promise<any> {\n        return this.getMessages(toUserId, siteId).then((messages) => {\n            return !!messages.length;\n        });\n    }\n\n    /**\n     * Save a message to be sent later.\n     *\n     * @param  {number} toUserId User ID recipient of the message.\n     * @param  {string} message  The message to send.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved if stored, rejected if failure.\n     */\n    saveMessage(toUserId: number, message: string, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const entry = {\n                touserid: toUserId,\n                useridfrom: site.getUserId(),\n                smallmessage: message,\n                timecreated: new Date().getTime(),\n                deviceoffline: this.appProvider.isOnline() ? 0 : 1\n            };\n\n            return site.getDb().insertOrUpdateRecord(this.MESSAGES_TABLE, entry, {\n                        touserid: toUserId,\n                        smallmessage: message,\n                        timecreated: entry.timecreated\n                    }).then(() => {\n                return entry;\n            });\n        });\n    }\n\n    /**\n     * Set deviceoffline for a group of messages.\n     *\n     * @param  {any} messages Messages to update. Should be the same entry as retrieved from the DB.\n     * @param  {boolean} value   Value to set.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved if stored, rejected if failure.\n     */\n    setMessagesDeviceOffline(messages: any, value: boolean, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const db = site.getDb(),\n                promises = [],\n                data = { deviceoffline: value ? 1 : 0 };\n\n            messages.forEach((message) => {\n                promises.push(db.insertOrUpdateRecord(this.MESSAGES_TABLE, data, {\n                    touserid: message.touserid,\n                    smallmessage: message.smallmessage,\n                    timecreated: message.timecreated\n                }));\n            });\n\n            return Promise.all(promises);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/messages-offline.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { CoreCourseProvider } from '../../providers/course';\nimport { CoreCourseModuleDelegate } from '../../providers/module-delegate';\n\n/**\n * Component that displays info about an unsupported module.\n */\n@Component({\n    selector: 'core-course-unsupported-module',\n    templateUrl: 'unsupported-module.html',\n})\nexport class CoreCourseUnsupportedModuleComponent implements OnInit {\n    @Input() course: any; // The course to module belongs to.\n    @Input() module: any; // The module to render.\n\n    isDisabledInSite: boolean;\n    isSupportedByTheApp: boolean;\n    moduleName: string;\n\n    constructor(private courseProvider: CoreCourseProvider, private moduleDelegate: CoreCourseModuleDelegate) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.isDisabledInSite = this.moduleDelegate.isModuleDisabledInSite(this.module.modname);\n        this.isSupportedByTheApp = this.moduleDelegate.hasHandler(this.module.modname);\n        this.moduleName = this.courseProvider.translateModuleName(this.module.modname);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/components/unsupported-module/unsupported-module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { AddonModPageProvider } from './page';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { Http, Response } from '@angular/http';\n\n/**\n * Service that provides some features for page.\n */\n@Injectable()\nexport class AddonModPageHelperProvider {\n\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private domUtils: CoreDomUtilsProvider, private filepoolProvider: CoreFilepoolProvider,\n            private fileProvider: CoreFileProvider, private textUtils: CoreTextUtilsProvider, private http: Http,\n            private sitesProvider: CoreSitesProvider) {\n        this.logger = logger.getInstance('AddonModPageHelperProvider');\n    }\n\n    /**\n     * Gets the page HTML.\n     *\n     * @param {any} contents The module contents.\n     * @param {number} moduleId The module ID.\n     * @return {Promise<string>} The HTML of the page.\n     */\n    getPageHtml(contents: any, moduleId: number): Promise<string> {\n        let indexUrl,\n            promise;\n        const paths = {};\n\n        // Extract the information about paths from the module contents.\n        contents.forEach((content) => {\n            const url = content.fileurl;\n\n            if (this.isMainPage(content)) {\n                // This seems to be the most reliable way to spot the index page.\n                indexUrl = url;\n            } else {\n                let key = content.filename;\n                if (content.filepath !== '/') {\n                    // Add the folders without the leading slash.\n                    key = content.filepath.substr(1) + key;\n                }\n                paths[this.textUtils.decodeURIComponent(key)] = url;\n            }\n        });\n\n        // Promise handling when we are in a browser.\n        if (!indexUrl) {\n            // If ever that happens.\n            this.logger.debug('Could not locate the index page');\n            promise = Promise.reject(null);\n        } else if (this.fileProvider.isAvailable()) {\n            // The file system is available.\n            promise = this.filepoolProvider.downloadUrl(this.sitesProvider.getCurrentSiteId(), indexUrl, false,\n                AddonModPageProvider.COMPONENT, moduleId);\n        } else {\n            // We return the live URL.\n            promise = Promise.resolve(this.sitesProvider.getCurrentSite().fixPluginfileURL(indexUrl));\n        }\n\n        return promise.then((url) => {\n\n            // Fetch the URL content.\n            const promise = this.http.get(url).toPromise();\n\n            return promise.then((response: Response): any => {\n                const content = response.text();\n                if (typeof content !== 'string') {\n                    return Promise.reject(null);\n                }\n\n                // Now that we have the content, we update the SRC to point back to the external resource.\n                // That will be caught by core-format-text.\n                return this.domUtils.restoreSourcesInHtml(content, paths);\n            });\n        });\n    }\n\n    /**\n     * Returns whether the file is the main page of the module.\n     *\n     * @param {any} file An object returned from WS containing file info.\n     * @return {boolean}  Whether the file is the main page or not.\n     */\n    protected isMainPage(file: any): boolean {\n        const filename = file.filename || '',\n            fileurl = file.fileurl || '',\n            url = '/mod_page/content/index.html',\n            encodedUrl = encodeURIComponent(url);\n\n        return (filename === 'index.html' && (fileurl.indexOf(url) > 0 || fileurl.indexOf(encodedUrl) > 0 ));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\n\n/**\n * Service that provides helper functions for urls.\n */\n@Injectable()\nexport class AddonModUrlHelperProvider {\n\n    constructor(private sitesProvider: CoreSitesProvider, private domUtils: CoreDomUtilsProvider,\n        private contentLinksHelper: CoreContentLinksHelperProvider) { }\n\n    /**\n     * Opens a URL.\n     *\n     * @param {string} url The URL to go to.\n     */\n    open(url: string): void {\n        const modal = this.domUtils.showModalLoading();\n        this.contentLinksHelper.handleLink(url).then((treated) => {\n            if (!treated) {\n                return this.sitesProvider.getCurrentSite().openInBrowserWithAutoLoginIfSameSite(url);\n            }\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/url/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector, Component, NgModule, Compiler, ComponentFactory, ComponentRef, NgModuleRef } from '@angular/core';\nimport {\n    Platform, ActionSheetController, AlertController, LoadingController, ModalController, PopoverController, ToastController,\n    IonicModule\n} from 'ionic-angular';\nimport { TranslateService, TranslateModule } from '@ngx-translate/core';\nimport { CoreLoggerProvider } from '@providers/logger';\n\n// Import core providers.\nimport { CORE_PROVIDERS } from '@app/app.module';\nimport { CORE_CONTENTLINKS_PROVIDERS } from '@core/contentlinks/contentlinks.module';\nimport { CORE_COURSE_PROVIDERS } from '@core/course/course.module';\nimport { CORE_COURSES_PROVIDERS } from '@core/courses/courses.module';\nimport { CORE_FILEUPLOADER_PROVIDERS } from '@core/fileuploader/fileuploader.module';\nimport { CORE_GRADES_PROVIDERS } from '@core/grades/grades.module';\nimport { CORE_LOGIN_PROVIDERS } from '@core/login/login.module';\nimport { CORE_MAINMENU_PROVIDERS } from '@core/mainmenu/mainmenu.module';\nimport { CORE_SHAREDFILES_PROVIDERS } from '@core/sharedfiles/sharedfiles.module';\nimport { CORE_SITEHOME_PROVIDERS } from '@core/sitehome/sitehome.module';\nimport { CORE_USER_PROVIDERS } from '@core/user/user.module';\nimport { IONIC_NATIVE_PROVIDERS } from '@core/emulator/emulator.module';\n\n// Import only this provider to prevent circular dependencies.\nimport { CoreSitePluginsProvider } from '@core/siteplugins/providers/siteplugins';\n\n// Import other libraries and providers.\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Http } from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport { CoreConfigConstants } from '../../../configconstants';\nimport { CoreConstants } from '@core/constants';\nimport * as moment from 'moment';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n// Import core classes that can be useful for site plugins.\nimport { CoreSyncBaseProvider } from '@classes/base-sync';\nimport { CoreCache } from '@classes/cache';\nimport { CoreDelegate } from '@classes/delegate';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksModuleGradeHandler } from '@core/contentlinks/classes/module-grade-handler';\nimport { CoreContentLinksModuleIndexHandler } from '@core/contentlinks/classes/module-index-handler';\nimport { CoreCourseModulePrefetchHandlerBase } from '@core/course/classes/module-prefetch-handler';\n\n// Import all modules that define components, directives and pipes.\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { CoreCourseComponentsModule } from '@core/course/components/components.module';\nimport { CoreCourseDirectivesModule } from '@core/course/directives/directives.module';\nimport { CoreCoursesComponentsModule } from '@core/courses/components/components.module';\nimport { CoreSitePluginsDirectivesModule } from '@core/siteplugins/directives/directives.module';\nimport { CoreSiteHomeComponentsModule } from '@core/sitehome/components/components.module';\nimport { CoreUserComponentsModule } from '@core/user/components/components.module';\n\n// Import some components listed in entryComponents so they can be injected dynamically.\nimport { CoreCourseUnsupportedModuleComponent } from '@core/course/components/unsupported-module/unsupported-module';\nimport { CoreCourseFormatSingleActivityComponent } from '@core/course/formats/singleactivity/components/singleactivity';\nimport { CoreSitePluginsModuleIndexComponent } from '@core/siteplugins/components/module-index/module-index';\nimport { CoreSitePluginsCourseOptionComponent } from '@core/siteplugins/components/course-option/course-option';\nimport { CoreSitePluginsCourseFormatComponent } from '@core/siteplugins/components/course-format/course-format';\n\n/**\n * Service to provide functionalities regarding compiling dynamic HTML and Javascript.\n */\n@Injectable()\nexport class CoreCompileProvider {\n\n    protected logger;\n\n    // Other Ionic/Angular providers that don't depend on where they are injected.\n    protected OTHER_PROVIDERS = [\n        TranslateService, Http, HttpClient, Platform, DomSanitizer, ActionSheetController, AlertController, LoadingController,\n        ModalController, PopoverController, ToastController, FormBuilder\n    ];\n\n    // List of imports for dynamic module. Since the template can have any component we need to import all core components modules.\n    protected IMPORTS = [\n        IonicModule, TranslateModule.forChild(), CoreComponentsModule, CoreDirectivesModule, CorePipesModule,\n        CoreCourseComponentsModule, CoreCoursesComponentsModule, CoreSiteHomeComponentsModule, CoreUserComponentsModule,\n        CoreCourseDirectivesModule, CoreSitePluginsDirectivesModule\n    ];\n\n    constructor(protected injector: Injector, logger: CoreLoggerProvider, protected compiler: Compiler) {\n        this.logger = logger.getInstance('CoreCompileProvider');\n    }\n\n    /**\n     * Create and compile a dynamic component.\n     *\n     * @param {string} template The template of the component.\n     * @param {any} componentClass The JS class of the component.\n     * @return {Promise<ComponentFactory<any>>} Promise resolved with the factory to instantiate the component.\n     */\n    createAndCompileComponent(template: string, componentClass: any): Promise<ComponentFactory<any>> {\n        // Create the component using the template and the class.\n        const component = Component({\n            template: template\n        })\n        (componentClass);\n\n        // Now create the module containing the component.\n        const module = NgModule({imports: this.IMPORTS, declarations: [component]})(class {});\n\n        // Compile the module and the component.\n        return this.compiler.compileModuleAndAllComponentsAsync(module).then((factories) => {\n            // Search and return the factory of the component we just created.\n            for (const i in factories.componentFactories) {\n                const factory = factories.componentFactories[i];\n                if (factory.componentType == component) {\n                    return factory;\n                }\n            }\n        });\n    }\n\n    /**\n     * Eval some javascript using the context of the function.\n     *\n     * @param {string} javascript The javascript to eval.\n     * @return {any} Result of the eval.\n     */\n    protected evalInContext(javascript: string): any {\n        // tslint:disable: no-eval\n        return eval(javascript);\n    }\n\n    /**\n     * Execute some javascript code, using a certain instance as the context.\n     *\n     * @param {any} instance Instance to use as the context. In the JS code, \"this\" will be this instance.\n     * @param {string} javascript The javascript code to eval.\n     * @return {any} Result of the javascript execution.\n     */\n    executeJavascript(instance: any, javascript: string): any {\n        try {\n            return this.evalInContext.call(instance, javascript);\n        } catch (ex) {\n            this.logger.error('Error evaluating javascript', ex);\n        }\n    }\n\n    /**\n     * Inject all the core libraries in a certain object.\n     *\n     * @param {any} instance The instance where to inject the libraries.\n     */\n    injectLibraries(instance: any): void {\n        const providers = (<any[]> CORE_PROVIDERS).concat(CORE_CONTENTLINKS_PROVIDERS).concat(CORE_COURSE_PROVIDERS)\n                .concat(CORE_COURSES_PROVIDERS).concat(CORE_FILEUPLOADER_PROVIDERS).concat(CORE_GRADES_PROVIDERS)\n                .concat(CORE_LOGIN_PROVIDERS).concat(CORE_MAINMENU_PROVIDERS).concat(CORE_SHAREDFILES_PROVIDERS)\n                .concat(CORE_SITEHOME_PROVIDERS).concat([CoreSitePluginsProvider]).concat(CORE_USER_PROVIDERS)\n                .concat(IONIC_NATIVE_PROVIDERS).concat(this.OTHER_PROVIDERS);\n\n        // We cannot inject anything to this constructor. Use the Injector to inject all the providers into the instance.\n        for (const i in providers) {\n            const providerDef = providers[i];\n            if (typeof providerDef == 'function' && providerDef.name) {\n                try {\n                    // Inject the provider to the instance. We use the class name as the property name.\n                    instance[providerDef.name] = this.injector.get(providerDef);\n                } catch (ex) {\n                    this.logger.warn('Error injecting provider', providerDef.name, ex);\n                }\n            }\n        }\n\n        // Inject current service.\n        instance['CoreCompileProvider'] = this;\n\n        // Add some final classes.\n        instance['injector'] = this.injector;\n        instance['Validators'] = Validators;\n        instance['CoreConfigConstants'] = CoreConfigConstants;\n        instance['CoreConstants'] = CoreConstants;\n        instance['moment'] = moment;\n        instance['Md5'] = Md5;\n        instance['CoreSyncBaseProvider'] = CoreSyncBaseProvider;\n        instance['CoreCache'] = CoreCache;\n        instance['CoreDelegate'] = CoreDelegate;\n        instance['CoreContentLinksHandlerBase'] = CoreContentLinksHandlerBase;\n        instance['CoreContentLinksModuleGradeHandler'] = CoreContentLinksModuleGradeHandler;\n        instance['CoreContentLinksModuleIndexHandler'] = CoreContentLinksModuleIndexHandler;\n        instance['CoreCourseModulePrefetchHandlerBase'] = CoreCourseModulePrefetchHandlerBase;\n        instance['CoreCourseUnsupportedModuleComponent'] = CoreCourseUnsupportedModuleComponent;\n        instance['CoreCourseFormatSingleActivityComponent'] = CoreCourseFormatSingleActivityComponent;\n        instance['CoreSitePluginsModuleIndexComponent'] = CoreSitePluginsModuleIndexComponent;\n        instance['CoreSitePluginsCourseOptionComponent'] = CoreSitePluginsCourseOptionComponent;\n        instance['CoreSitePluginsCourseFormatComponent'] = CoreSitePluginsCourseFormatComponent;\n    }\n\n    /**\n     * Instantiate a dynamic component.\n     *\n     * @param {string} template The template of the component.\n     * @param {any} componentClass The JS class of the component.\n     * @param {Injector} [injector] The injector to use. It's recommended to pass it so NavController and similar can be injected.\n     * @return {Promise<ComponentRef<any>>} Promise resolved with the component instance.\n     */\n    instantiateDynamicComponent(template: string, componentClass: any, injector?: Injector): Promise<ComponentRef<any>> {\n        injector = injector || this.injector;\n\n        return this.createAndCompileComponent(template, componentClass).then((factory) => {\n            if (factory) {\n                // Create and return the component.\n                return factory.create(injector, undefined, undefined, injector.get(NgModuleRef));\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/compile/providers/compile.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnChanges, SimpleChange, ViewChild, Injector } from '@angular/core';\nimport { CoreCourseModuleDelegate } from '../../../providers/module-delegate';\nimport { CoreCourseUnsupportedModuleComponent } from '../../../components/unsupported-module/unsupported-module';\nimport { CoreDynamicComponent } from '../../../../../components/dynamic-component/dynamic-component';\n\n/**\n * Component to display single activity format. It will determine the right component to use and instantiate it.\n *\n * The instantiated component will receive the course and the module as inputs.\n */\n@Component({\n    selector: 'core-course-format-single-activity',\n    templateUrl: 'singleactivity.html'\n})\nexport class CoreCourseFormatSingleActivityComponent implements OnChanges {\n    @Input() course: any; // The course to render.\n    @Input() sections: any[]; // List of course sections.\n    @Input() downloadEnabled?: boolean; // Whether the download of sections and modules is enabled.\n\n    @ViewChild(CoreDynamicComponent) dynamicComponent: CoreDynamicComponent;\n\n    componentClass: any; // The class of the component to render.\n    data: any = {}; // Data to pass to the component.\n\n    constructor(private moduleDelegate: CoreCourseModuleDelegate, private injector: Injector) { }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if (this.course && this.sections && this.sections.length) {\n            // In single activity the module should only have 1 section and 1 module. Get the module.\n            const module = this.sections[0] && this.sections[0].modules && this.sections[0].modules[0];\n            if (module && !this.componentClass) {\n                // We haven't obtained the class yet. Get it now.\n                this.moduleDelegate.getMainComponent(this.injector, this.course, module).then((component) => {\n                    this.componentClass = component || CoreCourseUnsupportedModuleComponent;\n                });\n            }\n\n            this.data.courseId = this.course.id;\n            this.data.module = module;\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} [refresher] Refresher.\n     * @param {Function} [done] Function to call when done.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void): Promise<any> {\n        return Promise.resolve(this.dynamicComponent.callComponentFunction('doRefresh', [refresher, done]));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/singleactivity/components/singleactivity.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { CoreSitePluginsProvider } from '../../providers/siteplugins';\nimport { CoreSitePluginsPluginContentComponent } from '../plugin-content/plugin-content';\n\n/**\n * Component that displays the index of a course option site plugin.\n */\n@Component({\n    selector: 'core-site-plugins-course-option',\n    templateUrl: 'course-option.html',\n})\nexport class CoreSitePluginsCourseOptionComponent implements OnInit {\n    @Input() courseId: number;\n    @Input() handlerUniqueName: string;\n\n    @ViewChild(CoreSitePluginsPluginContentComponent) content: CoreSitePluginsPluginContentComponent;\n\n    component: string;\n    method: string;\n    args: any;\n    bootstrapResult: any;\n\n    constructor(protected sitePluginsProvider: CoreSitePluginsProvider) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        if (this.handlerUniqueName) {\n            const handler = this.sitePluginsProvider.getSitePluginHandler(this.handlerUniqueName);\n            if (handler) {\n                this.component = handler.plugin.component;\n                this.method = handler.handlerSchema.method;\n                this.args = {\n                    courseid: this.courseId,\n                };\n                this.bootstrapResult = handler.bootstrapResult;\n            }\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} refresher Refresher.\n     */\n    refreshData(refresher: any): void {\n        this.content.refreshData().finally(() => {\n            refresher.complete();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/components/course-option/course-option.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { CoreSitePluginsProvider } from '../../providers/siteplugins';\nimport { CoreSitePluginsPluginContentComponent } from '../plugin-content/plugin-content';\n\n/**\n * Component that displays the index of a course format site plugin.\n */\n@Component({\n    selector: 'core-site-plugins-course-format',\n    templateUrl: 'course-format.html',\n})\nexport class CoreSitePluginsCourseFormatComponent implements OnInit {\n    @Input() course: any; // The course to render.\n    @Input() sections: any[]; // List of course sections.\n    @Input() downloadEnabled?: boolean; // Whether the download of sections and modules is enabled.\n\n    @ViewChild(CoreSitePluginsPluginContentComponent) content: CoreSitePluginsPluginContentComponent;\n\n    component: string;\n    method: string;\n    args: any;\n    bootstrapResult: any;\n\n    constructor(protected sitePluginsProvider: CoreSitePluginsProvider) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        if (this.course && this.course.format) {\n            const handler = this.sitePluginsProvider.getSitePluginHandler(this.course.format);\n            if (handler) {\n                this.component = handler.plugin.component;\n                this.method = handler.handlerSchema.method;\n                this.args = {\n                    courseid: this.course.id,\n                    downloadenabled: this.downloadEnabled\n                };\n                this.bootstrapResult = handler.bootstrapResult;\n            }\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} [refresher] Refresher.\n     * @param {Function} [done] Function to call when done.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void): Promise<any> {\n        return Promise.resolve(this.content.refreshData());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/components/course-format/course-format.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSite } from '@classes/site';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreGroupsProvider } from '@providers/groups';\nimport { CoreConstants } from '@core/constants';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreConfigProvider } from '@providers/config';\n\n/**\n * Service to handle calendar events.\n */\n@Injectable()\nexport class AddonCalendarProvider {\n    static DAYS_INTERVAL = 30;\n    static COMPONENT = 'AddonCalendarEvents';\n    static DEFAULT_NOTIFICATION_TIME_CHANGED = 'AddonCalendarDefaultNotificationTimeChangedEvent';\n    protected DEFAULT_NOTIFICATION_TIME_SETTING = 'mmaCalendarDefaultNotifTime';\n    protected ROOT_CACHE_KEY = 'mmaCalendar:';\n    protected DEFAULT_NOTIFICATION_TIME = 60;\n\n    // Variables for database.\n    protected EVENTS_TABLE = 'calendar_events';\n    protected tablesSchema = [\n        {\n            name: this.EVENTS_TABLE,\n            columns: [\n                {\n                    name: 'id',\n                    type: 'INTEGER',\n                    primaryKey: true\n                },\n                {\n                    name: 'notificationtime',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'name',\n                    type: 'TEXT',\n                    notNull: true\n                },\n                {\n                    name: 'description',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'eventtype',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'courseid',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'timestart',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'timeduration',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'categoryid',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'groupid',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'instance',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'modulename',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'timemodified',\n                    type: 'INTEGER'\n                },\n                {\n                    name: 'repeatid',\n                    type: 'INTEGER'\n                }\n            ]\n        }\n    ];\n\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private groupsProvider: CoreGroupsProvider,\n            private coursesProvider: CoreCoursesProvider, private timeUtils: CoreTimeUtilsProvider,\n            private localNotificationsProvider: CoreLocalNotificationsProvider, private configProvider: CoreConfigProvider) {\n        this.logger = logger.getInstance('AddonCalendarProvider');\n        this.sitesProvider.createTablesFromSchema(this.tablesSchema);\n    }\n\n    /**\n     * Get the configured default notification time.\n     *\n     * @param  {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<number>}  Promise resolved with the default time.\n     */\n    getDefaultNotificationTime(siteId?: string): Promise<number> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const key = this.DEFAULT_NOTIFICATION_TIME_SETTING + '#' + siteId;\n\n        return this.configProvider.get(key, this.DEFAULT_NOTIFICATION_TIME);\n    }\n\n    /**\n     * Get a calendar event. If the server request fails and data is not cached, try to get it from local DB.\n     *\n     * @param {number}  id        Event ID.\n     * @param {boolean} [refresh] True when we should update the event data.\n     * @param {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the event data is retrieved.\n     */\n    getEvent(id: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const preSets = {\n                    cacheKey: this.getEventCacheKey(id)\n                },\n                data = {\n                    options: {\n                        userevents: 0,\n                        siteevents: 0,\n                    },\n                    events: {\n                        eventids: [\n                            id\n                        ]\n                    }\n                };\n\n            return site.read('core_calendar_get_calendar_events', data, preSets).then((response) => {\n                // The WebService returns all category events. Check the response to search for the event we want.\n                const event = response.events.find((e) => { return e.id == id; });\n\n                return event || this.getEventFromLocalDb(id);\n            }).catch(() => {\n                return this.getEventFromLocalDb(id);\n            });\n        });\n    }\n\n    /**\n     * Get cache key for a single event WS call.\n     *\n     * @param {number} id Event ID.\n     * @return {string} Cache key.\n     */\n    protected getEventCacheKey(id: number): string {\n        return this.ROOT_CACHE_KEY + 'events:' + id;\n    }\n\n    /**\n     * Get a calendar event from local Db.\n     *\n     * @param  {number} id       Event ID.\n     * @param  {string} [siteId] ID of the site the event belongs to. If not defined, use current site.\n     * @return {Promise<any>}    Promise resolved when the event data is retrieved.\n     */\n    getEventFromLocalDb(id: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.getDb().getRecord(this.EVENTS_TABLE, { id: id });\n        });\n    }\n\n    /**\n     * Get event notification time. Always returns number of minutes (0 if disabled).\n     *\n     * @param  {number} id       Event ID.\n     * @param  {string} [siteId] ID of the site the event belongs to. If not defined, use current site.\n     * @return {Promise<number>}  Event notification time in minutes. 0 if disabled.\n     */\n    getEventNotificationTime(id: number, siteId?: string): Promise<number> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.getEventNotificationTimeOption(id, siteId).then((time: number) => {\n            if (time == -1) {\n                return this.getDefaultNotificationTime(siteId);\n            }\n\n            return time;\n        });\n    }\n\n    /**\n     * Get event notification time for options. Returns -1 for default time.\n     *\n     * @param  {number} id       Event ID.\n     * @param  {string} [siteId] ID of the site the event belongs to. If not defined, use current site.\n     * @return {Promise<number>}  Promise with wvent notification time in minutes. 0 if disabled, -1 if default time.\n     */\n    getEventNotificationTimeOption(id: number, siteId?: string): Promise<number> {\n        return this.getEventFromLocalDb(id, siteId).then((e) => {\n            return e.notificationtime || -1;\n        }).catch(() => {\n            return -1;\n        });\n    }\n\n    /**\n     * Get the events in a certain period. The period is calculated like this:\n     *     start time: now + daysToStart\n     *     end time: start time + daysInterval\n     * E.g. using provider.getEventsList(30, 30) is going to get the events starting after 30 days from now\n     * and ending before 60 days from now.\n     *\n     * @param {number} [daysToStart=0]   Number of days from now to start getting events.\n     * @param {number} [daysInterval=30] Number of days between timestart and timeend.\n     * @param {string} [siteId]          Site to get the events from. If not defined, use current site.\n     * @return {Promise<any[]>}          Promise to be resolved when the participants are retrieved.\n     */\n    getEventsList(daysToStart: number = 0, daysInterval: number = AddonCalendarProvider.DAYS_INTERVAL, siteId?: string)\n            : Promise<any[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            siteId = site.getId();\n\n            return this.coursesProvider.getUserCourses(false, siteId).then((courses) => {\n                courses.push({ id: site.getSiteHomeId() }); // Add front page.\n\n                return this.groupsProvider.getUserGroups(courses, siteId).then((groups) => {\n                    const now = this.timeUtils.timestamp(),\n                        start = now + (CoreConstants.SECONDS_DAY * daysToStart),\n                        end = start + (CoreConstants.SECONDS_DAY * daysInterval),\n                        data = {\n                            options: {\n                                userevents: 1,\n                                siteevents: 1,\n                                timestart: start,\n                                timeend: end\n                            },\n                            events: {\n                                courseids: [],\n                                groupids: []\n                            }\n                        };\n\n                    courses.forEach((course, index) => {\n                        data.events.courseids[index] = course.id;\n                    });\n\n                    groups.forEach((group, index) => {\n                        data.events.groupids[index] = group.id;\n                    });\n\n                    // We need to retrieve cached data using cache key because we have timestamp in the params.\n                    const preSets = {\n                        cacheKey: this.getEventsListCacheKey(daysToStart, daysInterval),\n                        getCacheUsingCacheKey: true\n                    };\n\n                    return site.read('core_calendar_get_calendar_events', data, preSets).then((response) => {\n                        this.storeEventsInLocalDB(response.events, siteId);\n\n                        return response.events;\n                    });\n                });\n            });\n        });\n    }\n\n    /**\n     * Get prefix cache key for events list WS calls.\n     *\n     * @return {string} Prefix Cache key.\n     */\n    protected getEventsListPrefixCacheKey(): string {\n        return this.ROOT_CACHE_KEY + 'eventslist:';\n    }\n\n    /**\n     * Get cache key for events list WS calls.\n     *\n     * @param {number} daysToStart  Number of days from now to start getting events.\n     * @param {number} daysInterval Number of days between timestart and timeend.\n     * @return {string} Cache key.\n     */\n    protected getEventsListCacheKey(daysToStart: number, daysInterval: number): string {\n        return this.getEventsListPrefixCacheKey() + daysToStart + ':' + daysInterval;\n    }\n\n    /**\n     * Invalidates events list and all the single events and related info.\n     *\n     * @param {any[]} courses List of courses or course ids.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any[]>} Promise resolved when the list is invalidated.\n     */\n    invalidateEventsList(courses: any[], siteId?: string): Promise<any[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            siteId = site.getId();\n\n            const promises = [];\n\n            promises.push(this.coursesProvider.invalidateUserCourses(siteId));\n            promises.push(this.groupsProvider.invalidateUserGroups(courses, siteId));\n            promises.push(site.invalidateWsCacheForKeyStartingWith(this.getEventsListPrefixCacheKey()));\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Invalidates a single event.\n     *\n     * @param {number} eventId List of courses or course ids.\n     * @param {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<any>} Promise resolved when the list is invalidated.\n     */\n    invalidateEvent(eventId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getEventCacheKey(eventId));\n        });\n    }\n\n    /**\n     * Check if Calendar is disabled in a certain site.\n     *\n     * @param {CoreSite} [site] Site. If not defined, use current site.\n     * @return {boolean} Whether it's disabled.\n     */\n    isCalendarDisabledInSite(site?: CoreSite): boolean {\n        site = site || this.sitesProvider.getCurrentSite();\n\n        return site.isFeatureDisabled('$mmSideMenuDelegate_mmaCalendar');\n    }\n\n    /**\n     * Check if Calendar is disabled in a certain site.\n     *\n     * @param  {string} [siteId] Site Id. If not defined, use current site.\n     * @return {Promise<boolean>}     Promise resolved with true if disabled, rejected or resolved with false otherwise.\n     */\n    isDisabled(siteId?: string): Promise<boolean> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return this.isCalendarDisabledInSite(site);\n        });\n    }\n\n    /**\n     * Get the next events for all the sites and schedules their notifications.\n     * If an event notification time is 0, cancel its scheduled notification (if any).\n     * If local notification plugin is not enabled, resolve the promise.\n     *\n     * @return {Promise}         Promise resolved when all the notifications have been scheduled.\n     */\n    scheduleAllSitesEventsNotifications(): Promise<any[]> {\n        if (this.localNotificationsProvider.isAvailable()) {\n            return this.sitesProvider.getSitesIds().then((siteIds) => {\n                const promises = [];\n\n                siteIds.forEach((siteId) => {\n                    // Check if calendar is disabled for the site.\n                    promises.push(this.isDisabled(siteId).then((disabled) => {\n                        if (!disabled) {\n                            // Get first events.\n                            return this.getEventsList(undefined, undefined, siteId).then((events) => {\n                                return this.scheduleEventsNotifications(events, siteId);\n                            });\n                        }\n                    }));\n                });\n\n                return Promise.all(promises);\n            });\n        } else {\n            return Promise.resolve([]);\n        }\n    }\n\n    /**\n     * Schedules an event notification. If time is 0, cancel scheduled notification if any.\n     * If local notification plugin is not enabled, resolve the promise.\n     *\n     * @param  {any} event    Event to schedule.\n     * @param  {number} time     Notification setting time (in minutes). E.g. 10 means \"notificate 10 minutes before start\".\n     * @param  {string} [siteId] Site ID the event belongs to. If not defined, use current site.\n     * @return {Promise<void>}    Promise resolved when the notification is scheduled.\n     */\n    scheduleEventNotification(event: any, time: number, siteId?: string): Promise<void> {\n        if (this.localNotificationsProvider.isAvailable()) {\n            siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n            if (time === 0) {\n                // Cancel if it was scheduled.\n                return this.localNotificationsProvider.cancel(event.id, AddonCalendarProvider.COMPONENT, siteId);\n            }\n\n            // If time is -1, get event default time.\n            const promise = time == -1 ? this.getDefaultNotificationTime(siteId) : Promise.resolve(time);\n\n            return promise.then((time) => {\n                const timeEnd = (event.timestart + event.timeduration) * 1000;\n                if (timeEnd <= new Date().getTime()) {\n                    // The event has finished already, don't schedule it.\n                    return Promise.resolve();\n                }\n\n                const dateTriggered = new Date((event.timestart - (time * 60)) * 1000),\n                    startDate = new Date(event.timestart * 1000),\n                    notification = {\n                        id: event.id,\n                        title: event.name,\n                        text: startDate.toLocaleString(),\n                        at: dateTriggered,\n                        data: {\n                            eventid: event.id,\n                            siteid: siteId\n                        }\n                    };\n\n                return this.localNotificationsProvider.schedule(notification, AddonCalendarProvider.COMPONENT, siteId);\n            });\n\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    /**\n     * Schedules the notifications for a list of events.\n     * If an event notification time is 0, cancel its scheduled notification (if any).\n     * If local notification plugin is not enabled, resolve the promise.\n     *\n     * @param  {any[]} events Events to schedule.\n     * @param  {string} [siteId] ID of the site the events belong to. If not defined, use current site.\n     * @return {Promise<any[]>}         Promise resolved when all the notifications have been scheduled.\n     */\n    scheduleEventsNotifications(events: any[], siteId?: string): Promise<any[]> {\n        const promises = [];\n\n        if (this.localNotificationsProvider.isAvailable()) {\n            siteId = siteId || this.sitesProvider.getCurrentSiteId();\n            events.forEach((e) => {\n                promises.push(this.getEventNotificationTime(e.id, siteId).then((time) => {\n                    return this.scheduleEventNotification(e, time, siteId);\n                }));\n            });\n        }\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Set the default notification time.\n     *\n     * @param  {number} time     New default time.\n     * @param  {string} [siteId] ID of the site. If not defined, use current site.\n     * @return {Promise<any[]>}    Promise resolved when stored.\n     */\n    setDefaultNotificationTime(time: number, siteId?: string): Promise<any[]> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const key = this.DEFAULT_NOTIFICATION_TIME_SETTING + '#' + siteId;\n\n        return this.configProvider.set(key, time);\n    }\n\n    /**\n     * Store events in local DB.\n     *\n     * @param {any[]} events  Events to store.\n     * @param  {string} [siteId] ID of the site the event belongs to. If not defined, use current site.\n     * @return {Promise<any[]>}         Promise resolved when the events are stored.\n     */\n    protected storeEventsInLocalDB(events: any[], siteId?: string): Promise<any[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            siteId = site.getId();\n\n            const promises = [],\n                db = site.getDb();\n\n            events.forEach((event) => {\n                // Don't override event notification time if the user configured it.\n                promises.push(this.getEventFromLocalDb(event.id, siteId).catch(() => {\n                    // Event not stored, return empty object.\n                    return {};\n                }).then((e) => {\n                    const eventRecord = {\n                        id: event.id,\n                        name: event.name,\n                        description: event.description,\n                        eventtype: event.eventtype,\n                        courseid: event.courseid,\n                        timestart: event.timestart,\n                        timeduration: event.timeduration,\n                        categoryid: event.categoryid,\n                        groupid: event.groupid,\n                        instance: event.instance,\n                        modulename: event.modulename,\n                        timemodified: event.timemodified,\n                        repeatid: event.repeatid,\n                        notificationtime: e.notificationtime || -1\n                    };\n\n                    return db.insertOrUpdateRecord(this.EVENTS_TABLE, eventRecord, { id: eventRecord.id });\n                }));\n            });\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Updates an event notification time and schedule a new notification.\n     *\n     * @param  {any} event Event to update its notification time.\n     * @param  {number} time  New notification setting time (in minutes). E.g. 10 means \"notificate 10 minutes before start\".\n     * @param  {string} [siteId] ID of the site the event belongs to. If not defined, use current site.\n     * @return {Promise<void>} Promise resolved when the notification is updated.\n     */\n    updateNotificationTime(event: any, time: number, siteId?: string): Promise<void> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (!this.sitesProvider.isLoggedIn()) {\n                // Not logged in, we can't get the site DB. User logged out or session expired while an operation was ongoing.\n                return Promise.reject(null);\n            }\n\n            event.notificationtime = time;\n\n            return site.getDb().insertOrUpdateRecord(this.EVENTS_TABLE, event, { id: event.id }).then(() => {\n                return this.scheduleEventNotification(event, time);\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/providers/calendar.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreUserParticipantsComponent } from './participants/participants';\nimport { CoreUserProfileFieldComponent } from './user-profile-field/user-profile-field';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        CoreUserParticipantsComponent,\n        CoreUserProfileFieldComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule\n    ],\n    providers: [\n    ],\n    exports: [\n        CoreUserParticipantsComponent,\n        CoreUserProfileFieldComponent\n    ],\n    entryComponents: [\n        CoreUserParticipantsComponent\n    ]\n})\nexport class CoreUserComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreGradesProvider } from './grades';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\n\n/**\n * Service that provides some features regarding grades information.\n */\n@Injectable()\nexport class CoreGradesHelperProvider {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private coursesProvider: CoreCoursesProvider,\n            private gradesProvider: CoreGradesProvider, private sitesProvider: CoreSitesProvider,\n            private textUtils: CoreTextUtilsProvider, private courseProvider: CoreCourseProvider,\n            private domUtils: CoreDomUtilsProvider, private urlUtils: CoreUrlUtilsProvider) {\n        this.logger = logger.getInstance('CoreGradesHelperProvider');\n    }\n\n    /**\n     * Formats a row from the grades table te be rendered in a page.\n     *\n     * @param  {any}  tableRow JSON object representing row of grades table data.\n     * @return {any}           Formatted row object.\n     */\n    protected formatGradeRow(tableRow: any): any {\n        const row = {};\n        for (const name in tableRow) {\n            if (typeof(tableRow[name].content) != 'undefined') {\n                let content = tableRow[name].content;\n\n                if (name == 'itemname') {\n                    this.setRowIcon(row, content);\n                    row['link'] = this.getModuleLink(content);\n                    row['rowclass'] += tableRow[name].class.indexOf('hidden') >= 0 ? ' hidden' : '';\n                    row['rowclass'] += tableRow[name].class.indexOf('dimmed_text') >= 0 ? ' dimmed_text' : '';\n\n                    content = content.replace(/<\\/span>/gi, '\\n');\n                    content = this.textUtils.cleanTags(content);\n                } else {\n                    content = this.textUtils.replaceNewLines(content, '<br>');\n                }\n\n                if (content == '&nbsp;') {\n                    content = '';\n                }\n\n                row[name] = content.trim();\n            }\n        }\n\n        return row;\n    }\n\n    /**\n     * Formats a row from the grades table to be rendered in one table.\n     *\n     * @param  {any}  tableRow JSON object representing row of grades table data.\n     * @return {any}           Formatted row object.\n     */\n    protected formatGradeRowForTable(tableRow: any): any {\n        const row = {};\n        for (let name in tableRow) {\n            if (typeof(tableRow[name].content) != 'undefined') {\n                let content = tableRow[name].content;\n\n                if (name == 'itemname') {\n                    this.setRowIcon(row, content);\n                    row['rowclass'] = tableRow[name].class.indexOf('leveleven') < 0 ? 'odd' : 'even';\n                    row['rowclass'] += tableRow[name].class.indexOf('hidden') >= 0 ? ' hidden' : '';\n                    row['rowclass'] += tableRow[name].class.indexOf('dimmed_text') >= 0 ? ' dimmed_text' : '';\n\n                    content = content.replace(/<\\/span>/gi, '\\n');\n                    content = this.textUtils.cleanTags(content);\n\n                    row['id'] = parseInt(tableRow[name].id.split('_')[1], 10);\n                    row['colspan'] = tableRow[name].colspan;\n                    row['rowspan'] = (tableRow['leader'] && tableRow['leader'].rowspan) || 1;\n                    name = 'gradeitem';\n                } else {\n                    content = this.textUtils.replaceNewLines(content, '<br>');\n                }\n\n                if (content == '&nbsp;') {\n                    content = '';\n                }\n\n                row[name] = content.trim();\n            }\n        }\n\n        return row;\n    }\n\n    /**\n     * Removes suffix formatted to compatibilize data from table and items.\n     *\n     * @param  {any} item Grade item to format.\n     * @return {any}      Grade item formatted.\n     */\n    protected formatGradeItem(item: any): any {\n        for (const name in item) {\n            const index = name.indexOf('formatted');\n            if (index > 0) {\n                item[name.substr(0, index)] = item[name];\n            }\n        }\n\n        return item;\n    }\n\n    /**\n     * Formats the response of gradereport_user_get_grades_table to be rendered.\n     *\n     * @param  {any}  table          JSON object representing a table with data.\n     * @return {any}             Formatted HTML table.\n     */\n    formatGradesTable(table: any): any {\n        const maxDepth = table.maxdepth,\n            formatted = {\n                columns: [],\n                rows: []\n            },\n            // Columns, in order.\n            columns = {\n                gradeitem: true,\n                weight: false,\n                grade: false,\n                range: false,\n                percentage: false,\n                lettergrade: false,\n                rank: false,\n                average: false,\n                feedback: false,\n                contributiontocoursetotal: false\n            };\n        formatted.rows = table.tabledata.map((row: any) => {\n            return this.formatGradeRowForTable(row);\n        }).filter((row: any) => {\n            return typeof row.gradeitem !== 'undefined';\n        });\n\n        // Get a row with some info.\n        let normalRow = formatted.rows.find((e) => {\n            return e.itemtype != 'leader' && (typeof e.grade != 'undefined' || typeof e.percentage != 'undefined');\n        });\n\n        // Decide if grades or percentage is being shown on phones.\n        if (normalRow && typeof normalRow.grade != 'undefined') {\n            columns.grade = true;\n        } else if (normalRow && typeof normalRow.percentage != 'undefined') {\n            columns.percentage = true;\n        } else {\n            normalRow = formatted.rows.find((e) => {\n                return e.itemtype != 'leader';\n            });\n            columns.grade = true;\n        }\n\n        for (const colName in columns) {\n            if (typeof normalRow[colName] != 'undefined') {\n                formatted.columns.push({\n                    name: colName,\n                    colspan: colName == 'gradeitem' ? maxDepth : 1,\n                    hiddenPhone: !columns[colName]\n                });\n            }\n        }\n\n        return formatted;\n    }\n\n    /**\n     * Get course data for grades since they only have courseid.\n     *\n     * @param  {any} grades    Grades to get the data for.\n     * @return {Promise<any>}  Promise always resolved. Resolve param is the formatted grades.\n     */\n    getGradesCourseData(grades: any): Promise<any> {\n        // Using cache for performance reasons.\n        return this.coursesProvider.getUserCourses(true).then((courses) => {\n            const indexedCourses = {};\n            courses.forEach((course) => {\n                indexedCourses[course.id] = course;\n            });\n\n            grades.forEach((grade) => {\n                if (typeof indexedCourses[grade.courseid] != 'undefined') {\n                    grade.courseFullName = indexedCourses[grade.courseid].fullname;\n                }\n            });\n\n            return grades;\n        });\n    }\n\n    /**\n     * Get an specific grade item.\n     *\n     * @param  {number}  courseId             ID of the course to get the grades from.\n     * @param  {number}  gradeId              Grade ID.\n     * @param  {number}  [userId]             ID of the user to get the grades from. If not defined use site's current user.\n     * @param  {string}  [siteId]             Site ID. If not defined, current site.\n     * @param  {boolean} [ignoreCache=false]  True if it should ignore cached data (it will always fail in offline or server down).\n     * @return {Promise<any>}                Promise to be resolved when the grades are retrieved.\n     */\n    getGradeItem(courseId: number, gradeId: number, userId?: number, siteId?: string, ignoreCache: boolean = false): Promise<any> {\n\n        return this.gradesProvider.getCourseGradesTable(courseId, userId, siteId, ignoreCache).then((grades) => {\n            if (grades) {\n                return this.getGradesTableRow(grades, gradeId);\n            }\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Get the grade items for a certain module. Keep in mind that may have more than one item to include outcomes and scales.\n     *\n     * @param  {number}  courseId             ID of the course to get the grades from.\n     * @param  {number}  moduleId             Module ID.\n     * @param  {number}  [userId]             ID of the user to get the grades from. If not defined use site's current user.\n     * @param  {number}  [groupId]            ID of the group to get the grades from. Not used for old gradebook table.\n     * @param  {string}  [siteId]             Site ID. If not defined, current site.\n     * @param  {boolean} [ignoreCache=false]  True if it should ignore cached data (it will always fail in offline or server down).\n     * @return {Promise<any>}                Promise to be resolved when the grades are retrieved.\n     */\n    getGradeModuleItems(courseId: number, moduleId: number, userId?: number, groupId?: number, siteId?: string,\n            ignoreCache: boolean = false): Promise<any> {\n\n        return this.gradesProvider.getGradeItems(courseId, userId, groupId, siteId, ignoreCache).then((grades) => {\n            if (grades) {\n                if (typeof grades.tabledata != 'undefined') {\n                    // Table format.\n                    return this.getModuleGradesTableRows(grades, moduleId);\n                } else {\n                    return grades.filter((item) => {\n                        return item.cmid == moduleId;\n                    }).map((item) => {\n                        return this.formatGradeItem(item);\n                    });\n                }\n            }\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Gets the link to the module for the selected grade.\n     *\n     * @param  {string} text HTML where the link is present.\n     * @return {string | false}      URL linking to the module.\n     */\n    protected getModuleLink(text: string): string | false {\n        const el = this.domUtils.toDom(text)[0],\n            link = el.attributes['href'] ? el.attributes['href'].value : false;\n\n        if (!link || link.indexOf('/mod/') < 0) {\n            return false;\n        }\n\n        return link;\n    }\n\n    /**\n     * Get a row from the grades table.\n     *\n     * @param  {any}   table    JSON object representing a table with data.\n     * @param  {number} gradeId Grade Object identifier.\n     * @return {any}            Formatted HTML table.\n     */\n    getGradesTableRow(table: any, gradeId: number): any {\n        if (table.tabledata) {\n            const selectedRow = table.tabledata.find((row) => {\n                return row.itemname && row.itemname.id && row.itemname.id.substr(0, 3) == 'row' &&\n                    parseInt(row.itemname.id.split('_')[1], 10) == gradeId;\n            });\n\n            if (selectedRow) {\n                return this.formatGradeRow(selectedRow);\n            }\n        }\n\n        return '';\n    }\n\n    /**\n     * Get the rows related to a module from the grades table.\n     *\n     * @param  {any}   table     JSON object representing a table with data.\n     * @param  {number} moduleId Grade Object identifier.\n     * @return {any}             Formatted HTML table.\n     */\n    getModuleGradesTableRows(table: any, moduleId: number): any {\n\n        if (table.tabledata) {\n            // Find href containing \"/mod/xxx/xxx.php\".\n            const regex = /href=\"([^\"]*\\/mod\\/[^\"|^\\/]*\\/[^\"|^\\.]*\\.php[^\"]*)/;\n\n            return table.tabledata.filter((row) => {\n                if (row.itemname && row.itemname.content) {\n                    const matches = row.itemname.content.match(regex);\n\n                    if (matches && matches.length) {\n                        const hrefParams = this.urlUtils.extractUrlParams(matches[1]);\n\n                        return hrefParams && hrefParams.id == moduleId;\n                    }\n                }\n\n                return false;\n            }).map((row) => {\n                return this.formatGradeRow(row);\n            });\n        }\n\n        return [];\n    }\n\n    /**\n     * Invalidate the grade items for a certain module.\n     *\n     * @param  {number}  courseId     ID of the course to invalidate the grades.\n     * @param  {number}  [userId]     ID of the user to invalidate. If not defined use site's current user.\n     * @param  {number}  [groupId]    ID of the group to invalidate. Not used for old gradebook table.\n     * @param  {string}  [siteId]     Site ID. If not defined, current site.\n     * @return {Promise}              Promise to be resolved when the grades are invalidated.\n     */\n    invalidateGradeModuleItems(courseId: number, userId?: number, groupId?: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return this.gradesProvider.isGradeItemsAvalaible(siteId).then((enabled) => {\n                if (enabled) {\n                    return this.gradesProvider.invalidateCourseGradesItemsData(courseId, userId, groupId, siteId);\n                } else {\n                    return this.gradesProvider.invalidateCourseGradesData(courseId, userId, siteId);\n                }\n            });\n        });\n    }\n\n    /**\n     * Parses the image and sets it to the row.\n     *\n     * @param  {any} row  Formatted grade row object.\n     * @param  {string} text HTML where the image will be rendered.\n     * @return {any}      Row object with the image.\n     */\n    protected setRowIcon(row: any, text: string): any {\n        text = text.replace('%2F', '/').replace('%2f', '/');\n\n        if (text.indexOf('/agg_mean') > -1) {\n            row['itemtype'] = 'agg_mean';\n            row['image'] = 'assets/img/grades/agg_mean.png';\n        } else if (text.indexOf('/agg_sum') > -1) {\n            row['itemtype'] = 'agg_sum';\n            row['image'] = 'assets/img/grades/agg_sum.png';\n        } else if (text.indexOf('/outcomes') > -1 || text.indexOf('fa-tasks')  > -1) {\n            row['itemtype'] = 'outcome';\n            row['image'] = 'assets/img/grades/outcomes.png';\n        } else if (text.indexOf('i/folder') > -1 || text.indexOf('fa-folder')  > -1) {\n            row['itemtype'] = 'category';\n            row['icon'] = 'folder';\n        } else if (text.indexOf('/manual_item') > -1 || text.indexOf('fa-square-o')  > -1) {\n            row['itemtype'] = 'manual';\n            row['icon'] = 'square-outline';\n        } else if (text.indexOf('/mod/') > -1) {\n            const module = text.match(/mod\\/([^\\/]*)\\//);\n            if (typeof module[1] != 'undefined') {\n                row['itemtype'] = 'mod';\n                row['itemmodule'] = module[1];\n                row['image'] = this.courseProvider.getModuleIconSrc(module[1]);\n            }\n        } else if (text.indexOf('src=') > -1) {\n            const src = text.match(/src=\"([^\"]*)\"/);\n            row['image'] = src[1];\n        }\n\n        return row;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUserProvider } from '@core/user/providers/user';\n\n/**\n * Service that provides some features regarding learning plans.\n */\n@Injectable()\nexport class AddonCompetencyHelperProvider {\n\n    constructor(private sitesProvider: CoreSitesProvider, private userProvider: CoreUserProvider) {\n    }\n\n    /**\n     * Convenient helper to get the user profile image.\n     *\n     * @param  {number} userId User Id\n     * @return {Promise<any>}  User profile Image URL or true if default icon.\n     */\n    getProfile(userId: number): Promise<any> {\n        if (!userId || userId == this.sitesProvider.getCurrentSiteUserId()) {\n            return Promise.resolve(false);\n        }\n\n        // Get the user profile to retrieve the user image.\n        return this.userProvider.getProfile(userId, null, true).then((user) => {\n            user.profileimageurl = user.profileimageurl || true;\n\n            return user;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSyncBaseProvider } from '@classes/base-sync';\nimport { CoreAppProvider } from '@providers/app';\nimport { AddonMessagesOfflineProvider } from './messages-offline';\nimport { AddonMessagesProvider } from './messages';\nimport { CoreUserProvider } from '@core/user/providers/user';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreSyncProvider } from '@providers/sync';\n\n/**\n * Service to sync messages.\n */\n@Injectable()\nexport class AddonMessagesSyncProvider extends CoreSyncBaseProvider {\n\n    static AUTO_SYNCED = 'addon_messages_autom_synced';\n\n    constructor(protected sitesProvider: CoreSitesProvider, protected loggerProvider: CoreLoggerProvider,\n            protected appProvider: CoreAppProvider, private messagesOffline: AddonMessagesOfflineProvider,\n            private eventsProvider: CoreEventsProvider,  private messagesProvider: AddonMessagesProvider,\n            private userProvider: CoreUserProvider, private translate: TranslateService, private utils: CoreUtilsProvider,\n            syncProvider: CoreSyncProvider, protected textUtils: CoreTextUtilsProvider) {\n        super('AddonMessagesSync', sitesProvider, loggerProvider, appProvider, syncProvider, textUtils);\n    }\n\n    /**\n     * Try to synchronize all the discussions in a certain site or in all sites.\n     *\n     * @param  {string} [siteId]                   Site ID to sync. If not defined, sync all sites.\n     * @param  {boolean} [onlyDeviceOffline=false] True to only sync discussions that failed because device was offline,\n     *                                             false to sync all.\n     * @return {Promise<any>}                      Promise resolved if sync is successful, rejected if sync fails.\n     */\n    syncAllDiscussions(siteId?: string, onlyDeviceOffline: boolean = false): Promise<any> {\n        const syncFunctionLog = 'all discussions' + (onlyDeviceOffline ? ' (Only offline)' : '');\n\n        return this.syncOnSites(syncFunctionLog, this.syncAllDiscussionsFunc.bind(this), [onlyDeviceOffline], siteId);\n    }\n\n    /**\n     * Get all messages pending to be sent in the site.\n     * @param  {boolean} [onlyDeviceOffline=false] True to only sync discussions that failed because device was offline,\n     * @param  {string} [siteId]                   Site ID to sync. If not defined, sync all sites.\n     * @param {Promise<any>}     Promise resolved if sync is successful, rejected if sync fails.\n     */\n    protected syncAllDiscussionsFunc(onlyDeviceOffline: boolean = false, siteId?: string): Promise<any> {\n        const promise = onlyDeviceOffline ?\n            this.messagesOffline.getAllDeviceOfflineMessages(siteId) :\n            this.messagesOffline.getAllMessages(siteId);\n\n        return promise.then((messages) => {\n            const userIds = [],\n                promises = [];\n\n            // Get all the discussions to be synced.\n            messages.forEach((message) => {\n                if (userIds.indexOf(message.touserid) == -1) {\n                    userIds.push(message.touserid);\n                }\n            });\n\n            // Sync all discussions.\n            userIds.forEach((userId) => {\n                promises.push(this.syncDiscussion(userId, siteId).then((warnings) => {\n                    if (typeof warnings != 'undefined') {\n                        // Sync successful, send event.\n                        this.eventsProvider.trigger(AddonMessagesSyncProvider.AUTO_SYNCED, {\n                            userid: userId,\n                            warnings: warnings\n                        }, siteId);\n                    }\n                }));\n            });\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Synchronize a discussion.\n     *\n     * @param  {number} userId   User ID of the discussion.\n     * @param  {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}    Promise resolved if sync is successful, rejected otherwise.\n     */\n    syncDiscussion(userId: number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (this.isSyncing(userId, siteId)) {\n            // There's already a sync ongoing for this SCORM, return the promise.\n            return this.getOngoingSync(userId, siteId);\n        }\n\n        const warnings = [];\n\n        this.logger.debug(`Try to sync discussion with user '${userId}'`);\n\n        // Get offline messages to be sent.\n        const syncPromise = this.messagesOffline.getMessages(userId, siteId).then((messages) => {\n            if (!messages.length) {\n                // Nothing to sync.\n                return [];\n            } else if (!this.appProvider.isOnline()) {\n                // Cannot sync in offline. Mark messages as device offline.\n                this.messagesOffline.setMessagesDeviceOffline(messages, true);\n\n                return Promise.reject(null);\n            }\n\n            let promise: Promise<any> = Promise.resolve();\n            const errors = [];\n\n            // Order message by timecreated.\n            messages = this.messagesProvider.sortMessages(messages);\n\n            // Send the messages.\n            // We don't use AddonMessagesProvider#sendMessagesOnline because there's a problem with display order.\n            // @todo Use AddonMessagesProvider#sendMessagesOnline once the display order is fixed.\n            messages.forEach((message, index) => {\n                // Chain message sending. If 1 message fails to be sent we'll stop sending.\n                promise = promise.then(() => {\n                    return this.messagesProvider.sendMessageOnline(userId, message.smallmessage, siteId).catch((error) => {\n                        if (this.utils.isWebServiceError(error)) {\n                            // Error returned by WS. Store the error to show a warning but keep sending messages.\n                            if (errors.indexOf(error) == -1) {\n                                errors.push(error);\n                            }\n\n                            return;\n                        }\n\n                        // Error sending, stop execution.\n                        if (this.appProvider.isOnline()) {\n                            // App is online, unmark deviceoffline if marked.\n                            this.messagesOffline.setMessagesDeviceOffline(messages, false);\n                        }\n\n                        return Promise.reject(error);\n                    }).then(() => {\n                        // Message was sent, delete it from local DB.\n                        return this.messagesOffline.deleteMessage(userId, message.smallmessage, message.timecreated, siteId);\n                    }).then(() => {\n                        // All done. Wait 1 second to ensure timecreated of messages is different.\n                        if (index < messages.length - 1) {\n                            return setTimeout(() => {return; }, 1000);\n                        }\n                    });\n                });\n            });\n\n            return promise.then(() => {\n                return errors;\n            });\n        }).then((errors) => {\n            if (errors && errors.length) {\n                // At least an error occurred, get user full name and add errors to warnings array.\n                return this.userProvider.getProfile(userId, undefined, true).catch(() => {\n                    // Ignore errors.\n                    return {};\n                }).then((user) => {\n                    errors.forEach((error) => {\n                        warnings.push(this.translate.instant('addon.messages.warningmessagenotsent', {\n                            user: user.fullname ? user.fullname : userId,\n                            error: error\n                        }));\n                    });\n                });\n            }\n        }).then(() => {\n            // All done, return the warnings.\n            return warnings;\n        });\n\n        return this.addOngoingSync(userId, syncPromise, siteId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/sync.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Optional } from '@angular/core';\nimport { Content, PopoverController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseModuleMainResourceComponent } from '@core/course/classes/main-resource-component';\nimport { AddonModBookProvider, AddonModBookContentsMap, AddonModBookTocChapter } from '../../providers/book';\nimport { AddonModBookPrefetchHandler } from '../../providers/prefetch-handler';\nimport { AddonModBookTocPopoverComponent } from '../../components/toc-popover/toc-popover';\n\n/**\n * Component that displays a book.\n */\n@Component({\n    selector: 'addon-mod-book-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModBookIndexComponent extends CoreCourseModuleMainResourceComponent {\n    component = AddonModBookProvider.COMPONENT;\n    chapterContent: string;\n    previousChapter: string;\n    nextChapter: string;\n\n    protected chapters: AddonModBookTocChapter[];\n    protected currentChapter: string;\n    protected contentsMap: AddonModBookContentsMap;\n\n    constructor(private bookProvider: AddonModBookProvider, private courseProvider: CoreCourseProvider,\n            protected domUtils: CoreDomUtilsProvider, private appProvider: CoreAppProvider,\n            protected textUtils: CoreTextUtilsProvider, protected courseHelper: CoreCourseHelperProvider,\n            private prefetchDelegate: AddonModBookPrefetchHandler, private popoverCtrl: PopoverController,\n            protected translate: TranslateService, @Optional() private content: Content) {\n        super(textUtils, courseHelper, translate, domUtils);\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.loadContent();\n    }\n\n    /**\n     * Show the TOC.\n     *\n     * @param {MouseEvent} event Event.\n     */\n    showToc(event: MouseEvent): void {\n        const popover = this.popoverCtrl.create(AddonModBookTocPopoverComponent, {\n            chapters: this.chapters\n        });\n\n        popover.onDidDismiss((chapterId) => {\n            this.changeChapter(chapterId);\n        });\n\n        popover.present({\n            ev: event\n        });\n    }\n\n    /**\n     * Change the current chapter.\n     *\n     * @param {string} chapterId Chapter to load.\n     * @return {Promise<void>} Promise resolved when done.\n     */\n    changeChapter(chapterId: string): void {\n        if (chapterId && chapterId != this.currentChapter) {\n            this.loaded = false;\n            this.refreshIcon = 'spinner';\n            this.loadChapter(chapterId);\n        }\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected invalidateContent(): Promise<any> {\n        return this.bookProvider.invalidateContent(this.module.id, this.courseId);\n    }\n\n    /**\n     * Download book contents and load the current chapter.\n     *\n     * @param {boolean} [refresh] Whether we're refreshing data.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchContent(refresh?: boolean): Promise<any> {\n        const promises = [];\n        let downloadFailed = false;\n\n        // Try to get the book data.\n        promises.push(this.bookProvider.getBook(this.courseId, this.module.id).then((book) => {\n            this.dataRetrieved.emit(book);\n            this.description = book.intro || this.description;\n        }).catch(() => {\n            // Ignore errors since this WS isn't available in some Moodle versions.\n        }));\n\n        // Download content. This function also loads module contents if needed.\n        promises.push(this.prefetchDelegate.download(this.module, this.courseId).catch(() => {\n            // Mark download as failed but go on since the main files could have been downloaded.\n            downloadFailed = true;\n\n            if (!this.module.contents.length) {\n                // Try to load module contents for offline usage.\n                return this.courseProvider.loadModuleContents(this.module, this.courseId);\n            }\n        }));\n\n        return Promise.all(promises).then(() => {\n            this.contentsMap = this.bookProvider.getContentsMap(this.module.contents);\n            this.chapters = this.bookProvider.getTocList(this.module.contents);\n\n            if (typeof this.currentChapter == 'undefined') {\n                this.currentChapter = this.bookProvider.getFirstChapter(this.chapters);\n            }\n\n            // Show chapter.\n            return this.loadChapter(this.currentChapter).then(() => {\n                if (downloadFailed && this.appProvider.isOnline()) {\n                    // We could load the main file but the download failed. Show error message.\n                    this.domUtils.showErrorModal('core.errordownloadingsomefiles', true);\n                }\n\n                // All data obtained, now fill the context menu.\n                this.fillContextMenu(refresh);\n            }).catch(() => {\n                // Ignore errors, they're handled inside the loadChapter function.\n            });\n        });\n    }\n\n    /**\n     * Load a book chapter.\n     *\n     * @param {string} chapterId Chapter to load.\n     * @return {Promise<void>} Promise resolved when done.\n     */\n    protected loadChapter(chapterId: string): Promise<void> {\n        this.currentChapter = chapterId;\n        this.content && this.content.scrollToTop();\n\n        return this.bookProvider.getChapterContent(this.contentsMap, chapterId, this.module.id).then((content) => {\n            this.chapterContent = content;\n            this.previousChapter = this.bookProvider.getPreviousChapter(this.chapters, chapterId);\n            this.nextChapter = this.bookProvider.getNextChapter(this.chapters, chapterId);\n\n            // Chapter loaded, log view. We don't return the promise because we don't want to block the user for this.\n            this.bookProvider.logView(this.module.instance, chapterId).then(() => {\n                // Module is completed when last chapter is viewed, so we only check completion if the last is reached.\n                if (!this.nextChapter) {\n                    this.courseProvider.checkModuleCompletion(this.courseId, this.module.completionstatus);\n                }\n            });\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.mod_book.errorchapter', true);\n\n            return Promise.reject(null);\n        }).finally(() => {\n            this.loaded = true;\n            this.refreshIcon = 'refresh';\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/components/index/index.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseModuleMainResourceComponent } from '@core/course/classes/main-resource-component';\nimport { AddonModFolderProvider } from '../../providers/folder';\nimport { AddonModFolderHelperProvider } from '../../providers/helper';\n\n/**\n * Component that displays a folder.\n * @todo Adding a new file in a folder updates the revision of all the files, so they're all shown as outdated.\n *       To ignore revision in folders we'll have to modify CoreCourseModulePrefetchDelegate, core-file and CoreFilepoolProvider.\n */\n@Component({\n    selector: 'addon-mod-folder-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModFolderIndexComponent extends CoreCourseModuleMainResourceComponent {\n    @Input() path: string; // For subfolders. Use the path instead of a boolean so Angular detects them as different states.\n\n    component = AddonModFolderProvider.COMPONENT;\n    canGetFolder: boolean;\n    contents: any;\n\n    constructor(private folderProvider: AddonModFolderProvider, private courseProvider: CoreCourseProvider,\n            protected domUtils: CoreDomUtilsProvider, private appProvider: CoreAppProvider,\n            protected textUtils: CoreTextUtilsProvider, protected courseHelper: CoreCourseHelperProvider,\n            protected translate: TranslateService, private folderHelper: AddonModFolderHelperProvider) {\n        super(textUtils, courseHelper, translate, domUtils);\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.canGetFolder = this.folderProvider.isGetFolderWSAvailable();\n\n        if (this.path) {\n            // Subfolder. Use module param.\n            this.showModuleData(this.module);\n            this.loaded = true;\n            this.refreshIcon = 'refresh';\n        } else {\n            this.loadContent().then(() => {\n                this.folderProvider.logView(this.module.instance).then(() => {\n                    this.courseProvider.checkModuleCompletion(this.courseId, this.module.completionstatus);\n                });\n            }).finally(() => {\n                this.loaded = true;\n                this.refreshIcon = 'refresh';\n            });\n        }\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected invalidateContent(): Promise<any> {\n        return this.folderProvider.invalidateContent(this.module.id, this.courseId);\n    }\n\n    /**\n     * Convenience function to set scope data using module.\n     * @param {any} module Module to show.\n     */\n    protected showModuleData(module: any): void {\n        this.description = module.intro || module.description;\n\n        this.dataRetrieved.emit(module);\n\n        if (this.path) {\n            // Subfolder.\n            this.contents = module.contents;\n        } else {\n            this.contents = this.folderHelper.formatContents(module.contents);\n        }\n    }\n\n    /**\n     * Download folder contents.\n     *\n     * @param {boolean} [refresh] Whether we're refreshing data.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchContent(refresh?: boolean): Promise<any> {\n        let promise;\n\n        if (this.canGetFolder) {\n            promise = this.folderProvider.getFolder(this.courseId, this.module.id).then((folder) => {\n                return this.courseProvider.loadModuleContents(this.module, this.courseId).then(() => {\n                    folder.contents = this.module.contents;\n\n                    return folder;\n                });\n            });\n        } else {\n            promise = this.courseProvider.getModule(this.module.id, this.courseId).then((folder) => {\n                if (!folder.contents.length && this.module.contents.length && !this.appProvider.isOnline()) {\n                    // The contents might be empty due to a cached data. Use the old ones.\n                    folder.contents = this.module.contents;\n                }\n                this.module = folder;\n\n                return folder;\n            });\n        }\n\n        return promise.then((folder) => {\n            if (folder) {\n                this.description = folder.intro || folder.description;\n                this.dataRetrieved.emit(folder);\n            }\n\n            this.showModuleData(folder);\n\n            // All data obtained, now fill the context menu.\n            this.fillContextMenu(refresh);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/components/index/index.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseModuleMainResourceComponent } from '@core/course/classes/main-resource-component';\nimport { AddonModPageProvider } from '../../providers/page';\nimport { AddonModPageHelperProvider } from '../../providers/helper';\nimport { AddonModPagePrefetchHandler } from '../../providers/prefetch-handler';\n\n/**\n * Component that displays a page.\n */\n@Component({\n    selector: 'addon-mod-page-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModPageIndexComponent extends CoreCourseModuleMainResourceComponent {\n    component = AddonModPageProvider.COMPONENT;\n    canGetPage: boolean;\n    contents: any;\n    protected fetchContentDefaultError = 'addon.mod_page.errorwhileloadingthepage';\n\n    constructor(private pageProvider: AddonModPageProvider, private courseProvider: CoreCourseProvider,\n            protected domUtils: CoreDomUtilsProvider, private appProvider: CoreAppProvider,\n            protected textUtils: CoreTextUtilsProvider, protected courseHelper: CoreCourseHelperProvider,\n            protected translate: TranslateService, private pageHelper: AddonModPageHelperProvider,\n            private pagePrefetch: AddonModPagePrefetchHandler) {\n        super(textUtils, courseHelper, translate, domUtils);\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.canGetPage = this.pageProvider.isGetPageWSAvailable();\n\n        this.loadContent().then(() => {\n            this.pageProvider.logView(this.module.instance).then(() => {\n                this.courseProvider.checkModuleCompletion(this.courseId, this.module.completionstatus);\n            });\n        });\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected invalidateContent(): Promise<any> {\n        return this.pageProvider.invalidateContent(this.module.id, this.courseId);\n    }\n\n    /**\n     * Download page contents.\n     *\n     * @param {boolean} [refresh] Whether we're refreshing data.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchContent(refresh?: boolean): Promise<any> {\n        let downloadFailed = false;\n\n        // Download content. This function also loads module contents if needed.\n        return this.pagePrefetch.download(this.module, this.courseId).catch(() => {\n            // Mark download as failed but go on since the main files could have been downloaded.\n            downloadFailed = true;\n        }).then(() => {\n            if (!this.module.contents.length) {\n                // Try to load module contents for offline usage.\n                return this.courseProvider.loadModuleContents(this.module, this.courseId);\n            }\n        }).then(() => {\n            const promises = [];\n\n            let getPagePromise;\n\n            // Get the module to get the latest title and description. Data should've been updated in download.\n            if (this.canGetPage) {\n                getPagePromise = this.pageProvider.getPageData(this.courseId, this.module.id);\n            } else {\n                getPagePromise = this.courseProvider.getModule(this.module.id, this.courseId);\n            }\n\n            promises.push(getPagePromise.then((page) => {\n                if (page) {\n                    this.description = page.intro || page.description;\n                    this.dataRetrieved.emit(page);\n                }\n            }).catch(() => {\n                // Ignore errors.\n            }));\n\n            // Get the page HTML.\n            promises.push(this.pageHelper.getPageHtml(this.module.contents, this.module.id).then((content) => {\n                // All data obtained, now fill the context menu.\n                this.fillContextMenu(refresh);\n\n                this.contents = content;\n\n                if (downloadFailed && this.appProvider.isOnline()) {\n                    // We could load the main file but the download failed. Show error message.\n                    this.domUtils.showErrorModal('core.errordownloadingsomefiles', true);\n                }\n            }));\n\n            return Promise.all(promises);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/components/index/index.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseModuleMainResourceComponent } from '@core/course/classes/main-resource-component';\nimport { AddonModResourceProvider } from '../../providers/resource';\nimport { AddonModResourcePrefetchHandler } from '../../providers/prefetch-handler';\nimport { AddonModResourceHelperProvider } from '../../providers/helper';\n\n/**\n * Component that displays a resource.\n */\n@Component({\n    selector: 'addon-mod-resource-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModResourceIndexComponent extends CoreCourseModuleMainResourceComponent {\n    component = AddonModResourceProvider.COMPONENT;\n\n    canGetResource: boolean;\n    mode: string;\n    src: string;\n    contentText: string;\n\n    constructor(private resourceProvider: AddonModResourceProvider, private courseProvider: CoreCourseProvider,\n            protected domUtils: CoreDomUtilsProvider, private appProvider: CoreAppProvider,\n            protected textUtils: CoreTextUtilsProvider, protected courseHelper: CoreCourseHelperProvider,\n            protected translate: TranslateService, private prefetchHandler: AddonModResourcePrefetchHandler,\n            private resourceHelper: AddonModResourceHelperProvider) {\n        super(textUtils, courseHelper, translate, domUtils);\n\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.canGetResource = this.resourceProvider.isGetResourceWSAvailable();\n\n        this.loadContent().then(() => {\n            this.resourceProvider.logView(this.module.instance).then(() => {\n                this.courseProvider.checkModuleCompletion(this.courseId, this.module.completionstatus);\n            });\n        });\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected invalidateContent(): Promise<any> {\n        return this.resourceProvider.invalidateContent(this.module.id, this.courseId);\n    }\n\n    /**\n     * Download resource contents.\n     *\n     * @param {boolean} [refresh] Whether we're refreshing data.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchContent(refresh?: boolean): Promise<any> {\n        // Load module contents if needed. Passing refresh is needed to force reloading contents.\n        return this.courseProvider.loadModuleContents(this.module, this.courseId, null, false, refresh).then(() => {\n            if (!this.module.contents || !this.module.contents.length) {\n                return Promise.reject(null);\n            }\n\n            // Get the resource instance to get the latest name/description and to know if it's embedded.\n            if (this.canGetResource) {\n                return this.resourceProvider.getResourceData(this.courseId, this.module.id).catch(() => {\n                    // Ignore errors.\n                });\n            }\n\n            return this.courseProvider.getModule(this.module.id, this.courseId).catch(() => {\n                // Ignore errors.\n            });\n        }).then((resource) => {\n            if (resource) {\n                this.description = resource.intro || resource.description;\n                this.dataRetrieved.emit(resource);\n            }\n\n            if (this.resourceHelper.isDisplayedInIframe(this.module)) {\n                let downloadFailed = false;\n\n                return this.prefetchHandler.download(this.module, this.courseId).catch(() => {\n                    // Mark download as failed but go on since the main files could have been downloaded.\n                    downloadFailed = true;\n                }).then(() => {\n                    return this.resourceHelper.getIframeSrc(this.module).then((src) => {\n                        this.mode = 'iframe';\n\n                        if (this.src && src.toString() == this.src.toString()) {\n                            // Re-loading same page.\n                            // Set it to empty and then re-set the src in the next digest so it detects it has changed.\n                            this.src = '';\n                            setTimeout(() => {\n                                this.src = src;\n                            });\n                        } else {\n                            this.src = src;\n                        }\n\n                        if (downloadFailed && this.appProvider.isOnline()) {\n                            // We could load the main file but the download failed. Show error message.\n                            this.domUtils.showErrorModal('core.errordownloadingsomefiles', true);\n                        }\n                    });\n                });\n            } else if (this.resourceHelper.isDisplayedEmbedded(this.module, resource && resource.display)) {\n                this.mode = 'embedded';\n\n                return this.resourceHelper.getEmbeddedHtml(this.module).then((html) => {\n                    this.contentText = html;\n                });\n            } else {\n                this.mode = 'external';\n            }\n        }).then(() => {\n            // All data obtained, now fill the context menu.\n            this.fillContextMenu(refresh);\n        });\n    }\n\n    /**\n     * Opens a file.\n     */\n    open(): void {\n        this.resourceHelper.openModuleFile(this.module, this.courseId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/components/index/index.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseModuleMainResourceComponent } from '@core/course/classes/main-resource-component';\nimport { AddonModUrlProvider } from '../../providers/url';\nimport { AddonModUrlHelperProvider } from '../../providers/helper';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\n\n/**\n * Component that displays a url.\n */\n@Component({\n    selector: 'addon-mod-url-index',\n    templateUrl: 'index.html',\n})\nexport class AddonModUrlIndexComponent extends CoreCourseModuleMainResourceComponent {\n    component = AddonModUrlProvider.COMPONENT;\n\n    canGetUrl: boolean;\n    url: string;\n\n    constructor(private urlProvider: AddonModUrlProvider, private courseProvider: CoreCourseProvider,\n            protected domUtils: CoreDomUtilsProvider, protected textUtils: CoreTextUtilsProvider,\n            protected translate: TranslateService, private urlHelper: AddonModUrlHelperProvider,\n            protected courseHelper: CoreCourseHelperProvider) {\n        super(textUtils, courseHelper, translate, domUtils);\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.canGetUrl = this.urlProvider.isGetUrlWSAvailable();\n\n        this.loadContent();\n    }\n\n    /**\n     * Perform the invalidate content function.\n     *\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected invalidateContent(): Promise<any> {\n        return this.urlProvider.invalidateContent(this.module.id, this.courseId);\n    }\n\n    /**\n     * Download url contents.\n     *\n     * @param {boolean} [refresh] Whether we're refreshing data.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchContent(refresh?: boolean): Promise<any> {\n        let canGetUrl = this.canGetUrl;\n\n        // Fetch the module data.\n        let promise;\n        if (canGetUrl) {\n            promise = this.urlProvider.getUrl(this.courseId, this.module.id);\n        } else {\n            promise = Promise.reject(null);\n        }\n\n        return promise.catch(() => {\n            canGetUrl = false;\n\n            // Fallback in case is not prefetch or not avalaible.\n            return this.courseProvider.getModule(this.module.id, this.courseId);\n        }).then((url) => {\n            if (!canGetUrl) {\n                if (!url.contents.length) {\n                    // If the data was cached maybe we don't have contents. Reject.\n                    return Promise.reject(null);\n                }\n            }\n\n            this.description = url.intro || url.description;\n            this.dataRetrieved.emit(url);\n\n            this.url = canGetUrl ? url.externalurl :\n                            ((url.contents[0] && url.contents[0].fileurl) ? url.contents[0].fileurl : undefined);\n        });\n    }\n\n    /**\n     * Opens a file.\n     */\n    go(): void {\n        this.urlProvider.logView(this.module.instance).then(() => {\n            this.courseProvider.checkModuleCompletion(this.courseId, this.module.completionstatus);\n        });\n        this.urlHelper.open(this.url);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/url/components/index/index.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { Badge } from '@ionic-native/badge';\nimport { Push, PushObject, PushOptions } from '@ionic-native/push';\nimport { Device } from '@ionic-native/device';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { AddonPushNotificationsDelegate } from './delegate';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreConfigProvider } from '@providers/config';\nimport { CoreConfigConstants } from '../../../configconstants';\n\n/**\n * Service to handle push notifications.\n */\n@Injectable()\nexport class AddonPushNotificationsProvider {\n\n    protected logger;\n    protected pushID: string;\n    protected appDB: any;\n    static COMPONENT = 'AddonPushNotificationsProvider';\n\n    // Variables for database.\n    protected BADGE_TABLE = 'addon_pushnotifications_badge';\n    protected tablesSchema = [\n        {\n            name: this.BADGE_TABLE,\n            columns: [\n                {\n                    name: 'siteid',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'addon',\n                    type: 'TEXT'\n                },\n                {\n                    name: 'number',\n                    type: 'INTEGER'\n                }\n            ],\n            primaryKeys: ['siteid', 'addon']\n        }\n    ];\n\n    constructor(logger: CoreLoggerProvider, protected appProvider: CoreAppProvider, private platform: Platform,\n            protected pushNotificationsDelegate: AddonPushNotificationsDelegate, protected sitesProvider: CoreSitesProvider,\n            private badge: Badge, private localNotificationsProvider: CoreLocalNotificationsProvider,\n            private utils: CoreUtilsProvider, private textUtils: CoreTextUtilsProvider, private push: Push,\n            private configProvider: CoreConfigProvider, private device: Device) {\n        this.logger = logger.getInstance('AddonPushNotificationsProvider');\n        this.appDB = appProvider.getDB();\n        this.appDB.createTablesFromSchema(this.tablesSchema);\n    }\n\n    /**\n     * Delete all badge records for a given site.\n     *\n     * @param  {string} siteId Site ID.\n     * @return {Promise<any>}  Resolved when done.\n     */\n    cleanSiteCounters(siteId: string): Promise<any> {\n        return this.appDB.deleteRecords(this.BADGE_TABLE, {siteid: siteId} ).finally(() => {\n            this.updateAppCounter();\n        });\n    }\n\n    /**\n     * Returns options for push notifications based on device.\n     *\n     * @return {Promise<PushOptions>} Promise with the push options resolved when done.\n     */\n    protected getOptions(): Promise<PushOptions> {\n        // @todo: CoreSettingsProvider.NOTIFICATION_SOUND\n        return this.configProvider.get('CoreSettingsProvider.NOTIFICATION_SOUND', true).then((soundEnabled) => {\n            return {\n                android: {\n                    senderID: CoreConfigConstants.gcmpn,\n                    sound: !!soundEnabled\n                },\n                ios: {\n                    alert: 'true',\n                    badge: true,\n                    sound: !!soundEnabled\n                },\n                windows: {\n                    sound: !!soundEnabled\n                }\n            };\n        });\n    }\n\n    /**\n     * Get the pushID for this device.\n     *\n     * @return {string} Push ID.\n     */\n    getPushId(): string {\n        return this.pushID;\n    }\n\n    /**\n     * Get Sitebadge  counter from the database.\n     *\n     * @param  {string} siteId Site ID.\n     * @return {Promise<any>}       Promise resolved with the stored badge counter for the site.\n     */\n    getSiteCounter(siteId: string): Promise<any> {\n        return this.getAddonBadge(siteId);\n    }\n\n    /**\n     * Function called when a push notification is clicked. Redirect the user to the right state.\n     *\n     * @param {any} notification Notification.\n     */\n    notificationClicked(notification: any): void {\n        this.platform.ready().then(() => {\n            this.pushNotificationsDelegate.clicked(notification);\n        });\n    }\n\n    /**\n     * This function is called when we receive a Notification from APNS or a message notification from GCM.\n     * The app can be in foreground or background,\n     * if we are in background this code is executed when we open the app clicking in the notification bar.\n     *\n     * @param {any} notification Notification received.\n     */\n    onMessageReceived(notification: any): void {\n        const data = notification ? notification.additionalData : {};\n\n        this.sitesProvider.getSite(data.site).then(() => {\n            if (this.utils.isTrueOrOne(data.foreground)) {\n                // If the app is in foreground when the notification is received, it's not shown. Let's show it ourselves.\n                if (this.localNotificationsProvider.isAvailable()) {\n                    const localNotif = {\n                            id: 1,\n                            at: new Date(),\n                            data: {\n                                notif: data.notif,\n                                site: data.site\n                            },\n                            title: '',\n                            text: ''\n                        },\n                        promises = [];\n\n                    // Apply formatText to title and message.\n                    promises.push(this.textUtils.formatText(notification.title, true, true).then((formattedTitle) => {\n                        localNotif.title = formattedTitle;\n                    }).catch(() => {\n                        localNotif.title = notification.title;\n                    }));\n\n                    promises.push(this.textUtils.formatText(notification.message, true, true).then((formattedMessage) => {\n                        localNotif.text = formattedMessage;\n                    }).catch(() => {\n                        localNotif.text = notification.message;\n                    }));\n\n                    Promise.all(promises).then(() => {\n                        this.localNotificationsProvider.schedule(localNotif, AddonPushNotificationsProvider.COMPONENT, data.site);\n                    });\n                }\n\n                // Trigger a notification received event.\n                this.platform.ready().then(() => {\n                    data.title = notification.title;\n                    data.message = notification.message;\n                    this.pushNotificationsDelegate.received(data);\n                });\n            } else {\n                // The notification was clicked.\n                // For compatibility with old push plugin implementation we'll merge all the notification data in a single object.\n                data.title = notification.title;\n                data.message = notification.message;\n                this.notificationClicked(data);\n            }\n        });\n    }\n\n    /**\n     * Unregisters a device from a certain Moodle site.\n     *\n     * @param {any} site Site to unregister from.\n     * @return {Promise<any>}    Promise resolved when device is unregistered.\n     */\n    unregisterDeviceOnMoodle(site: any): Promise<any> {\n        if (!site || !this.appProvider.isMobile()) {\n            return Promise.reject(null);\n        }\n\n        this.logger.debug(`Unregister device on Moodle: '${site.id}'`);\n\n        const data = {\n            appid: CoreConfigConstants.app_id,\n            uuid:  this.device.uuid\n        };\n\n        return site.write('core_user_remove_user_device', data).then((response) => {\n            if (!response || !response.removed) {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Update Counter for an addon. It will update the refered siteId counter and the total badge.\n     * It will return the updated addon counter.\n     *\n     * @param  {string} addon    Registered addon name to set the badge number.\n     * @param  {number} value    The number to be stored.\n     * @param  {string} [siteId] Site ID. If not defined, use current site.\n     * @return {Promise<any>}    Promise resolved with the stored badge counter for the addon on the site.\n     */\n    updateAddonCounter(addon: string, value: number, siteId?: string): Promise<any> {\n        if (this.pushNotificationsDelegate.isCounterHandlerRegistered(addon)) {\n            siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n            return this.saveAddonBadge(value, siteId, addon).then(() => {\n                return this.updateSiteCounter(siteId).then(() => {\n                    return value;\n                });\n            });\n        }\n\n        return Promise.resolve(0);\n    }\n\n    /**\n     * Update total badge counter of the app.\n     *\n     * @return {Promise<any>}        Promise resolved with the stored badge counter for the site.\n     */\n    updateAppCounter(): Promise<any> {\n        return this.sitesProvider.getSitesIds().then((sites) => {\n            const promises = [];\n            sites.forEach((siteId) => {\n                promises.push(this.getAddonBadge(siteId));\n            });\n\n            return Promise.all(promises).then((counters) => {\n                const total = counters.reduce((previous, counter) => {\n                    // The app badge counter does not support strings, so parse to int before.\n                    return previous + parseInt(counter, 10);\n                }, 0);\n\n                // Set the app badge.\n                return this.badge.set(total).then(() => {\n                    return total;\n                });\n            });\n        });\n    }\n\n    /**\n     * Update counter for a site using the stored addon data. It will update the total badge application number.\n     * It will return the updated site counter.\n     *\n     * @param  {string} siteId Site ID.\n     * @return {Promise<any>}       Promise resolved with the stored badge counter for the site.\n     */\n    updateSiteCounter(siteId: string): Promise<any> {\n        const addons = this.pushNotificationsDelegate.getCounterHandlers(),\n            promises = [];\n\n        for (const x in addons) {\n            promises.push(this.getAddonBadge(siteId, addons[x]));\n        }\n\n        return Promise.all(promises).then((counters) => {\n            let plus = false,\n                total = counters.reduce((previous, counter) => {\n                    // Check if there is a plus sign at the end of the counter.\n                    if (counter != parseInt(counter, 10)) {\n                        plus = true;\n                        counter = parseInt(counter, 10);\n                    }\n\n                    return previous + counter;\n                }, 0);\n\n            total = plus && total > 0 ? total + '+' : total;\n\n            // Save the counter on site.\n            return this.saveAddonBadge(total, siteId);\n        }).then((siteTotal) => {\n            return this.updateAppCounter().then(() => {\n                return siteTotal;\n            });\n        });\n    }\n\n    /**\n     * Register a device in Apple APNS or Google GCM.\n     *\n     * @return {Promise<any>} Promise resolved when the device is registered.\n     */\n    registerDevice(): Promise<any> {\n        try {\n            // Check if sound is enabled for notifications.\n            return this.getOptions().then((options) => {\n                const pushObject: PushObject = this.push.init(options);\n\n                pushObject.on('notification').subscribe((notification: any) => {\n                    this.logger.log('Received a notification', notification);\n                    this.onMessageReceived(notification);\n                });\n\n                pushObject.on('registration').subscribe((registrationId: any) => {\n                    this.pushID = registrationId;\n                    this.registerDeviceOnMoodle().catch((error) => {\n                        this.logger.warn('Can\\'t register device', error);\n                    });\n                });\n\n                pushObject.on('error').subscribe((error: any) => {\n                    this.logger.warn('Error with Push plugin', error);\n                });\n            });\n        } catch (ex) {\n            // Ignore errors.\n            this.logger.warn(ex);\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Registers a device on current Moodle site.\n     *\n     * @return {Promise<any>}      Promise resolved when device is registered.\n     */\n    registerDeviceOnMoodle(): Promise<any> {\n        this.logger.debug('Register device on Moodle.');\n\n        if (!this.sitesProvider.isLoggedIn() || !this.pushID || !this.appProvider.isMobile()) {\n            return Promise.reject(null);\n        }\n\n        const data = {\n            appid:      CoreConfigConstants.app_id,\n            name:       this.device.manufacturer || '',\n            model:      this.device.model,\n            platform:   this.device.platform,\n            version:    this.device.version,\n            pushid:     this.pushID,\n            uuid:       this.device.uuid\n        };\n\n        return this.sitesProvider.getCurrentSite().write('core_user_add_user_device', data);\n    }\n\n    /**\n     * Get the addon/site badge counter from the database.\n     *\n     * @param  {string} siteId   Site ID.\n     * @param  {string} [addon='site'] Registered addon name. If not defined it will store the site total.\n     * @return {Promise<any>}         Promise resolved with the stored badge counter for the addon or site or 0 if none.\n     */\n    protected getAddonBadge(siteId?: string, addon: string = 'site'): Promise<any> {\n        return this.appDB.getRecord(this.BADGE_TABLE, {siteid: siteId, addon: addon}).then((entry) => {\n             return (entry && entry.number) || 0;\n        }).catch(() => {\n            return 0;\n        });\n    }\n\n    /**\n     * Save the addon/site badgecounter on the database.\n     *\n     * @param  {number} value   The number to be stored.\n     * @param  {string} [siteId] Site ID. If not defined, use current site.\n     * @param  {string} [addon='site'] Registered addon name. If not defined it will store the site total.\n     * @return {Promise<any>}         Promise resolved with the stored badge counter for the addon or site.\n     */\n    protected saveAddonBadge(value: number, siteId?: string, addon: string = 'site'): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const entry = {\n            siteid: siteId,\n            addon: addon,\n            number: value\n        };\n\n        return this.appDB.insertOrUpdateRecord(this.BADGE_TABLE, entry, {siteid: siteId, addon: addon}).then(() => {\n            return value;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/pushnotifications/providers/pushnotifications.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { SQLiteDB } from '@classes/sqlitedb';\n\n/**\n * Service to share files with the app.\n */\n@Injectable()\nexport class CoreSharedFilesProvider {\n    static SHARED_FILES_FOLDER = 'sharedfiles';\n\n    // Variables for the database.\n    protected SHARED_FILES_TABLE = 'wscache';\n    protected tableSchema = {\n        name: this.SHARED_FILES_TABLE,\n        columns: [\n            {\n                name: 'id',\n                type: 'TEXT',\n                primaryKey: true\n            }\n        ]\n    };\n\n    protected logger;\n    protected appDB: SQLiteDB;\n\n    constructor(logger: CoreLoggerProvider, private fileProvider: CoreFileProvider, appProvider: CoreAppProvider,\n        private textUtils: CoreTextUtilsProvider, private mimeUtils: CoreMimetypeUtilsProvider,\n        private sitesProvider: CoreSitesProvider, private eventsProvider: CoreEventsProvider) {\n        this.logger = logger.getInstance('CoreSharedFilesProvider');\n\n        this.appDB = appProvider.getDB();\n        this.appDB.createTableFromSchema(this.tableSchema);\n    }\n\n    /**\n     * Checks if there is a new file received in iOS. If more than one file is found, treat only the first one.\n     * The file returned is marked as \"treated\" and will be deleted in the next execution.\n     *\n     * @return {Promise<any>} Promise resolved with a new file to be treated. If no new files found, promise is rejected.\n     */\n    checkIOSNewFiles(): Promise<any> {\n        this.logger.debug('Search for new files on iOS');\n\n        return this.fileProvider.getDirectoryContents('Inbox').then((entries) => {\n            if (entries.length > 0) {\n                const promises = [];\n                let fileToReturn;\n\n                entries.forEach((entry) => {\n                    const fileId = this.getFileId(entry);\n\n                    // Check if file was already treated.\n                    promises.push(this.isFileTreated(fileId).then(() => {\n                        // File already treated, delete it. Don't return delete promise, we'll ignore errors.\n                        this.deleteInboxFile(entry);\n                    }).catch(() => {\n                        // File not treated before.\n                        this.logger.debug('Found new file ' + entry.name + ' shared with the app.');\n                        if (!fileToReturn) {\n                            fileToReturn = entry;\n                        }\n                    }));\n                });\n\n                return Promise.all(promises).then(() => {\n                    let fileId;\n\n                    if (fileToReturn) {\n                        // Mark it as \"treated\".\n                        fileId = this.getFileId(fileToReturn);\n\n                        return this.markAsTreated(fileId).then(() => {\n                            this.logger.debug('File marked as \"treated\": ' + fileToReturn.name);\n\n                            return fileToReturn;\n                        });\n                    } else {\n                        return Promise.reject(null);\n                    }\n                });\n            } else {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Deletes a file in the Inbox folder (shared with the app).\n     *\n     * @param {any} entry FileEntry.\n     * @return {Promise<any>} Promise resolved when done, rejected otherwise.\n     */\n    deleteInboxFile(entry: any): Promise<any> {\n        this.logger.debug('Delete inbox file: ' + entry.name);\n\n        return this.fileProvider.removeFileByFileEntry(entry).catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            return this.unmarkAsTreated(this.getFileId(entry)).then(() => {\n                this.logger.debug('\"Treated\" mark removed from file: ' + entry.name);\n            }).catch((error) => {\n                this.logger.debug('Error deleting \"treated\" mark from file: ' + entry.name, error);\n\n                return Promise.reject(error);\n            });\n        });\n    }\n\n    /**\n     * Get the ID of a file for managing \"treated\" files.\n     *\n     * @param {any} entry FileEntry.\n     * @return {string} File ID.\n     */\n    protected getFileId(entry: any): string {\n        return <string> Md5.hashAsciiStr(entry.name);\n    }\n\n    /**\n     * Get the shared files stored in a site.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {string} [path] Path to search inside the site shared folder.\n     * @param {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {Promise<any[]>} Promise resolved with the files.\n     */\n    getSiteSharedFiles(siteId?: string, path?: string, mimetypes?: string[]): Promise<any[]> {\n        let pathToGet = this.getSiteSharedFilesDirPath(siteId);\n        if (path) {\n            pathToGet = this.textUtils.concatenatePaths(pathToGet, path);\n        }\n\n        return this.fileProvider.getDirectoryContents(pathToGet).then((files) => {\n            if (mimetypes) {\n                // Only show files with the right mimetype and the ones we cannot determine the mimetype.\n                files = files.filter((file) => {\n                    const extension = this.mimeUtils.getFileExtension(file.name),\n                        mimetype = this.mimeUtils.getMimeType(extension);\n\n                    return !mimetype || mimetypes.indexOf(mimetype) > -1;\n                });\n            }\n\n            return files;\n        }).catch(() => {\n            // Directory not found, return empty list.\n            return [];\n        });\n    }\n\n    /**\n     * Get the path to a site's shared files folder.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {string} Path.\n     */\n    getSiteSharedFilesDirPath(siteId?: string): string {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        return this.fileProvider.getSiteFolder(siteId) + '/' + CoreSharedFilesProvider.SHARED_FILES_FOLDER;\n    }\n\n    /**\n     * Check if a file has been treated already.\n     *\n     * @param {string} fileId File ID.\n     * @return {Promise<any>} Resolved if treated, rejected otherwise.\n     */\n    protected isFileTreated(fileId: string): Promise<any> {\n        return this.appDB.getRecord(this.SHARED_FILES_TABLE, { id: fileId });\n    }\n\n    /**\n     * Mark a file as treated.\n     *\n     * @param {string} fileId File ID.\n     * @return {Promise<any>} Promise resolved when marked.\n     */\n    protected markAsTreated(fileId: string): Promise<any> {\n        // Check if it's already marked.\n        return this.isFileTreated(fileId).catch(() => {\n            // Doesn't exist, insert it.\n            return this.appDB.insertRecord(this.SHARED_FILES_TABLE, { id: fileId });\n        });\n    }\n\n    /**\n     * Store a file in a site's shared folder.\n     *\n     * @param {any} entry File entry.\n     * @param {string} [newName] Name of the new file. If not defined, use original file's name.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>}Promise resolved when done.\n     */\n    storeFileInSite(entry: any, newName?: string, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (!entry || !siteId) {\n            return Promise.reject(null);\n        }\n\n        newName = newName || entry.name;\n\n        const sharedFilesFolder = this.getSiteSharedFilesDirPath(siteId),\n            newPath = this.textUtils.concatenatePaths(sharedFilesFolder, newName);\n\n        // Create dir if it doesn't exist already.\n        return this.fileProvider.createDir(sharedFilesFolder).then(() => {\n            return this.fileProvider.moveFile(entry.fullPath, newPath).then((newFile) => {\n                this.eventsProvider.trigger(CoreEventsProvider.FILE_SHARED, { siteId: siteId, name: newName });\n\n                return newFile;\n            });\n        });\n    }\n\n    /**\n     * Unmark a file as treated.\n     *\n     * @param {string} fileId File ID.\n     * @return {Promise<any>} Resolved when unmarked.\n     */\n    protected unmarkAsTreated(fileId: string): Promise<any> {\n        return this.appDB.deleteRecords(this.SHARED_FILES_TABLE, { id: fileId });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sharedfiles/providers/sharedfiles.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { AlertController, ModalController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreInitDelegate } from '@providers/init';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSharedFilesProvider } from './sharedfiles';\nimport { CoreFileUploaderProvider } from '@core/fileuploader/providers/fileuploader';\n\n/**\n * Helper service to share files with the app.\n */\n@Injectable()\nexport class CoreSharedFilesHelperProvider {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private alertCtrl: AlertController, private translate: TranslateService,\n            private utils: CoreUtilsProvider, private sitesProvider: CoreSitesProvider, private modalCtrl: ModalController,\n            private fileUploaderProvider: CoreFileUploaderProvider, private initDelegate: CoreInitDelegate,\n            private sharedFilesProvider: CoreSharedFilesProvider, private domUtils: CoreDomUtilsProvider,\n            private fileProvider: CoreFileProvider, private appProvider: CoreAppProvider) {\n        this.logger = logger.getInstance('CoreSharedFilesHelperProvider');\n    }\n\n    /**\n     * Ask a user if he wants to replace a file (using originalName) or rename it (using newName).\n     *\n     * @param {string} originalName Original name.\n     * @param {string} newName New name.\n     * @return {Promise<string>} Promise resolved with the name to use when the user chooses. Rejected if user cancels.\n     */\n    askRenameReplace(originalName: string, newName: string): Promise<string> {\n        const deferred = this.utils.promiseDefer(),\n            alert = this.alertCtrl.create({\n                title: this.translate.instant('core.sharedfiles.sharedfiles'),\n                message: this.translate.instant('core.sharedfiles.chooseactionrepeatedfile', { $a: newName }),\n                buttons: [\n                    {\n                        text: this.translate.instant('core.sharedfiles.rename'),\n                        handler: (): void => {\n                            deferred.resolve(newName);\n                        }\n                    },\n                    {\n                        text: this.translate.instant('core.sharedfiles.replace'),\n                        handler: (): void => {\n                            deferred.resolve(originalName);\n                        }\n                    }\n                ]\n            });\n\n        alert.present();\n\n        return deferred.promise;\n    }\n\n    /**\n     * Go to the choose site view.\n     *\n     * @param {string} filePath File path to send to the view.\n     */\n    goToChooseSite(filePath: string): void {\n        const navCtrl = this.appProvider.getRootNavController();\n        navCtrl.push('CoreSharedFilesChooseSitePage', { filePath: filePath });\n    }\n\n    /**\n     * Open the view to select a shared file.\n     *\n     * @param  {string[]} [mimetypes] List of supported mimetypes. If undefined, all mimetypes supported.\n     * @return {Promise<any>} Promise resolved when a file is picked, rejected if file picker is closed without selecting a file.\n     */\n    pickSharedFile(mimetypes?: string[]): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            const modal = this.modalCtrl.create('CoreSharedFilesListPage', { mimetypes: mimetypes, isModal: true, pick: true });\n            modal.present();\n\n            modal.onDidDismiss((file: any) => {\n                if (!file) {\n                    // User cancelled.\n                    reject();\n\n                    return;\n                }\n\n                const error = this.fileUploaderProvider.isInvalidMimetype(mimetypes, file.fullPath);\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve({\n                        path: file.fullPath,\n                        treated: false\n                    });\n                }\n            });\n        });\n    }\n\n    /**\n     * Checks if there is a new file received in iOS and move it to the shared folder of current site.\n     * If more than one site is found, the user will have to choose the site where to store it in.\n     * If more than one file is found, treat only the first one.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    searchIOSNewSharedFiles(): Promise<any> {\n        return this.initDelegate.ready().then(() => {\n            const navCtrl = this.appProvider.getRootNavController();\n            if (navCtrl && navCtrl.getActive().id == 'CoreSharedFilesChooseSite') {\n                // We're already treating a shared file. Abort.\n                return Promise.reject(null);\n            }\n\n            return this.sharedFilesProvider.checkIOSNewFiles().then((fileEntry) => {\n                return this.sitesProvider.getSitesIds().then((siteIds) => {\n                    if (!siteIds.length) {\n                        // No sites stored, show error and delete the file.\n                        this.domUtils.showErrorModal('core.sharedfiles.errorreceivefilenosites', true);\n\n                        return this.sharedFilesProvider.deleteInboxFile(fileEntry);\n                    } else if (siteIds.length == 1) {\n                        return this.storeSharedFileInSite(fileEntry, siteIds[0]);\n                    } else {\n                        this.goToChooseSite(fileEntry.fullPath);\n                    }\n                });\n            });\n        });\n    }\n\n    /**\n     * Store a shared file in a site's shared files folder.\n     *\n     * @param {any} fileEntry Shared file entry.\n     * @param {string} [siteId]  Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    storeSharedFileInSite(fileEntry: any, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        // First of all check if there's already a file with the same name in the shared files folder.\n        const sharedFilesDirPath = this.sharedFilesProvider.getSiteSharedFilesDirPath(siteId);\n\n        return this.fileProvider.getUniqueNameInFolder(sharedFilesDirPath, fileEntry.name).then((newName) => {\n            if (newName == fileEntry.name) {\n                // No file with the same name. Use the original file name.\n                return newName;\n            } else {\n                // Repeated name. Ask the user what he wants to do.\n                return this.askRenameReplace(fileEntry.name, newName);\n            }\n        }).then((name) => {\n            return this.sharedFilesProvider.storeFileInSite(fileEntry, name, siteId).catch((err) => {\n                this.domUtils.showErrorModal(err || 'Error moving file.');\n            }).finally(() => {\n                this.sharedFilesProvider.deleteInboxFile(fileEntry);\n                this.domUtils.showAlertTranslated('core.success', 'core.sharedfiles.successstorefile');\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sharedfiles/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreDelegate, CoreDelegateHandler } from '@classes/delegate';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Interface that all settings handlers must implement.\n */\nexport interface CoreSettingsHandler extends CoreDelegateHandler {\n    /**\n     * The highest priority is displayed first.\n     * @type {number}\n     */\n    priority: number;\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreSettingsHandlerData} Data.\n     */\n    getDisplayData(): CoreSettingsHandlerData;\n}\n\n/**\n * Data needed to render a setting handler. It's returned by the handler.\n */\nexport interface CoreSettingsHandlerData {\n    /**\n     * Name of the page to load for the handler.\n     * @type {string}\n     */\n    page: string;\n\n    /**\n     * Params list of the page to load for the handler.\n     * @type {any}\n     */\n    params?: any;\n\n    /**\n     * Title to display for the handler.\n     * @type {string}\n     */\n    title: string;\n\n    /**\n     * Name of the icon to display for the handler.\n     * @type {string}\n     */\n    icon?: string; // Name of the icon to display in the menu.\n\n    /**\n     * Class to add to the displayed handler.\n     * @type {string}\n     */\n    class?: string;\n}\n\n/**\n * Service to interact with addons to be shown in app settings. Provides functions to register a plugin\n * and notify an update in the data.\n */\n@Injectable()\nexport class CoreSettingsDelegate extends CoreDelegate {\n\n    protected handlers: { [s: string]: CoreSettingsHandler } = {};\n    protected enabledHandlers: { [s: string]: CoreSettingsHandler } = {};\n    protected siteHandlers: CoreSettingsHandlerData[] = []; // Handlers to return.\n\n    constructor(protected loggerProvider: CoreLoggerProvider, protected sitesProvider: CoreSitesProvider,\n            protected eventsProvider: CoreEventsProvider, protected utils: CoreUtilsProvider) {\n        super('CoreSettingsDelegate', loggerProvider, sitesProvider, eventsProvider);\n\n        eventsProvider.on(CoreEventsProvider.LOGOUT, this.clearSiteHandlers.bind(this));\n    }\n\n    /**\n     * Clear current site handlers. Reserved for core use.\n     */\n    clearSiteHandlers(): void {\n        this.siteHandlers = [];\n    }\n\n    /**\n     * Get the handlers for the current site.\n     *\n     * @return {CoreSettingsHandlerData[]}\n     */\n    getHandlers(): CoreSettingsHandlerData[] {\n        return this.siteHandlers;\n    }\n\n    /**\n     * Update handlers Data.\n     */\n    updateData(): void {\n        const handlersData: any[] = [];\n\n        for (const name in this.enabledHandlers) {\n            const handler = this.enabledHandlers[name],\n                data = handler.getDisplayData();\n\n            handlersData.push({\n                data: data,\n                priority: handler.priority\n            });\n        }\n\n        // Sort them by priority.\n        handlersData.sort((a, b) => {\n            return b.priority - a.priority;\n        });\n\n        // Return only the display data.\n        this.siteHandlers = handlersData.map((item) => {\n            return item.data;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/settings/providers/delegate.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 311;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 311\n// module chunks = 60","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { IonicApp, IonicModule, Platform } from 'ionic-angular';\nimport { HttpModule } from '@angular/http';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nimport { MoodleMobileApp } from './app.component';\nimport { CoreInterceptor } from '@classes/interceptor';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreDbProvider } from '@providers/db';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreConfigProvider } from '@providers/config';\nimport { CoreLangProvider } from '@providers/lang';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreInitDelegate } from '@providers/init';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreWSProvider } from '@providers/ws';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesFactoryProvider } from '@providers/sites-factory';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreGroupsProvider } from '@providers/groups';\nimport { CoreCronDelegate } from '@providers/cron';\nimport { CoreFileSessionProvider } from '@providers/file-session';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreUpdateManagerProvider } from '@providers/update-manager';\nimport { CorePluginFileDelegate } from '@providers/plugin-file-delegate';\nimport { CoreSyncProvider } from '@providers/sync';\nimport { CoreFileHelperProvider } from '@providers/file-helper';\n\n// Core modules.\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreEmulatorModule } from '@core/emulator/emulator.module';\nimport { CoreLoginModule } from '@core/login/login.module';\nimport { CoreMainMenuModule } from '@core/mainmenu/mainmenu.module';\nimport { CoreCoursesModule } from '@core/courses/courses.module';\nimport { CoreFileUploaderModule } from '@core/fileuploader/fileuploader.module';\nimport { CoreSharedFilesModule } from '@core/sharedfiles/sharedfiles.module';\nimport { CoreCourseModule } from '@core/course/course.module';\nimport { CoreSiteHomeModule } from '@core/sitehome/sitehome.module';\nimport { CoreContentLinksModule } from '@core/contentlinks/contentlinks.module';\nimport { CoreUserModule } from '@core/user/user.module';\nimport { CoreGradesModule } from '@core/grades/grades.module';\nimport { CoreSettingsModule } from '@core/settings/settings.module';\nimport { CoreSitePluginsModule } from '@core/siteplugins/siteplugins.module';\nimport { CoreCompileModule } from '@core/compile/compile.module';\n\n// Addon modules.\nimport { AddonBadgesModule } from '@addon/badges/badges.module';\nimport { AddonCalendarModule } from '@addon/calendar/calendar.module';\nimport { AddonCompetencyModule } from '@addon/competency/competency.module';\nimport { AddonUserProfileFieldModule } from '@addon/userprofilefield/userprofilefield.module';\nimport { AddonFilesModule } from '@addon/files/files.module';\nimport { AddonModBookModule } from '@addon/mod/book/book.module';\nimport { AddonModLabelModule } from '@addon/mod/label/label.module';\nimport { AddonModResourceModule } from '@addon/mod/resource/resource.module';\nimport { AddonModFolderModule } from '@addon/mod/folder/folder.module';\nimport { AddonModPageModule } from '@addon/mod/page/page.module';\nimport { AddonModUrlModule } from '@addon/mod/url/url.module';\nimport { AddonMessagesModule } from '@addon/messages/messages.module';\nimport { AddonPushNotificationsModule } from '@addon/pushnotifications/pushnotifications.module';\nimport { AddonRemoteThemesModule } from '@addon/remotethemes/remotethemes.module';\n\n// For translate loader. AoT requires an exported function for factories.\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n    return new TranslateHttpLoader(http, './assets/lang/', '.json');\n}\n\n// List of providers.\nexport const CORE_PROVIDERS: any[] = [\n    CoreLoggerProvider,\n    CoreDbProvider,\n    CoreAppProvider,\n    CoreConfigProvider,\n    CoreLangProvider,\n    CoreTextUtilsProvider,\n    CoreDomUtilsProvider,\n    CoreTimeUtilsProvider,\n    CoreUrlUtilsProvider,\n    CoreUtilsProvider,\n    CoreMimetypeUtilsProvider,\n    CoreInitDelegate,\n    CoreFileProvider,\n    CoreWSProvider,\n    CoreEventsProvider,\n    CoreSitesFactoryProvider,\n    CoreSitesProvider,\n    CoreLocalNotificationsProvider,\n    CoreGroupsProvider,\n    CoreCronDelegate,\n    CoreFileSessionProvider,\n    CoreFilepoolProvider,\n    CoreUpdateManagerProvider,\n    CorePluginFileDelegate,\n    CoreSyncProvider,\n    CoreFileHelperProvider\n];\n\n@NgModule({\n    declarations: [\n        MoodleMobileApp\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpClientModule, // HttpClient is used to make JSON requests. It fails for HEAD requests because there is no content.\n        HttpModule,\n        IonicModule.forRoot(MoodleMobileApp, {\n            pageTransition: 'ios-transition'\n        }),\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient]\n            }\n        }),\n        CoreComponentsModule,\n        CoreEmulatorModule,\n        CoreLoginModule,\n        CoreMainMenuModule,\n        CoreCoursesModule,\n        CoreFileUploaderModule,\n        CoreSharedFilesModule,\n        CoreCourseModule,\n        CoreSiteHomeModule,\n        CoreContentLinksModule,\n        CoreUserModule,\n        CoreGradesModule,\n        CoreSettingsModule,\n        CoreSitePluginsModule,\n        CoreCompileModule,\n        AddonBadgesModule,\n        AddonCalendarModule,\n        AddonCompetencyModule,\n        AddonUserProfileFieldModule,\n        AddonFilesModule,\n        AddonModBookModule,\n        AddonModLabelModule,\n        AddonModResourceModule,\n        AddonModFolderModule,\n        AddonModPageModule,\n        AddonModUrlModule,\n        AddonMessagesModule,\n        AddonPushNotificationsModule,\n        AddonRemoteThemesModule\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MoodleMobileApp\n    ],\n    providers: CORE_PROVIDERS.concat([\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: CoreInterceptor,\n            multi: true,\n        }\n    ])\n})\nexport class AppModule {\n    constructor(platform: Platform, initDelegate: CoreInitDelegate, updateManager: CoreUpdateManagerProvider,\n            sitesProvider: CoreSitesProvider) {\n        // Register a handler for platform ready.\n        initDelegate.registerProcess({\n            name: 'CorePlatformReady',\n            priority: CoreInitDelegate.MAX_RECOMMENDED_PRIORITY + 400,\n            blocking: true,\n            load: platform.ready\n        });\n\n        // Register the update manager as an init process.\n        initDelegate.registerProcess(updateManager);\n\n        // Restore the user's session during the init process.\n        initDelegate.registerProcess({\n            name: 'CoreRestoreSession',\n            priority: CoreInitDelegate.MAX_RECOMMENDED_PRIORITY + 200,\n            blocking: false,\n            load: sitesProvider.restoreSession.bind(sitesProvider)\n        });\n\n        // Execute the init processes.\n        initDelegate.executeInitProcesses();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","var map = {\n\t\"../addon/badges/pages/issued-badge/issued-badge.module\": [\n\t\t1301,\n\t\t59\n\t],\n\t\"../addon/badges/pages/user-badges/user-badges.module\": [\n\t\t1302,\n\t\t58\n\t],\n\t\"../addon/calendar/pages/event/event.module\": [\n\t\t1304,\n\t\t57\n\t],\n\t\"../addon/calendar/pages/list/list.module\": [\n\t\t1303,\n\t\t56\n\t],\n\t\"../addon/calendar/pages/settings/settings.module\": [\n\t\t1305,\n\t\t55\n\t],\n\t\"../addon/competency/pages/competencies/competencies.module\": [\n\t\t1308,\n\t\t54\n\t],\n\t\"../addon/competency/pages/competency/competency.module\": [\n\t\t1306,\n\t\t53\n\t],\n\t\"../addon/competency/pages/competencysummary/competencysummary.module\": [\n\t\t1310,\n\t\t52\n\t],\n\t\"../addon/competency/pages/coursecompetencies/coursecompetencies.module\": [\n\t\t1307,\n\t\t51\n\t],\n\t\"../addon/competency/pages/plan/plan.module\": [\n\t\t1311,\n\t\t50\n\t],\n\t\"../addon/competency/pages/planlist/planlist.module\": [\n\t\t1309,\n\t\t49\n\t],\n\t\"../addon/files/pages/list/list.module\": [\n\t\t1312,\n\t\t48\n\t],\n\t\"../addon/messages/pages/discussion/discussion.module\": [\n\t\t1315,\n\t\t47\n\t],\n\t\"../addon/messages/pages/index/index.module\": [\n\t\t1313,\n\t\t1\n\t],\n\t\"../addon/messages/pages/settings/settings.module\": [\n\t\t1314,\n\t\t0\n\t],\n\t\"../addon/mod/book/pages/index/index.module\": [\n\t\t1316,\n\t\t46\n\t],\n\t\"../addon/mod/folder/pages/index/index.module\": [\n\t\t1317,\n\t\t45\n\t],\n\t\"../addon/mod/page/pages/index/index.module\": [\n\t\t1318,\n\t\t44\n\t],\n\t\"../addon/mod/resource/pages/index/index.module\": [\n\t\t1319,\n\t\t43\n\t],\n\t\"../addon/mod/url/pages/index/index.module\": [\n\t\t1320,\n\t\t42\n\t],\n\t\"../components/split-view/placeholder/placeholder.module\": [\n\t\t1321,\n\t\t41\n\t],\n\t\"../core/contentlinks/pages/choose-site/choose-site.module\": [\n\t\t1322,\n\t\t40\n\t],\n\t\"../core/course/pages/section/section.module\": [\n\t\t1324,\n\t\t39\n\t],\n\t\"../core/course/pages/unsupported-module/unsupported-module.module\": [\n\t\t1323,\n\t\t38\n\t],\n\t\"../core/courses/pages/available-courses/available-courses.module\": [\n\t\t1325,\n\t\t37\n\t],\n\t\"../core/courses/pages/categories/categories.module\": [\n\t\t1326,\n\t\t36\n\t],\n\t\"../core/courses/pages/course-preview/course-preview.module\": [\n\t\t1329,\n\t\t35\n\t],\n\t\"../core/courses/pages/my-courses/my-courses.module\": [\n\t\t1327,\n\t\t34\n\t],\n\t\"../core/courses/pages/my-overview/my-overview.module\": [\n\t\t1331,\n\t\t33\n\t],\n\t\"../core/courses/pages/search/search.module\": [\n\t\t1328,\n\t\t32\n\t],\n\t\"../core/courses/pages/self-enrol-password/self-enrol-password.module\": [\n\t\t1330,\n\t\t31\n\t],\n\t\"../core/emulator/pages/capture-media/capture-media.module\": [\n\t\t1332,\n\t\t30\n\t],\n\t\"../core/grades/pages/course/course.module\": [\n\t\t1336,\n\t\t29\n\t],\n\t\"../core/grades/pages/courses/courses.module\": [\n\t\t1333,\n\t\t28\n\t],\n\t\"../core/grades/pages/coursesplit/coursesplit.module\": [\n\t\t1334,\n\t\t27\n\t],\n\t\"../core/grades/pages/grade/grade.module\": [\n\t\t1335,\n\t\t26\n\t],\n\t\"../core/login/pages/credentials/credentials.module\": [\n\t\t1338,\n\t\t25\n\t],\n\t\"../core/login/pages/email-signup/email-signup.module\": [\n\t\t1337,\n\t\t24\n\t],\n\t\"../core/login/pages/forgotten-password/forgotten-password.module\": [\n\t\t1344,\n\t\t23\n\t],\n\t\"../core/login/pages/init/init.module\": [\n\t\t1339,\n\t\t22\n\t],\n\t\"../core/login/pages/reconnect/reconnect.module\": [\n\t\t1340,\n\t\t21\n\t],\n\t\"../core/login/pages/site-error/site-error.module\": [\n\t\t1341,\n\t\t20\n\t],\n\t\"../core/login/pages/site-help/site-help.module\": [\n\t\t1346,\n\t\t19\n\t],\n\t\"../core/login/pages/site-policy/site-policy.module\": [\n\t\t1342,\n\t\t18\n\t],\n\t\"../core/login/pages/site/site.module\": [\n\t\t1345,\n\t\t17\n\t],\n\t\"../core/login/pages/sites/sites.module\": [\n\t\t1343,\n\t\t16\n\t],\n\t\"../core/mainmenu/pages/menu/menu.module\": [\n\t\t1347,\n\t\t15\n\t],\n\t\"../core/mainmenu/pages/more/more.module\": [\n\t\t1348,\n\t\t14\n\t],\n\t\"../core/settings/pages/list/list.module\": [\n\t\t1351,\n\t\t13\n\t],\n\t\"../core/sharedfiles/pages/choose-site/choose-site.module\": [\n\t\t1350,\n\t\t12\n\t],\n\t\"../core/sharedfiles/pages/list/list.module\": [\n\t\t1349,\n\t\t11\n\t],\n\t\"../core/sitehome/pages/index/index.module\": [\n\t\t1352,\n\t\t10\n\t],\n\t\"../core/siteplugins/pages/module-index/module-index.module\": [\n\t\t1353,\n\t\t9\n\t],\n\t\"../core/siteplugins/pages/plugin-page/plugin-page.module\": [\n\t\t1354,\n\t\t8\n\t],\n\t\"../core/user/pages/about/about.module\": [\n\t\t1356,\n\t\t7\n\t],\n\t\"../core/user/pages/participants/participants.module\": [\n\t\t1355,\n\t\t6\n\t],\n\t\"../core/user/pages/profile/profile.module\": [\n\t\t1357,\n\t\t5\n\t],\n\t\"../core/viewer/pages/iframe/iframe.module\": [\n\t\t1359,\n\t\t4\n\t],\n\t\"../core/viewer/pages/image/image.module\": [\n\t\t1360,\n\t\t3\n\t],\n\t\"../core/viewer/pages/text/text.module\": [\n\t\t1358,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 356;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 356\n// module chunks = 60","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite';\nimport { Platform } from 'ionic-angular';\n\n/**\n * Class to interact with the local database.\n *\n * @description\n * This class allows creating and interacting with a SQLite database.\n *\n * You need to supply some dependencies when creating the instance:\n * this.db = new SQLiteDB('MyDB', sqlite, platform);\n */\nexport class SQLiteDB {\n    db: SQLiteObject;\n    promise: Promise<void>;\n\n    /**\n     * Create and open the database.\n     *\n     * @param {string} name Database name.\n     * @param {SQLite} sqlite SQLite library.\n     * @param {Platform} platform Ionic platform.\n     */\n    constructor(public name: string, private sqlite: SQLite, private platform: Platform) {\n        this.init();\n    }\n\n    /**\n     * Helper function to create a table if it doesn't exist.\n     *\n     * @param {string} name The table name.\n     * @param {any[]} columns The columns to create in the table. Each column can have:\n     *                    * {string} name  Column's name.\n     *                    * {string} [type] Column's type.\n     *                    * {boolean} [primaryKey] If column is primary key. Use it only if primary key is a single column.\n     *                    * {boolean} [autoIncrement] Whether it should be autoincremented. Only if primaryKey is true.\n     *                    * {boolean} [notNull] True if column shouldn't be null.\n     *                    * {boolean} [unique] Whether the column is unique.\n     *                    * {string} [check] Check constraint for the column.\n     *                    * {string} [default] Default value for the column.\n     * @param {string[]} [primaryKeys] Names of columns that are primary key. Use it for compound primary keys.\n     * @param {string[][]} [uniqueKeys] List of sets of unique columns. E.g: [['section', 'title'], ['author', 'title']].\n     * @param {any[]} [foreignKeys] List of foreign keys. Each key can have:\n     *                    * {string[]} columns Columns to include in this foreign key.\n     *                    * {string} table The external table referenced by this key.\n     *                    * {string[]} [foreignColumns] List of referenced columns from the referenced table.\n     *                    * {string} [actions] Text with the actions to apply to the foreign key.\n     * @param {string} [tableCheck] Check constraint for the table.\n     * @return SQL query.\n     */\n    buildCreateTableSql(name: string, columns: any[], primaryKeys?: string[], uniqueKeys?: string[][], foreignKeys?: any[],\n            tableCheck?: string): string {\n        const columnsSql = [];\n        let sql = `CREATE TABLE IF NOT EXISTS ${name} (`;\n\n        // First define all the columns.\n        for (const index in columns) {\n            const column = columns[index];\n            let columnSql: string = column.name || '';\n\n            if (column.type) {\n                columnSql += ' ' + column.type;\n            }\n\n            if (column.primaryKey) {\n                columnSql += ' PRIMARY KEY';\n                if (column.autoIncrement) {\n                    columnSql += ' AUTOINCREMENT';\n                }\n            }\n\n            if (column.notNull) {\n                columnSql += ' NOT NULL';\n            }\n\n            if (column.unique) {\n                columnSql += ' UNIQUE';\n            }\n\n            if (column.check) {\n                columnSql += ` CHECK (${column.check})`;\n            }\n\n            if (typeof column.default != 'undefined') {\n                columnSql += ` DEFAULT ${column.default}`;\n            }\n\n            columnsSql.push(columnSql);\n        }\n        sql += columnsSql.join(', ');\n\n        // Now add the table constraints.\n\n        if (primaryKeys && primaryKeys.length) {\n            sql += `, PRIMARY KEY (${primaryKeys.join(', ')})`;\n        }\n\n        if (uniqueKeys && uniqueKeys.length) {\n            for (const index in uniqueKeys) {\n                const setOfKeys = uniqueKeys[index];\n                if (setOfKeys && setOfKeys.length) {\n                    sql += `, UNIQUE (${setOfKeys.join(', ')})`;\n                }\n            }\n        }\n\n        if (tableCheck) {\n            sql += `, CHECK (${tableCheck})`;\n        }\n\n        for (const index in foreignKeys) {\n            const foreignKey = foreignKeys[index];\n\n            if (!foreignKey.columns || !!foreignKey.columns.length) {\n                return;\n            }\n\n            sql += `, FOREIGN KEY (${foreignKey.columns.join(', ')}) REFERENCES ${foreignKey.table} `;\n\n            if (foreignKey.foreignColumns && foreignKey.foreignColumns.length) {\n                sql += `(${foreignKey.foreignColumns.join(', ')})`;\n            }\n\n            if (foreignKey.actions) {\n                sql += ` ${foreignKey.actions}`;\n            }\n        }\n\n        return sql + ')';\n    }\n\n    /**\n     * Close the database.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    close(): Promise<any> {\n        return this.ready().then(() => {\n            return this.db.close();\n        });\n    }\n\n    /**\n     * Count the records in a table where all the given conditions met.\n     *\n     * @param {string} table The table to query.\n     * @param {object} [conditions] The conditions to build the where clause. Must not contain numeric indexes.\n     * @return {Promise<number>} Promise resolved with the count of records returned from the specified criteria.\n     */\n    countRecords(table: string, conditions?: object): Promise<number> {\n        const selectAndParams = this.whereClause(conditions);\n\n        return this.countRecordsSelect(table, selectAndParams[0], selectAndParams[1]);\n    }\n\n    /**\n     * Count the records in a table which match a particular WHERE clause.\n     *\n     * @param {string} table The table to query.\n     * @param {string} [select] A fragment of SQL to be used in a where clause in the SQL call.\n     * @param {any} [params] An array of sql parameters.\n     * @param {string} [countItem] The count string to be used in the SQL call. Default is COUNT('x').\n     * @return {Promise<number>} Promise resolved with the count of records returned from the specified criteria.\n     */\n    countRecordsSelect(table: string, select: string = '', params?: any, countItem: string = 'COUNT(\\'x\\')'): Promise<number> {\n        if (select) {\n            select = 'WHERE ' + select;\n        }\n\n        return this.countRecordsSql(`SELECT ${countItem} FROM ${table} ${select}`, params);\n    }\n\n    /**\n     * Get the result of a SQL SELECT COUNT(...) query.\n     *\n     * Given a query that counts rows, return that count.\n     *\n     * @param {string} sql The SQL string you wish to be executed.\n     * @param {any} [params] An array of sql parameters.\n     * @return {Promise<number>} Promise resolved with the count.\n     */\n    countRecordsSql(sql: string, params?: any): Promise<number> {\n        return this.getFieldSql(sql, params).then((count) => {\n            if (typeof count != 'number' || count < 0) {\n                return 0;\n            }\n\n            return count;\n        });\n    }\n\n    /**\n     * Create a table if it doesn't exist.\n     *\n     * @param {string} name The table name.\n     * @param {any[]} columns The columns to create in the table. Each column can have:\n     *                    * {string} name  Column's name.\n     *                    * {string} [type] Column's type.\n     *                    * {boolean} [primaryKey] If column is primary key. Use it only if primary key is a single column.\n     *                    * {boolean} [autoIncrement] Whether it should be autoincremented. Only if primaryKey is true.\n     *                    * {boolean} [notNull] True if column shouldn't be null.\n     *                    * {boolean} [unique] Whether the column is unique.\n     *                    * {string} [check] Check constraint for the column.\n     *                    * {string} [default] Default value for the column.\n     * @param {string[]} [primaryKeys] Names of columns that are primary key. Use it for compound primary keys.\n     * @param {string[][]} [uniqueKeys] List of sets of unique columns. E.g: [['section', 'title'], ['author', 'title']].\n     * @param {any[]} [foreignKeys] List of foreign keys. Each key can have:\n     *                    * {string[]} columns Columns to include in this foreign key.\n     *                    * {string} table The external table referenced by this key.\n     *                    * {string[]} [foreignColumns] List of referenced columns from the referenced table.\n     *                    * {string} [actions] Text with the actions to apply to the foreign key.\n     * @param {string} [tableCheck] Check constraint for the table.\n     * @return {Promise<any>} Promise resolved when success.\n     */\n    createTable(name: string, columns: any[], primaryKeys?: string[], uniqueKeys?: string[][], foreignKeys?: any[],\n            tableCheck?: string): Promise<any> {\n        const sql = this.buildCreateTableSql(name, columns, primaryKeys, uniqueKeys, foreignKeys, tableCheck);\n\n        return this.execute(sql);\n    }\n\n    /**\n     * Create a table if it doesn't exist from a schema.\n     *\n     * @param {any} table Table schema.\n     * @return {Promise<any>} Promise resolved when success.\n     */\n    createTableFromSchema(table: any): Promise<any> {\n        return this.createTable(table.name, table.columns, table.primaryKeys, table.uniqueKeys,\n            table.foreignKeys, table.tableCheck);\n    }\n\n    /**\n     * Create several tables if they don't exist from a list of schemas.\n     *\n     * @param {any[]} tables List of table schema.\n     * @return {Promise<any>} Promise resolved when success.\n     */\n    createTablesFromSchema(tables: any[]): Promise<any> {\n        const promises = [];\n        tables.forEach((table) => {\n            promises.push(this.createTableFromSchema(table));\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Delete the records from a table where all the given conditions met.\n     * If conditions not specified, table is truncated.\n     *\n     * @param {string} table The table to delete from.\n     * @param {object} [conditions] The conditions to build the where clause. Must not contain numeric indexes.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    deleteRecords(table: string, conditions?: object): Promise<any> {\n        if (conditions === null || typeof conditions == 'undefined') {\n            // No conditions, delete the whole table.\n            return this.execute(`DELETE FROM TABLE ${table}`);\n        }\n\n        const selectAndParams = this.whereClause(conditions);\n\n        return this.deleteRecordsSelect(table, selectAndParams[0], selectAndParams[1]);\n    }\n\n    /**\n     * Delete the records from a table where one field match one list of values.\n     *\n     * @param {string} table The table to delete from.\n     * @param {string} field The name of a field.\n     * @param {any[]} values The values field might take.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    deleteRecordsList(table: string, field: string, values: any[]): Promise<any> {\n        const selectAndParams = this.whereClauseList(field, values);\n\n        return this.deleteRecordsSelect(table, selectAndParams[0], selectAndParams[1]);\n    }\n\n    /**\n     * Delete one or more records from a table which match a particular WHERE clause.\n     *\n     * @param {string} table The table to delete from.\n     * @param {string} [select] A fragment of SQL to be used in a where clause in the SQL call.\n     * @param {any[]} [params] Array of sql parameters.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    deleteRecordsSelect(table: string, select: string = '', params?: any[]): Promise<any> {\n        if (select) {\n            select = 'WHERE ' + select;\n        }\n\n        return this.execute(`DELETE FROM ${table} ${select}`, params);\n    }\n\n    /**\n     * Execute a SQL query.\n     * IMPORTANT: Use this function only if you cannot use any of the other functions in this API. Please take into account that\n     * these query will be run in SQLite (Mobile) and Web SQL (desktop), so your query should work in both environments.\n     *\n     * @param {string} sql SQL query to execute.\n     * @param {any[]} params Query parameters.\n     * @return {Promise<any>} Promise resolved with the result.\n     */\n    execute(sql: string, params?: any[]): Promise<any> {\n        return this.ready().then(() => {\n            return this.db.executeSql(sql, params);\n        });\n    }\n\n    /**\n     * Execute a set of SQL queries. This operation is atomic.\n     * IMPORTANT: Use this function only if you cannot use any of the other functions in this API. Please take into account that\n     * these query will be run in SQLite (Mobile) and Web SQL (desktop), so your query should work in both environments.\n     *\n     * @param {any[]} sqlStatements SQL statements to execute.\n     * @return {Promise<any>} Promise resolved with the result.\n     */\n    executeBatch(sqlStatements: any[]): Promise<any> {\n        return this.ready().then(() => {\n            return this.db.sqlBatch(sqlStatements);\n        });\n    }\n\n    /**\n     * Format the data to insert in the database. Removes undefined entries so they are stored as null instead of 'undefined'.\n     *\n     * @param {object} data Data to insert.\n     */\n    protected formatDataToInsert(data: object): void {\n        // Remove undefined entries and convert null to \"NULL\".\n        for (const name in data) {\n            const value = data[name];\n            if (typeof value == 'undefined') {\n                delete data[name];\n            }\n        }\n    }\n\n    /**\n     * Get all the records from a table.\n     *\n     * @param {string} table The table to query.\n     * @return {Promise<any>} Promise resolved with the records.\n     */\n    getAllRecords(table: string): Promise<any> {\n        return this.getRecords(table);\n    }\n\n    /**\n     * Get a single field value from a table record where all the given conditions met.\n     *\n     * @param {string} table The table to query.\n     * @param {string} field The field to return the value of.\n     * @param {object} [conditions] The conditions to build the where clause. Must not contain numeric indexes.\n     * @return {Promise<any>} Promise resolved with the field's value.\n     */\n    getField(table: string, field: string, conditions?: object): Promise<any> {\n        const selectAndParams = this.whereClause(conditions);\n\n        return this.getFieldSelect(table, field, selectAndParams[0], selectAndParams[1]);\n    }\n\n    /**\n     * Get a single field value from a table record which match a particular WHERE clause.\n     *\n     * @param {string} table The table to query.\n     * @param {string} field The field to return the value of.\n     * @param {string} [select=''] A fragment of SQL to be used in a where clause returning one row with one column.\n     * @param {any[]} [params] Array of sql parameters.\n     * @return {Promise<any>} Promise resolved with the field's value.\n     */\n    getFieldSelect(table: string, field: string, select: string = '', params?: any[]): Promise<any> {\n        if (select) {\n            select = 'WHERE ' + select;\n        }\n\n        return this.getFieldSql(`SELECT ${field} FROM ${table} ${select}`, params);\n    }\n\n    /**\n     * Get a single field value (first field) using a SQL statement.\n     *\n     * @param {string} sql The SQL query returning one row with one column.\n     * @param {any[]} [params] An array of sql parameters.\n     * @return {Promise<any>} Promise resolved with the field's value.\n     */\n    getFieldSql(sql: string, params?: any[]): Promise<any> {\n        return this.getRecordSql(sql, params).then((record) => {\n            if (!record) {\n                return Promise.reject(null);\n            }\n\n            // Return the first property.\n            return record[Object.keys(record)[0]];\n        });\n    }\n\n    /**\n     * Constructs 'IN()' or '=' sql fragment\n     *\n     * @param {any} items A single value or array of values for the expression. It doesn't accept objects.\n     * @param {boolean} [equal=true] True means we want to equate to the constructed expression.\n     * @param {any} [onEmptyItems] This defines the behavior when the array of items provided is empty. Defaults to false,\n     *              meaning return empty. Other values will become part of the returned SQL fragment.\n     * @return {any[]} A list containing the constructed sql fragment and an array of parameters.\n     */\n    getInOrEqual(items: any, equal: boolean = true, onEmptyItems?: any): any[] {\n        let sql,\n            params;\n\n        if (typeof onEmptyItems == 'undefined') {\n            onEmptyItems = false;\n        }\n\n        // Default behavior, return empty data on empty array.\n        if (Array.isArray(items) && !items.length && onEmptyItems === false) {\n            return ['', []];\n        }\n\n        // Handle onEmptyItems on empty array of items.\n        if (Array.isArray(items) && !items.length) {\n            if (onEmptyItems === null) { // Special case, NULL value.\n                sql = equal ? ' IS NULL' : ' IS NOT NULL';\n\n                return [sql, []];\n            } else {\n                items = [onEmptyItems]; // Rest of cases, prepare items for processing.\n            }\n        }\n\n        if (!Array.isArray(items) || items.length == 1) {\n            sql = equal ? '= ?' : '<> ?';\n            params = Array.isArray(items) ? items : [items];\n        } else {\n            sql = (equal ? '' : 'NOT ') + 'IN (' + ',?'.repeat(items.length).substr(1) + ')';\n            params = items;\n        }\n\n        return [sql, params];\n    }\n\n    /**\n     * Get the database name.\n     *\n     * @return {string} Database name.\n     */\n    getName(): string {\n        return this.name;\n    }\n\n    /**\n     * Get a single database record where all the given conditions met.\n     *\n     * @param {string} table The table to query.\n     * @param {object} [conditions] The conditions to build the where clause. Must not contain numeric indexes.\n     * @param {string} [fields='*'] A comma separated list of fields to return.\n     * @return {Promise<any>} Promise resolved with the record, rejected if not found.\n     */\n    getRecord(table: string, conditions?: object, fields: string = '*'): Promise<any> {\n        const selectAndParams = this.whereClause(conditions);\n\n        return this.getRecordSelect(table, selectAndParams[0], selectAndParams[1], fields);\n    }\n\n    /**\n     * Get a single database record as an object which match a particular WHERE clause.\n     *\n     * @param {string} table The table to query.\n     * @param {string} [select] A fragment of SQL to be used in a where clause in the SQL call.\n     * @param {any[]} [params] An array of sql parameters.\n     * @param {string} [fields='*'] A comma separated list of fields to return.\n     * @return {Promise<any>} Promise resolved with the record, rejected if not found.\n     */\n    getRecordSelect(table: string, select: string = '', params: any[] = [], fields: string = '*'): Promise<any> {\n        if (select) {\n            select = ' WHERE ' + select;\n        }\n\n        return this.getRecordSql(`SELECT ${fields} FROM ${table} ${select}`, params);\n    }\n\n    /**\n     * Get a single database record as an object using a SQL statement.\n     *\n     * The SQL statement should normally only return one record.\n     * It is recommended to use getRecordsSql() if more matches possible!\n     *\n     * @param {string} sql The SQL string you wish to be executed, should normally only return one record.\n     * @param {any[]} [params] List of sql parameters\n     * @return {Promise<any>} Promise resolved with the records.\n     */\n    getRecordSql(sql: string, params?: any[]): Promise<any> {\n        return this.getRecordsSql(sql, params, 0, 1).then((result) => {\n            if (!result || !result.length) {\n                // Not found, reject.\n                return Promise.reject(null);\n            }\n\n            // Return only the first record.\n            return result[0];\n        });\n    }\n\n    /**\n     * Get a number of records where all the given conditions met.\n     *\n     * @param {string} table The table to query.\n     * @param {object} [conditions] The conditions to build the where clause. Must not contain numeric indexes.\n     * @param {string} [sort=''] An order to sort the results in.\n     * @param {string} [fields='*'] A comma separated list of fields to return.\n     * @param {number} [limitFrom=0] Return a subset of records, starting at this point.\n     * @param {number} [limitNum=0] Return a subset comprising this many records in total.\n     * @return {Promise<any>} Promise resolved with the records.\n     */\n    getRecords(table: string, conditions?: object, sort: string = '', fields: string = '*', limitFrom: number = 0,\n            limitNum: number = 0): Promise<any> {\n        const selectAndParams = this.whereClause(conditions);\n\n        return this.getRecordsSelect(table, selectAndParams[0], selectAndParams[1], sort, fields, limitFrom, limitNum);\n    }\n\n    /**\n     * Get a number of records where one field match one list of values.\n     *\n     * @param {string} table The database table to be checked against.\n     * @param {string} field The name of a field.\n     * @param {any[]} values The values field might take.\n     * @param {string} [sort=''] An order to sort the results in.\n     * @param {string} [fields='*'] A comma separated list of fields to return.\n     * @param {number} [limitFrom=0] Return a subset of records, starting at this point.\n     * @param {number} [limitNum=0] Return a subset comprising this many records in total.\n     * @return {Promise<any>} Promise resolved with the records.\n     */\n    getRecordsList(table: string, field: string, values: any[], sort: string = '', fields: string = '*', limitFrom: number = 0,\n            limitNum: number = 0): Promise<any> {\n        const selectAndParams = this.whereClauseList(field, values);\n\n        return this.getRecordsSelect(table, selectAndParams[0], selectAndParams[1], sort, fields, limitFrom, limitNum);\n    }\n\n    /**\n     * Get a number of records which match a particular WHERE clause.\n     *\n     * @param {string} table The table to query.\n     * @param {string} [select] A fragment of SQL to be used in a where clause in the SQL call.\n     * @param {any[]} [params] An array of sql parameters.\n     * @param {string} [sort=''] An order to sort the results in.\n     * @param {string} [fields='*'] A comma separated list of fields to return.\n     * @param {number} [limitFrom=0] Return a subset of records, starting at this point.\n     * @param {number} [limitNum=0] Return a subset comprising this many records in total.\n     * @return {Promise<any>} Promise resolved with the records.\n     */\n    getRecordsSelect(table: string, select: string = '', params: any[] = [], sort: string = '', fields: string = '*',\n            limitFrom: number = 0, limitNum: number = 0): Promise<any> {\n        if (select) {\n            select = ' WHERE ' + select;\n        }\n        if (sort) {\n            sort = ' ORDER BY ' + sort;\n        }\n\n        const sql = `SELECT ${fields} FROM ${table} ${select} ${sort}`;\n\n        return this.getRecordsSql(sql, params, limitFrom, limitNum);\n    }\n\n    /**\n     * Get a number of records using a SQL statement.\n     *\n     * @param {string} sql The SQL select query to execute.\n     * @param {any[]} [params] List of sql parameters\n     * @param {number} [limitFrom] Return a subset of records, starting at this point.\n     * @param {number} [limitNum] Return a subset comprising this many records.\n     * @return {Promise<any>} Promise resolved with the records.\n     */\n    getRecordsSql(sql: string, params?: any[], limitFrom?: number, limitNum?: number): Promise<any> {\n        const limits = this.normaliseLimitFromNum(limitFrom, limitNum);\n\n        if (limits[0] || limits[1]) {\n            if (limits[1] < 1) {\n                limits[1] = Number.MAX_VALUE;\n            }\n            sql += ' LIMIT ' + limits[0] + ', ' + limits[1];\n        }\n\n        return this.execute(sql, params).then((result) => {\n            // Retrieve the records.\n            const records = [];\n            for (let i = 0; i < result.rows.length; i++) {\n                records.push(result.rows.item(i));\n            }\n\n            return records;\n        });\n    }\n\n    /**\n     * Given a data object, returns the SQL query and the params to insert that record.\n     *\n     * @param {string} table The database table.\n     * @param {object} data A data object with values for one or more fields in the record.\n     * @return {any[]} Array with the SQL query and the params.\n     */\n    protected getSqlInsertQuery(table: string, data: object): any[] {\n        this.formatDataToInsert(data);\n\n        const keys = Object.keys(data),\n            fields = keys.join(','),\n            questionMarks = ',?'.repeat(keys.length).substr(1);\n\n        return [\n            `INSERT INTO ${table} (${fields}) VALUES (${questionMarks})`,\n            keys.map((key) => data[key])\n        ];\n    }\n\n    /**\n     * Initialize the database.\n     */\n    init(): void {\n        this.promise = this.platform.ready().then(() => {\n            return this.sqlite.create({\n                name: this.name,\n                location: 'default'\n            });\n        }).then((db: SQLiteObject) => {\n            this.db = db;\n        });\n    }\n\n    /**\n     * Insert or update a record.\n     *\n     * @param {string} table The database table.\n     * @param {object} data An object with the fields to insert/update: fieldname=>fieldvalue.\n     * @param {object} conditions The conditions to check if the record already exists (and to update it).\n     * @return {Promise<any>} Promise resolved with done.\n     */\n    insertOrUpdateRecord(table: string, data: object, conditions: object): Promise<any> {\n        return this.getRecord(table, conditions).then(() => {\n            // It exists, update it.\n            return this.updateRecords(table, data, conditions);\n        }).catch(() => {\n            // Doesn't exist, insert it.\n            return this.insertRecord(table, data);\n        });\n    }\n\n    /**\n     * Insert a record into a table and return the \"rowId\" field.\n     *\n     * @param {string} table The database table to be inserted into.\n     * @param {object} data A data object with values for one or more fields in the record.\n     * @return {Promise<number>} Promise resolved with new rowId. Please notice this rowId is internal from SQLite.\n     */\n    insertRecord(table: string, data: object): Promise<number> {\n        const sqlAndParams = this.getSqlInsertQuery(table, data);\n\n        return this.execute(sqlAndParams[0], sqlAndParams[1]).then((result) => {\n            return result.insertId;\n        });\n    }\n\n    /**\n     * Insert multiple records into database as fast as possible.\n     *\n     * @param {string} table The database table to be inserted into.\n     * @param {object[]} dataObjects List of objects to be inserted.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    insertRecords(table: string, dataObjects: object[]): Promise<any> {\n        if (!Array.isArray(dataObjects)) {\n            return Promise.reject(null);\n        }\n\n        const statements = [];\n\n        dataObjects.forEach((dataObject) => {\n            statements.push(this.getSqlInsertQuery(table, dataObject));\n        });\n\n        return this.executeBatch(statements);\n    }\n\n    /**\n     * Ensures that limit params are numeric and positive integers, to be passed to the database.\n     * We explicitly treat null, '' and -1 as 0 in order to provide compatibility with how limit\n     * values have been passed historically.\n     *\n     * @param {any} limitFrom Where to start results from.\n     * @param {any} limitNum How many results to return.\n     * @return {number[]} Normalised limit params in array: [limitFrom, limitNum].\n     */\n    normaliseLimitFromNum(limitFrom: any, limitNum: any): number[] {\n        // We explicilty treat these cases as 0.\n        if (typeof limitFrom == 'undefined' || limitFrom === null || limitFrom === '' || limitFrom === -1) {\n            limitFrom = 0;\n        }\n        if (typeof limitNum == 'undefined' || limitNum === null || limitNum === '' || limitNum === -1) {\n            limitNum = 0;\n        }\n\n        limitFrom = parseInt(limitFrom, 10);\n        limitNum = parseInt(limitNum, 10);\n        limitFrom = Math.max(0, limitFrom);\n        limitNum = Math.max(0, limitNum);\n\n        return [limitFrom, limitNum];\n    }\n\n    /**\n     * Open the database. Only needed if it was closed before, a database is automatically opened when created.\n     *\n     * @return {Promise<void>} Promise resolved when open.\n     */\n    open(): Promise<any> {\n        return this.ready().then(() => {\n            return this.db.open();\n        });\n    }\n\n    /**\n     * Wait for the DB to be ready.\n     *\n     * @return {Promise<void>} Promise resolved when ready.\n     */\n    ready(): Promise<void> {\n        return this.promise;\n    }\n\n    /**\n     * Test whether a record exists in a table where all the given conditions met.\n     *\n     * @param {string} table The table to check.\n     * @param {object} [conditions] The conditions to build the where clause. Must not contain numeric indexes.\n     * @return {Promise<void>} Promise resolved if exists, rejected otherwise.\n     */\n    recordExists(table: string, conditions?: object): Promise<void> {\n        return this.getRecord(table, conditions).then((record) => {\n            if (!record) {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Test whether any records exists in a table which match a particular WHERE clause.\n     *\n     * @param {string} table The table to query.\n     * @param {string} [select] A fragment of SQL to be used in a where clause in the SQL call.\n     * @param {any[]} [params] An array of sql parameters.\n     * @return {Promise<any>} Promise resolved if exists, rejected otherwise.\n     */\n    recordExistsSelect(table: string, select: string = '', params: any[] = []): Promise<any> {\n        return this.getRecordSelect(table, select, params).then((record) => {\n            if (!record) {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Test whether a SQL SELECT statement returns any records.\n     *\n     * @param {string} sql The SQL query returning one row with one column.\n     * @param {any[]} [params] An array of sql parameters.\n     * @return {Promise<any>} Promise resolved if exists, rejected otherwise.\n     */\n    recordExistsSql(sql: string, params?: any[]): Promise<any> {\n        return this.getRecordSql(sql, params).then((record) => {\n            if (!record) {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Update one or more records in a table.\n     *\n     * @param {string} string table The database table to update.\n     * @param {any} data An object with the fields to update: fieldname=>fieldvalue.\n     * @param {any} [conditions] The conditions to build the where clause. Must not contain numeric indexes.\n     * @return {Promise<any>} Promise resolved when updated.\n     */\n    updateRecords(table: string, data: any, conditions?: any): Promise<any> {\n\n        if (!data || !Object.keys(data).length) {\n            // No fields to update, consider it's done.\n            return Promise.resolve();\n        }\n\n        const whereAndParams = this.whereClause(conditions),\n            sets = [];\n        let sql,\n            params;\n\n        this.formatDataToInsert(data);\n\n        for (const key in data) {\n            sets.push(`${key} = ?`);\n        }\n\n        sql = `UPDATE ${table} SET ${sets.join(', ')} WHERE ${whereAndParams[0]}`;\n        // Create the list of params using the \"data\" object and the params for the where clause.\n        params = Object.keys(data).map((key) => data[key]).concat(whereAndParams[1]);\n\n        return this.execute(sql, params);\n    }\n\n    /**\n     * Update one or more records in a table. It accepts a WHERE clause as a string.\n     *\n     * @param {string} string table The database table to update.\n     * @param {any} data An object with the fields to update: fieldname=>fieldvalue.\n     * @param {string} [where] Where clause. Must not include the \"WHERE\" word.\n     * @param {any[]} [whereParams] Params for the where clause.\n     * @return {Promise<any>} Promise resolved when updated.\n     */\n    updateRecordsWhere(table: string, data: any, where?: string, whereParams?: any[]): Promise<any> {\n        if (!data || !Object.keys(data).length) {\n            // No fields to update, consider it's done.\n            return Promise.resolve();\n        }\n\n        const sets = [];\n        let sql,\n            params;\n\n        for (const key in data) {\n            sets.push(`${key} = ?`);\n        }\n\n        sql = `UPDATE ${table} SET ${sets.join(', ')}`;\n        if (where) {\n            sql += ` WHERE ${where}`;\n        }\n\n        // Create the list of params using the \"data\" object and the params for the where clause.\n        params = Object.keys(data).map((key) => data[key]);\n        if (where && whereParams) {\n            params = params.concat(whereParams);\n        }\n\n        return this.execute(sql, params);\n    }\n\n    /**\n     * Returns the SQL WHERE conditions.\n     *\n     * @param {object} [conditions] The conditions to build the where clause. Must not contain numeric indexes.\n     * @return {any[]} An array list containing sql 'where' part and 'params'.\n     */\n    whereClause(conditions: any = {}): any[] {\n        if (!conditions || !Object.keys(conditions).length) {\n            return ['1 = 1', []];\n        }\n\n        const where = [],\n            params = [];\n\n        for (const key in conditions) {\n            const value = conditions[key];\n\n            if (typeof value == 'undefined' || value === null) {\n                where.push(key + ' IS NULL');\n            } else {\n                where.push(key + ' = ?');\n                params.push(value);\n            }\n        }\n\n        return [where.join(' AND '), params];\n    }\n\n    /**\n     * Returns SQL WHERE conditions for the ..._list group of methods.\n     *\n     * @param {string} field The name of a field.\n     * @param {any[]} values The values field might take.\n     * @return {any[]} An array containing sql 'where' part and 'params'.\n     */\n    whereClauseList(field: string, values: any[]): any[] {\n        if (!values || !values.length) {\n            return ['1 = 2', []]; // Fake condition, won't return rows ever.\n        }\n\n        const params = [];\n        let select = '';\n\n        values.forEach((value) => {\n            if (typeof value == 'boolean') {\n                value = Number(value);\n            }\n\n            if (typeof value == 'undefined' || value === null) {\n                select = field + ' IS NULL';\n            } else {\n                params.push(value);\n            }\n        });\n\n        if (params && params.length) {\n            if (select !== '') {\n                select = select + ' OR ';\n            }\n\n            if (params.length == 1) {\n                select = select + field + ' = ?';\n            } else {\n                const questionMarks = ',?'.repeat(params.length).substr(1);\n                select = select + field + ' IN (' + questionMarks + ')';\n            }\n        }\n\n        return [select, params];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/sqlitedb.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreSite } from '@classes/site';\n\n/*\n * Provider to create sites instances.\n*/\n@Injectable()\nexport class CoreSitesFactoryProvider {\n\n    constructor(private injector: Injector) { }\n\n    /**\n     * Make a site object.\n     *\n     * @param {string} id Site ID.\n     * @param {string} siteUrl Site URL.\n     * @param {string} [token] Site's WS token.\n     * @param {any} [info] Site info.\n     * @param {string} [privateToken] Private token.\n     * @param {any} [config] Site public config.\n     * @param {boolean} [loggedOut] Whether user is logged out.\n     * @return {CoreSite} Site instance.\n     * @description\n     * This returns a site object.\n     */\n    makeSite(id: string, siteUrl: string, token?: string, info?: any, privateToken?: string,\n            config?: any, loggedOut?: boolean): CoreSite {\n        return new CoreSite(this.injector, id, siteUrl, token, info, privateToken, config, loggedOut);\n    }\n\n    /**\n     * Gets the list of Site methods.\n     *\n     * @return {string[]} List of methods.\n     */\n    getSiteMethods(): string[] {\n        const methods = [];\n        for (const name in CoreSite.prototype) {\n            methods.push(name);\n        }\n\n        return methods;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sites-factory.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n/**\n * Interceptor for Http calls. Adds the header 'Content-Type'='application/x-www-form-urlencoded'\n * and serializes the parameters if needed.\n */\n@Injectable()\nexport class CoreInterceptor implements HttpInterceptor {\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n        // Add the header and serialize the body if needed.\n        const newReq = req.clone({\n            headers: req.headers.set('Content-Type', 'application/x-www-form-urlencoded'),\n            body: typeof req.body == 'object' && String(req.body) != '[object File]' ?\n                CoreInterceptor.serialize(req.body) : req.body\n        });\n\n        // Pass on the cloned request instead of the original request.\n        return next.handle(newReq);\n    }\n\n    /**\n     * Serialize an object to be used in a request.\n     *\n     * @param {any} obj Object to serialize.\n     * @param {boolean} [addNull] Add null values to the serialized as empty parameters.\n     * @return {string} Serialization of the object.\n     */\n    static serialize(obj: any, addNull?: boolean): string {\n        let query = '',\n            fullSubName,\n            subValue,\n            innerObj;\n\n        for (const name in obj) {\n            const value = obj[name];\n\n            if (value instanceof Array) {\n                for (let i = 0; i < value.length; ++i) {\n                    subValue = value[i];\n                    fullSubName = name + '[' + i + ']';\n                    innerObj = {};\n                    innerObj[fullSubName] = subValue;\n                    query += this.serialize(innerObj) + '&';\n                }\n            } else if (value instanceof Object) {\n                for (const subName in value) {\n                    subValue = value[subName];\n                    fullSubName = name + '[' + subName + ']';\n                    innerObj = {};\n                    innerObj[fullSubName] = subValue;\n                    query += this.serialize(innerObj) + '&';\n                }\n            } else if (addNull || (typeof value != 'undefined' && value !== null)) {\n                query += encodeURIComponent(name) + '=' + encodeURIComponent(value) + '&';\n            }\n        }\n\n        return query.length ? query.substr(0, query.length - 1) : query;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/interceptor.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, AfterViewInit, ElementRef } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\n\n/**\n * Directive to handle external content.\n *\n * This directive should be used with any element that links to external content\n * which we want to have available when the app is offline. Typically media and links.\n *\n * If a file is downloaded, its URL will be replaced by the local file URL.\n */\n@Directive({\n    selector: '[core-external-content]'\n})\nexport class CoreExternalContentDirective implements AfterViewInit {\n    @Input() siteId?: string; // Site ID to use.\n    @Input() component?: string; // Component to link the file to.\n    @Input() componentId?: string | number; // Component ID to use in conjunction with the component.\n\n    protected element: HTMLElement;\n    protected logger;\n\n    constructor(element: ElementRef, logger: CoreLoggerProvider, private filepoolProvider: CoreFilepoolProvider,\n            private platform: Platform, private sitesProvider: CoreSitesProvider, private domUtils: CoreDomUtilsProvider,\n            private urlUtils: CoreUrlUtilsProvider, private appProvider: CoreAppProvider) {\n        // This directive can be added dynamically. In that case, the first param is the HTMLElement.\n        this.element = element.nativeElement || element;\n        this.logger = logger.getInstance('CoreExternalContentDirective');\n    }\n\n    /**\n     * View has been initialized\n     */\n    ngAfterViewInit(): void {\n        const currentSite = this.sitesProvider.getCurrentSite(),\n            siteId = this.siteId || (currentSite && currentSite.getId()),\n            tagName = this.element.tagName;\n        let targetAttr,\n            sourceAttr;\n\n        if (tagName === 'A') {\n            targetAttr = 'href';\n            sourceAttr = 'href';\n\n        } else if (tagName === 'IMG') {\n            targetAttr = 'src';\n            sourceAttr = 'src';\n\n        } else if (tagName === 'AUDIO' || tagName === 'VIDEO' || tagName === 'SOURCE' || tagName === 'TRACK') {\n            targetAttr = 'src';\n            sourceAttr = 'targetSrc';\n\n            if (tagName === 'VIDEO') {\n                const poster = (<HTMLVideoElement> this.element).poster;\n                if (poster) {\n                    // Handle poster.\n                    this.handleExternalContent('poster', poster, siteId).catch(() => {\n                        // Ignore errors.\n                    });\n                }\n            }\n\n        } else {\n            // Unsupported tag.\n            this.logger.warn('Directive attached to non-supported tag: ' + tagName);\n\n            return;\n        }\n\n        const url = this.element.getAttribute(sourceAttr) || this.element.getAttribute(targetAttr);\n        this.handleExternalContent(targetAttr, url, siteId).catch(() => {\n            // Ignore errors.\n        });\n    }\n\n    /**\n     * Add a new source with a certain URL as a sibling of the current element.\n     *\n     * @param {string} url URL to use in the source.\n     */\n    protected addSource(url: string): void {\n        if (this.element.tagName !== 'SOURCE') {\n            return;\n        }\n\n        const newSource = document.createElement('source'),\n            type = this.element.getAttribute('type');\n\n        newSource.setAttribute('src', url);\n\n        if (type) {\n            if (this.platform.is('android') && type == 'video/quicktime') {\n                // Fix for VideoJS/Chrome bug https://github.com/videojs/video.js/issues/423 .\n                newSource.setAttribute('type', 'video/mp4');\n            } else {\n                newSource.setAttribute('type', type);\n            }\n        }\n        this.element.parentNode.insertBefore(newSource, this.element);\n    }\n\n    /**\n     * Handle external content, setting the right URL.\n     *\n     * @param {string} targetAttr Attribute to modify.\n     * @param {string} url Original URL to treat.\n     * @param {string} [siteId] Site ID.\n     * @return {Promise<any>} Promise resolved if the element is successfully treated.\n     */\n    protected handleExternalContent(targetAttr: string, url: string, siteId?: string): Promise<any> {\n\n        const tagName = this.element.tagName;\n\n        if (tagName == 'VIDEO' && targetAttr != 'poster') {\n            const video = <HTMLVideoElement> this.element;\n            if (video.textTracks) {\n                // It's a video with subtitles. In iOS, subtitles position is wrong so it needs to be fixed.\n                video.textTracks.onaddtrack = (event): void => {\n                    const track = <TextTrack> event.track;\n                    if (track) {\n                        track.oncuechange = (): void => {\n                            const line = this.platform.is('tablet') || this.platform.is('android') ? 90 : 80;\n                            // Position all subtitles to a percentage of video height.\n                            Array.from(track.cues).forEach((cue: any) => {\n                                cue.snapToLines = false;\n                                cue.line = line;\n                                cue.size = 100; // This solves some Android issue.\n                            });\n                            // Delete listener.\n                            track.oncuechange = null;\n                        };\n                    }\n                };\n            }\n\n        }\n\n        if (!url || !url.match(/^https?:\\/\\//i) || (tagName === 'A' && !this.urlUtils.isDownloadableUrl(url))) {\n            this.logger.debug('Ignoring non-downloadable URL: ' + url);\n            if (tagName === 'SOURCE') {\n                // Restoring original src.\n                this.addSource(url);\n            }\n\n            return Promise.reject(null);\n        }\n\n        // Get the webservice pluginfile URL, we ignore failures here.\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (!site.canDownloadFiles() && this.urlUtils.isPluginFileUrl(url)) {\n                this.element.parentElement.removeChild(this.element); // Remove element since it'll be broken.\n\n                return Promise.reject(null);\n            }\n\n            // Download images, tracks and posters if size is unknown.\n            const dwnUnknown = tagName == 'IMG' || tagName == 'TRACK' || targetAttr == 'poster';\n            let promise;\n\n            if (targetAttr === 'src' && tagName !== 'SOURCE' && tagName !== 'TRACK') {\n                promise = this.filepoolProvider.getSrcByUrl(siteId, url, this.component, this.componentId, 0, true, dwnUnknown);\n            } else {\n                promise = this.filepoolProvider.getUrlByUrl(siteId, url, this.component, this.componentId, 0, true, dwnUnknown);\n            }\n\n            return promise.then((finalUrl) => {\n                this.logger.debug('Using URL ' + finalUrl + ' for ' + url);\n                if (tagName === 'SOURCE') {\n                    // The browser does not catch changes in SRC, we need to add a new source.\n                    // @todo: Check if changing src works in Android 4.4, maybe the problem was only in 4.1-4.3.\n                    this.addSource(finalUrl);\n                } else {\n                    this.element.setAttribute(targetAttr, finalUrl);\n                }\n\n                // Set events to download big files (not downloaded automatically).\n                if (finalUrl.indexOf('http') === 0 && targetAttr != 'poster' &&\n                    (tagName == 'VIDEO' || tagName == 'AUDIO' || tagName == 'A' || tagName == 'SOURCE')) {\n                    const eventName = tagName == 'A' ? 'click' : 'play';\n                    let clickableEl = this.element;\n\n                    if (tagName == 'SOURCE') {\n                        clickableEl = <HTMLElement> this.domUtils.closest(this.element, 'video,audio');\n                        if (!clickableEl) {\n                            return;\n                        }\n                    }\n\n                    clickableEl.addEventListener(eventName, () => {\n                        // User played media or opened a downloadable link.\n                        // Download the file if in wifi and it hasn't been downloaded already (for big files).\n                        if (!this.appProvider.isNetworkAccessLimited()) {\n                            // We aren't using the result, so it doesn't matter which of the 2 functions we call.\n                            this.filepoolProvider.getUrlByUrl(siteId, url, this.component, this.componentId, 0, false);\n                        }\n                    });\n                }\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/external-content.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, OnInit, ElementRef, Optional } from '@angular/core';\nimport { NavController, Content } from 'ionic-angular';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { CoreConfigConstants } from '../configconstants';\n\n/**\n * Directive to open a link in external browser.\n */\n@Directive({\n    selector: '[core-link]'\n})\nexport class CoreLinkDirective implements OnInit {\n    @Input() capture?: boolean | string; // If the link needs to be captured by the app.\n    @Input() inApp?: boolean | string; // True to open in embedded browser, false to open in system browser.\n    @Input() autoLogin = 'check'; // If the link should be open with auto-login. Accepts the following values:\n                                  //   \"yes\" -> Always auto-login.\n                                  //   \"no\" -> Never auto-login.\n                                  //   \"check\" -> Auto-login only if it points to the current site. Default value.\n\n    protected element: HTMLElement;\n\n    constructor(element: ElementRef, private domUtils: CoreDomUtilsProvider, private utils: CoreUtilsProvider,\n            private sitesProvider: CoreSitesProvider, private urlUtils: CoreUrlUtilsProvider,\n            private contentLinksHelper: CoreContentLinksHelperProvider, @Optional() private navCtrl: NavController,\n            @Optional() private content: Content) {\n        // This directive can be added dynamically. In that case, the first param is the anchor HTMLElement.\n        this.element = element.nativeElement || element;\n    }\n\n    /**\n     * Function executed when the component is initialized.\n     */\n    ngOnInit(): void {\n        this.inApp = this.utils.isTrueOrOne(this.inApp);\n\n        this.element.addEventListener('click', (event) => {\n            // If the event prevented default action, do nothing.\n            if (!event.defaultPrevented) {\n                const href = this.element.getAttribute('href');\n                if (href) {\n                    event.preventDefault();\n                    event.stopPropagation();\n\n                    if (this.utils.isTrueOrOne(this.capture)) {\n                        this.contentLinksHelper.handleLink(href, undefined, this.navCtrl).then((treated) => {\n                            if (!treated) {\n                                this.navigate(href);\n                            }\n                        });\n                    } else {\n                        this.navigate(href);\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Convenience function to correctly navigate, open file or url in the browser.\n     *\n     * @param {string} href HREF to be opened.\n     */\n    protected navigate(href: string): void {\n        const contentLinksScheme = CoreConfigConstants.customurlscheme + '://link=';\n\n        if (href.indexOf('cdvfile://') === 0 || href.indexOf('file://') === 0 || href.indexOf('filesystem:') === 0) {\n            // We have a local file.\n            this.utils.openFile(href).catch((error) => {\n                this.domUtils.showErrorModal(error);\n            });\n        } else if (href.charAt(0) == '#') {\n            href = href.substr(1);\n            // In site links\n            if (href.charAt(0) == '/') {\n                // @todo: Investigate how to achieve this behaviour.\n                // $location.url(href);\n            } else {\n                // Look for id or name.\n                this.domUtils.scrollToElementBySelector(this.content, '#' + href + ', [name=\\'' + href + '\\']');\n            }\n        } else if (href.indexOf(contentLinksScheme) === 0) {\n            // Link should be treated by Custom URL Scheme. Encode the right part, otherwise ':' is removed in iOS.\n            href = contentLinksScheme + encodeURIComponent(href.replace(contentLinksScheme, ''));\n            this.utils.openInBrowser(href);\n        } else {\n\n            // It's an external link, we will open with browser. Check if we need to auto-login.\n            if (!this.sitesProvider.isLoggedIn()) {\n                // Not logged in, cannot auto-login.\n                if (this.inApp) {\n                    this.utils.openInApp(href);\n                } else {\n                    this.utils.openInBrowser(href);\n                }\n            } else {\n                // Check if URL does not have any protocol, so it's a relative URL.\n                if (!this.urlUtils.isAbsoluteURL(href)) {\n                    // Add the site URL at the begining.\n                    if (href.charAt(0) == '/') {\n                        href = this.sitesProvider.getCurrentSite().getURL() + href;\n                    } else {\n                        href = this.sitesProvider.getCurrentSite().getURL() + '/' + href;\n                    }\n                }\n\n                if (this.autoLogin == 'yes') {\n                    if (this.inApp) {\n                        this.sitesProvider.getCurrentSite().openInAppWithAutoLogin(href);\n                    } else {\n                        this.sitesProvider.getCurrentSite().openInBrowserWithAutoLogin(href);\n                    }\n                } else if (this.autoLogin == 'no') {\n                    if (this.inApp) {\n                        this.utils.openInApp(href);\n                    } else {\n                        this.utils.openInBrowser(href);\n                    }\n                } else {\n                    if (this.inApp) {\n                        this.sitesProvider.getCurrentSite().openInAppWithAutoLoginIfSameSite(href);\n                    } else {\n                        this.sitesProvider.getCurrentSite().openInBrowserWithAutoLoginIfSameSite(href);\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/link.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { PopoverController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreContextMenuItemComponent } from './context-menu-item';\nimport { CoreContextMenuPopoverComponent } from './context-menu-popover';\nimport { Subject } from 'rxjs';\n\n/**\n * This component adds a button (usually in the navigation bar) that displays a context menu popover.\n */\n@Component({\n    selector: 'core-context-menu',\n    templateUrl: 'context-menu.html'\n})\nexport class CoreContextMenuComponent implements OnInit, OnDestroy {\n    @Input() icon?: string; // Icon to be shown on the navigation bar. Default: Kebab menu icon.\n    @Input() title?: string; // Aria label and text to be shown on the top of the popover.\n\n    hideMenu: boolean;\n    ariaLabel: string;\n    protected items: CoreContextMenuItemComponent[] = [];\n    protected itemsMovedToParent: CoreContextMenuItemComponent[] = [];\n    protected itemsChangedStream: Subject<void>; // Stream to update the hideMenu boolean when items change.\n    protected instanceId: string;\n    protected parentContextMenu: CoreContextMenuComponent;\n\n    constructor(private translate: TranslateService, private popoverCtrl: PopoverController, elementRef: ElementRef,\n            private domUtils: CoreDomUtilsProvider) {\n        // Create the stream and subscribe to it. We ignore successive changes during 250ms.\n        this.itemsChangedStream = new Subject<void>();\n        this.itemsChangedStream.auditTime(250).subscribe(() => {\n            // Hide the menu if all items are hidden.\n            this.hideMenu = !this.items.some((item) => {\n                return !item.hidden;\n            });\n\n            // Sort the items by priority.\n            this.items.sort((a, b) => {\n                return a.priority <= b.priority ? 1 : -1;\n            });\n        });\n\n        this.instanceId = this.domUtils.storeInstanceByElement(elementRef.nativeElement, this);\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.icon = this.icon || 'more';\n        this.ariaLabel = this.title || this.translate.instant('core.info');\n    }\n\n    /**\n     * Add a context menu item.\n     *\n     * @param {CoreContextMenuItemComponent} item The item to add.\n     */\n    addItem(item: CoreContextMenuItemComponent): void {\n        if (this.parentContextMenu) {\n            // All items were moved to the \"parent\" menu. Add the item in there.\n            this.parentContextMenu.addItem(item);\n\n            if (this.itemsMovedToParent.indexOf(item) == -1) {\n                this.itemsMovedToParent.push(item);\n            }\n        } else if (this.items.indexOf(item) == -1) {\n            this.items.push(item);\n            this.itemsChanged();\n        }\n    }\n\n    /**\n     * Function called when the items change.\n     */\n    itemsChanged(): void {\n        if (this.parentContextMenu) {\n            // All items were moved to the \"parent\" menu, call the function in there.\n            this.parentContextMenu.itemsChanged();\n        } else {\n            this.itemsChangedStream.next();\n        }\n    }\n\n    /**\n     * Merge the current context menu with the one passed as parameter. All the items in this menu will be moved to the\n     * one passed as parameter.\n     *\n     * @param {CoreContextMenuComponent} contextMenu The context menu where to move the items.\n     */\n    mergeContextMenus(contextMenu: CoreContextMenuComponent): void {\n        this.parentContextMenu = contextMenu;\n\n        // Add all the items to the other menu.\n        for (let i = 0; i < this.items.length; i++) {\n            const item = this.items[i];\n            contextMenu.addItem(item);\n            this.itemsMovedToParent.push(item);\n        }\n\n        // Remove all items from the current menu.\n        this.items = [];\n        this.itemsChanged();\n    }\n\n    /**\n     * Remove an item from the context menu.\n     *\n     * @param {CoreContextMenuItemComponent} item The item to remove.\n     */\n    removeItem(item: CoreContextMenuItemComponent): void {\n        if (this.parentContextMenu) {\n            // All items were moved to the \"parent\" menu. Remove the item from there.\n            this.parentContextMenu.removeItem(item);\n\n            const index = this.itemsMovedToParent.indexOf(item);\n            if (index >= 0) {\n                this.itemsMovedToParent.splice(index, 1);\n            }\n        } else {\n            const index = this.items.indexOf(item);\n            if (index >= 0) {\n                this.items.splice(index, 1);\n            }\n            this.itemsChanged();\n        }\n    }\n\n    /**\n     * Remove the items that were merged to a parent context menu.\n     */\n    removeMergedItems(): void {\n        if (this.parentContextMenu) {\n            for (let i = 0; i < this.itemsMovedToParent.length; i++) {\n                this.parentContextMenu.removeItem(this.itemsMovedToParent[i]);\n            }\n        }\n    }\n\n    /**\n     * Restore the items that were merged to a parent context menu.\n     */\n    restoreMergedItems(): void {\n        if (this.parentContextMenu) {\n            for (let i = 0; i < this.itemsMovedToParent.length; i++) {\n                this.parentContextMenu.addItem(this.itemsMovedToParent[i]);\n            }\n        }\n    }\n\n    /**\n     * Show the context menu.\n     *\n     * @param {MouseEvent} event Event.\n     */\n    showContextMenu(event: MouseEvent): void {\n        const popover = this.popoverCtrl.create(CoreContextMenuPopoverComponent, { title: this.title, items: this.items });\n        popover.present({\n            ev: event\n        });\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.domUtils.removeInstanceById(this.instanceId);\n        this.removeMergedItems();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/context-menu/context-menu.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { NavParams, ViewController } from 'ionic-angular';\nimport { CoreContextMenuItemComponent } from './context-menu-item';\nimport { CoreLoggerProvider } from '@providers/logger';\n\n/**\n * Component to display a list of items received by param in a popover.\n */\n@Component({\n    selector: 'core-context-menu-popover',\n    templateUrl: 'context-menu-popover.html'\n})\nexport class CoreContextMenuPopoverComponent {\n    title: string;\n    items: CoreContextMenuItemComponent[];\n    protected logger: any;\n\n    constructor(navParams: NavParams, private viewCtrl: ViewController, logger: CoreLoggerProvider) {\n        this.title = navParams.get('title');\n        this.items = navParams.get('items') || [];\n        this.logger = logger.getInstance('CoreContextMenuPopoverComponent');\n    }\n\n    /**\n     * Close the popover.\n     */\n    closeMenu(): void {\n        this.viewCtrl.dismiss();\n    }\n\n    /**\n     * Function called when an item is clicked.\n     *\n     * @param {Event} event Click event.\n     * @param {CoreContextMenuItemComponent} item Item clicked.\n     * @return {boolean} Return true if success, false if error.\n     */\n    itemClicked(event: Event, item: CoreContextMenuItemComponent): boolean {\n        if (item.action.observers.length > 0) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            if (!item.iconAction) {\n                this.logger.warn('Items with action must have an icon action to work', item);\n\n                return false;\n            } else if (item.iconAction == 'spinner') {\n                return false;\n            }\n\n            if (item.closeOnClick) {\n                this.closeMenu();\n            }\n\n            item.action.emit(this.closeMenu.bind(this));\n        } else if (item.href && item.closeOnClick) {\n            this.closeMenu();\n        }\n\n        return true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/context-menu/context-menu-popover.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    Component, Input, Output, EventEmitter, OnInit, OnChanges, AfterViewInit, ViewChild, ElementRef,\n    SimpleChange\n} from '@angular/core';\nimport { CoreTabComponent } from './tab';\nimport { Content } from 'ionic-angular';\n\n/**\n * This component displays some tabs that usually share data between them.\n *\n * If your tabs don't share any data then you should probably use ion-tabs. This component doesn't use different ion-nav\n * for each tab, so it will not load pages.\n *\n * Example usage:\n *\n * <core-tabs selectedIndex=\"1\">\n *     <core-tab [title]=\"'core.courses.timeline' | translate\" (ionSelect)=\"switchTab('timeline')\">\n *         <ng-template> <!-- This ng-template is required, @see CoreTabComponent. -->\n *             <!-- Tab contents. -->\n *         </ng-template>\n *     </core-tab>\n * </core-tabs>\n *\n * Obviously, the tab contents will only be shown if that tab is selected.\n */\n@Component({\n    selector: 'core-tabs',\n    templateUrl: 'tabs.html'\n})\nexport class CoreTabsComponent implements OnInit, AfterViewInit, OnChanges {\n    @Input() selectedIndex = 0; // Index of the tab to select.\n    @Input() hideUntil = true; // Determine when should the contents be shown.\n    @Output() ionChange: EventEmitter<CoreTabComponent> = new EventEmitter<CoreTabComponent>(); // Emitted when the tab changes.\n    @ViewChild('originalTabs') originalTabsRef: ElementRef;\n    @ViewChild('topTabs') topTabs: ElementRef;\n\n    tabs: CoreTabComponent[] = []; // List of tabs.\n    selected: number; // Selected tab number.\n    protected originalTabsContainer: HTMLElement; // The container of the original tabs. It will include each tab's content.\n    protected initialized = false;\n    protected afterViewInitTriggered = false;\n\n    protected topTabsElement: HTMLElement; // The container of the original tabs. It will include each tab's content.\n    protected tabBarHeight;\n    protected tabBarElement: HTMLElement; // Host element.\n    protected tabsShown = true;\n    protected scroll: HTMLElement; // Parent scroll element (if core-tabs is inside a ion-content).\n\n    constructor(element: ElementRef, protected content: Content) {\n        this.tabBarElement = element.nativeElement;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.originalTabsContainer = this.originalTabsRef.nativeElement;\n        this.topTabsElement = this.topTabs.nativeElement;\n    }\n\n    /**\n     * View has been initialized.\n     */\n    ngAfterViewInit(): void {\n        this.afterViewInitTriggered = true;\n        if (!this.initialized && this.hideUntil) {\n            // Tabs should be shown, initialize them.\n            this.initializeTabs();\n        }\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        // We need to wait for ngAfterViewInit because we need core-tab components to be executed.\n        if (!this.initialized && this.hideUntil && this.afterViewInitTriggered) {\n            // Tabs should be shown, initialize them.\n            // Use a setTimeout so child core-tab update their inputs before initializing the tabs.\n            setTimeout(() => {\n                this.initializeTabs();\n            });\n        }\n    }\n\n    /**\n     * Add a new tab if it isn't already in the list of tabs.\n     *\n     * @param {CoreTabComponent} tab The tab to add.\n     */\n    addTab(tab: CoreTabComponent): void {\n        // Check if tab is already in the list.\n        if (this.getIndex(tab) == -1) {\n            this.tabs.push(tab);\n            this.sortTabs();\n        }\n    }\n\n    /**\n     * Get the index of tab.\n     *\n     * @param  {any}    tab [description]\n     * @return {number}     [description]\n     */\n    getIndex(tab: any): number {\n        for (let i = 0; i < this.tabs.length; i++) {\n            const t = this.tabs[i];\n            if (t === tab || (typeof t.id != 'undefined' && t.id === tab.id)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Get the current selected tab.\n     *\n     * @return {CoreTabComponent} Selected tab.\n     */\n    getSelected(): CoreTabComponent {\n        return this.tabs[this.selected];\n    }\n\n    /**\n     * Initialize the tabs, determining the first tab to be shown.\n     */\n    protected initializeTabs(): void {\n        let selectedIndex = this.selectedIndex || 0,\n            selectedTab = this.tabs[selectedIndex];\n\n        if (!selectedTab || !selectedTab.enabled || !selectedTab.show) {\n            // The tab is not enabled or not shown. Get the first tab that is enabled.\n            selectedTab = this.tabs.find((tab, index) => {\n                if (tab.enabled && tab.show) {\n                    selectedIndex = index;\n\n                    return true;\n                }\n\n                return false;\n            });\n        }\n\n        if (selectedTab) {\n            this.selectTab(selectedIndex);\n        }\n\n        // Setup tab scrolling.\n        this.tabBarHeight = this.topTabsElement.offsetHeight;\n        this.originalTabsContainer.style.paddingBottom = this.tabBarHeight + 'px';\n        if (this.content) {\n            this.scroll = this.content.getScrollElement();\n            if (this.scroll) {\n                this.scroll.classList.add('no-scroll');\n            }\n        }\n\n        this.initialized = true;\n    }\n\n    /**\n     * Show or hide the tabs. This is used when the user is scrolling inside a tab.\n     *\n     * @param {any} e Scroll event.\n     */\n    showHideTabs(e: any): void {\n        if (e.target.scrollTop < this.tabBarHeight) {\n            if (!this.tabsShown) {\n                this.tabBarElement.classList.remove('tabs-hidden');\n                this.tabsShown = true;\n            }\n        } else {\n            if (this.tabsShown) {\n                this.tabBarElement.classList.add('tabs-hidden');\n                this.tabsShown = false;\n            }\n        }\n    }\n\n    /**\n     * Remove a tab from the list of tabs.\n     *\n     * @param {CoreTabComponent} tab The tab to remove.\n     */\n    removeTab(tab: CoreTabComponent): void {\n        const index = this.getIndex(tab);\n        this.tabs.splice(index, 1);\n    }\n\n    /**\n     * Select a certain tab.\n     *\n     * @param {number} index The index of the tab to select.\n     */\n    selectTab(index: number): void {\n        if (index == this.selected) {\n            // Already selected.\n            return;\n        }\n\n        if (index < 0 || index >= this.tabs.length) {\n            // Index isn't valid, select the first one.\n            index = 0;\n        }\n\n        const currentTab = this.getSelected(),\n            newTab = this.tabs[index];\n\n        if (!newTab.enabled || !newTab.show) {\n            // The tab isn't enabled or shown, stop.\n            return;\n        }\n\n        if (currentTab) {\n            // Unselect previous selected tab.\n            currentTab.unselectTab();\n        }\n\n        this.selected = index;\n        newTab.selectTab();\n        this.ionChange.emit(newTab);\n    }\n\n    /**\n     * Sort the tabs, keeping the same order as in the original list.\n     */\n    protected sortTabs(): void {\n        if (this.originalTabsContainer) {\n            const newTabs = [];\n\n            this.tabs.forEach((tab, index) => {\n                const originalIndex = Array.prototype.indexOf.call(this.originalTabsContainer.children, tab.element);\n                if (originalIndex != -1) {\n                    newTabs[originalIndex] = tab;\n                }\n            });\n\n            this.tabs = newTabs;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/tabs/tabs.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreSitesProvider } from './sites';\n\n/**\n * Group info for an activity.\n */\nexport interface CoreGroupInfo {\n    /**\n     * List of groups.\n     * @type {any[]}\n     */\n    groups?: any[];\n\n    /**\n     * Whether it's separate groups.\n     * @type {boolean}\n     */\n    separateGroups?: boolean;\n\n    /**\n     * Whether it's visible groups.\n     * @type {boolean}\n     */\n    visibleGroups?: boolean;\n}\n\n/*\n * Service to handle groups.\n*/\n@Injectable()\nexport class CoreGroupsProvider {\n    // Group mode constants.\n    static NOGROUPS = 0;\n    static SEPARATEGROUPS = 1;\n    static VISIBLEGROUPS = 2;\n    protected ROOT_CACHE_KEY = 'mmGroups:';\n\n    constructor(private sitesProvider: CoreSitesProvider, private translate: TranslateService) { }\n\n    /**\n     * Check if group mode of an activity is enabled.\n     *\n     * @param {number} cmId Course module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with true if the activity has groups, resolved with false otherwise.\n     */\n    activityHasGroups(cmId: number, siteId?: string): Promise<boolean> {\n        return this.getActivityGroupMode(cmId, siteId).then((groupmode) => {\n            return groupmode === CoreGroupsProvider.SEPARATEGROUPS || groupmode === CoreGroupsProvider.VISIBLEGROUPS;\n        }).catch(() => {\n            return false;\n        });\n    }\n\n    /**\n     * Get the groups allowed in an activity.\n     *\n     * @param {number} cmId Course module ID.\n     * @param {number} [userId] User ID. If not defined, use current user.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the groups are retrieved.\n     */\n    getActivityAllowedGroups(cmId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            const params = {\n                    cmid: cmId,\n                    userid: userId\n                },\n                preSets = {\n                    cacheKey: this.getActivityAllowedGroupsCacheKey(cmId, userId)\n                };\n\n            return site.read('core_group_get_activity_allowed_groups', params, preSets).then((response) => {\n                if (!response || !response.groups) {\n                    return Promise.reject(null);\n                }\n\n                return response.groups;\n            });\n        });\n    }\n\n    /**\n     * Get cache key for group mode WS calls.\n     *\n     * @param {number} cmId Course module ID.\n     * @param {number} userId User ID.\n     * @return {string} Cache key.\n     */\n    protected getActivityAllowedGroupsCacheKey(cmId: number, userId: number): string {\n        return this.ROOT_CACHE_KEY + 'allowedgroups:' + cmId + ':' + userId;\n    }\n\n    /**\n     * Get the groups allowed in an activity if they are allowed.\n     *\n     * @param {number} cmId Course module ID.\n     * @param {number} [userId] User ID. If not defined, use current user.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any[]>} Promise resolved when the groups are retrieved. If not allowed, empty array will be returned.\n     */\n    getActivityAllowedGroupsIfEnabled(cmId: number, userId?: number, siteId?: string): Promise<any[]> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        // Get real groupmode, in case it's forced by the course.\n        return this.activityHasGroups(cmId, siteId).then((hasGroups) => {\n            if (hasGroups) {\n                // Get the groups available for the user.\n                return this.getActivityAllowedGroups(cmId, userId, siteId);\n            }\n\n            return [];\n        });\n    }\n\n    /**\n     * Helper function to get activity group info (group mode and list of groups).\n     *\n     * @param {number} cmId Course module ID.\n     * @param {boolean} [addAllParts=true] Whether to add the all participants option. Always true for visible groups.\n     * @param {number} [userId] User ID. If not defined, use current user.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<CoreGroupInfo>} Promise resolved with the group info.\n     */\n    getActivityGroupInfo(cmId: number, addAllParts: boolean = true, userId?: number, siteId?: string): Promise<CoreGroupInfo> {\n        const groupInfo: CoreGroupInfo = {\n            groups: []\n        };\n\n        return this.getActivityGroupMode(cmId, siteId).then((groupMode) => {\n            groupInfo.separateGroups = groupMode === CoreGroupsProvider.SEPARATEGROUPS;\n            groupInfo.visibleGroups = groupMode === CoreGroupsProvider.VISIBLEGROUPS;\n\n            if (groupInfo.separateGroups || groupInfo.visibleGroups) {\n                return this.getActivityAllowedGroups(cmId, userId, siteId);\n            }\n\n            return [];\n        }).then((groups) => {\n            if (groups.length <= 0) {\n                groupInfo.separateGroups = false;\n                groupInfo.visibleGroups = false;\n            } else {\n                if (addAllParts || groupInfo.visibleGroups) {\n                    groupInfo.groups.push({ id: 0, name: this.translate.instant('core.allparticipants') });\n                }\n                groupInfo.groups = groupInfo.groups.concat(groups);\n            }\n\n            return groupInfo;\n        });\n    }\n\n    /**\n     * Get the group mode of an activity.\n     *\n     * @param {number} cmId Course module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<number>} Promise resolved when the group mode is retrieved.\n     */\n    getActivityGroupMode(cmId: number, siteId?: string): Promise<number> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const params = {\n                    cmid: cmId\n                },\n                preSets = {\n                    cacheKey: this.getActivityGroupModeCacheKey(cmId)\n                };\n\n            return site.read('core_group_get_activity_groupmode', params, preSets).then((response) => {\n                if (!response || typeof response.groupmode == 'undefined') {\n                    return Promise.reject(null);\n                }\n\n                return response.groupmode;\n            });\n        });\n    }\n\n    /**\n     * Get cache key for group mode WS calls.\n     *\n     * @param {number} cmId Course module ID.\n     * @return {string} Cache key.\n     */\n    protected getActivityGroupModeCacheKey(cmId: number): string {\n        return this.ROOT_CACHE_KEY + 'groupmode:' + cmId;\n    }\n\n    /**\n     * Get user groups in all the supplied courses.\n     *\n     * @param {any[]} courses List of courses or course ids to get the groups from.\n     * @param {string} [siteId] Site to get the groups from. If not defined, use current site.\n     * @param {number} [userId] ID of the user. If not defined, use the userId related to siteId.\n     * @return {Promise<any[]>} Promise resolved when the groups are retrieved.\n     */\n    getUserGroups(courses: any[], siteId?: string, userId?: number): Promise<any[]> {\n        const promises = [];\n        let groups = [];\n\n        courses.forEach((course) => {\n            const courseId = typeof course == 'object' ? course.id : course;\n            promises.push(this.getUserGroupsInCourse(courseId, siteId, userId).then((courseGroups) => {\n                groups = groups.concat(courseGroups);\n            }));\n        });\n\n        return Promise.all(promises).then(() => {\n            return groups;\n        });\n    }\n\n    /**\n     * Get user groups in a course.\n     *\n     * @param {number} courseId ID of the course.\n     * @param {string} [siteId] Site to get the groups from. If not defined, use current site.\n     * @param {number} [userId] ID of the user. If not defined, use ID related to siteid.\n     * @return {Promise<any[]>} Promise resolved when the groups are retrieved.\n     */\n    getUserGroupsInCourse(courseId: number, siteId?: string, userId?: number): Promise<any[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const data = {\n                    userid: userId || site.getUserId(),\n                    courseid: courseId\n                },\n                preSets = {\n                    cacheKey: this.getUserGroupsInCourseCacheKey(courseId, userId)\n                };\n\n            return site.read('core_group_get_course_user_groups', data, preSets).then((response) => {\n                if (response && response.groups) {\n                    return response.groups;\n                } else {\n                    return Promise.reject(null);\n                }\n            });\n        });\n    }\n\n    /**\n     * Get cache key for user groups in course WS calls.\n     *\n     * @param {number} courseId Course ID.\n     * @param {number} userId User ID.\n     * @return {string} Cache key.\n     */\n    protected getUserGroupsInCourseCacheKey(courseId: number, userId: number): string {\n        return this.ROOT_CACHE_KEY + 'courseGroups:' + courseId + ':' + userId;\n    }\n\n    /**\n     * Invalidates activity allowed groups.\n     *\n     * @param {number} cmId Course module ID.\n     * @param {number} [userId] User ID. If not defined, use current user.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateActivityAllowedGroups(cmId: number, userId?: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return site.invalidateWsCacheForKey(this.getActivityAllowedGroupsCacheKey(cmId, userId));\n        });\n    }\n\n    /**\n     * Invalidates activity group mode.\n     *\n     * @param {number} cmId Course module ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateActivityGroupMode(cmId: number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            return site.invalidateWsCacheForKey(this.getActivityGroupModeCacheKey(cmId));\n        });\n    }\n\n    /**\n     * Invalidates all activity group info: mode and allowed groups.\n     *\n     * @param {number} cmId Course module ID.\n     * @param {number} [userId] User ID. If not defined, use current user.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateActivityGroupInfo(cmId: number, userId?: number, siteId?: string): Promise<any> {\n        const promises = [];\n        promises.push(this.invalidateActivityAllowedGroups(cmId, userId, siteId));\n        promises.push(this.invalidateActivityGroupMode(cmId, siteId));\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Invalidates user groups in courses.\n     *\n     * @param {any[]} courses List of courses or course ids.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {number} [userId] User ID. If not defined, use current user.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateUserGroups(courses: any[], siteId?: string, userId?: number): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const promises = [];\n\n            userId = userId || site.getUserId();\n\n            courses.forEach((course) => {\n                const courseId = typeof course == 'object' ? course.id : course;\n                promises.push(this.invalidateUserGroupsInCourse(courseId, site.id, userId));\n            });\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Invalidates user groups in course.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {number} [userId] User ID. If not defined, use current user.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateUserGroupsInCourse(courseId: number, siteId?: string, userId?: number): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            userId = userId || site.getUserId();\n\n            return site.invalidateWsCacheForKey(this.getUserGroupsInCourseCacheKey(courseId, userId));\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/groups.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, Input } from '@angular/core';\nimport { Content, NavController } from 'ionic-angular';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { AddonCompetencyProvider } from '../../providers/competency';\nimport { AddonCompetencyHelperProvider } from '../../providers/helper';\n\n/**\n * Component that displays the competencies of a course.\n */\n@Component({\n    selector: 'addon-competency-course',\n    templateUrl: 'course.html',\n})\nexport class AddonCompetencyCourseComponent {\n    @ViewChild(Content) content: Content;\n\n    @Input() courseId: number;\n    @Input() userId: number;\n\n    competenciesLoaded = false;\n    competencies: any;\n    user: any;\n\n    constructor(private navCtrl: NavController, private appProvider: CoreAppProvider, private domUtils: CoreDomUtilsProvider,\n            private competencyProvider: AddonCompetencyProvider, private helperProvider: AddonCompetencyHelperProvider) {\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        this.fetchCourseCompetencies().finally(() => {\n            this.competenciesLoaded = true;\n        });\n    }\n\n    /**\n     * Fetches the competencies and updates the view.\n     *\n     * @return {Promise<void>} Promise resolved when done.\n     */\n    protected fetchCourseCompetencies(): Promise<void> {\n        return this.competencyProvider.getCourseCompetencies(this.courseId, this.userId).then((competencies) => {\n            this.competencies = competencies;\n\n            // Get the user profile image.\n            this.helperProvider.getProfile(this.userId).then((user) => {\n                this.user = user;\n            });\n        }).catch((message) => {\n            this.domUtils.showErrorModalDefault(message, 'Error getting course competencies data.');\n        });\n    }\n\n    /**\n     * Opens a competency.\n     *\n     * @param {number} competencyId\n     */\n    openCompetency(competencyId: number): void {\n        if (this.appProvider.isWide()) {\n            this.navCtrl.push('AddonCompetencyCompetenciesPage', {competencyId, courseId: this.courseId, userId: this.userId});\n        } else {\n            this.navCtrl.push('AddonCompetencyCompetencyPage', {competencyId, courseId: this.courseId, userId: this.userId});\n        }\n    }\n\n    /**\n     * Opens the summary of a competency.\n     *\n     * @param {number} competencyId\n     */\n    openCompetencySummary(competencyId: number): void {\n        this.navCtrl.push('AddonCompetencyCompetencySummaryPage', {competencyId});\n    }\n\n    /**\n     * Refreshes the competencies.\n     *\n     * @param {any} refresher Refresher.\n     */\n    refreshCourseCompetencies(refresher: any): void {\n        this.competencyProvider.invalidateCourseCompetencies(this.courseId, this.userId).finally(() => {\n            this.fetchCourseCompetencies().finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/components/course/course.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSyncProvider } from '@providers/sync';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\n\n/**\n * Base class to create sync providers. It provides some common functions.\n */\nexport class CoreSyncBaseProvider {\n\n    /**\n     * Logger instance get from CoreLoggerProvider.\n     * @type {any}\n     */\n    protected logger;\n\n    /**\n     * Component of the sync provider.\n     * @type {string}\n     */\n    component = 'core';\n\n    /**\n     * Sync provider's interval.\n     * @type {number}\n     */\n    syncInterval = 300000;\n\n    // Store sync promises.\n    protected syncPromises: { [siteId: string]: { [uniqueId: string]: Promise<any> } } = {};\n\n    constructor(component: string, protected sitesProvider: CoreSitesProvider, protected loggerProvider: CoreLoggerProvider,\n            protected appProvider: CoreAppProvider, protected syncProvider: CoreSyncProvider,\n            protected textUtils: CoreTextUtilsProvider) {\n        this.logger = this.loggerProvider.getInstance(component);\n        this.component = component;\n    }\n\n    /**\n     * Add an ongoing sync to the syncPromises list. On finish the promise will be removed.\n     *\n     * @param {string | number} id Unique sync identifier per component.\n     * @param {Promise<any>} promise The promise of the sync to add.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} The sync promise.\n     */\n    addOngoingSync(id: string | number, promise: Promise<any>, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const uniqueId = this.getUniqueSyncId(id);\n        if (!this.syncPromises[siteId]) {\n            this.syncPromises[siteId] = {};\n        }\n\n        this.syncPromises[siteId][uniqueId] = promise;\n\n        // Promise will be deleted when finish.\n        return promise.finally(() => {\n            delete this.syncPromises[siteId][uniqueId];\n        });\n    }\n\n    /**\n     * If there's an ongoing sync for a certain identifier return it.\n     *\n     * @param {string | number} id Unique sync identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise of the current sync or undefined if there isn't any.\n     */\n    getOngoingSync(id: string | number, siteId?: string): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (this.isSyncing(id, siteId)) {\n            // There's already a sync ongoing for this discussion, return the promise.\n            const uniqueId = this.getUniqueSyncId(id);\n\n            return this.syncPromises[siteId][uniqueId];\n        }\n    }\n\n    /**\n     * Get the synchronization time. Returns 0 if no time stored.\n     *\n     * @param {string | number} id Unique sync identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<number>} Promise resolved with the time.\n     */\n    getSyncTime(id: string | number, siteId?: string): Promise<number> {\n        return this.syncProvider.getSyncRecord(this.component, id, siteId).then((entry) => {\n            return entry.time;\n        }).catch(() => {\n            return 0;\n        });\n    }\n\n    /**\n     * Get the synchronization warnings of an instance.\n     *\n     * @param {string | number} id Unique sync identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<string[]>} Promise resolved with the warnings.\n     */\n    getSyncWarnings(id: string | number, siteId?: string): Promise<string[]> {\n        return this.syncProvider.getSyncRecord(this.component, id, siteId).then((entry) => {\n            return this.textUtils.parseJSON(entry.warnings, []);\n        }).catch(() => {\n            return [];\n        });\n    }\n\n    /**\n     * Create a unique identifier from component and id.\n     *\n     * @param {string | number} id Unique sync identifier per component.\n     * @return {string} Unique identifier from component and id.\n     */\n    protected getUniqueSyncId(id: string | number): string {\n        return this.component + '#' + id;\n    }\n\n    /**\n     * Check if a there's an ongoing syncronization for the given id.\n     *\n     * @param {string | number} id Unique sync identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {boolean} Whether it's synchronizing.\n     */\n    isSyncing(id: string | number, siteId?: string): boolean {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const uniqueId = this.getUniqueSyncId(id);\n\n        return !!(this.syncPromises[siteId] && this.syncPromises[siteId][uniqueId]);\n    }\n\n    /**\n     * Check if a sync is needed: if a certain time has passed since the last time.\n     *\n     * @param {string} id Unique sync identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<boolean>} Promise resolved with boolean: whether sync is needed.\n     */\n    isSyncNeeded(id: string, siteId?: string): Promise<boolean> {\n        return this.getSyncTime(id, siteId).then((time) => {\n            return Date.now() - this.syncInterval >= time;\n        });\n    }\n\n    /**\n     * Set the synchronization time.\n     *\n     * @param {string | number} id Unique sync identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {number} [time] Time to set. If not defined, current time.\n     * @return {Promise<any>} Promise resolved when the time is set.\n     */\n    setSyncTime(id: string | number, siteId?: string, time?: number): Promise<any> {\n        time = typeof time != 'undefined' ? time : Date.now();\n\n        return this.syncProvider.insertOrUpdateSyncRecord(this.component, id, { time: time }, siteId);\n    }\n\n    /**\n     * Set the synchronization warnings.\n     *\n     * @param {string} id Unique sync identifier per component.\n     * @param {string[]} warnings Warnings to set.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    setSyncWarnings(id: string, warnings: string[], siteId?: string): Promise<any> {\n        const warningsText = JSON.stringify(warnings || []);\n\n        return this.syncProvider.insertOrUpdateSyncRecord(this.component, id, { warnings: warningsText }, siteId);\n    }\n\n    /**\n     * Execute a sync function on selected sites.\n     *\n     * @param  {string} syncFunctionLog Log message to explain the sync function purpose.\n     * @param  {Function} syncFunction  Sync function to execute.\n     * @param  {any[]}    [params]      Array that defines the params that admit the funcion.\n     * @param  {string} [siteId]        Site ID to sync. If not defined, sync all sites.\n     * @return {Promise<any>}           Resolved with siteIds selected. Rejected if offline.\n     */\n    syncOnSites(syncFunctionLog: string, syncFunction: Function, params?: any[], siteId?: string): Promise<any> {\n        if (!this.appProvider.isOnline()) {\n            this.logger.debug(`Cannot sync '${syncFunctionLog}' because device is offline.`);\n\n            return Promise.reject(null);\n        }\n\n        let promise;\n        if (!siteId) {\n            // No site ID defined, sync all sites.\n            this.logger.debug(`Try to sync '${syncFunctionLog}' in all sites.`);\n            promise = this.sitesProvider.getSitesIds();\n        } else {\n            this.logger.debug(`Try to sync '${syncFunctionLog}' in site '${siteId}'.`);\n            promise = Promise.resolve([siteId]);\n        }\n\n        params = params || [];\n\n        return promise.then((siteIds) => {\n            const sitePromises = [];\n            siteIds.forEach((siteId) => {\n                // Execute function for every site selected.\n                sitePromises.push(syncFunction.apply(syncFunction, [siteId].concat(params)));\n            });\n\n            return Promise.all(sitePromises);\n        });\n    }\n\n    /**\n     * If there's an ongoing sync for a certain identifier, wait for it to end.\n     * If there's no sync ongoing the promise will be resolved right away.\n     *\n     * @param {string | number} id Unique sync identifier per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any>} Promise resolved when there's no sync going on for the identifier.\n     */\n    waitForSync(id: string | number, siteId?: string): Promise<any> {\n        const promise = this.getOngoingSync(id, siteId);\n        if (promise) {\n            return promise.catch(() => {\n                // Ignore errors.\n            });\n        }\n\n        return Promise.resolve();\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/base-sync.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreEventsProvider } from './events';\nimport { CoreSitesProvider } from './sites';\n\n/*\n * Service that provides some features regarding synchronization.\n*/\n@Injectable()\nexport class CoreSyncProvider {\n\n    // Variables for the database.\n    protected SYNC_TABLE = 'sync';\n    protected tableSchema = {\n        name: this.SYNC_TABLE,\n        columns: [\n            {\n                name: 'component',\n                type: 'TEXT',\n                notNull: true\n            },\n            {\n                name: 'id',\n                type: 'TEXT',\n                notNull: true\n            },\n            {\n                name: 'time',\n                type: 'INTEGER'\n            },\n            {\n                name: 'warnings',\n                type: 'TEXT'\n            }\n        ],\n        primaryKeys: ['component', 'id']\n    };\n\n    // Store blocked sync objects.\n    protected blockedItems: { [siteId: string]: { [blockId: string]: { [operation: string]: boolean } } } = {};\n\n    constructor(eventsProvider: CoreEventsProvider, private sitesProvider: CoreSitesProvider) {\n        this.sitesProvider.createTableFromSchema(this.tableSchema);\n\n        // Unblock all blocks on logout.\n        eventsProvider.on(CoreEventsProvider.LOGOUT, (data) => {\n            this.clearAllBlocks(data.siteId);\n        });\n    }\n\n    /**\n     * Block a component and ID so it cannot be synchronized.\n     *\n     * @param {string} component Component name.\n     * @param {number} id Unique ID per component.\n     * @param {string} [operation] Operation name. If not defined, a default text is used.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    blockOperation(component: string, id: number, operation?: string, siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const uniqueId = this.getUniqueSyncBlockId(component, id);\n\n        if (!this.blockedItems[siteId]) {\n            this.blockedItems[siteId] = {};\n        }\n\n        if (!this.blockedItems[siteId][uniqueId]) {\n            this.blockedItems[siteId][uniqueId] = {};\n        }\n\n        operation = operation || '-';\n\n        this.blockedItems[siteId][uniqueId][operation] = true;\n    }\n\n    /**\n     * Clear all blocks for a site or all sites.\n     *\n     * @param {string} [siteId] If set, clear the blocked objects only for this site. Otherwise clear them for all sites.\n     */\n    clearAllBlocks(siteId?: string): void {\n        if (siteId) {\n            delete this.blockedItems[siteId];\n        } else {\n            this.blockedItems = {};\n        }\n    }\n\n    /**\n     * Clear all blocks for a certain component.\n     *\n     * @param {string} component Component name.\n     * @param {number} id Unique ID per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    clearBlocks(component: string, id: number, siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const uniqueId = this.getUniqueSyncBlockId(component, id);\n        if (this.blockedItems[siteId]) {\n            delete this.blockedItems[siteId][uniqueId];\n        }\n    }\n\n    /**\n     * Returns a sync record.\n     * @param  {string}           component Component name.\n     * @param  {string | number}  id        Unique ID per component.\n     * @param  {string}           [siteId]  Site ID. If not defined, current site.\n     * @return {Promise<any>}     Record if found or reject.\n     */\n    getSyncRecord(component: string, id: string | number, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            return db.getRecord(this.SYNC_TABLE, { component: component, id: id });\n        });\n    }\n\n    /**\n     * Inserts or Updates info of a sync record.\n     * @param  {string}           component Component name.\n     * @param  {string | number}  id        Unique ID per component.\n     * @param  {any}              data      Data that updates the record.\n     * @param  {string}           [siteId]  Site ID. If not defined, current site.\n     * @return {Promise<any>}     Promise resolved with done.\n     */\n    insertOrUpdateSyncRecord(component: string, id: string | number, data: any, siteId?: string): Promise<any> {\n        return this.sitesProvider.getSiteDb(siteId).then((db) => {\n            data.component = component;\n            data.id = id;\n\n            return db.insertOrUpdateRecord(this.SYNC_TABLE, data, { component: component, id: id });\n        });\n    }\n\n    /**\n     * Convenience function to create unique identifiers for a component and id.\n     *\n     * @param {string} component Component name.\n     * @param {number} id Unique ID per component.\n     * @return {string} Unique sync id.\n     */\n    protected getUniqueSyncBlockId(component: string, id: number): string {\n        return component + '#' + id;\n    }\n\n    /**\n     * Check if a component is blocked.\n     * One block can have different operations. Here we check how many operations are being blocking the object.\n     *\n     * @param {string} component Component name.\n     * @param {number} id Unique ID per component.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {boolean} Whether it's blocked.\n     */\n    isBlocked(component: string, id: number, siteId?: string): boolean {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (!this.blockedItems[siteId]) {\n            return false;\n        }\n\n        const uniqueId = this.getUniqueSyncBlockId(component, id);\n        if (!this.blockedItems[siteId][uniqueId]) {\n            return false;\n        }\n\n        return Object.keys(this.blockedItems[siteId][uniqueId]).length > 0;\n    }\n\n    /**\n     * Unblock an operation on a component and ID.\n     *\n     * @param {string} component Component name.\n     * @param {number} id Unique ID per component.\n     * @param {string} [operation] Operation name. If not defined, a default text is used.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    unblockOperation(component: string, id: number, operation?: string, siteId?: string): void {\n        operation = operation || '-';\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        const uniqueId = this.getUniqueSyncBlockId(component, id);\n\n        if (this.blockedItems[siteId] && this.blockedItems[siteId][uniqueId]) {\n            delete this.blockedItems[siteId][uniqueId][operation];\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sync.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * A cache to store values in memory to speed up processes.\n *\n * The data is organized by \"entries\" that are identified by an ID. Each entry can have multiple values stored,\n * and each value has its own timemodified.\n *\n * Values expire after a certain time.\n */\nexport class CoreCache {\n    protected cacheStore = {};\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Clear the cache.\n     */\n    clear(): void {\n        this.cacheStore = {};\n    }\n\n    /**\n     * Get all the data stored in the cache for a certain id.\n     *\n     * @param {any} id The ID to identify the entry.\n     * @return {any} The data from the cache. Undefined if not found.\n     */\n    getEntry(id: any): any {\n        if (!this.cacheStore[id]) {\n            this.cacheStore[id] = {};\n        }\n\n        return this.cacheStore[id];\n    }\n\n    /**\n     * Get the status of a module from the \"cache\".\n     *\n     * @param {any} id The ID to identify the entry.\n     * @param {string} name Name of the value to get.\n     * @param {boolean} [ignoreInvalidate] Whether it should always return the cached data, even if it's expired.\n     * @return {any} Cached value. Undefined if not cached or expired.\n     */\n    getValue(id: any, name: string, ignoreInvalidate?: boolean): any {\n        const entry = this.getEntry(id);\n\n        if (entry[name] && typeof entry[name].value != 'undefined') {\n            const now = Date.now();\n            // Invalidate after 5 minutes.\n            if (ignoreInvalidate || entry[name].timemodified + 300000 >= now) {\n                return entry[name].value;\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Invalidate all the cached data for a certain entry.\n     *\n     * @param {any} id The ID to identify the entry.\n     */\n    invalidate(id: any): void {\n        const entry = this.getEntry(id);\n        for (const name in entry) {\n            entry[name].timemodified = 0;\n        }\n    }\n\n    /**\n     * Update the status of a module in the \"cache\".\n     *\n     * @param {any} id The ID to identify the entry.\n     * @param {string} name Name of the value to set.\n     * @param {any} value Value to set.\n     * @return {any} The set value.\n     */\n    setValue(id: any, name: string, value: any): any {\n        const entry = this.getEntry(id);\n        entry[name] = {\n            value: value,\n            timemodified: Date.now()\n        };\n\n        return value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/cache.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreCourseFormatHandler } from './format-delegate';\nimport { CoreCourseProvider } from './course';\n\n/**\n * Default handler used when the course format doesn't have a specific implementation.\n */\n@Injectable()\nexport class CoreCourseFormatDefaultHandler implements CoreCourseFormatHandler {\n    name = 'default';\n\n    constructor(private coursesProvider: CoreCoursesProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Get the title to use in course page.\n     *\n     * @param {any} course The course.\n     * @return {string} Title.\n     */\n    getCourseTitle?(course: any): string {\n        return course.fullname || '';\n    }\n\n    /**\n     * Whether it allows seeing all sections at the same time. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether it can view all sections.\n     */\n    canViewAllSections(course: any): boolean {\n        return true;\n    }\n\n    /**\n     * Whether the option to enable section/module download should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @return {boolean} Whether the option to enable section/module download should be displayed\n     */\n    displayEnableDownload(course: any): boolean {\n        return true;\n    }\n\n    /**\n     * Whether the default section selector should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether the default section selector should be displayed.\n     */\n    displaySectionSelector(course: any): boolean {\n        return true;\n    }\n\n    /**\n     * Given a list of sections, get the \"current\" section that should be displayed first.\n     *\n     * @param {any} course The course to get the title.\n     * @param {any[]} sections List of sections.\n     * @return {any|Promise<any>} Current section (or promise resolved with current section).\n     */\n    getCurrentSection(course: any, sections: any[]): any | Promise<any> {\n        // We need the \"marker\" to determine the current section.\n        return this.coursesProvider.getCoursesByField('id', course.id).catch(() => {\n            // Ignore errors.\n        }).then((courses) => {\n            if (courses && courses[0]) {\n                // Find the marked section.\n                const course = courses[0];\n                for (let i = 0; i < sections.length; i++) {\n                    const section = sections[i];\n                    if (section.section == course.marker) {\n                        return section;\n                    }\n                }\n            }\n\n            // Marked section not found or we couldn't retrieve the marker. Return the first section.\n            for (let i = 0; i < sections.length; i++) {\n                const section = sections[i];\n                if (section.id != CoreCourseProvider.ALL_SECTIONS_ID) {\n                    return section;\n                }\n            }\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Invalidate the data required to load the course format.\n     *\n     * @param {any} course The course to get the title.\n     * @param {any[]} sections List of sections.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateData(course: any, sections: any[]): Promise<any> {\n        return this.coursesProvider.invalidateCoursesByField('id', course.id);\n    }\n\n    /**\n     * Open the page to display a course. If not defined, the page CoreCourseSectionPage will be opened.\n     * Implement it only if you want to create your own page to display the course. In general it's better to use the method\n     * getCourseFormatComponent because it will display the course handlers at the top.\n     * Your page should include the course handlers using CoreCoursesDelegate.\n     *\n     * @param {NavController} navCtrl The NavController instance to use.\n     * @param {any} course The course to open. It should contain a \"format\" attribute.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    openCourse(navCtrl: NavController, course: any): Promise<any> {\n        return navCtrl.push('CoreCourseSectionPage', { course: course });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/providers/default-format.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseModulePrefetchHandlerBase } from '@core/course/classes/module-prefetch-handler';\nimport { AddonModBookProvider } from './book';\n\n/**\n * Handler to prefetch books.\n */\n@Injectable()\nexport class AddonModBookPrefetchHandler extends CoreCourseModulePrefetchHandlerBase {\n    name = 'book';\n    component = AddonModBookProvider.COMPONENT;\n    updatesNames = /^configuration$|^.*files$|^entries$/;\n    isResource = true;\n\n    constructor(injector: Injector, protected bookProvider: AddonModBookProvider) {\n        super(injector);\n    }\n\n    /**\n     * Download or prefetch the content.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. This is to keep the files\n     *                           relative paths and make the package work in an iframe. Undefined to download the files\n     *                           in the filepool root folder.\n     * @return {Promise<any>} Promise resolved when all content is downloaded. Data returned is not reliable.\n     */\n    downloadOrPrefetch(module: any, courseId: number, prefetch?: boolean, dirPath?: string): Promise<any> {\n        const promises = [];\n\n        promises.push(super.downloadOrPrefetch(module, courseId, prefetch));\n        promises.push(this.bookProvider.getBook(courseId, module.id).catch(() => {\n            // Ignore errors since this WS isn't available in some Moodle versions.\n        }));\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Returns module intro files.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @return {Promise<any[]>} Promise resolved with list of intro files.\n     */\n    getIntroFiles(module: any, courseId: number): Promise<any[]> {\n        return this.bookProvider.getBook(courseId, module.id).catch(() => {\n            // Not found, return undefined so module description is used.\n        }).then((book) => {\n            return this.getIntroFilesFromInstance(module, book);\n        });\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number): Promise<any> {\n        return this.bookProvider.invalidateContent(moduleId, courseId);\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} A boolean, or a promise resolved with a boolean, indicating if the handler is enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.bookProvider.isPluginEnabled();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/providers/prefetch-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { NavParams, ViewController } from 'ionic-angular';\nimport { AddonModBookTocChapter } from '../../providers/book';\n\n/**\n * Component to display the TOC of a book.\n */\n@Component({\n    selector: 'addon-mod-book-toc-popover',\n    templateUrl: 'toc-popover.html'\n})\nexport class AddonModBookTocPopoverComponent {\n    chapters: AddonModBookTocChapter[];\n\n    constructor(navParams: NavParams, private viewCtrl: ViewController) {\n        this.chapters = navParams.get('chapters') || [];\n    }\n\n    /**\n     * Function called when a course is clicked.\n     *\n     * @param {string} id ID of the clicked chapter.\n     */\n    loadChapter(id: string): void {\n        this.viewCtrl.dismiss(id);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/components/toc-popover/toc-popover.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Service that provides some features for folder.\n */\n@Injectable()\nexport class AddonModFolderHelperProvider {\n\n    constructor(private courseProvider: CoreCourseProvider) {\n    }\n\n    /**\n     * Format folder contents, creating directory structure.\n     * Folders found in filepaths are added to the array. Each folder has the properties: name, fileicon,\n     * type (folder), filepath and contents (array with files and subfolders).\n     *\n     * @param {any[]} contents Folder contents.\n     * @return {any[]}         Formatted contents.\n     */\n    formatContents(contents: any[]): any[] {\n        const files = [],\n            folders = [],\n            folderIcon = this.courseProvider.getModuleIconSrc('folder');\n\n        contents.forEach((entry) => {\n            if (entry.filepath !== '/') {\n                // It's a file in a subfolder. Lets treat the path to add the subfolders to the array.\n                let directories,\n                    currentList = folders, // Start at root level.\n                    path = entry.filepath,\n                    subpath = '';\n\n                // Remove first and last slash if needed.\n                if (path.substr(0, 1) === '/') {\n                    path = path.substr(1);\n                }\n                if (path.substr(path.length - 1) === '/') {\n                    path = path.slice(0, -1);\n                }\n\n                directories = path.split('/');\n\n                directories.forEach((directory) => {\n                    subpath = subpath + '/' + directory;\n                    // Search if the directory is already stored in folders array.\n                    const foundList = currentList.find((list) => {\n                        return list.name === directory;\n                    });\n\n                    if (foundList) {\n                        currentList = foundList.contents;\n                    } else {\n                        // Directory not found. Add it to the array.\n                        const newFolder = {\n                            name: directory,\n                            fileicon: folderIcon,\n                            contents: [],\n                            filepath: subpath,\n                            type: 'folder'\n                        };\n                        currentList.push(newFolder);\n                        currentList = newFolder.contents;\n                    }\n                });\n\n                currentList.push(entry);\n            } else {\n                files.push(entry);\n            }\n        });\n\n        return folders.concat(files);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseModulePrefetchHandlerBase } from '@core/course/classes/module-prefetch-handler';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { AddonModPageProvider } from './page';\nimport { AddonModPageHelperProvider } from './helper';\n\n/**\n * Handler to prefetch pages.\n */\n@Injectable()\nexport class AddonModPagePrefetchHandler extends CoreCourseModulePrefetchHandlerBase {\n    name = 'page';\n    component = AddonModPageProvider.COMPONENT;\n    updatesNames = /^configuration$|^.*files$/;\n    isResource = true;\n\n    constructor(injector: Injector, protected pageProvider: AddonModPageProvider, protected utils: CoreUtilsProvider,\n            protected pageHelper: AddonModPageHelperProvider) {\n        super(injector);\n    }\n\n    /**\n     * Download or prefetch the content.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. This is to keep the files\n     *                           relative paths and make the package work in an iframe. Undefined to download the files\n     *                           in the filepool root page.\n     * @return {Promise<any>} Promise resolved when all content is downloaded. Data returned is not reliable.\n     */\n    downloadOrPrefetch(module: any, courseId: number, prefetch?: boolean, dirPath?: string): Promise<any> {\n        const promises = [];\n\n        promises.push(super.downloadOrPrefetch(module, courseId, prefetch));\n\n        if (this.pageProvider.isGetPageWSAvailable()) {\n            promises.push(this.pageProvider.getPageData(courseId, module.id));\n        }\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number): Promise<any> {\n        return this.pageProvider.invalidateContent(moduleId, courseId);\n    }\n\n    /**\n     * Invalidate WS calls needed to determine module status.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when invalidated.\n     */\n    invalidateModule(module: any, courseId: number): Promise<any> {\n        const promises = [];\n\n        promises.push(this.pageProvider.invalidatePageData(courseId));\n        promises.push(this.courseProvider.invalidateModule(module.id));\n\n        return this.utils.allPromises(promises);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/providers/prefetch-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseModulePrefetchHandlerBase } from '@core/course/classes/module-prefetch-handler';\nimport { AddonModResourceProvider } from './resource';\nimport { AddonModResourceHelperProvider } from './helper';\nimport { CoreFilepoolProvider } from '@providers/filepool';\n\n/**\n * Handler to prefetch resources.\n */\n@Injectable()\nexport class AddonModResourcePrefetchHandler extends CoreCourseModulePrefetchHandlerBase {\n    name = 'resource';\n    component = AddonModResourceProvider.COMPONENT;\n    isResource = true;\n\n    constructor(injector: Injector, protected resourceProvider: AddonModResourceProvider,\n            protected filepoolProvider: CoreFilepoolProvider, protected resourceHelper: AddonModResourceHelperProvider) {\n        super(injector);\n    }\n\n    /**\n     * Download or prefetch the content.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. This is to keep the files\n     *                           relative paths and make the package work in an iframe. Undefined to download the files\n     *                           in the filepool root folder.\n     * @return {Promise<any>} Promise resolved when all content is downloaded. Data returned is not reliable.\n     */\n    downloadOrPrefetch(module: any, courseId: number, prefetch?: boolean, dirPath?: string): Promise<any> {\n        let promise;\n\n        if (this.resourceHelper.isDisplayedInIframe(module)) {\n            promise = this.filepoolProvider.getPackageDirPathByUrl(this.sitesProvider.getCurrentSiteId(), module.url);\n        } else {\n            promise = Promise.resolve();\n        }\n\n        return promise.then((dirPath) => {\n            const promises = [];\n\n            promises.push(super.downloadOrPrefetch(module, courseId, prefetch, dirPath));\n\n            if (this.resourceProvider.isGetResourceWSAvailable()) {\n                promises.push(this.resourceProvider.getResourceData(courseId, module.id));\n            }\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number): Promise<any> {\n        return this.resourceProvider.invalidateContent(moduleId, courseId);\n    }\n\n    /**\n     * Invalidate WS calls needed to determine module status.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when invalidated.\n     */\n    invalidateModule(module: any, courseId: number): Promise<any> {\n        const promises = [];\n\n        promises.push(this.resourceProvider.invalidateResourceData(courseId));\n        promises.push(this.courseProvider.invalidateModule(module.id));\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} A boolean, or a promise resolved with a boolean, indicating if the handler is enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.resourceProvider.isPluginEnabled();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/providers/prefetch-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, Input, Optional } from '@angular/core';\nimport { Content, NavParams, NavController } from 'ionic-angular';\nimport { CoreGradesProvider } from '../../providers/grades';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreGradesHelperProvider } from '../../providers/helper';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { CoreAppProvider } from '@providers/app';\n\n/**\n * Component that displays a course grades.\n */\n@Component({\n    selector: 'core-grades-course',\n    templateUrl: 'course.html',\n})\nexport class CoreGradesCourseComponent {\n    @ViewChild(Content) content: Content;\n\n    @Input() courseId: number;\n    @Input() userId: number;\n    @Input() gradeId?: number;\n\n    gradesLoaded = false;\n    gradesTable: any;\n\n    constructor(private gradesProvider: CoreGradesProvider, private domUtils: CoreDomUtilsProvider, navParams: NavParams,\n        private gradesHelper: CoreGradesHelperProvider, @Optional() private navCtrl: NavController,\n        private appProvider: CoreAppProvider, @Optional() private svComponent: CoreSplitViewComponent) {\n    }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        this.fetchData().then(() => {\n            if (this.gradeId) {\n                // There is the grade to load.\n                this.gotoGrade(this.gradeId);\n            }\n\n            // Add log in Moodle.\n            return this.gradesProvider.logCourseGradesView(this.courseId, this.userId);\n        }).finally(() => {\n            this.gradesLoaded = true;\n        });\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param {boolean} [refresh] Empty events array first.\n     * @return {Promise<any>}     Resolved when done.\n     */\n    fetchData(refresh: boolean = false): Promise<any> {\n        return this.gradesProvider.getCourseGradesTable(this.courseId, this.userId).then((table) => {\n            this.gradesTable = this.gradesHelper.formatGradesTable(table);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error loading grades');\n        });\n    }\n\n    /**\n     * Refresh data.\n     *\n     * @param {any} refresher Refresher.\n     */\n    refreshGrades(refresher: any): void {\n        this.gradesProvider.invalidateCourseGradesData(this.courseId, this.userId).finally(() => {\n            this.fetchData().finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Navigate to the grade of the selected item.\n     * @param {number} gradeId  Grade item ID where to navigate.\n     */\n    gotoGrade(gradeId: number): void {\n        if (gradeId) {\n            this.gradeId = gradeId;\n            let whereToPush, pageName;\n\n            if (this.svComponent) {\n                if (this.svComponent.getMasterNav().getActive().component.name == 'CoreGradesCourseSplitPage') {\n                    // Table is on left side. Push on right.\n                    whereToPush = this.svComponent;\n                    pageName = 'CoreGradesGradePage';\n                } else {\n                    // Table is on right side. Load new split view.\n                    whereToPush = this.svComponent.getMasterNav();\n                    pageName = 'CoreGradesCourseSplitPage';\n                }\n            } else {\n                if (this.appProvider.isWide()) {\n                    // Table is full screen and large. Load here.\n                    whereToPush = this.navCtrl;\n                    pageName = 'CoreGradesCourseSplitPage';\n                } else {\n                    // Table is full screen but on mobile. Load here.\n                    whereToPush = this.navCtrl;\n                    pageName = 'CoreGradesGradePage';\n                }\n\n            }\n            whereToPush.push(pageName, {courseId: this.courseId, userId: this.userId, gradeId: gradeId});\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/components/course/course.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild, Input, OnInit } from '@angular/core';\nimport { Content } from 'ionic-angular';\nimport { CoreUserProvider } from '../../providers/user';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\n\n/**\n * Component that displays the list of course participants.\n */\n@Component({\n    selector: 'core-user-participants',\n    templateUrl: 'participants.html',\n})\nexport class CoreUserParticipantsComponent implements OnInit {\n    @ViewChild(Content) content: Content;\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\n\n    @Input() courseId: number;\n\n    participantId: number;\n    participants = [];\n    canLoadMore = false;\n    participantsLoaded = false;\n\n    constructor(private userProvider: CoreUserProvider, private domUtils: CoreDomUtilsProvider) { }\n\n    /**\n     * View loaded.\n     */\n    ngOnInit(): void {\n        // Get first participants.\n        this.fetchData(true).then(() => {\n            if (!this.participantId && this.splitviewCtrl.isOn() && this.participants.length > 0) {\n                // Take first and load it.\n                this.gotoParticipant(this.participants[0].id);\n            }\n            // Add log in Moodle.\n            this.userProvider.logParticipantsView(this.courseId).catch(() => {\n                // Ignore errors.\n            });\n        }).finally(() => {\n            this.participantsLoaded = true;\n        });\n    }\n\n    /**\n     * Fetch all the data required for the view.\n     *\n     * @param {boolean} [refresh] Empty events array first.\n     * @return {Promise<any>}     Resolved when done.\n     */\n    fetchData(refresh: boolean = false): Promise<any> {\n        const firstToGet = refresh ? 0 : this.participants.length;\n\n        return this.userProvider.getParticipants(this.courseId, firstToGet).then((data) => {\n            if (refresh) {\n                this.participants = data.participants;\n            } else {\n                this.participants = this.participants.concat(data.participants);\n            }\n            this.canLoadMore = data.canLoadMore;\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error loading participants');\n            this.canLoadMore = false; // Set to false to prevent infinite calls with infinite-loading.\n        });\n    }\n\n    /**\n     * Refresh data.\n     *\n     * @param {any} refresher Refresher.\n     */\n    refreshParticipants(refresher: any): void {\n        this.userProvider.invalidateParticipantsList(this.courseId).finally(() => {\n            this.fetchData(true).finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Navigate to a particular user profile.\n     * @param {number} userId  User Id where to navigate.\n     */\n    gotoParticipant(userId: number): void {\n        this.participantId = userId;\n        this.splitviewCtrl.push('CoreUserProfilePage', {userId: userId, courseId: this.courseId});\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/components/participants/participants.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    Component, Input, OnInit, OnChanges, OnDestroy, ViewContainerRef, ViewChild, ComponentRef, SimpleChange, ChangeDetectorRef,\n    ElementRef, Optional\n} from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreCompileProvider } from '../../providers/compile';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * This component has a behaviour similar to $compile for AngularJS. Given an HTML code, it will compile it so all its\n * components and directives are instantiated.\n *\n * IMPORTANT: Use this component only if it is a must. It will create and compile a new component and module everytime this\n * component is used, so it can slow down the app.\n *\n * This component has its own module to prevent circular dependencies. If you want to use it,\n * you need to import CoreCompileHtmlComponentModule.\n *\n * You can provide some Javascript code (as text) to be executed inside the component. The context of the javascript code (this)\n * will be the component instance created to compile the template. This means your javascript code can interact with the template.\n * The component instance will have most of the providers so you can use them in the javascript code. E.g. if you want to use\n * CoreAppProvider, you can do it with \"this.CoreAppProvider\".\n */\n@Component({\n    selector: 'core-compile-html',\n    template: '<ng-container #dynamicComponent></ng-container>'\n})\nexport class CoreCompileHtmlComponent implements OnChanges, OnDestroy {\n    @Input() text: string; // The HTML text to display.\n    @Input() javascript: string; // The Javascript to execute in the component.\n    @Input() jsData; // Data to pass to the fake component.\n\n    // Get the container where to put the content.\n    @ViewChild('dynamicComponent', { read: ViewContainerRef }) container: ViewContainerRef;\n\n    protected componentRef: ComponentRef<any>;\n    protected element;\n    componentObservable: BehaviorSubject<any>; // An observable to notify observers when the component is instantiated.\n\n    constructor(protected compileProvider: CoreCompileProvider, protected cdr: ChangeDetectorRef, element: ElementRef,\n            @Optional() protected navCtrl: NavController) {\n        this.element = element.nativeElement;\n        this.componentObservable = new BehaviorSubject<any>(null);\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if ((changes.text || changes.javascript) && this.text) {\n            // Create a new component and a new module.\n            this.compileProvider.createAndCompileComponent(this.text, this.getComponentClass()).then((factory) => {\n                // Destroy previous components.\n                this.componentRef && this.componentRef.destroy();\n\n                if (factory) {\n                    // Create the component.\n                    this.componentRef = this.container.createComponent(factory);\n                    this.componentObservable.next(this.componentRef.instance);\n                }\n            });\n        }\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.componentRef && this.componentRef.destroy();\n    }\n\n    /**\n     * Get a class that defines the dynamic component.\n     *\n     * @return {any} The component class.\n     */\n    protected getComponentClass(): any {\n        // tslint:disable: no-this-assignment\n        const compileInstance = this;\n\n        // Create the component, using the text as the template.\n        return class CoreCompileHtmlFakeComponent implements OnInit {\n            constructor() {\n                // If there is some javascript to run, prepare the instance.\n                if (compileInstance.javascript) {\n                    compileInstance.compileProvider.injectLibraries(this);\n\n                    // Add some more components and classes.\n                    this['ChangeDetectorRef'] = compileInstance.cdr;\n                    this['NavController'] = compileInstance.navCtrl;\n                    this['componentContainer'] = compileInstance.element;\n                }\n\n                // Add the data passed to the component.\n                for (const name in compileInstance.jsData) {\n                    this[name] = compileInstance.jsData[name];\n                }\n            }\n\n            ngOnInit(): void {\n                // If there is some javascript to run, do it now.\n                if (compileInstance.javascript) {\n                    compileInstance.compileProvider.executeJavascript(this, compileInstance.javascript);\n                }\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/compile/components/compile-html/compile-html.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreContentLinksDelegate } from './providers/delegate';\nimport { CoreContentLinksHelperProvider } from './providers/helper';\n\n// List of providers.\nexport const CORE_CONTENTLINKS_PROVIDERS = [\n    CoreContentLinksDelegate,\n    CoreContentLinksHelperProvider\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    providers: CORE_CONTENTLINKS_PROVIDERS,\n    exports: []\n})\nexport class CoreContentLinksModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/contentlinks/contentlinks.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreCourseProvider } from './providers/course';\nimport { CoreCourseHelperProvider } from './providers/helper';\nimport { CoreCourseFormatDelegate } from './providers/format-delegate';\nimport { CoreCourseModuleDelegate } from './providers/module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from './providers/module-prefetch-delegate';\nimport { CoreCourseOptionsDelegate } from './providers/options-delegate';\nimport { CoreCourseFormatDefaultHandler } from './providers/default-format';\nimport { CoreCourseFormatSingleActivityModule } from './formats/singleactivity/singleactivity.module';\nimport { CoreCourseFormatSocialModule } from './formats/social/social.module';\nimport { CoreCourseFormatTopicsModule } from './formats/topics/topics.module';\nimport { CoreCourseFormatWeeksModule } from './formats/weeks/weeks.module';\n\n// List of providers (without handlers).\nexport const CORE_COURSE_PROVIDERS: any[] = [\n    CoreCourseProvider,\n    CoreCourseHelperProvider,\n    CoreCourseFormatDelegate,\n    CoreCourseModuleDelegate,\n    CoreCourseModulePrefetchDelegate,\n    CoreCourseOptionsDelegate\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CoreCourseFormatSingleActivityModule,\n        CoreCourseFormatTopicsModule,\n        CoreCourseFormatWeeksModule,\n        CoreCourseFormatSocialModule\n    ],\n    providers: CORE_COURSE_PROVIDERS.concat([\n        CoreCourseFormatDefaultHandler\n    ]),\n    exports: []\n})\nexport class CoreCourseModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/course.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseFormatHandler } from '../../../providers/format-delegate';\nimport { CoreCourseFormatSingleActivityComponent } from '../components/singleactivity';\n\n/**\n * Handler to support singleactivity course format.\n */\n@Injectable()\nexport class CoreCourseFormatSingleActivityHandler implements CoreCourseFormatHandler {\n    name = 'singleactivity';\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Whether it allows seeing all sections at the same time. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether it can view all sections.\n     */\n    canViewAllSections(course: any): boolean {\n        return false;\n    }\n\n    /**\n     * Get the title to use in course page. If not defined, course fullname.\n     * This function will be called without sections first, and then call it again when the sections are retrieved.\n     *\n     * @param {any} course The course.\n     * @param {any[]} [sections] List of sections.\n     * @return {string} Title.\n     */\n    getCourseTitle(course: any, sections?: any[]): string {\n        if (sections && sections[0] && sections[0].modules && sections[0].modules[0]) {\n            return sections[0].modules[0].name;\n        }\n\n        return course.fullname || '';\n    }\n\n    /**\n     * Whether the option to enable section/module download should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @return {boolean} Whether the option to enable section/module download should be displayed\n     */\n    displayEnableDownload(course: any): boolean {\n        return false;\n    }\n\n    /**\n     * Whether the default section selector should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether the default section selector should be displayed.\n     */\n    displaySectionSelector(course: any): boolean {\n        return false;\n    }\n\n    /**\n     * Return the Component to use to display the course format instead of using the default one.\n     * Use it if you want to display a format completely different from the default one.\n     * If you want to customize the default format there are several methods to customize parts of it.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getCourseFormatComponent(injector: Injector, course: any): any | Promise<any> {\n        return CoreCourseFormatSingleActivityComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/singleactivity/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreCoursesProvider } from './providers/courses';\nimport { CoreCoursesMainMenuHandler } from './providers/mainmenu-handler';\nimport { CoreCoursesMyOverviewProvider } from './providers/my-overview';\nimport { CoreCoursesCourseLinkHandler } from './providers/course-link-handler';\nimport { CoreCoursesIndexLinkHandler } from './providers/courses-index-link-handler';\nimport { CoreCoursesMyOverviewLinkHandler } from './providers/my-overview-link-handler';\nimport { CoreMainMenuDelegate } from '@core/mainmenu/providers/delegate';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\n\n// List of providers (without handlers).\nexport const CORE_COURSES_PROVIDERS: any[] = [\n    CoreCoursesProvider,\n    CoreCoursesMyOverviewProvider\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    providers: CORE_COURSES_PROVIDERS.concat([\n        CoreCoursesMainMenuHandler,\n        CoreCoursesCourseLinkHandler,\n        CoreCoursesIndexLinkHandler,\n        CoreCoursesMyOverviewLinkHandler\n    ]),\n    exports: []\n})\nexport class CoreCoursesModule {\n    constructor(mainMenuDelegate: CoreMainMenuDelegate, contentLinksDelegate: CoreContentLinksDelegate,\n            mainMenuHandler: CoreCoursesMainMenuHandler, courseLinkHandler: CoreCoursesCourseLinkHandler,\n            indexLinkHandler: CoreCoursesIndexLinkHandler, myOverviewLinkHandler: CoreCoursesMyOverviewLinkHandler) {\n        mainMenuDelegate.registerHandler(mainMenuHandler);\n\n        contentLinksDelegate.registerHandler(courseLinkHandler);\n        contentLinksDelegate.registerHandler(indexLinkHandler);\n        contentLinksDelegate.registerHandler(myOverviewLinkHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/courses.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreFileUploaderProvider } from './providers/fileuploader';\nimport { CoreFileUploaderHelperProvider } from './providers/helper';\nimport { CoreFileUploaderDelegate } from './providers/delegate';\nimport { CoreFileUploaderAlbumHandler } from './providers/album-handler';\nimport { CoreFileUploaderAudioHandler } from './providers/audio-handler';\nimport { CoreFileUploaderCameraHandler } from './providers/camera-handler';\nimport { CoreFileUploaderFileHandler } from './providers/file-handler';\nimport { CoreFileUploaderVideoHandler } from './providers/video-handler';\n\n// List of providers (without handlers).\nexport const CORE_FILEUPLOADER_PROVIDERS: any[] = [\n    CoreFileUploaderProvider,\n    CoreFileUploaderHelperProvider,\n    CoreFileUploaderDelegate\n];\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: CORE_FILEUPLOADER_PROVIDERS.concat([\n        CoreFileUploaderAlbumHandler,\n        CoreFileUploaderAudioHandler,\n        CoreFileUploaderCameraHandler,\n        CoreFileUploaderFileHandler,\n        CoreFileUploaderVideoHandler\n    ])\n})\nexport class CoreFileUploaderModule {\n    constructor(delegate: CoreFileUploaderDelegate, albumHandler: CoreFileUploaderAlbumHandler,\n            audioHandler: CoreFileUploaderAudioHandler, cameraHandler: CoreFileUploaderCameraHandler,\n            videoHandler: CoreFileUploaderVideoHandler, fileHandler: CoreFileUploaderFileHandler) {\n        delegate.registerHandler(albumHandler);\n        delegate.registerHandler(audioHandler);\n        delegate.registerHandler(cameraHandler);\n        delegate.registerHandler(fileHandler);\n        delegate.registerHandler(videoHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/fileuploader.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreGradesProvider } from './providers/grades';\nimport { CoreGradesHelperProvider } from './providers/helper';\nimport { CoreMainMenuDelegate } from '@core/mainmenu/providers/delegate';\nimport { CoreGradesMainMenuHandler } from './providers/mainmenu-handler';\nimport { CoreGradesCourseOptionHandler } from './providers/course-option-handler';\nimport { CoreGradesComponentsModule } from './components/components.module';\nimport { CoreCourseOptionsDelegate } from '@core/course/providers/options-delegate';\nimport { CoreGradesUserLinkHandler } from './providers/user-link-handler';\nimport { CoreGradesOverviewLinkHandler } from './providers/overview-link-handler';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreGradesUserHandler } from './providers/user-handler';\nimport { CoreUserDelegate } from '@core/user/providers/user-delegate';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUserProvider } from '@core/user/providers/user';\n\n// List of providers (without handlers).\nexport const CORE_GRADES_PROVIDERS: any[] = [\n    CoreGradesProvider,\n    CoreGradesHelperProvider\n];\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        CoreGradesComponentsModule\n    ],\n    providers: CORE_GRADES_PROVIDERS.concat([\n        CoreGradesMainMenuHandler,\n        CoreGradesCourseOptionHandler,\n        CoreGradesUserLinkHandler,\n        CoreGradesOverviewLinkHandler,\n        CoreGradesUserHandler\n    ])\n})\nexport class CoreGradesModule {\n    constructor(mainMenuDelegate: CoreMainMenuDelegate, gradesMenuHandler: CoreGradesMainMenuHandler,\n            courseOptionHandler: CoreGradesCourseOptionHandler, courseOptionsDelegate: CoreCourseOptionsDelegate,\n            contentLinksDelegate: CoreContentLinksDelegate, userLinkHandler: CoreGradesUserLinkHandler,\n            overviewLinkHandler: CoreGradesOverviewLinkHandler, userHandler: CoreGradesUserHandler,\n            userDelegate: CoreUserDelegate, eventsProvider: CoreEventsProvider, sitesProvider: CoreSitesProvider) {\n\n        // Register handlers.\n        mainMenuDelegate.registerHandler(gradesMenuHandler);\n        courseOptionsDelegate.registerHandler(courseOptionHandler);\n        contentLinksDelegate.registerHandler(userLinkHandler);\n        contentLinksDelegate.registerHandler(overviewLinkHandler);\n        userDelegate.registerHandler(userHandler);\n\n        // Clear user profile handler cache.\n        eventsProvider.on(CoreUserProvider.PROFILE_REFRESHED, (data) => {\n            userHandler.clearViewGradesCache(data.courseId, data.userId);\n        }, sitesProvider.getCurrentSiteId());\n\n        eventsProvider.on(CoreEventsProvider.LOGOUT, () => {\n            userHandler.clearViewGradesCache();\n        }, sitesProvider.getCurrentSiteId());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/grades.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreLoginHelperProvider } from './providers/helper';\n\n// List of providers.\nexport const CORE_LOGIN_PROVIDERS = [\n    CoreLoginHelperProvider\n];\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: CORE_LOGIN_PROVIDERS\n})\nexport class CoreLoginModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/login.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreMainMenuDelegate } from './providers/delegate';\nimport { CoreMainMenuProvider } from './providers/mainmenu';\n\n// List of providers.\nexport const CORE_MAINMENU_PROVIDERS = [\n    CoreMainMenuDelegate,\n    CoreMainMenuProvider\n];\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: CORE_MAINMENU_PROVIDERS\n})\nexport class CoreMainMenuModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/mainmenu/mainmenu.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { CoreSharedFilesProvider } from './providers/sharedfiles';\nimport { CoreSharedFilesHelperProvider } from './providers/helper';\nimport { CoreSharedFilesUploadHandler } from './providers/upload-handler';\nimport { CoreFileUploaderDelegate } from '@core/fileuploader/providers/delegate';\n\n// List of providers (without handlers).\nexport const CORE_SHAREDFILES_PROVIDERS: any[] = [\n    CoreSharedFilesProvider,\n    CoreSharedFilesHelperProvider\n];\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: CORE_SHAREDFILES_PROVIDERS.concat([\n        CoreSharedFilesUploadHandler\n    ])\n})\nexport class CoreSharedFilesModule {\n    constructor(platform: Platform, delegate: CoreFileUploaderDelegate, handler: CoreSharedFilesUploadHandler,\n            helper: CoreSharedFilesHelperProvider) {\n        // Register the handler.\n        delegate.registerHandler(handler);\n\n        if (platform.is('ios')) {\n            // Check if there are new files at app start and when the app is resumed.\n            helper.searchIOSNewSharedFiles();\n            platform.resume.subscribe(() => {\n                helper.searchIOSNewSharedFiles();\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sharedfiles/sharedfiles.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreSiteHomeProvider } from './providers/sitehome';\nimport { CoreSiteHomeMainMenuHandler } from './providers/mainmenu-handler';\nimport { CoreSiteHomeIndexLinkHandler } from './providers/index-link-handler';\nimport { CoreMainMenuDelegate } from '@core/mainmenu/providers/delegate';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\n\n// List of providers (without handlers).\nexport const CORE_SITEHOME_PROVIDERS: any[] = [\n    CoreSiteHomeProvider\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    providers: CORE_SITEHOME_PROVIDERS.concat([\n        CoreSiteHomeMainMenuHandler,\n        CoreSiteHomeIndexLinkHandler\n    ]),\n    exports: []\n})\nexport class CoreSiteHomeModule {\n    constructor(mainMenuDelegate: CoreMainMenuDelegate, contentLinksDelegate: CoreContentLinksDelegate,\n            mainMenuHandler: CoreSiteHomeMainMenuHandler, indexLinkHandler: CoreSiteHomeIndexLinkHandler) {\n        mainMenuDelegate.registerHandler(mainMenuHandler);\n        contentLinksDelegate.registerHandler(indexLinkHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/sitehome.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreUserDelegate } from './providers/user-delegate';\nimport { CoreUserProfileFieldDelegate } from './providers/user-profile-field-delegate';\nimport { CoreUserProvider } from './providers/user';\nimport { CoreUserHelperProvider } from './providers/helper';\nimport { CoreUserProfileMailHandler } from './providers/user-handler';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreUserProfileLinkHandler } from './providers/user-link-handler';\nimport { CoreUserParticipantsCourseOptionHandler } from './providers/course-option-handler';\nimport { CoreUserParticipantsLinkHandler } from './providers/participants-link-handler';\nimport { CoreCourseOptionsDelegate } from '@core/course/providers/options-delegate';\nimport { CoreUserComponentsModule } from './components/components.module';\n\n// List of providers (without handlers).\nexport const CORE_USER_PROVIDERS: any[] = [\n    CoreUserDelegate,\n    CoreUserProfileFieldDelegate,\n    CoreUserProvider,\n    CoreUserHelperProvider,\n];\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        CoreUserComponentsModule\n    ],\n    providers: CORE_USER_PROVIDERS.concat([\n        CoreUserProfileMailHandler,\n        CoreUserProfileLinkHandler,\n        CoreUserParticipantsCourseOptionHandler,\n        CoreUserParticipantsLinkHandler\n    ])\n})\nexport class CoreUserModule {\n    constructor(userDelegate: CoreUserDelegate, userProfileMailHandler: CoreUserProfileMailHandler,\n            eventsProvider: CoreEventsProvider, sitesProvider: CoreSitesProvider, userProvider: CoreUserProvider,\n            contentLinksDelegate: CoreContentLinksDelegate, userLinkHandler: CoreUserProfileLinkHandler,\n            courseOptionHandler: CoreUserParticipantsCourseOptionHandler, linkHandler: CoreUserParticipantsLinkHandler,\n            courseOptionsDelegate: CoreCourseOptionsDelegate) {\n\n        userDelegate.registerHandler(userProfileMailHandler);\n        courseOptionsDelegate.registerHandler(courseOptionHandler);\n        contentLinksDelegate.registerHandler(userLinkHandler);\n        contentLinksDelegate.registerHandler(linkHandler);\n\n        eventsProvider.on(CoreEventsProvider.USER_DELETED, (data) => {\n            // Search for userid in params.\n            const params = data.params;\n            let userId = 0;\n\n            if (params.userid) {\n                userId = params.userid;\n            } else if (params.userids) {\n                userId = params.userids[0];\n            } else if (params.field === 'id' && params.values && params.values.length) {\n                userId = params.values[0];\n            } else if (params.userlist && params.userlist.length) {\n                userId = params.userlist[0].userid;\n            }\n\n            if (userId > 0) {\n                userProvider.deleteStoredUser(userId, data.siteId);\n            }\n        }, sitesProvider.getCurrentSiteId());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/user.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { Platform } from 'ionic-angular';\n\n// Ionic Native services.\nimport { Badge } from '@ionic-native/badge';\nimport { Camera } from '@ionic-native/camera';\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { Device } from '@ionic-native/device';\nimport { File } from '@ionic-native/file';\nimport { FileTransfer } from '@ionic-native/file-transfer';\nimport { Globalization } from '@ionic-native/globalization';\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\nimport { Keyboard } from '@ionic-native/keyboard';\nimport { LocalNotifications } from '@ionic-native/local-notifications';\nimport { MediaCapture } from '@ionic-native/media-capture';\nimport { Network } from '@ionic-native/network';\nimport { Push } from '@ionic-native/push';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SQLite } from '@ionic-native/sqlite';\nimport { Zip } from '@ionic-native/zip';\n\n// Services that Mock Ionic Native in browser an desktop.\nimport { CameraMock } from './providers/camera';\nimport { ClipboardMock } from './providers/clipboard';\nimport { FileMock } from './providers/file';\nimport { FileTransferMock } from './providers/file-transfer';\nimport { GlobalizationMock } from './providers/globalization';\nimport { InAppBrowserMock } from './providers/inappbrowser';\nimport { LocalNotificationsMock } from './providers/local-notifications';\nimport { MediaCaptureMock } from './providers/media-capture';\nimport { NetworkMock } from './providers/network';\nimport { ZipMock } from './providers/zip';\n\nimport { CoreEmulatorHelperProvider } from './providers/helper';\nimport { CoreEmulatorCaptureHelperProvider } from './providers/capture-helper';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreInitDelegate } from '@providers/init';\n\n// List of Ionic Native providers.\nexport const IONIC_NATIVE_PROVIDERS = [\n    Camera,\n    Clipboard,\n    File,\n    FileTransfer,\n    Globalization,\n    InAppBrowser,\n    Keyboard,\n    LocalNotifications,\n    MediaCapture,\n    Network,\n    SplashScreen,\n    StatusBar,\n    SQLite,\n    Zip\n];\n\n/**\n * This module handles the emulation of Cordova plugins in browser and desktop.\n *\n * It includes the \"mock\" of all the Ionic Native services that should be supported in browser and desktop,\n * otherwise those features would only work in a Cordova environment.\n *\n * This module also determines if the app should use the original service or the mock. In each of the \"useFactory\"\n * functions we check if the app is running in mobile or not, and then provide the right service to use.\n */\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        Badge, // @todo: Mock\n        CoreEmulatorHelperProvider,\n        CoreEmulatorCaptureHelperProvider,\n        {\n            provide: Camera,\n            deps: [CoreAppProvider, CoreEmulatorCaptureHelperProvider],\n            useFactory: (appProvider: CoreAppProvider, captureHelper: CoreEmulatorCaptureHelperProvider): Camera => {\n                return appProvider.isMobile() ? new Camera() : new CameraMock(captureHelper);\n            }\n        },\n        {\n            provide: Clipboard,\n            deps: [CoreAppProvider],\n            useFactory: (appProvider: CoreAppProvider): Clipboard => {\n                return appProvider.isMobile() ? new Clipboard() : new ClipboardMock(appProvider);\n            }\n        },\n        Device,\n        {\n            provide: File,\n            deps: [CoreAppProvider, CoreTextUtilsProvider],\n            useFactory: (appProvider: CoreAppProvider, textUtils: CoreTextUtilsProvider): File => {\n                // Use platform instead of CoreAppProvider to prevent circular dependencies.\n                return appProvider.isMobile() ? new File() : new FileMock(appProvider, textUtils);\n            }\n        },\n        {\n            provide: FileTransfer,\n            deps: [CoreAppProvider, CoreFileProvider],\n            useFactory: (appProvider: CoreAppProvider, fileProvider: CoreFileProvider): FileTransfer => {\n                // Use platform instead of CoreAppProvider to prevent circular dependencies.\n                return appProvider.isMobile() ? new FileTransfer() : new FileTransferMock(appProvider, fileProvider);\n            }\n        },\n        {\n            provide: Globalization,\n            deps: [CoreAppProvider],\n            useFactory: (appProvider: CoreAppProvider): Globalization => {\n                return appProvider.isMobile() ? new Globalization() : new GlobalizationMock(appProvider);\n            }\n        },\n        {\n            provide: InAppBrowser,\n            deps: [CoreAppProvider, CoreFileProvider, CoreUrlUtilsProvider],\n            useFactory: (appProvider: CoreAppProvider, fileProvider: CoreFileProvider, urlUtils: CoreUrlUtilsProvider)\n                    : InAppBrowser => {\n                return !appProvider.isDesktop() ? new InAppBrowser() : new InAppBrowserMock(appProvider, fileProvider, urlUtils);\n            }\n        },\n        Keyboard,\n        {\n            provide: LocalNotifications,\n            deps: [CoreAppProvider, CoreUtilsProvider],\n            useFactory: (appProvider: CoreAppProvider, utils: CoreUtilsProvider): LocalNotifications => {\n                // Use platform instead of CoreAppProvider to prevent circular dependencies.\n                return appProvider.isMobile() ? new LocalNotifications() : new LocalNotificationsMock(appProvider, utils);\n            }\n        },\n        {\n            provide: MediaCapture,\n            deps: [CoreAppProvider, CoreEmulatorCaptureHelperProvider],\n            useFactory: (appProvider: CoreAppProvider, captureHelper: CoreEmulatorCaptureHelperProvider): MediaCapture => {\n                return appProvider.isMobile() ? new MediaCapture() : new MediaCaptureMock(captureHelper);\n            }\n        },\n        {\n            provide: Network,\n            deps: [Platform],\n            useFactory: (platform: Platform): Network => {\n                // Use platform instead of CoreAppProvider to prevent circular dependencies.\n                return platform.is('cordova') ? new Network() : new NetworkMock();\n            }\n        },\n        Push, // @todo: Mock\n        SplashScreen,\n        StatusBar,\n        SQLite,\n        {\n            provide: Zip,\n            deps: [CoreAppProvider, File, CoreMimetypeUtilsProvider, CoreTextUtilsProvider],\n            useFactory: (appProvider: CoreAppProvider, file: File, mimeUtils: CoreMimetypeUtilsProvider): Zip => {\n                // Use platform instead of CoreAppProvider to prevent circular dependencies.\n                return appProvider.isMobile() ? new Zip() : new ZipMock(file, mimeUtils);\n            }\n        },\n    ]\n})\nexport class CoreEmulatorModule {\n    constructor(appProvider: CoreAppProvider, initDelegate: CoreInitDelegate, helper: CoreEmulatorHelperProvider) {\n        const win = <any> window; // Convert the \"window\" to \"any\" type to be able to use non-standard properties.\n\n        // Emulate Custom URL Scheme plugin in desktop apps.\n        if (appProvider.isDesktop()) {\n            require('electron').ipcRenderer.on('mmAppLaunched', (event, url) => {\n                if (typeof win.handleOpenURL != 'undefined') {\n                    win.handleOpenURL(url);\n                }\n            });\n        }\n\n        if (!appProvider.isMobile()) {\n            // Register an init process to load the Mocks that need it.\n            initDelegate.registerProcess(helper);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/emulator.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { FileTransfer, FileTransferObject, FileUploadResult, FileTransferError } from '@ionic-native/file-transfer';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFileProvider } from '@providers/file';\n\n/**\n * Mock the File Transfer Error.\n */\nexport class FileTransferErrorMock implements FileTransferError {\n    static FILE_NOT_FOUND_ERR = 1;\n    static INVALID_URL_ERR = 2;\n    static CONNECTION_ERR = 3;\n    static ABORT_ERR = 4;\n    static NOT_MODIFIED_ERR = 5;\n\n    // tslint:disable-next-line: variable-name\n    constructor(public code: number, public source: string, public target: string, public http_status: number,\n        public body: string, public exception: string) { }\n}\n\n/**\n * Emulates the Cordova FileTransfer plugin in desktop apps and in browser.\n */\n@Injectable()\nexport class FileTransferMock extends FileTransfer {\n\n    constructor(private appProvider: CoreAppProvider, private fileProvider: CoreFileProvider) {\n        super();\n    }\n\n    /**\n     * Creates a new FileTransferObjectMock object.\n     *\n     * @return {FileTransferObjectMock}\n     */\n    create(): FileTransferObjectMock {\n        return new FileTransferObjectMock(this.appProvider, this.fileProvider);\n    }\n}\n\n/**\n * Emulates the FileTransferObject class in desktop apps and in browser.\n */\nexport class FileTransferObjectMock extends FileTransferObject {\n    progressListener: (event: ProgressEvent) => any;\n    source: string;\n    target: string;\n    xhr: XMLHttpRequest;\n    protected reject: Function;\n\n    constructor(private appProvider: CoreAppProvider, private fileProvider: CoreFileProvider) {\n        super();\n    }\n\n    /**\n     * Aborts an in-progress transfer. The onerror callback is passed a FileTransferError\n     * object which has an error code of FileTransferError.ABORT_ERR.\n     */\n    abort(): void {\n        if (this.xhr) {\n            this.xhr.abort();\n            this.reject(new FileTransferErrorMock(FileTransferErrorMock.ABORT_ERR, this.source, this.target, null, null, null));\n        }\n    }\n\n    /**\n     * Downloads a file from server.\n     *\n     * @param {string} source URL of the server to download the file, as encoded by encodeURI().\n     * @param {string} target Filesystem url representing the file on the device.\n     * @param {boolean} [trustAllHosts] If set to true, it accepts all security certificates.\n     * @param {object} [options] Optional parameters, currently only supports headers.\n     * @returns {Promise<any>} Returns a Promise that resolves to a FileEntry object.\n     */\n    download(source: string, target: string, trustAllHosts?: boolean, options?: { [s: string]: any; }): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            // Use XMLHttpRequest instead of HttpClient to support onprogress and abort.\n            const basicAuthHeader = this.getBasicAuthHeader(source),\n                xhr = new XMLHttpRequest(),\n                isDesktop = this.appProvider.isDesktop();\n            let headers = null;\n\n            this.xhr = xhr;\n            this.source = source;\n            this.target = target;\n            this.reject = reject;\n\n            if (basicAuthHeader) {\n                source = source.replace(this.getUrlCredentials(source) + '@', '');\n\n                options = options || {};\n                options.headers = options.headers || {};\n                options.headers[basicAuthHeader.name] = basicAuthHeader.value;\n            }\n\n            if (options) {\n                headers = options.headers || null;\n            }\n\n            // Prepare the request.\n            xhr.open('GET', source, true);\n            xhr.responseType = isDesktop ? 'arraybuffer' : 'blob';\n            for (const name in headers) {\n                xhr.setRequestHeader(name, headers[name]);\n            }\n\n            (<any> xhr).onprogress = (xhr, ev): void => {\n                if (this.progressListener) {\n                    this.progressListener(ev);\n                }\n            };\n\n            xhr.onerror = (err): void => {\n                reject(new FileTransferError(-1, source, target, xhr.status, xhr.statusText));\n            };\n\n            xhr.onload = (): void => {\n                // Finished dowloading the file.\n                let response = xhr.response;\n                if (!response) {\n                    reject();\n                } else {\n                    const basePath = this.fileProvider.getBasePathInstant();\n                    target = target.replace(basePath, ''); // Remove basePath from the target.\n                    target = target.replace(/%20/g, ' '); // Replace all %20 with spaces.\n                    if (isDesktop) {\n                        // In desktop we need to convert the arraybuffer into a Buffer.\n                        response = Buffer.from(<any> new Uint8Array(response));\n                    }\n\n                    this.fileProvider.writeFile(target, response).then(resolve, reject);\n                }\n            };\n\n            xhr.send();\n        });\n    }\n\n    /**\n     * Given a URL, check if it has a credentials in it and, if so, return them in a header object.\n     * This code is extracted from Cordova FileTransfer plugin.\n     *\n     * @param {string} urlString The URL to get the credentials from.\n     * @return {any} The header with the credentials, null if no credentials.\n     */\n    protected getBasicAuthHeader(urlString: string): any {\n        let header = null;\n\n        // MS Windows doesn't support credentials in http uris so we detect them by regexp and strip off from result url.\n        if (window.btoa) {\n            const credentials = this.getUrlCredentials(urlString);\n            if (credentials) {\n                const authHeader = 'Authorization',\n                    authHeaderValue = 'Basic ' + window.btoa(credentials);\n\n                header = {\n                    name: authHeader,\n                    value: authHeaderValue\n                };\n            }\n        }\n\n        return header;\n    }\n\n    /**\n     * Given an instance of XMLHttpRequest, get the response headers as an object.\n     *\n     * @param {XMLHttpRequest} xhr XMLHttpRequest instance.\n     * @return {{[s: string]: any}} Object with the headers.\n     */\n    protected getHeadersAsObject(xhr: XMLHttpRequest): { [s: string]: any } {\n        const headersString = xhr.getAllResponseHeaders(),\n            result = {};\n\n        if (headersString) {\n            const headers = headersString.split('\\n');\n            for (const i in headers) {\n                const headerString = headers[i],\n                    separatorPos = headerString.indexOf(':');\n                if (separatorPos != -1) {\n                    result[headerString.substr(0, separatorPos)] = headerString.substr(separatorPos + 1).trim();\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Get the credentials from a URL.\n     * This code is extracted from Cordova FileTransfer plugin.\n     *\n     * @param {string} urlString The URL to get the credentials from.\n     * @return {string} Retrieved credentials.\n     */\n    protected getUrlCredentials(urlString: string): string {\n        const credentialsPattern = /^https?\\:\\/\\/(?:(?:(([^:@\\/]*)(?::([^@\\/]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?).*$/,\n            credentials = credentialsPattern.exec(urlString);\n\n        return credentials && credentials[1];\n    }\n\n    /**\n     * Registers a listener that gets called whenever a new chunk of data is transferred.\n     *\n     * @param {Function} listener Listener that takes a progress event.\n     */\n    onProgress(listener: (event: ProgressEvent) => any): void {\n        this.progressListener = listener;\n    }\n\n    /**\n     * Sends a file to a server.\n     *\n     * @param {string} fileUrl Filesystem URL representing the file on the device or a data URI.\n     * @param {string} url URL of the server to receive the file, as encoded by encodeURI().\n     * @param {FileUploadOptions} [options] Optional parameters.\n     * @param {boolean} [trustAllHosts] If set to true, it accepts all security certificates.\n     * @returns {Promise<FileUploadResult>} Promise that resolves to a FileUploadResult and rejects with FileTransferError.\n     */\n    upload(fileUrl: string, url: string, options?: FileUploadOptions, trustAllHosts?: boolean): Promise<FileUploadResult> {\n        return new Promise((resolve, reject): void => {\n            const basicAuthHeader = this.getBasicAuthHeader(url);\n            let fileKey = null,\n                fileName = null,\n                params = null,\n                headers = null,\n                httpMethod = null;\n\n            if (basicAuthHeader) {\n                url = url.replace(this.getUrlCredentials(url) + '@', '');\n\n                options = options || {};\n                options.headers = options.headers || {};\n                options.headers[basicAuthHeader.name] = basicAuthHeader.value;\n            }\n\n            if (options) {\n                fileKey = options.fileKey;\n                fileName = options.fileName;\n                headers = options.headers;\n                httpMethod = options.httpMethod || 'POST';\n\n                if (httpMethod.toUpperCase() == 'PUT') {\n                    httpMethod = 'PUT';\n                } else {\n                    httpMethod = 'POST';\n                }\n\n                if (options.params) {\n                    params = options.params;\n                } else {\n                    params = {};\n                }\n            }\n\n            // Add fileKey and fileName to the headers.\n            headers = headers || {};\n            if (!headers['Content-Disposition']) {\n                headers['Content-Disposition'] = 'form-data;' + (fileKey ? ' name=\"' + fileKey + '\";' : '') +\n                    (fileName ? ' filename=\"' + fileName + '\"' : '');\n            }\n\n            // Adding a Content-Type header with the mimeType makes the request fail (it doesn't detect the token in the params).\n            // Don't include this header, and delete it if it's supplied.\n            delete headers['Content-Type'];\n\n            // Get the file to upload.\n            this.fileProvider.getFile(fileUrl).then((fileEntry) => {\n                return this.fileProvider.getFileObjectFromFileEntry(fileEntry);\n            }).then((file) => {\n                // Use XMLHttpRequest instead of HttpClient to support onprogress and abort.\n                const xhr = new XMLHttpRequest();\n                xhr.open(httpMethod || 'POST', url);\n                for (const name in headers) {\n                    // Filter \"unsafe\" headers.\n                    if (name != 'Connection') {\n                        xhr.setRequestHeader(name, headers[name]);\n                    }\n                }\n\n                xhr.onprogress = (ev: ProgressEvent): any => {\n                    if (this.progressListener) {\n                        this.progressListener(ev);\n                    }\n                };\n\n                this.xhr = xhr;\n                this.source = fileUrl;\n                this.target = url;\n                this.reject = reject;\n\n                xhr.onerror = (): void => {\n                    reject(new FileTransferError(-1, fileUrl, url, xhr.status, xhr.statusText));\n                };\n\n                xhr.onload = (): void => {\n                    // Finished uploading the file.\n                    resolve({\n                        bytesSent: file.size,\n                        responseCode: xhr.status,\n                        response: xhr.response,\n                        headers: this.getHeadersAsObject(xhr)\n                    });\n                };\n\n                // Create a form data to send params and the file.\n                const fd = new FormData();\n                for (const name in params) {\n                    fd.append(name, params[name]);\n                }\n                fd.append('file', file);\n\n                xhr.send(fd);\n            }).catch(reject);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/file-transfer.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// electron (ignored)\n// module id = 623\n// module chunks = 60","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Input, OnInit, ElementRef } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreSitePluginsPluginContentComponent } from '../components/plugin-content/plugin-content';\nimport { CoreSitePluginsCallWSBaseDirective } from './call-ws-directive';\n\n/**\n * Base class for directives to call a WS when the element is clicked.\n *\n * The directives that inherit from this class will call a WS method when the element is clicked.\n *\n * @see CoreSitePluginsCallWSBaseDirective\n */\nexport class CoreSitePluginsCallWSOnClickBaseDirective extends CoreSitePluginsCallWSBaseDirective implements OnInit {\n    @Input() confirmMessage: string; // Message to confirm the action. If not supplied, no confirmation. If empty, default message.\n\n    constructor(element: ElementRef, protected translate: TranslateService, protected domUtils: CoreDomUtilsProvider,\n            protected sitePluginsProvider: CoreSitePluginsProvider,\n            protected parentContent: CoreSitePluginsPluginContentComponent) {\n        super(element, translate, domUtils, sitePluginsProvider, parentContent);\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.element.addEventListener('click', (ev: Event): void => {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            if (typeof this.confirmMessage != 'undefined') {\n                // Ask for confirm.\n                this.domUtils.showConfirm(this.confirmMessage || this.translate.instant('core.areyousure')).then(() => {\n                    this.callWS();\n                }).catch(() => {\n                    // User cancelled, ignore.\n                });\n            } else {\n                this.callWS();\n            }\n        });\n    }\n\n    /**\n     * Call a WS.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected callWS(): Promise<any> {\n        const modal = this.domUtils.showModalLoading();\n\n        return super.callWS().finally(() => {\n            modal.dismiss();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/call-ws-click-directive.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Input, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreSitePluginsPluginContentComponent } from '../components/plugin-content/plugin-content';\nimport { Subscription } from 'rxjs';\n\n/**\n * Base class for directives that need to call a WS.\n */\nexport class CoreSitePluginsCallWSBaseDirective implements OnInit, OnDestroy {\n    @Input() name: string; // The name of the WS to call.\n    @Input() params: any; // The params for the WS call.\n    @Input() preSets: any; // The preSets for the WS call.\n    @Input() useOtherDataForWS: any[]; // Whether to include other data in the params for the WS.\n                                       // @see CoreSitePluginsProvider.loadOtherDataInArgs.\n    @Input() form: string; // ID or name to identify a form. The form will be obtained from document.forms.\n                           // If supplied and form is found, the form data will be retrieved and sent to the WS.\n\n    protected element: HTMLElement;\n    protected invalidateObserver: Subscription;\n\n    constructor(element: ElementRef, protected translate: TranslateService, protected domUtils: CoreDomUtilsProvider,\n            protected sitePluginsProvider: CoreSitePluginsProvider,\n            protected parentContent: CoreSitePluginsPluginContentComponent) {\n        this.element = element.nativeElement || element;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        if (this.parentContent && this.parentContent.invalidateObservable) {\n            this.invalidateObserver = this.parentContent.invalidateObservable.subscribe(() => {\n                this.invalidate();\n            });\n        }\n    }\n\n    /**\n     * Call a WS.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected callWS(): Promise<any> {\n        const params = this.getParamsForWS();\n\n        return this.sitePluginsProvider.callWS(this.name, params, this.preSets).then((result) => {\n            return this.wsCallSuccess(result);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'core.serverconnection', true);\n        });\n    }\n\n    /**\n     * Get the params for the WS call.\n     *\n     * @return {any} Params.\n     */\n    protected getParamsForWS(): any {\n        let params = this.params || {};\n\n        if (this.parentContent) {\n            params = this.sitePluginsProvider.loadOtherDataInArgs(params, this.parentContent.otherData, this.useOtherDataForWS);\n        }\n\n        if (this.form && document.forms[this.form]) {\n            params = Object.assign(params, this.domUtils.getDataFromForm(document.forms[this.form]));\n        }\n\n        return params;\n    }\n\n    /**\n     * Function called when the WS call is successful.\n     *\n     * @param {any} result Result of the WS call.\n     */\n    protected wsCallSuccess(result: any): void {\n        // Function to be overridden.\n    }\n\n    /**\n     * Invalidate the WS call.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    invalidate(): Promise<any> {\n        const params = this.getParamsForWS();\n\n        return this.sitePluginsProvider.invalidateCallWS(this.name, params, this.preSets);\n    }\n\n    /**\n     * Directive destroyed.\n     */\n    ngOnDestroy(): void {\n        this.invalidateObserver && this.invalidateObserver.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/call-ws-directive.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, Input, ViewChild, OnDestroy } from '@angular/core';\nimport { CoreSitePluginsProvider } from '../../providers/siteplugins';\nimport { CoreCompileHtmlComponent } from '@core/compile/components/compile-html/compile-html';\nimport { Subscription } from 'rxjs';\n\n/**\n * Component that displays a user profile field created using a site plugin.\n */\n@Component({\n    selector: 'core-site-plugins-user-profile-field',\n    templateUrl: 'user-profile-field.html',\n})\nexport class CoreSitePluginsUserProfileFieldComponent implements OnInit, OnDestroy {\n    @Input() field: any; // The profile field to be rendered.\n    @Input() signup = false; // True if editing the field in signup. Defaults to false.\n    @Input() edit = false; // True if editing the field. Defaults to false.\n    @Input() form?: any; // Form where to add the form control. Required if edit=true or signup=true.\n    @Input() registerAuth?: string; // Register auth method. E.g. 'email'.\n\n    @ViewChild(CoreCompileHtmlComponent) compileComponent: CoreCompileHtmlComponent;\n\n    content = ''; // Content.\n    jsData;\n    protected componentObserver: Subscription;\n\n    constructor(protected sitePluginsProvider: CoreSitePluginsProvider) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n\n        // Pass the input data to the component.\n        this.jsData = {\n            field: this.field,\n            signup: this.signup,\n            edit: this.edit,\n            form: this.form,\n            registerAuth: this.registerAuth\n        };\n\n        if (this.field) {\n            // Retrieve the handler data.\n            const handler = this.sitePluginsProvider.getSitePluginHandler(this.field.type || this.field.datatype),\n                handlerSchema = handler && handler.handlerSchema;\n\n            if (handlerSchema) {\n                // Load first template.\n                if (handlerSchema.methodTemplates && handlerSchema.methodTemplates.length) {\n                    this.content = handler.handlerSchema.methodTemplates[0].html;\n                }\n\n                // Wait for the instance to be created.\n                if (this.compileComponent && this.compileComponent.componentObservable &&\n                        handlerSchema.methodJSResult && handlerSchema.methodJSResult.componentInit) {\n                    this.componentObserver = this.compileComponent.componentObservable.subscribe((instance) => {\n                        if (instance) {\n                            // Instance created, call component init.\n                            handlerSchema.methodJSResult.componentInit.apply(instance);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.componentObserver && this.componentObserver.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/components/user-profile-field/user-profile-field.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Network } from '@ionic-native/network';\nimport { CoreAppProvider } from './app';\nimport { CoreConfigProvider } from './config';\nimport { CoreLoggerProvider } from './logger';\nimport { CoreUtilsProvider } from './utils/utils';\nimport { CoreConstants } from '@core/constants';\nimport { SQLiteDB } from '@classes/sqlitedb';\n\n/**\n * Interface that all cron handlers must implement.\n */\nexport interface CoreCronHandler {\n    /**\n     * A name to identify the handler.\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Returns handler's interval in milliseconds. Defaults to CoreCronDelegate.DEFAULT_INTERVAL.\n     *\n     * @return {number} Interval time (in milliseconds).\n     */\n    getInterval?(): number;\n\n    /**\n     * Check whether the process uses network or not. True if not defined.\n     *\n     * @return {boolean} Whether the process uses network or not\n     */\n    usesNetwork?(): boolean;\n\n    /**\n     * Check whether it's a synchronization process or not. True if not defined.\n     *\n     * @return {boolean} Whether it's a synchronization process or not.\n     */\n    isSync?(): boolean;\n\n    /**\n     * Check whether the sync can be executed manually. Call isSync if not defined.\n     *\n     * @return {boolean} Whether the sync can be executed manually.\n     */\n    canManualSync?(): boolean;\n\n    /**\n     * Execute the process.\n     *\n     * @param {string} [siteId] ID of the site affected. If not defined, all sites.\n     * @return {Promise<any>} Promise resolved when done. If the promise is rejected, this function will be called again often,\n     *                        it shouldn't be abused.\n     */\n    execute?(siteId?: string): Promise<any>;\n\n    /**\n     * Whether the handler is running. Used internally by the provider, there's no need to set it.\n     * @type {boolean}\n     */\n    running?: boolean;\n\n    /**\n     * Timeout ID for the handler scheduling. Used internally by the provider, there's no need to set it.\n     * @type {number}\n     */\n    timeout?: number;\n}\n\n/*\n * Service to handle cron processes. The registered processes will be executed every certain time.\n*/\n@Injectable()\nexport class CoreCronDelegate {\n    // Constants.\n    static DEFAULT_INTERVAL = 3600000; // Default interval is 1 hour.\n    static MIN_INTERVAL = 300000; // Minimum interval is 5 minutes.\n    static DESKTOP_MIN_INTERVAL = 60000; // Minimum interval in desktop is 1 minute.\n    static MAX_TIME_PROCESS = 120000; // Max time a process can block the queue. Defaults to 2 minutes.\n\n    // Variables for database.\n    protected CRON_TABLE = 'cron';\n    protected tableSchema = {\n        name: this.CRON_TABLE,\n        columns: [\n            {\n                name: 'id',\n                type: 'TEXT',\n                primaryKey: true\n            },\n            {\n                name: 'value',\n                type: 'INTEGER'\n            }\n        ]\n    };\n\n    protected logger;\n    protected appDB: SQLiteDB;\n    protected handlers: { [s: string]: CoreCronHandler } = {};\n    protected queuePromise = Promise.resolve();\n\n    constructor(logger: CoreLoggerProvider, private appProvider: CoreAppProvider, private configProvider: CoreConfigProvider,\n            private utils: CoreUtilsProvider, network: Network) {\n        this.logger = logger.getInstance('CoreCronDelegate');\n\n        this.appDB = this.appProvider.getDB();\n        this.appDB.createTableFromSchema(this.tableSchema);\n\n        // When the app is re-connected, start network handlers that were stopped.\n        network.onConnect().subscribe(() => {\n            this.startNetworkHandlers();\n        });\n    }\n\n    /**\n     * Try to execute a handler. It will schedule the next execution once done.\n     * If the handler cannot be executed or it fails, it will be re-executed after mmCoreCronMinInterval.\n     *\n     * @param {string} name Name of the handler.\n     * @param {boolean} [force] Wether the execution is forced (manual sync).\n     * @param {string}  [siteId] Site ID. If not defined, all sites.\n     * @return {Promise<any>} Promise resolved if handler is executed successfully, rejected otherwise.\n     */\n    protected checkAndExecuteHandler(name: string, force?: boolean, siteId?: string): Promise<any> {\n        if (!this.handlers[name] || !this.handlers[name].execute) {\n            // Invalid handler.\n            this.logger.debug('Cannot execute handler because is invalid: ' + name);\n\n            return Promise.reject(null);\n        }\n\n        const usesNetwork = this.handlerUsesNetwork(name),\n            isSync = !force && this.isHandlerSync(name);\n        let promise;\n\n        if (usesNetwork && !this.appProvider.isOnline()) {\n            // Offline, stop executing.\n            this.logger.debug('Cannot execute handler because device is offline: ' + name);\n            this.stopHandler(name);\n\n            return Promise.reject(null);\n        }\n\n        if (isSync) {\n            // Check network connection.\n            promise = this.configProvider.get(CoreConstants.SETTINGS_SYNC_ONLY_ON_WIFI, false).then((syncOnlyOnWifi) => {\n                return !syncOnlyOnWifi || !this.appProvider.isNetworkAccessLimited();\n            });\n        } else {\n            promise = Promise.resolve(true);\n        }\n\n        return promise.then((execute: boolean) => {\n            if (!execute) {\n                // Cannot execute in this network connection, retry soon.\n                this.logger.debug('Cannot execute handler because device is using limited connection: ' + name);\n                this.scheduleNextExecution(name, CoreCronDelegate.MIN_INTERVAL);\n\n                return Promise.reject(null);\n            }\n\n            // Add the execution to the queue.\n            this.queuePromise = this.queuePromise.catch(() => {\n                // Ignore errors in previous handlers.\n            }).then(() => {\n                return this.executeHandler(name, siteId).then(() => {\n                    this.logger.debug(`Execution of handler '${name}' was a success.`);\n\n                    return this.setHandlerLastExecutionTime(name, Date.now()).then(() => {\n                        this.scheduleNextExecution(name);\n                    });\n                }, () => {\n                    // Handler call failed. Retry soon.\n                    this.logger.debug(`Execution of handler '${name}' failed.`);\n                    this.scheduleNextExecution(name, CoreCronDelegate.MIN_INTERVAL);\n\n                    return Promise.reject(null);\n                });\n            });\n\n            return this.queuePromise;\n        });\n    }\n\n    /**\n     * Run a handler, cancelling the execution if it takes more than MAX_TIME_PROCESS.\n     *\n     * @param {string} name Name of the handler.\n     * @param {string} [siteId] Site ID. If not defined, all sites.\n     * @return {Promise<any>} Promise resolved when the handler finishes or reaches max time, rejected if it fails.\n     */\n    protected executeHandler(name: string, siteId?: string): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            let cancelTimeout;\n\n            this.logger.debug('Executing handler: ' + name);\n            // Wrap the call in Promise.resolve to make sure it's a promise.\n            Promise.resolve(this.handlers[name].execute(siteId)).then(resolve).catch(reject).finally(() => {\n                clearTimeout(cancelTimeout);\n            });\n\n            cancelTimeout = setTimeout(() => {\n                // The handler took too long. Resolve because we don't want to retry soon.\n                this.logger.debug(`Resolving execution of handler '${name}' because it took too long.`);\n                resolve();\n            }, CoreCronDelegate.MAX_TIME_PROCESS);\n        });\n    }\n\n    /**\n     * Force execution of synchronization cron tasks without waiting for the scheduled time.\n     * Please notice that some tasks may not be executed depending on the network connection and sync settings.\n     *\n     * @param {string} [siteId] Site ID. If not defined, all sites.\n     * @return {Promise<any>} Promise resolved if all handlers are executed successfully, rejected otherwise.\n     */\n    forceSyncExecution(siteId?: string): Promise<any> {\n        const promises = [];\n\n        for (const name in this.handlers) {\n            const handler = this.handlers[name];\n            if (this.isHandlerManualSync(name)) {\n                // Mark the handler as running (it might be running already).\n                handler.running = true;\n\n                // Cancel pending timeout.\n                clearTimeout(handler.timeout);\n                delete handler.timeout;\n\n                // Now force the execution of the handler.\n                promises.push(this.checkAndExecuteHandler(name, true, siteId));\n            }\n        }\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Get a handler's interval.\n     *\n     * @param {string} name Handler's name.\n     * @return {number} Handler's interval.\n     */\n    protected getHandlerInterval(name: string): number {\n        if (!this.handlers[name] || !this.handlers[name].getInterval) {\n            // Invalid, return default.\n            return CoreCronDelegate.DEFAULT_INTERVAL;\n        }\n\n        // Don't allow intervals lower than the minimum.\n        const minInterval = this.appProvider.isDesktop() ? CoreCronDelegate.DESKTOP_MIN_INTERVAL : CoreCronDelegate.MIN_INTERVAL,\n            handlerInterval = this.handlers[name].getInterval();\n\n        if (!handlerInterval) {\n            return CoreCronDelegate.DEFAULT_INTERVAL;\n        } else {\n            return Math.max(minInterval, handlerInterval);\n        }\n    }\n\n    /**\n     * Get a handler's last execution ID.\n     *\n     * @param {string} name Handler's name.\n     * @return {string} Handler's last execution ID.\n     */\n    protected getHandlerLastExecutionId(name: string): string {\n        return 'last_execution_' + name;\n    }\n\n    /**\n     * Get a handler's last execution time. If not defined, return 0.\n     *\n     * @param {string} name Handler's name.\n     * @return {Promise<number>} Promise resolved with the handler's last execution time.\n     */\n    protected getHandlerLastExecutionTime(name: string): Promise<number> {\n        const id = this.getHandlerLastExecutionId(name);\n\n        return this.appDB.getRecord(this.CRON_TABLE, { id: id }).then((entry) => {\n            const time = parseInt(entry.value, 10);\n\n            return isNaN(time) ? 0 : time;\n        }).catch(() => {\n            return 0; // Not set, return 0.\n        });\n    }\n\n    /**\n     * Check if a handler uses network. Defaults to true.\n     *\n     * @param {string} name Handler's name.\n     * @return {boolean} True if handler uses network or not defined, false otherwise.\n     */\n    protected handlerUsesNetwork(name: string): boolean {\n        if (!this.handlers[name] || !this.handlers[name].usesNetwork) {\n            // Invalid, return default.\n            return true;\n        }\n\n        return this.handlers[name].usesNetwork();\n    }\n\n    /**\n     * Check if there is any manual sync handler registered.\n     *\n     * @return {boolean} Whether it has at least 1 manual sync handler.\n     */\n    hasManualSyncHandlers(): boolean {\n        for (const name in this.handlers) {\n            if (this.isHandlerManualSync(name)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if there is any sync handler registered.\n     *\n     * @return {boolean} Whether it has at least 1 sync handler.\n     */\n    hasSyncHandlers(): boolean {\n        for (const name in this.handlers) {\n            if (this.isHandlerSync(name)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Check if a handler can be manually synced. Defaults will use isSync instead.\n     *\n     * @param {string} name Handler's name.\n     * @return {boolean} True if handler is a sync process and can be manually executed or not defined, false otherwise.\n     */\n    protected isHandlerManualSync(name: string): boolean {\n        if (!this.handlers[name] || !this.handlers[name].canManualSync) {\n            // Invalid, return default.\n            return this.isHandlerSync(name);\n        }\n\n        return this.handlers[name].canManualSync();\n    }\n\n    /**\n     * Check if a handler is a sync process. Defaults to true.\n     *\n     * @param {string} name Handler's name.\n     * @return {boolean} True if handler is a sync process or not defined, false otherwise.\n     */\n    protected isHandlerSync(name: string): boolean {\n        if (!this.handlers[name] || !this.handlers[name].isSync) {\n            // Invalid, return default.\n            return true;\n        }\n\n        return this.handlers[name].isSync();\n    }\n\n    /**\n     * Register a handler to be executed every certain time.\n     *\n     * @param {CoreCronHandler} handler The handler to register.\n     */\n    register(handler: CoreCronHandler): void {\n        if (!handler || !handler.name) {\n            // Invalid handler.\n            return;\n        }\n        if (typeof this.handlers[handler.name] != 'undefined') {\n            this.logger.debug(`The cron handler '${handler.name}' is already registered.`);\n\n            return;\n        }\n\n        this.logger.debug(`Register handler '${handler.name}' in cron.`);\n\n        handler.running = false;\n        this.handlers[handler.name] = handler;\n\n        // Start the handler.\n        this.startHandler(handler.name);\n    }\n\n    /**\n     * Schedule a next execution for a handler.\n     *\n     * @param {string} name Name of the handler.\n     * @param {number} [time] Time to the next execution. If not supplied it will be calculated using the last execution and\n     *                        the handler's interval. This param should be used only if it's really necessary.\n     */\n    protected scheduleNextExecution(name: string, time?: number): void {\n        if (!this.handlers[name]) {\n            // Invalid handler.\n            return;\n        }\n        if (this.handlers[name].timeout) {\n            // There's already a pending timeout.\n            return;\n        }\n\n        let promise;\n\n        if (time) {\n            promise = Promise.resolve(time);\n        } else {\n            // Get last execution time to check when do we need to execute it.\n            promise = this.getHandlerLastExecutionTime(name).then((lastExecution) => {\n                const interval = this.getHandlerInterval(name),\n                    nextExecution = lastExecution + interval;\n\n                return nextExecution - Date.now();\n            });\n        }\n\n        promise.then((nextExecution) => {\n            this.logger.debug(`Scheduling next execution of handler '${name}' in '${nextExecution}' ms`);\n            if (nextExecution < 0) {\n                nextExecution = 0; // Big negative numbers aren't executed immediately.\n            }\n\n            this.handlers[name].timeout = setTimeout(() => {\n                delete this.handlers[name].timeout;\n                this.checkAndExecuteHandler(name);\n            }, nextExecution);\n        });\n    }\n\n    /**\n     * Set a handler's last execution time.\n     *\n     * @param {string} name Handler's name.\n     * @param {number} time Time to set.\n     * @return {Promise}    Promise resolved when the execution time is saved.\n     */\n    protected setHandlerLastExecutionTime(name: string, time: number): Promise<any> {\n        const id = this.getHandlerLastExecutionId(name),\n            entry = {\n                id: id,\n                value: time\n            };\n\n        return this.appDB.insertOrUpdateRecord(this.CRON_TABLE, entry, { id: id });\n    }\n\n    /**\n     * Start running a handler periodically.\n     *\n     * @param {string} name Name of the handler.\n     */\n    protected startHandler(name: string): void {\n        if (!this.handlers[name]) {\n            // Invalid handler.\n            this.logger.debug(`Cannot start handler '${name}', is invalid.`);\n\n            return;\n        }\n\n        if (this.handlers[name].running) {\n            this.logger.debug(`Handler '${name}', is already running.`);\n\n            return;\n        }\n\n        this.handlers[name].running = true;\n\n        this.scheduleNextExecution(name);\n    }\n\n    /**\n     * Start running periodically the handlers that use network.\n     */\n    startNetworkHandlers(): void {\n        for (const name in this.handlers) {\n            if (this.handlerUsesNetwork(name)) {\n                this.startHandler(name);\n            }\n        }\n    }\n\n    /**\n     * Stop running a handler periodically.\n     *\n     * @param {string} name Name of the handler.\n     */\n    protected stopHandler(name: string): void {\n        if (!this.handlers[name]) {\n            // Invalid handler.\n            this.logger.debug(`Cannot stop handler '${name}', is invalid.`);\n\n            return;\n        }\n\n        if (!this.handlers[name].running) {\n            this.logger.debug(`Cannot stop handler '${name}', it's not running.`);\n\n            return;\n        }\n\n        this.handlers[name].running = false;\n        clearTimeout(this.handlers[name].timeout);\n        delete this.handlers[name].timeout;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/cron.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Directive to render a checkbox user profile field.\n */\n@Component({\n    selector: 'addon-user-profile-field-checkbox',\n    templateUrl: 'checkbox.html'\n})\nexport class AddonUserProfileFieldCheckboxComponent implements OnInit {\n    @Input() field: any; // The profile field to be rendered.\n    @Input() edit = false; // True if editing the field. Defaults to false.\n    @Input() disabled = false; // True if disabled. Defaults to false.\n    @Input() form: FormGroup; // Form where to add the form control.\n\n    constructor(private fb: FormBuilder, protected utils: CoreUtilsProvider) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        const field = this.field;\n\n        if (field && this.edit && this.form) {\n            field.modelName = 'profile_field_' + field.shortname;\n\n            // Initialize the value.\n            const formData = {\n                value: this.utils.isTrueOrOne(field.defaultdata),\n                disabled: this.disabled\n            };\n            this.form.addControl(field.modelName, this.fb.control(formData,\n                field.required && !field.locked ? Validators.requiredTrue : null));\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/checkbox/component/checkbox.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Directive to render a datetime user profile field.\n */\n@Component({\n    selector: 'addon-user-profile-field-datetime',\n    templateUrl: 'datetime.html'\n})\nexport class AddonUserProfileFieldDatetimeComponent implements OnInit {\n    @Input() field: any; // The profile field to be rendered.\n    @Input() edit = false; // True if editing the field. Defaults to false.\n    @Input() disabled = false; // True if disabled. Defaults to false.\n    @Input() form?: FormGroup; // Form where to add the form control.\n\n    constructor(private fb: FormBuilder, private timeUtils: CoreTimeUtilsProvider, protected utils: CoreUtilsProvider) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        const field = this.field;\n        let year;\n\n        if (field && this.edit && this.form) {\n            field.modelName = 'profile_field_' + field.shortname;\n\n            // Check if it's only date or it has time too.\n            const hasTime = this.utils.isTrueOrOne(field.param3);\n            field.format = hasTime ? this.timeUtils.getLocalizedDateFormat('LLL') : this.timeUtils.getLocalizedDateFormat('LL');\n\n            // Check min value.\n            if (field.param1) {\n                year = parseInt(field.param1, 10);\n                if (year) {\n                    field.min = year;\n                }\n            }\n\n            // Check max value.\n            if (field.param2) {\n                year = parseInt(field.param2, 10);\n                if (year) {\n                    field.max = year;\n                }\n            }\n\n            const formData = {\n                value: field.defaultdata,\n                disabled: this.disabled\n            };\n            this.form.addControl(field.modelName, this.fb.control(formData,\n                field.required && !field.locked ? Validators.required : null));\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/datetime/component/datetime.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n/**\n * Directive to render a menu user profile field.\n */\n@Component({\n    selector: 'addon-user-profile-field-menu',\n    templateUrl: 'menu.html'\n})\nexport class AddonUserProfileFieldMenuComponent implements OnInit {\n    @Input() field: any; // The profile field to be rendered.\n    @Input() edit = false; // True if editing the field. Defaults to false.\n    @Input() disabled = false; // True if disabled. Defaults to false.\n    @Input() form?: FormGroup; // Form where to add the form control.\n\n    constructor(private fb: FormBuilder) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        const field = this.field;\n\n        if (field && this.edit && this.form) {\n            field.modelName = 'profile_field_' + field.shortname;\n\n            // Parse options.\n            if (field.param1) {\n                field.options = field.param1.split(/\\r\\n|\\r|\\n/g);\n            } else {\n                field.options = [];\n            }\n\n            const formData = {\n                value: field.defaultdata,\n                disabled: this.disabled\n            };\n            // Initialize the value using default data.\n            this.form.addControl(field.modelName, this.fb.control(formData,\n                field.required && !field.locked ? Validators.required : null));\n        }\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/menu/component/menu.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Directive to render a text user profile field.\n */\n@Component({\n    selector: 'addon-user-profile-field-text',\n    templateUrl: 'text.html'\n})\nexport class AddonUserProfileFieldTextComponent implements OnInit {\n    @Input() field: any; // The profile field to be rendered.\n    @Input() edit = false; // True if editing the field. Defaults to false.\n    @Input() disabled = false; // True if disabled. Defaults to false.\n    @Input() form?: FormGroup; // Form where to add the form control.\n\n    constructor(private fb: FormBuilder, protected utils: CoreUtilsProvider) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        const field = this.field;\n\n        if (field && this.edit && this.form) {\n            field.modelName = 'profile_field_' + field.shortname;\n\n            // Check max length.\n            if (field.param2) {\n                field.maxlength = parseInt(field.param2, 10) || '';\n            }\n\n            // Check if it's a password or text.\n            field.inputType = this.utils.isTrueOrOne(field.param3) ? 'password' : 'text';\n\n            const formData = {\n                value: field.defaultdata,\n                disabled: this.disabled\n            };\n            // Initialize the value using default data.\n            this.form.addControl(field.modelName, this.fb.control(formData,\n                field.required && !field.locked ? Validators.required : null));\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/text/component/text.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n/**\n * Directive to render a textarea user profile field.\n */\n@Component({\n    selector: 'addon-user-profile-field-textarea',\n    templateUrl: 'textarea.html'\n})\nexport class AddonUserProfileFieldTextareaComponent implements OnInit {\n    @Input() field: any; // The profile field to be rendered.\n    @Input() edit = false; // True if editing the field. Defaults to false.\n    @Input() disabled = false; // True if disabled. Defaults to false.\n    @Input() form?: FormGroup; // Form where to add the form control.\n\n    control: FormControl;\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        const field = this.field;\n\n        if (field && this.edit && this.form) {\n            field.modelName = 'profile_field_' + field.shortname;\n\n            const formData = {\n                value: field.defaultdata,\n                disabled: this.disabled\n            };\n\n            this.control = new FormControl(formData, field.required && !field.locked ? Validators.required : null);\n            this.form.addControl(field.modelName, this.control);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/textarea/component/textarea.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { CoreUserDelegate, CoreUserProfileHandler, CoreUserProfileHandlerData } from '@core/user/providers/user-delegate';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { AddonMessagesProvider } from './messages';\nimport { AddonMessagesBlockContactUserHandler } from './user-block-contact-handler';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Profile add/remove contact handler.\n */\n@Injectable()\nexport class AddonMessagesAddContactUserHandler implements CoreUserProfileHandler, OnDestroy {\n    /**\n     * Update handler information event.\n     * @type {string}\n     */\n    static UPDATED_EVENT = 'AddonMessagesAddContactUserHandler_updated_event';\n\n    name = 'AddonMessages:addContact';\n    priority = 800;\n    type = CoreUserDelegate.TYPE_ACTION;\n\n    protected disabled = false;\n    protected updateObs: any;\n\n    constructor(protected sitesProvider: CoreSitesProvider,\n            private messagesProvider: AddonMessagesProvider, protected eventsProvider: CoreEventsProvider,\n            private domUtils: CoreDomUtilsProvider, private translate: TranslateService) {\n\n        this.updateObs = eventsProvider.on(AddonMessagesBlockContactUserHandler.UPDATED_EVENT, (data) => {\n            this.checkButton(data.userId);\n        });\n    }\n\n    /**\n     * Check if handler is enabled.\n     *\n     * @return {Promise<boolean>} Promise resolved with true if enabled, rejected or resolved with false otherwise.\n     */\n    isEnabled(): Promise<boolean> {\n        return this.messagesProvider.isPluginEnabled();\n    }\n\n    /**\n     * Check if handler is enabled for this user in this context.\n     *\n     * @param {any} user          User to check.\n     * @param {number} courseId   Course ID.\n     * @param  {any} [navOptions] Course navigation options for current user. See $mmCourses#getUserNavigationOptions.\n     * @param  {any} [admOptions] Course admin options for current user. See $mmCourses#getUserAdministrationOptions.\n     * @return  {boolean|Promise<boolean>}   Promise resolved with true if enabled, resolved with false otherwise.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        return user.id != this.sitesProvider.getCurrentSiteUserId();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreUserProfileHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData {\n        this.checkButton(user.id);\n\n        return {\n            icon: '',\n            title: '',\n            spinner: false,\n            class: '',\n            action: (event, navCtrl, user, courseId): void => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                if (this.disabled) {\n                    return;\n                }\n                this.disabled = true;\n                this.updateButton({spinner: true});\n\n                this.messagesProvider.isContact(user.id).then((isContact) => {\n                    if (isContact) {\n                        const template = this.translate.instant('addon.messages.removecontactconfirm'),\n                            title = this.translate.instant('addon.messages.removecontact');\n\n                        return this.domUtils.showConfirm(template, title, title).then(() => {\n                            return this.messagesProvider.removeContact(user.id);\n                        }, () => {\n                            // Ignore on cancel.\n                        });\n                    } else {\n                        return this.messagesProvider.addContact(user.id);\n                    }\n                }).catch((error) => {\n                    this.domUtils.showErrorModalDefault(error, 'core.error', true);\n                }).finally(() => {\n                    this.eventsProvider.trigger(AddonMessagesAddContactUserHandler.UPDATED_EVENT, {userId: user.id});\n                    this.checkButton(user.id).finally(() => {\n                        this.disabled = false;\n                    });\n                });\n\n            }\n        };\n    }\n\n    /**\n     * Update Button with avalaible data.\n     * @param {number} userId User Id to update.\n     * @return {Promise<void>}   Promise resolved when done.\n     */\n    protected checkButton(userId: number): Promise<void> {\n        this.updateButton({spinner: true});\n\n        return this.messagesProvider.isContact(userId).then((isContact) => {\n            if (isContact) {\n                this.updateButton({\n                    title: 'addon.messages.removecontact',\n                    class: 'addon-messages-removecontact-handler',\n                    icon: 'remove',\n                    hidden: false,\n                    spinner: false\n                });\n            } else {\n                this.updateButton({\n                    title: 'addon.messages.addcontact',\n                    class: 'addon-messages-addcontact-handler',\n                    icon: 'add',\n                    hidden: false,\n                    spinner: false\n                });\n            }\n        }).catch(() => {\n            // This fails for some reason, let's just hide the button.\n            this.updateButton({hidden: true});\n        });\n    }\n\n    /**\n     * Triggers the event to update the handler information.\n     * @param {any} data Data that should be updated.\n     */\n    protected updateButton(data: any): void {\n        // This fails for some reason, let's just hide the button.\n        this.eventsProvider.trigger(CoreUserDelegate.UPDATE_HANDLER_EVENT, { handler: this.name, data: data });\n    }\n\n    /**\n     * Destroyed method.\n     */\n    ngOnDestroy(): void {\n        this.updateObs && this.updateObs.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/user-add-contact-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { CoreUserDelegate, CoreUserProfileHandler, CoreUserProfileHandlerData } from '@core/user/providers/user-delegate';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { AddonMessagesProvider } from './messages';\nimport { AddonMessagesAddContactUserHandler } from './user-add-contact-handler';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Profile block/unblock contact handler.\n */\n@Injectable()\nexport class AddonMessagesBlockContactUserHandler implements CoreUserProfileHandler, OnDestroy {\n    /**\n     * Update handler information event.\n     * @type {string}\n     */\n    static UPDATED_EVENT = 'AddonMessagesBlockContactUserHandler_updated_event';\n\n    name = 'AddonMessages:blockContact';\n    priority = 600;\n    type = CoreUserDelegate.TYPE_ACTION;\n\n    protected disabled = false;\n    protected updateObs: any;\n\n    constructor(protected sitesProvider: CoreSitesProvider, private messagesProvider: AddonMessagesProvider,\n            protected eventsProvider: CoreEventsProvider, private domUtils: CoreDomUtilsProvider,\n            private translate: TranslateService) {\n\n        this.updateObs = eventsProvider.on(AddonMessagesAddContactUserHandler.UPDATED_EVENT, (data) => {\n            this.checkButton(data.userId);\n        });\n    }\n\n    /**\n     * Check if handler is enabled.\n     *\n     * @return {Promise<boolean>} Promise resolved with true if enabled, rejected or resolved with false otherwise.\n     */\n    isEnabled(): Promise<boolean> {\n        return this.messagesProvider.isPluginEnabled();\n    }\n\n    /**\n     * Check if handler is enabled for this user in this context.\n     *\n     * @param {any} user          User to check.\n     * @param {number} courseId   Course ID.\n     * @param  {any} [navOptions] Course navigation options for current user. See $mmCourses#getUserNavigationOptions.\n     * @param  {any} [admOptions] Course admin options for current user. See $mmCourses#getUserAdministrationOptions.\n     * @return  {boolean|Promise<boolean>}   Promise resolved with true if enabled, resolved with false otherwise.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        return user.id != this.sitesProvider.getCurrentSiteUserId();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreUserProfileHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData {\n\n        this.checkButton(user.id);\n\n        return {\n            icon: '',\n            title: '',\n            spinner: false,\n            class: '',\n            action: (event, navCtrl, user, courseId): void => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                if (this.disabled) {\n                    return;\n                }\n                this.disabled = true;\n                this.updateButton({spinner: true});\n\n                this.messagesProvider.isBlocked(user.id).then((isBlocked) => {\n                    if (isBlocked) {\n                        return this.messagesProvider.unblockContact(user.id);\n                    } else {\n                        const template = this.translate.instant('addon.messages.blockcontactconfirm'),\n                            title = this.translate.instant('addon.messages.blockcontact');\n\n                        return this.domUtils.showConfirm(template, title, title).then(() => {\n                            return this.messagesProvider.blockContact(user.id);\n                        }, () => {\n                            // Ignore on cancel.\n                        });\n                    }\n                }).catch((error) => {\n                    this.domUtils.showErrorModalDefault(error, 'core.error', true);\n                }).finally(() => {\n                    this.eventsProvider.trigger(AddonMessagesBlockContactUserHandler.UPDATED_EVENT, {userId: user.id});\n                    this.checkButton(user.id).finally(() => {\n                        this.disabled = false;\n                    });\n                });\n\n            }\n        };\n    }\n\n    /**\n     * Update Button with avalaible data.\n     * @param {number} userId User Id to update.\n     * @return {Promise<void>}   Promise resolved when done.\n     */\n    protected checkButton(userId: number): Promise<void> {\n        this.updateButton({spinner: true});\n\n        return this.messagesProvider.isBlocked(userId).then((isBlocked) => {\n            if (isBlocked) {\n                this.updateButton({\n                    title: 'addon.messages.unblockcontact',\n                    class: 'addon-messages-unblockcontact-handler',\n                    icon: 'checkmark-circle',\n                    hidden: false,\n                    spinner: false\n                });\n            } else {\n                this.updateButton({\n                    title: 'addon.messages.blockcontact',\n                    class: 'addon-messages-blockcontact-handler',\n                    icon: 'close-circle',\n                    hidden: false,\n                    spinner: false\n                });\n            }\n        }).catch(() => {\n            // This fails for some reason, let's just hide the button.\n            this.updateButton({hidden: true});\n        });\n    }\n\n    /**\n     * Triggers the event to update the handler information.\n     * @param {any} data Data that should be updated.\n     */\n    protected updateButton(data: any): void {\n        // This fails for some reason, let's just hide the button.\n        this.eventsProvider.trigger(CoreUserDelegate.UPDATE_HANDLER_EVENT, { handler: this.name, data: data });\n    }\n\n    /**\n     * Destroyed method.\n     */\n    ngOnDestroy(): void {\n        this.updateObs && this.updateObs.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/user-block-contact-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { CoreCoursesCourseProgressComponent } from '../components/course-progress/course-progress';\nimport { CoreCoursesCourseListItemComponent } from '../components/course-list-item/course-list-item';\nimport { CoreCoursesOverviewEventsComponent } from '../components/overview-events/overview-events';\n\n@NgModule({\n    declarations: [\n        CoreCoursesCourseProgressComponent,\n        CoreCoursesCourseListItemComponent,\n        CoreCoursesOverviewEventsComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule\n    ],\n    providers: [\n    ],\n    exports: [\n        CoreCoursesCourseProgressComponent,\n        CoreCoursesCourseListItemComponent,\n        CoreCoursesOverviewEventsComponent\n    ]\n})\nexport class CoreCoursesComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Service that provides some features regarding lists of courses and categories.\n */\n@Injectable()\nexport class AddonCalendarHelperProvider {\n    protected logger;\n\n    protected EVENTICONS = {\n        course: 'ionic',\n        group: 'people',\n        site: 'globe',\n        user: 'person',\n        category: 'albums'\n    };\n\n    constructor(logger: CoreLoggerProvider, private courseProvider: CoreCourseProvider) {\n        this.logger = logger.getInstance('AddonCalendarHelperProvider');\n    }\n\n    /**\n     * Convenience function to format some event data to be rendered.\n     *\n     * @param {any} e Event to format.\n     */\n    formatEventData(e: any): void {\n        e.icon = this.EVENTICONS[e.eventtype] || false;\n        if (!e.icon) {\n            e.icon = this.courseProvider.getModuleIconSrc(e.modulename);\n            e.moduleIcon = e.icon;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreCourseComponentsModule } from '@core/course/components/components.module';\nimport { CoreSiteHomeIndexComponent } from './index/index';\nimport { CoreSiteHomeAllCourseListComponent } from './all-course-list/all-course-list';\nimport { CoreSiteHomeCategoriesComponent } from './categories/categories';\nimport { CoreSiteHomeCourseSearchComponent } from './course-search/course-search';\nimport { CoreSiteHomeEnrolledCourseListComponent } from './enrolled-course-list/enrolled-course-list';\nimport { CoreSiteHomeNewsComponent } from './news/news';\n\n@NgModule({\n    declarations: [\n        CoreSiteHomeIndexComponent,\n        CoreSiteHomeAllCourseListComponent,\n        CoreSiteHomeCategoriesComponent,\n        CoreSiteHomeCourseSearchComponent,\n        CoreSiteHomeEnrolledCourseListComponent,\n        CoreSiteHomeNewsComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreCourseComponentsModule\n    ],\n    exports: [\n        CoreSiteHomeIndexComponent,\n        CoreSiteHomeAllCourseListComponent,\n        CoreSiteHomeCategoriesComponent,\n        CoreSiteHomeCourseSearchComponent,\n        CoreSiteHomeEnrolledCourseListComponent,\n        CoreSiteHomeNewsComponent\n    ]\n})\nexport class CoreSiteHomeComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreGradesCourseComponent } from './course/course';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        CoreGradesCourseComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule\n    ],\n    providers: [\n    ],\n    exports: [\n        CoreGradesCourseComponent\n    ],\n    entryComponents: [\n        CoreGradesCourseComponent\n    ]\n})\nexport class CoreGradesComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLangProvider } from '@providers/lang';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreConfigConstants } from '../../../configconstants';\n\n/**\n * Custom main menu item.\n */\nexport interface CoreMainMenuCustomItem {\n    /**\n     * Type of the item: app, inappbrowser, browser or embedded.\n     * @type {string}\n     */\n    type: string;\n\n    /**\n     * Url of the item.\n     * @type {string}\n     */\n    url: string;\n\n    /**\n     * Label to display for the item.\n     * @type {string}\n     */\n    label: string;\n\n    /**\n     * Name of the icon to display for the item.\n     * @type {string}\n     */\n    icon: string;\n}\n\n/**\n * Service that provides some features regarding Main Menu.\n */\n@Injectable()\nexport class CoreMainMenuProvider {\n    static NUM_MAIN_HANDLERS = 4;\n\n    constructor(private langProvider: CoreLangProvider, private sitesProvider: CoreSitesProvider) { }\n\n    /**\n     * Get a list of custom menu items for a certain site.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<CoreMainMenuCustomItem[]>} List of custom menu items.\n     */\n    getCustomMenuItems(siteId?: string): Promise<CoreMainMenuCustomItem[]> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const itemsString = site.getStoredConfig('tool_mobile_custommenuitems'),\n                map = {},\n                result = [];\n\n            let items,\n                position = 0; // Position of each item, to keep the same order as it's configured.\n\n            if (!itemsString || typeof itemsString != 'string') {\n                // Setting not valid.\n                return result;\n            }\n\n            // Add items to the map.\n            items = itemsString.split(/(?:\\r\\n|\\r|\\n)/);\n            items.forEach((item) => {\n                const values = item.split('|'),\n                    label = values[0] ? values[0].trim() : values[0],\n                    url = values[1] ? values[1].trim() : values[1],\n                    type = values[2] ? values[2].trim() : values[2],\n                    lang = (values[3] ? values[3].trim() : values[3]) || 'none';\n                let id,\n                    icon = values[4] ? values[4].trim() : values[4];\n\n                if (!label || !url || !type) {\n                    // Invalid item, ignore it.\n                    return;\n                }\n\n                id = url + '#' + type;\n                if (!icon) {\n                    // Icon not defined, use default one.\n                    icon = type == 'embedded' ? 'qr-scanner' : 'link';\n                }\n\n                if (!map[id]) {\n                    // New entry, add it to the map.\n                    map[id] = {\n                        url: url,\n                        type: type,\n                        position: position,\n                        labels: {}\n                    };\n                    position++;\n                }\n\n                map[id].labels[lang.toLowerCase()] = {\n                    label: label,\n                    icon: icon\n                };\n            });\n\n            if (!position) {\n                // No valid items found, stop.\n                return result;\n            }\n\n            return this.langProvider.getCurrentLanguage().then((currentLang) => {\n                const fallbackLang = CoreConfigConstants.default_lang || 'en';\n\n                // Get the right label for each entry and add it to the result.\n                for (const id in map) {\n                    const entry = map[id];\n                    let data = entry.labels[currentLang] || entry.labels[currentLang + '_only'] ||\n                            entry.labels.none || entry.labels[fallbackLang];\n\n                    if (!data) {\n                        // No valid label found, get the first one that is not \"_only\".\n                        for (const lang in entry.labels) {\n                            if (lang.indexOf('_only') == -1) {\n                                data = entry.labels[lang];\n                                break;\n                            }\n                        }\n\n                        if (!data) {\n                            // No valid label, ignore this entry.\n                            return;\n                        }\n                    }\n\n                    result[entry.position] = {\n                        url: entry.url,\n                        type: entry.type,\n                        label: data.label,\n                        icon: data.icon\n                    };\n                }\n\n                return result;\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/mainmenu/providers/mainmenu.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreCompileHtmlComponentModule } from '@core/compile/components/compile-html/compile-html.module';\nimport { CoreSitePluginsPluginContentComponent } from './plugin-content/plugin-content';\nimport { CoreSitePluginsModuleIndexComponent } from './module-index/module-index';\nimport { CoreSitePluginsCourseOptionComponent } from './course-option/course-option';\nimport { CoreSitePluginsCourseFormatComponent } from './course-format/course-format';\nimport { CoreSitePluginsUserProfileFieldComponent } from './user-profile-field/user-profile-field';\n\n@NgModule({\n    declarations: [\n        CoreSitePluginsPluginContentComponent,\n        CoreSitePluginsModuleIndexComponent,\n        CoreSitePluginsCourseOptionComponent,\n        CoreSitePluginsCourseFormatComponent,\n        CoreSitePluginsUserProfileFieldComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        CoreComponentsModule,\n        CoreCompileHtmlComponentModule,\n        TranslateModule.forChild()\n    ],\n    providers: [\n    ],\n    exports: [\n        CoreSitePluginsPluginContentComponent,\n        CoreSitePluginsModuleIndexComponent,\n        CoreSitePluginsCourseOptionComponent,\n        CoreSitePluginsCourseFormatComponent,\n        CoreSitePluginsUserProfileFieldComponent\n    ],\n    entryComponents: [\n        CoreSitePluginsModuleIndexComponent,\n        CoreSitePluginsCourseOptionComponent,\n        CoreSitePluginsCourseFormatComponent,\n        CoreSitePluginsUserProfileFieldComponent\n    ]\n})\nexport class CoreSitePluginsComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Service that provides some features regarding users information.\n */\n@Injectable()\nexport class CoreUserHelperProvider {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private translate: TranslateService) {\n        this.logger = logger.getInstance('CoreUserHelperProvider');\n    }\n\n    /**\n     * Formats a user address, concatenating address, city and country.\n     *\n     * @param {string} address Address.\n     * @param {string} city    City.\n     * @param {string} country Country.\n     * @return {string} Formatted address.\n     */\n    formatAddress(address: string, city: string, country: string): string {\n        const separator = this.translate.instant('core.listsep');\n        let values = [address, city, country];\n\n        values = values.filter((value) => {\n            return value && value.length > 0;\n        });\n\n        return values.join(separator + ' ');\n    }\n\n    /**\n     * Formats a user role list, translating and concatenating them.\n     *\n     * @param {any[]} [roles] List of user roles.\n     * @return {string} The formatted roles.\n     */\n    formatRoleList(roles?: any[]): string {\n        if (!roles || roles.length <= 0) {\n            return '';\n        }\n\n        const separator = this.translate.instant('core.listsep');\n\n        return roles.map((value) => {\n            const translation = this.translate.instant('core.user.' + value.shortname);\n\n            return translation.indexOf('core.user.') < 0 ? translation : value.shortname;\n        }).join(separator + ' ');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { trigger, style, transition, animate, keyframes } from '@angular/animations';\n\nexport const coreShowHideAnimation = trigger('coreShowHideAnimation', [\n    transition(':enter', [\n        style({opacity: 0}),\n        animate('500ms ease-in-out', style({opacity: 1}))\n    ]),\n    transition(':leave', [\n        style({opacity: 1}),\n        animate('500ms ease-in-out', style({opacity: 0}))\n    ])\n]);\n\nexport const coreSlideInOut = trigger('coreSlideInOut', [\n    // Enter animation.\n    transition('void => fromLeft', [\n        style({transform: 'translateX(0)', opacity: 1}),\n        animate(300, keyframes([\n            style({opacity: 0, transform: 'translateX(-100%)', offset: 0}),\n            style({opacity: 1, transform: 'translateX(5%)',  offset: 0.7}),\n            style({opacity: 1, transform: 'translateX(0)',     offset: 1.0})\n        ]))\n    ]),\n    // Leave animation.\n    transition('fromLeft => void', [\n        style({transform: 'translateX(-100%)', opacity: 0}),\n        animate(300, keyframes([\n            style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n            style({opacity: 1, transform: 'translateX(5%)',  offset: 0.3}),\n            style({opacity: 0, transform: 'translateX(-100%)',     offset: 1.0})\n        ]))\n    ]),\n    // Enter animation.\n    transition('void => fromRight', [\n        style({transform: 'translateX(0)', opacity: 1}),\n        animate(300, keyframes([\n            style({opacity: 0, transform: 'translateX(100%)',     offset: 0}),\n            style({opacity: 1, transform: 'translateX(-5%)', offset: 0.7}),\n            style({opacity: 1, transform: 'translateX(0)',  offset: 1.0})\n        ]))\n    ]),\n    // Leave animation.\n    transition('fromRight => void', [\n        style({transform: 'translateX(-100%)', opacity: 0}),\n        animate(300, keyframes([\n            style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n            style({opacity: 1, transform: 'translateX(-5%)',  offset: 0.3}),\n            style({opacity: 0, transform: 'translateX(100%)',     offset: 1.0})\n        ]))\n    ])\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/animations.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { NavParams, ViewController } from 'ionic-angular';\n\n/**\n * Component to display a list of courses.\n */\n@Component({\n    selector: 'core-course-picker-menu-popover',\n    templateUrl: 'course-picker-menu-popover.html'\n})\nexport class CoreCoursePickerMenuPopoverComponent {\n    courses: any[];\n    courseId = -1;\n\n    constructor(navParams: NavParams, private viewCtrl: ViewController) {\n        this.courses = navParams.get('courses') || [];\n        this.courseId = navParams.get('courseId') || -1;\n    }\n\n    /**\n     * Function called when a course is clicked.\n     *\n     * @param {Event} event Click event.\n     * @param {any} course Course object clicked.\n     * @return {boolean} Return true if success, false if error.\n     */\n    coursePicked(event: Event, course: any): boolean {\n        this.viewCtrl.dismiss(course);\n\n        return true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/course-picker-menu/course-picker-menu-popover.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonCompetencyCourseComponent } from './course/course';\n\n@NgModule({\n    declarations: [\n        AddonCompetencyCourseComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonCompetencyCourseComponent\n    ],\n    entryComponents: [\n        AddonCompetencyCourseComponent\n    ]\n})\nexport class AddonCompetencyComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreFileUploaderHelperProvider } from '@core/fileuploader/providers/helper';\nimport { AddonFilesProvider } from './files';\n\n/**\n * Service that provides some features regarding private and site files.\n */\n@Injectable()\nexport class AddonFilesHelperProvider {\n\n    constructor(private sitesProvider: CoreSitesProvider, private fileUploaderHelper: CoreFileUploaderHelperProvider,\n        private filesProvider: AddonFilesProvider, private domUtils: CoreDomUtilsProvider) { }\n\n    /**\n     * Select a file, upload it and move it to private files.\n     *\n     * @param {any} [info] Private files info. See AddonFilesProvider.getPrivateFilesInfo.\n     * @return {Promise<any>} Promise resolved when a file is uploaded, rejected otherwise.\n     */\n    uploadPrivateFile(info?: any): Promise<any> {\n        // Calculate the max size.\n        const currentSite = this.sitesProvider.getCurrentSite();\n        let maxSize = currentSite.getInfo().usermaxuploadfilesize,\n            userQuota = currentSite.getInfo().userquota;\n\n        if (userQuota === 0) {\n            // 0 means ignore user quota. In the app it is -1.\n            userQuota = -1;\n        } else if (userQuota > 0 && typeof info != 'undefined') {\n            userQuota = userQuota - info.filesizewithoutreferences;\n        }\n\n        if (typeof userQuota != 'undefined') {\n            // Use the minimum value.\n            maxSize = Math.min(maxSize, userQuota);\n        }\n\n        // Select and upload the file.\n        return this.fileUploaderHelper.selectAndUploadFile(maxSize).then((result) => {\n            if (!result) {\n                return Promise.reject(null);\n            }\n\n            // File uploaded. Move it to private files.\n            const modal = this.domUtils.showModalLoading('core.fileuploader.uploading', true);\n\n            return this.filesProvider.moveFromDraftToPrivate(result.itemid).catch((error) => {\n                this.domUtils.showErrorModalDefault(error, 'core.fileuploader.errorwhileuploading', true);\n\n                return Promise.reject(null);\n            }).finally(() => {\n                modal.dismiss();\n            });\n        }).then(() => {\n            this.domUtils.showToast('core.fileuploader.fileuploaded', true, undefined, 'core-toast-success');\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/files/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreCourseComponentsModule } from '@core/course/components/components.module';\nimport { AddonModBookIndexComponent } from './index/index';\nimport { AddonModBookTocPopoverComponent } from './toc-popover/toc-popover';\nimport { AddonModBookNavigationArrowsComponent } from './navigation-arrows/navigation-arrows';\n\n@NgModule({\n    declarations: [\n        AddonModBookIndexComponent,\n        AddonModBookTocPopoverComponent,\n        AddonModBookNavigationArrowsComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreCourseComponentsModule\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonModBookIndexComponent,\n        AddonModBookTocPopoverComponent,\n        AddonModBookNavigationArrowsComponent\n    ],\n    entryComponents: [\n        AddonModBookIndexComponent,\n        AddonModBookTocPopoverComponent\n    ]\n})\nexport class AddonModBookComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport {\n    Component, Input, OnInit, OnChanges, OnDestroy, SimpleChange, Output, EventEmitter, ViewChildren, QueryList, Injector\n} from '@angular/core';\nimport { Content } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseFormatDelegate } from '@core/course/providers/format-delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@core/course/providers/module-prefetch-delegate';\nimport { CoreDynamicComponent } from '@components/dynamic-component/dynamic-component';\n\n/**\n * Component to display course contents using a certain format. If the format isn't found, use default one.\n *\n * The inputs of this component will be shared with the course format components. Please use CoreCourseFormatDelegate\n * to register your handler for course formats.\n *\n * Example usage:\n *\n * <core-course-format [course]=\"course\" [sections]=\"sections\" (completionChanged)=\"onCompletionChange()\"></core-course-format>\n */\n@Component({\n    selector: 'core-course-format',\n    templateUrl: 'format.html'\n})\nexport class CoreCourseFormatComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() course: any; // The course to render.\n    @Input() sections: any[]; // List of course sections.\n    @Input() downloadEnabled?: boolean; // Whether the download of sections and modules is enabled.\n    @Input() initialSectionId?: number; // The section to load first (by ID).\n    @Input() initialSectionNumber?: number; // The section to load first (by number).\n    @Input() moduleId?: number; // The module ID to scroll to. Must be inside the initial selected section.\n    @Output() completionChanged?: EventEmitter<void>; // Will emit an event when any module completion changes.\n\n    @ViewChildren(CoreDynamicComponent) dynamicComponents: QueryList<CoreDynamicComponent>;\n\n    // All the possible component classes.\n    courseFormatComponent: any;\n    courseSummaryComponent: any;\n    sectionSelectorComponent: any;\n    singleSectionComponent: any;\n    allSectionsComponent: any;\n\n    // Data to pass to the components.\n    data: any = {};\n\n    displaySectionSelector: boolean;\n    selectedSection: any;\n    allSectionsId: number = CoreCourseProvider.ALL_SECTIONS_ID;\n    selectOptions: any = {};\n    loaded: boolean;\n\n    protected sectionStatusObserver;\n\n    constructor(private cfDelegate: CoreCourseFormatDelegate, translate: TranslateService, private injector: Injector,\n            private courseHelper: CoreCourseHelperProvider, private domUtils: CoreDomUtilsProvider,\n            eventsProvider: CoreEventsProvider, private sitesProvider: CoreSitesProvider, private content: Content,\n            prefetchDelegate: CoreCourseModulePrefetchDelegate) {\n\n        this.selectOptions.title = translate.instant('core.course.sections');\n        this.completionChanged = new EventEmitter();\n\n        // Listen for section status changes.\n        this.sectionStatusObserver = eventsProvider.on(CoreEventsProvider.SECTION_STATUS_CHANGED, (data) => {\n            if (this.downloadEnabled && this.sections && this.sections.length && this.course && data.sectionId &&\n                    data.courseId == this.course.id) {\n                // Check if the affected section is being downloaded.\n                // If so, we don't update section status because it'll already be updated when the download finishes.\n                const downloadId = this.courseHelper.getSectionDownloadId({ id: data.sectionId });\n                if (prefetchDelegate.isBeingDownloaded(downloadId)) {\n                    return;\n                }\n\n                // Get the affected section.\n                let section;\n                for (let i = 0; i < this.sections.length; i++) {\n                    const s = this.sections[i];\n                    if (s.id === data.sectionId) {\n                        section = s;\n                        break;\n                    }\n                }\n\n                if (!section) {\n                    // Section not found, stop.\n                    return;\n                }\n\n                // Recalculate the status.\n                this.courseHelper.calculateSectionStatus(section, this.course.id, false).then(() => {\n                    if (section.isDownloading && !prefetchDelegate.isBeingDownloaded(downloadId)) {\n                        // All the modules are now downloading, set a download all promise.\n                        this.prefetch(section, false);\n                    }\n                });\n            }\n        }, this.sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.displaySectionSelector = this.cfDelegate.displaySectionSelector(this.course);\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        this.setInputData();\n\n        if (changes.course) {\n            // Course has changed, try to get the components.\n            this.getComponents();\n        }\n\n        if (changes.sections && this.sections) {\n            if (!this.selectedSection) {\n                // There is no selected section yet, calculate which one to load.\n                if (this.initialSectionId || this.initialSectionNumber) {\n                    // We have an input indicating the section ID to load. Search the section.\n                    for (let i = 0; i < this.sections.length; i++) {\n                        const section = this.sections[i];\n                        if ((section.id && section.id == this.initialSectionId) ||\n                                (section.section && section.section == this.initialSectionNumber)) {\n                            this.loaded = true;\n                            this.sectionChanged(section);\n                            break;\n                        }\n                    }\n                } else {\n                    // No section specified, get current section.\n                    this.cfDelegate.getCurrentSection(this.course, this.sections).then((section) => {\n                        this.loaded = true;\n                        this.sectionChanged(section);\n                    });\n                }\n            } else {\n                // We have a selected section, but the list has changed. Search the section in the list.\n                let newSection;\n                for (let i = 0; i < this.sections.length; i++) {\n                    const section = this.sections[i];\n                    if (this.compareSections(section, this.selectedSection)) {\n                        newSection = section;\n                        break;\n                    }\n                }\n\n                if (!newSection) {\n                    // Section not found, calculate which one to use.\n                    newSection = this.cfDelegate.getCurrentSection(this.course, this.sections);\n                }\n                this.sectionChanged(newSection);\n            }\n        }\n\n        if (changes.downloadEnabled && this.downloadEnabled) {\n            this.calculateSectionsStatus(false);\n        }\n    }\n\n    /**\n     * Set the input data for components.\n     */\n    protected setInputData(): void {\n        this.data.course = this.course;\n        this.data.sections = this.sections;\n        this.data.initialSectionId = this.initialSectionId;\n        this.data.initialSectionNumber = this.initialSectionNumber;\n        this.data.downloadEnabled = this.downloadEnabled;\n    }\n\n    /**\n     * Get the components classes.\n     */\n    protected getComponents(): void {\n        if (this.course) {\n            if (!this.courseFormatComponent) {\n                this.cfDelegate.getCourseFormatComponent(this.injector, this.course).then((component) => {\n                    this.courseFormatComponent = component;\n                });\n            }\n            if (!this.courseSummaryComponent) {\n                this.cfDelegate.getCourseSummaryComponent(this.injector, this.course).then((component) => {\n                    this.courseSummaryComponent = component;\n                });\n            }\n            if (!this.sectionSelectorComponent) {\n                this.cfDelegate.getSectionSelectorComponent(this.injector, this.course).then((component) => {\n                    this.sectionSelectorComponent = component;\n                });\n            }\n            if (!this.singleSectionComponent) {\n                this.cfDelegate.getSingleSectionComponent(this.injector, this.course).then((component) => {\n                    this.singleSectionComponent = component;\n                });\n            }\n            if (!this.allSectionsComponent) {\n                this.cfDelegate.getAllSectionsComponent(this.injector, this.course).then((component) => {\n                    this.allSectionsComponent = component;\n                });\n            }\n        }\n    }\n\n    /**\n     * Function called when selected section changes.\n     *\n     * @param {any} newSection The new selected section.\n     */\n    sectionChanged(newSection: any): void {\n        const previousValue = this.selectedSection;\n        this.selectedSection = newSection;\n        this.data.section = this.selectedSection;\n\n        if (this.moduleId && typeof previousValue == 'undefined') {\n            setTimeout(() => {\n                this.domUtils.scrollToElementBySelector(this.content, '#core-course-module-' + this.moduleId);\n            }, 200);\n        }\n    }\n\n    /**\n     * Compare if two sections are equal.\n     *\n     * @param {any} s1 First section.\n     * @param {any} s2 Second section.\n     * @return {boolean} Whether they're equal.\n     */\n    compareSections(s1: any, s2: any): boolean {\n        return s1 && s2 ? s1.id === s2.id : s1 === s2;\n    }\n\n    /**\n     * Calculate the status of sections.\n     *\n     * @param {boolean} refresh [description]\n     */\n    protected calculateSectionsStatus(refresh?: boolean): void {\n        this.courseHelper.calculateSectionsStatus(this.sections, this.course.id, refresh).catch(() => {\n            // Ignore errors (shouldn't happen).\n        });\n    }\n\n    /**\n     * Confirm and prefetch a section. If the section is \"all sections\", prefetch all the sections.\n     *\n     * @param {Event} e Click event.\n     * @param {any} section Section to download.\n     */\n    prefetch(e: Event, section: any): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        section.isCalculating = true;\n        this.courseHelper.confirmDownloadSizeSection(this.course.id, section, this.sections).then(() => {\n            this.prefetchSection(section, true);\n        }, (error) => {\n            // User cancelled or there was an error calculating the size.\n            if (error) {\n                this.domUtils.showErrorModal(error);\n            }\n        }).finally(() => {\n            section.isCalculating = false;\n        });\n    }\n\n    /**\n     * Prefetch a section.\n     *\n     * @param {any} section The section to download.\n     * @param {boolean} [manual] Whether the prefetch was started manually or it was automatically started because all modules\n     *                           are being downloaded.\n     */\n    protected prefetchSection(section: any, manual?: boolean): void {\n        this.courseHelper.prefetchSection(section, this.course.id, this.sections).catch((error) => {\n            // Don't show error message if it's an automatic download.\n            if (!manual) {\n                return;\n            }\n\n            this.domUtils.showErrorModalDefault(error, 'core.course.errordownloadingsection', true);\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} [refresher] Refresher.\n     * @param {Function} [done] Function to call when done.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    doRefresh(refresher?: any, done?: () => void): Promise<any> {\n        const promises = [];\n\n        this.dynamicComponents.forEach((component) => {\n            promises.push(Promise.resolve(component.callComponentFunction('doRefresh', [refresher, done])));\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        if (this.sectionStatusObserver) {\n            this.sectionStatusObserver.off();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/components/format/format.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreCourseComponentsModule } from '@core/course/components/components.module';\nimport { AddonModFolderIndexComponent } from './index/index';\n\n@NgModule({\n    declarations: [\n        AddonModFolderIndexComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreCourseComponentsModule\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonModFolderIndexComponent\n    ],\n    entryComponents: [\n        AddonModFolderIndexComponent\n    ]\n})\nexport class AddonModFolderComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreCourseComponentsModule } from '@core/course/components/components.module';\nimport { AddonModPageIndexComponent } from './index/index';\n\n@NgModule({\n    declarations: [\n        AddonModPageIndexComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreCourseComponentsModule\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonModPageIndexComponent\n    ],\n    entryComponents: [\n        AddonModPageIndexComponent\n    ]\n})\nexport class AddonModPageComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreCourseComponentsModule } from '@core/course/components/components.module';\nimport { AddonModResourceIndexComponent } from './index/index';\n\n@NgModule({\n    declarations: [\n        AddonModResourceIndexComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreCourseComponentsModule\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonModResourceIndexComponent\n    ],\n    entryComponents: [\n        AddonModResourceIndexComponent\n    ]\n})\nexport class AddonModResourceComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreCourseComponentsModule } from '@core/course/components/components.module';\nimport { AddonModUrlIndexComponent } from './index/index';\n\n@NgModule({\n    declarations: [\n        AddonModUrlIndexComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreCourseComponentsModule\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonModUrlIndexComponent\n    ],\n    entryComponents: [\n        AddonModUrlIndexComponent\n    ]\n})\nexport class AddonModUrlComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/url/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nimport { shim } from 'promise.prototype.finally';\n\nshim(); // Support promise.finally.\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, OnInit, ElementRef, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Directive to auto focus an element when a view is loaded.\n *\n * You can apply it conditionallity assigning it a boolean value: <ion-input [core-auto-focus]=\"{{showKeyboard}}\">\n */\n@Directive({\n    selector: '[core-auto-focus]'\n})\nexport class CoreAutoFocusDirective implements OnInit {\n    @Input('core-auto-focus') coreAutoFocus: boolean | string = true;\n\n    protected element: HTMLElement;\n\n    constructor(element: ElementRef, private domUtils: CoreDomUtilsProvider, private utils: CoreUtilsProvider,\n            @Optional() private navCtrl: NavController) {\n        this.element = element.nativeElement || element;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        if (this.navCtrl.isTransitioning()) {\n            // Navigating to a new page. Wait for the transition to be over.\n            const subscription = this.navCtrl.viewDidEnter.subscribe(() => {\n                this.autoFocus();\n                subscription.unsubscribe();\n            });\n        } else {\n            this.autoFocus();\n        }\n    }\n\n    /**\n     * Function after the view is initialized.\n     */\n    protected autoFocus(): void {\n        const autoFocus = this.utils.isTrueOrOne(this.coreAutoFocus);\n        if (autoFocus) {\n            // If it's a ion-input or ion-textarea, search the right input to use.\n            let element = this.element;\n            if (this.element.tagName == 'ION-INPUT') {\n                element = this.element.querySelector('input') || element;\n            } else if (this.element.tagName == 'ION-TEXTAREA') {\n                element = this.element.querySelector('textarea') || element;\n            }\n\n            // Wait a bit to make sure the view is loaded.\n            setTimeout(() => {\n                this.domUtils.focusElement(element);\n            }, 200);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/auto-focus.ts","var map = {\n\t\"./af\": 372,\n\t\"./af.js\": 372,\n\t\"./ar\": 373,\n\t\"./ar-dz\": 374,\n\t\"./ar-dz.js\": 374,\n\t\"./ar-kw\": 375,\n\t\"./ar-kw.js\": 375,\n\t\"./ar-ly\": 376,\n\t\"./ar-ly.js\": 376,\n\t\"./ar-ma\": 377,\n\t\"./ar-ma.js\": 377,\n\t\"./ar-sa\": 378,\n\t\"./ar-sa.js\": 378,\n\t\"./ar-tn\": 379,\n\t\"./ar-tn.js\": 379,\n\t\"./ar.js\": 373,\n\t\"./az\": 380,\n\t\"./az.js\": 380,\n\t\"./be\": 381,\n\t\"./be.js\": 381,\n\t\"./bg\": 382,\n\t\"./bg.js\": 382,\n\t\"./bm\": 383,\n\t\"./bm.js\": 383,\n\t\"./bn\": 384,\n\t\"./bn.js\": 384,\n\t\"./bo\": 385,\n\t\"./bo.js\": 385,\n\t\"./br\": 386,\n\t\"./br.js\": 386,\n\t\"./bs\": 387,\n\t\"./bs.js\": 387,\n\t\"./ca\": 388,\n\t\"./ca.js\": 388,\n\t\"./cs\": 389,\n\t\"./cs.js\": 389,\n\t\"./cv\": 390,\n\t\"./cv.js\": 390,\n\t\"./cy\": 391,\n\t\"./cy.js\": 391,\n\t\"./da\": 392,\n\t\"./da.js\": 392,\n\t\"./de\": 393,\n\t\"./de-at\": 394,\n\t\"./de-at.js\": 394,\n\t\"./de-ch\": 395,\n\t\"./de-ch.js\": 395,\n\t\"./de.js\": 393,\n\t\"./dv\": 396,\n\t\"./dv.js\": 396,\n\t\"./el\": 397,\n\t\"./el.js\": 397,\n\t\"./en-au\": 398,\n\t\"./en-au.js\": 398,\n\t\"./en-ca\": 399,\n\t\"./en-ca.js\": 399,\n\t\"./en-gb\": 400,\n\t\"./en-gb.js\": 400,\n\t\"./en-ie\": 401,\n\t\"./en-ie.js\": 401,\n\t\"./en-nz\": 402,\n\t\"./en-nz.js\": 402,\n\t\"./eo\": 403,\n\t\"./eo.js\": 403,\n\t\"./es\": 404,\n\t\"./es-do\": 405,\n\t\"./es-do.js\": 405,\n\t\"./es-us\": 406,\n\t\"./es-us.js\": 406,\n\t\"./es.js\": 404,\n\t\"./et\": 407,\n\t\"./et.js\": 407,\n\t\"./eu\": 408,\n\t\"./eu.js\": 408,\n\t\"./fa\": 409,\n\t\"./fa.js\": 409,\n\t\"./fi\": 410,\n\t\"./fi.js\": 410,\n\t\"./fo\": 411,\n\t\"./fo.js\": 411,\n\t\"./fr\": 412,\n\t\"./fr-ca\": 413,\n\t\"./fr-ca.js\": 413,\n\t\"./fr-ch\": 414,\n\t\"./fr-ch.js\": 414,\n\t\"./fr.js\": 412,\n\t\"./fy\": 415,\n\t\"./fy.js\": 415,\n\t\"./gd\": 416,\n\t\"./gd.js\": 416,\n\t\"./gl\": 417,\n\t\"./gl.js\": 417,\n\t\"./gom-latn\": 418,\n\t\"./gom-latn.js\": 418,\n\t\"./gu\": 419,\n\t\"./gu.js\": 419,\n\t\"./he\": 420,\n\t\"./he.js\": 420,\n\t\"./hi\": 421,\n\t\"./hi.js\": 421,\n\t\"./hr\": 422,\n\t\"./hr.js\": 422,\n\t\"./hu\": 423,\n\t\"./hu.js\": 423,\n\t\"./hy-am\": 424,\n\t\"./hy-am.js\": 424,\n\t\"./id\": 425,\n\t\"./id.js\": 425,\n\t\"./is\": 426,\n\t\"./is.js\": 426,\n\t\"./it\": 427,\n\t\"./it.js\": 427,\n\t\"./ja\": 428,\n\t\"./ja.js\": 428,\n\t\"./jv\": 429,\n\t\"./jv.js\": 429,\n\t\"./ka\": 430,\n\t\"./ka.js\": 430,\n\t\"./kk\": 431,\n\t\"./kk.js\": 431,\n\t\"./km\": 432,\n\t\"./km.js\": 432,\n\t\"./kn\": 433,\n\t\"./kn.js\": 433,\n\t\"./ko\": 434,\n\t\"./ko.js\": 434,\n\t\"./ky\": 435,\n\t\"./ky.js\": 435,\n\t\"./lb\": 436,\n\t\"./lb.js\": 436,\n\t\"./lo\": 437,\n\t\"./lo.js\": 437,\n\t\"./lt\": 438,\n\t\"./lt.js\": 438,\n\t\"./lv\": 439,\n\t\"./lv.js\": 439,\n\t\"./me\": 440,\n\t\"./me.js\": 440,\n\t\"./mi\": 441,\n\t\"./mi.js\": 441,\n\t\"./mk\": 442,\n\t\"./mk.js\": 442,\n\t\"./ml\": 443,\n\t\"./ml.js\": 443,\n\t\"./mr\": 444,\n\t\"./mr.js\": 444,\n\t\"./ms\": 445,\n\t\"./ms-my\": 446,\n\t\"./ms-my.js\": 446,\n\t\"./ms.js\": 445,\n\t\"./my\": 447,\n\t\"./my.js\": 447,\n\t\"./nb\": 448,\n\t\"./nb.js\": 448,\n\t\"./ne\": 449,\n\t\"./ne.js\": 449,\n\t\"./nl\": 450,\n\t\"./nl-be\": 451,\n\t\"./nl-be.js\": 451,\n\t\"./nl.js\": 450,\n\t\"./nn\": 452,\n\t\"./nn.js\": 452,\n\t\"./pa-in\": 453,\n\t\"./pa-in.js\": 453,\n\t\"./pl\": 454,\n\t\"./pl.js\": 454,\n\t\"./pt\": 455,\n\t\"./pt-br\": 456,\n\t\"./pt-br.js\": 456,\n\t\"./pt.js\": 455,\n\t\"./ro\": 457,\n\t\"./ro.js\": 457,\n\t\"./ru\": 458,\n\t\"./ru.js\": 458,\n\t\"./sd\": 459,\n\t\"./sd.js\": 459,\n\t\"./se\": 460,\n\t\"./se.js\": 460,\n\t\"./si\": 461,\n\t\"./si.js\": 461,\n\t\"./sk\": 462,\n\t\"./sk.js\": 462,\n\t\"./sl\": 463,\n\t\"./sl.js\": 463,\n\t\"./sq\": 464,\n\t\"./sq.js\": 464,\n\t\"./sr\": 465,\n\t\"./sr-cyrl\": 466,\n\t\"./sr-cyrl.js\": 466,\n\t\"./sr.js\": 465,\n\t\"./ss\": 467,\n\t\"./ss.js\": 467,\n\t\"./sv\": 468,\n\t\"./sv.js\": 468,\n\t\"./sw\": 469,\n\t\"./sw.js\": 469,\n\t\"./ta\": 470,\n\t\"./ta.js\": 470,\n\t\"./te\": 471,\n\t\"./te.js\": 471,\n\t\"./tet\": 472,\n\t\"./tet.js\": 472,\n\t\"./th\": 473,\n\t\"./th.js\": 473,\n\t\"./tl-ph\": 474,\n\t\"./tl-ph.js\": 474,\n\t\"./tlh\": 475,\n\t\"./tlh.js\": 475,\n\t\"./tr\": 476,\n\t\"./tr.js\": 476,\n\t\"./tzl\": 477,\n\t\"./tzl.js\": 477,\n\t\"./tzm\": 478,\n\t\"./tzm-latn\": 479,\n\t\"./tzm-latn.js\": 479,\n\t\"./tzm.js\": 478,\n\t\"./uk\": 480,\n\t\"./uk.js\": 480,\n\t\"./ur\": 481,\n\t\"./ur.js\": 481,\n\t\"./uz\": 482,\n\t\"./uz-latn\": 483,\n\t\"./uz-latn.js\": 483,\n\t\"./uz.js\": 482,\n\t\"./vi\": 484,\n\t\"./vi.js\": 484,\n\t\"./x-pseudo\": 485,\n\t\"./x-pseudo.js\": 485,\n\t\"./yo\": 486,\n\t\"./yo.js\": 486,\n\t\"./zh-cn\": 487,\n\t\"./zh-cn.js\": 487,\n\t\"./zh-hk\": 488,\n\t\"./zh-hk.js\": 488,\n\t\"./zh-tw\": 489,\n\t\"./zh-tw.js\": 489\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 764;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 764\n// module chunks = 60","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/* tslint:disable:no-console */\n\nimport { SQLiteDB } from '@classes/sqlitedb';\n\n/**\n * Class to mock the interaction with the SQLite database.\n */\nexport class SQLiteDBMock extends SQLiteDB {\n    promise: Promise<void>;\n\n    /**\n     * Create and open the database.\n     *\n     * @param {string} name Database name.\n     */\n    constructor(public name: string) {\n        super(name, null, null);\n    }\n\n    /**\n     * Close the database.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    close(): Promise<any> {\n        // WebSQL databases aren't closed.\n        return Promise.resolve();\n    }\n\n    /**\n     * Drop all the data in the database.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    emptyDatabase(): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            this.db.transaction((tx) => {\n                // Query all tables from sqlite_master that we have created and can modify.\n                const args = [],\n                    query = `SELECT * FROM sqlite_master\n                            WHERE name NOT LIKE 'sqlite\\\\_%' escape '\\\\' AND name NOT LIKE '\\\\_%' escape '\\\\'`;\n\n                tx.executeSql(query, args, (tx, result) => {\n                    if (result.rows.length <= 0) {\n                        // No tables to delete, stop.\n                        resolve();\n\n                        return;\n                    }\n\n                    // Drop all the tables.\n                    const promises = [];\n\n                    for (let i = 0; i < result.rows.length; i++) {\n                        promises.push(new Promise((resolve, reject): void => {\n                            // Drop the table.\n                            const name = JSON.stringify(result.rows.item(i).name);\n                            tx.executeSql('DROP TABLE ' + name, [], resolve, reject);\n                        }));\n                    }\n\n                    Promise.all(promises).then(resolve, reject);\n                }, reject);\n            });\n        });\n    }\n\n    /**\n     * Execute a SQL query.\n     * IMPORTANT: Use this function only if you cannot use any of the other functions in this API. Please take into account that\n     * these query will be run in SQLite (Mobile) and Web SQL (desktop), so your query should work in both environments.\n     *\n     * @param {string} sql SQL query to execute.\n     * @param {any[]} params Query parameters.\n     * @return {Promise<any>} Promise resolved with the result.\n     */\n    execute(sql: string, params?: any[]): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            // With WebSQL, all queries must be run in a transaction.\n            this.db.transaction((tx) => {\n                tx.executeSql(sql, params, (tx, results) => {\n                    resolve(results);\n                }, (tx, error) => {\n                    console.error(sql, params, error);\n                    reject(error);\n                });\n            });\n        });\n    }\n\n    /**\n     * Execute a set of SQL queries. This operation is atomic.\n     * IMPORTANT: Use this function only if you cannot use any of the other functions in this API. Please take into account that\n     * these query will be run in SQLite (Mobile) and Web SQL (desktop), so your query should work in both environments.\n     *\n     * @param {any[]} sqlStatements SQL statements to execute.\n     * @return {Promise<any>} Promise resolved with the result.\n     */\n    executeBatch(sqlStatements: any[]): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            // Create a transaction to execute the queries.\n            this.db.transaction((tx) => {\n                const promises = [];\n\n                // Execute all the queries. Each statement can be a string or an array.\n                sqlStatements.forEach((statement) => {\n                    promises.push(new Promise((resolve, reject): void => {\n                        let query,\n                            params;\n\n                        if (Array.isArray(statement)) {\n                            query = statement[0];\n                            params = statement[1];\n                        } else {\n                            query = statement;\n                            params = null;\n                        }\n\n                        tx.executeSql(query, params, (tx, results) => {\n                            resolve(results);\n                        }, reject);\n                    }));\n                });\n\n                Promise.all(promises).then(resolve, reject);\n            });\n        });\n    }\n\n    /**\n     * Initialize the database.\n     */\n    init(): void {\n        // This DB is for desktop apps, so use a big size to be sure it isn't filled.\n        this.db = (<any> window).openDatabase(this.name, '1.0', this.name, 500 * 1024 * 1024);\n        this.promise = Promise.resolve();\n    }\n\n    /**\n     * Open the database. Only needed if it was closed before, a database is automatically opened when created.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    open(): Promise<any> {\n        // WebSQL databases can't closed, so the open method isn't needed.\n        return Promise.resolve();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/classes/sqlitedb.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, OnInit, ElementRef } from '@angular/core';\nimport { CoreFileHelperProvider } from '@providers/file-helper';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\n\n/**\n * Directive to allow downloading and open a file. When the item with this directive is clicked, the file will be\n * downloaded (if needed) and opened.\n */\n@Directive({\n    selector: '[core-download-file]'\n})\nexport class CoreDownloadFileDirective implements OnInit {\n    @Input('core-download-file') file: any; // The file to download.\n    @Input() component?: string; // Component to link the file to.\n    @Input() componentId?: string | number; // Component ID to use in conjunction with the component.\n\n    protected element: HTMLElement;\n\n    constructor(element: ElementRef, protected domUtils: CoreDomUtilsProvider, protected fileHelper: CoreFileHelperProvider) {\n        this.element = element.nativeElement || element;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.element.addEventListener('click', (ev: Event): void => {\n            if (!this.file) {\n                return;\n            }\n\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            const modal = this.domUtils.showModalLoading();\n\n            this.fileHelper.downloadAndOpenFile(this.file, this.component, this.componentId).catch((error) => {\n                this.domUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n            }).finally(() => {\n                modal.dismiss();\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/download-file.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SQLiteDB } from './sqlitedb';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreDbProvider } from '@providers/db';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreWSProvider, CoreWSPreSets, CoreWSFileUploadOptions } from '@providers/ws';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreConstants } from '@core/constants';\nimport { CoreConfigConstants } from '../configconstants';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { InAppBrowserObject } from '@ionic-native/in-app-browser';\n\n/**\n * PreSets accepted by the WS call.\n */\nexport interface CoreSiteWSPreSets {\n    /**\n     * Get the value from the cache if it's still valid.\n     * @type {boolean}\n     */\n    getFromCache?: boolean;\n\n    /**\n     * Save the result to the cache.\n     * @type {boolean}\n     */\n    saveToCache?: boolean;\n\n    /**\n     * Ignore cache expiration.\n     * @type {boolean}\n     */\n    omitExpires?: boolean;\n\n    /**\n     * Use the cache when a request fails. Defaults to true.\n     * @type {boolean}\n     */\n    emergencyCache?: boolean;\n\n    /**\n     * Extra key to add to the cache when storing this call, to identify the entry.\n     * @type {string}\n     */\n    cacheKey?: string;\n\n    /**\n     * Whether it should use cache key to retrieve the cached data instead of the request params.\n     * @type {boolean}\n     */\n    getCacheUsingCacheKey?: boolean;\n\n    /**\n     * Same as getCacheUsingCacheKey, but for emergency cache.\n     * @type {boolean}\n     */\n    getEmergencyCacheUsingCacheKey?: boolean;\n\n    /**\n     * Whether it should only be 1 entry for this cache key (all entries with same key will be deleted).\n     * @type {boolean}\n     */\n    uniqueCacheKey?: boolean;\n\n    /**\n     * Whether to filter WS response (moodlewssettingfilter). Defaults to true.\n     * @type {boolean}\n     */\n    filter?: boolean;\n\n    /**\n     * Whether to rewrite URLs (moodlewssettingfileurl). Defaults to true.\n     * @type {boolean}\n     */\n    rewriteurls?: boolean;\n\n    /**\n     * Defaults to true. Set to false when the expected response is null.\n     * @type {boolean}\n     */\n    responseExpected?: boolean;\n\n    /**\n     * Defaults to 'object'. Use it when you expect a type that's not an object|array.\n     * @type {string}\n     */\n    typeExpected?: string;\n}\n\n/**\n * Response of checking local_mobile status.\n */\nexport interface LocalMobileResponse {\n    /**\n     * Code to identify the authentication method to use.\n     * @type {number}\n     */\n    code: number;\n\n    /**\n     * Name of the service to use.\n     * @type {string}\n     */\n    service?: string;\n\n    /**\n     * Code of the warning message.\n     * @type {string}\n     */\n    warning?: string;\n\n    /**\n     * Whether core SSO is supported.\n     * @type {boolean}\n     */\n    coreSupported?: boolean;\n}\n\n/**\n * Class that represents a site (combination of site + user).\n * It will have all the site data and provide utility functions regarding a site.\n * To add tables to the site's database, please use CoreSitesProvider.createTablesFromSchema. This will make sure that\n * the tables are created in all the sites, not just the current one.\n */\nexport class CoreSite {\n    // List of injected services. This class isn't injectable, so it cannot use DI.\n    protected appProvider;\n    protected dbProvider;\n    protected domUtils;\n    protected eventsProvider;\n    protected fileProvider;\n    protected http;\n    protected textUtils;\n    protected timeUtils;\n    protected translate;\n    protected utils;\n    protected urlUtils;\n    protected wsProvider;\n\n    // Variables for the database.\n    protected WS_CACHE_TABLE = 'wscache';\n    protected tableSchema = {\n        name: this.WS_CACHE_TABLE,\n        columns: [\n            {\n                name: 'id',\n                type: 'TEXT',\n                primaryKey: true\n            },\n            {\n                name: 'data',\n                type: 'TEXT'\n            },\n            {\n                name: 'key',\n                type: 'TEXT'\n            },\n            {\n                name: 'expirationTime',\n                type: 'INTEGER'\n            }\n        ]\n    };\n\n    // Rest of variables.\n    protected logger;\n    protected db: SQLiteDB;\n    protected cleanUnicode = false;\n    protected lastAutoLogin = 0;\n    protected moodleReleases = {\n        3.1: 2016052300,\n        3.2: 2016120500,\n        3.3: 2017051503,\n        3.4: 2017111300\n    };\n\n    /**\n     * Create a site.\n     *\n     * @param {Injector} injector Angular injector to prevent having to pass all the required services.\n     * @param {string} id Site ID.\n     * @param {string} siteUrl Site URL.\n     * @param {string} [token] Site's WS token.\n     * @param {any} [info] Site info.\n     * @param {string} [privateToken] Private token.\n     * @param {any} [config] Site public config.\n     * @param {boolean} [loggedOut] Whether user is logged out.\n     */\n    constructor(injector: Injector, public id: string, public siteUrl: string, public token?: string, public infos?: any,\n            public privateToken?: string, public config?: any, public loggedOut?: boolean) {\n        // Inject the required services.\n        const logger = injector.get(CoreLoggerProvider);\n        this.appProvider = injector.get(CoreAppProvider);\n        this.dbProvider = injector.get(CoreDbProvider);\n        this.domUtils = injector.get(CoreDomUtilsProvider);\n        this.eventsProvider = injector.get(CoreEventsProvider);\n        this.fileProvider = injector.get(CoreFileProvider);\n        this.http = injector.get(HttpClient);\n        this.textUtils = injector.get(CoreTextUtilsProvider);\n        this.timeUtils = injector.get(CoreTimeUtilsProvider);\n        this.translate = injector.get(TranslateService);\n        this.utils = injector.get(CoreUtilsProvider);\n        this.urlUtils = injector.get(CoreUrlUtilsProvider);\n        this.wsProvider = injector.get(CoreWSProvider);\n\n        this.logger = logger.getInstance('CoreWSProvider');\n\n        if (this.id) {\n            this.initDB();\n        }\n    }\n\n    /**\n     * Initialize the database.\n     */\n    initDB(): void {\n        this.db = this.dbProvider.getDB('Site-' + this.id);\n        this.db.createTableFromSchema(this.tableSchema);\n    }\n\n    /**\n     * Get site ID.\n     *\n     * @return {string} Site ID.\n     */\n    getId(): string {\n        return this.id;\n    }\n\n    /**\n     * Get site URL.\n     *\n     * @return {string} Site URL.\n     */\n    getURL(): string {\n        return this.siteUrl;\n    }\n\n    /**\n     * Get site token.\n     *\n     * @return {string} Site token.\n     */\n    getToken(): string {\n        return this.token;\n    }\n\n    /**\n     * Get site info.\n     *\n     * @return {any} Site info.\n     */\n    getInfo(): any {\n        return this.infos;\n    }\n\n    /**\n     * Get site private token.\n     *\n     * @return {string} Site private token.\n     */\n    getPrivateToken(): string {\n        return this.privateToken;\n    }\n\n    /**\n     * Get site DB.\n     *\n     * @return {SQLiteDB} Site DB.\n     */\n    getDb(): SQLiteDB {\n        return this.db;\n    }\n\n    /**\n     * Get site user's ID.\n     *\n     * @return {number} User's ID.\n     */\n    getUserId(): number {\n        if (typeof this.infos != 'undefined' && typeof this.infos.userid != 'undefined') {\n            return this.infos.userid;\n        }\n    }\n\n    /**\n     * Get site Course ID for frontpage course. If not declared it will return 1 as default.\n     *\n     * @return {number} Site Home ID.\n     */\n    getSiteHomeId(): number {\n        return this.infos && this.infos.siteid || 1;\n    }\n\n    /**\n     * Set site ID.\n     *\n     * @param {string} New ID.\n     */\n    setId(id: string): void {\n        this.id = id;\n        this.initDB();\n    }\n\n    /**\n     * Set site token.\n     *\n     * @param {string} New token.\n     */\n    setToken(token: string): void {\n        this.token = token;\n    }\n\n    /**\n     * Set site private token.\n     *\n     * @param {string} privateToken New private token.\n     */\n    setPrivateToken(privateToken: string): void {\n        this.privateToken = privateToken;\n    }\n\n    /**\n     * Check if user logged out from the site and needs to authenticate again.\n     *\n     * @return {boolean} Whether is logged out.\n     */\n    isLoggedOut(): boolean {\n        return !!this.loggedOut;\n    }\n\n    /**\n     * Set site info.\n     *\n     * @param {any} New info.\n     */\n    setInfo(infos: any): void {\n        this.infos = infos;\n    }\n\n    /**\n     * Set site config.\n     *\n     * @param {any} Config.\n     */\n    setConfig(config: any): void {\n        this.config = config;\n    }\n\n    /**\n     * Set site logged out.\n     *\n     * @param {boolean} loggedOut True if logged out and needs to authenticate again, false otherwise.\n     */\n    setLoggedOut(loggedOut: boolean): void {\n        this.loggedOut = !!loggedOut;\n    }\n\n    /**\n     * Can the user access their private files?\n     *\n     * @return {boolean} Whether can access my files.\n     */\n    canAccessMyFiles(): boolean {\n        const infos = this.getInfo();\n\n        return infos && (typeof infos.usercanmanageownfiles === 'undefined' || infos.usercanmanageownfiles);\n    }\n\n    /**\n     * Can the user download files?\n     *\n     * @return {boolean} Whether can download files.\n     */\n    canDownloadFiles(): boolean {\n        const infos = this.getInfo();\n\n        return infos && infos.downloadfiles;\n    }\n\n    /**\n     * Can the user use an advanced feature?\n     *\n     * @param {string} feature The name of the feature.\n     * @param {boolean} [whenUndefined=true] The value to return when the parameter is undefined.\n     * @return {boolean} Whether can use advanced feature.\n     */\n    canUseAdvancedFeature(feature: string, whenUndefined: boolean = true): boolean {\n        const infos = this.getInfo();\n        let canUse = true;\n\n        if (typeof infos.advancedfeatures === 'undefined') {\n            canUse = whenUndefined;\n        } else {\n            for (const i in infos.advancedfeatures) {\n                const item = infos.advancedfeatures[i];\n                if (item.name === feature && parseInt(item.value, 10) === 0) {\n                    canUse = false;\n                }\n            }\n\n        }\n\n        return canUse;\n    }\n\n    /**\n     * Can the user upload files?\n     *\n     * @return {boolean} Whether can upload files.\n     */\n    canUploadFiles(): boolean {\n        const infos = this.getInfo();\n\n        return infos && infos.uploadfiles;\n    }\n\n    /**\n     * Fetch site info from the Moodle site.\n     *\n     * @return {Promise<any>} A promise to be resolved when the site info is retrieved.\n     */\n    fetchSiteInfo(): Promise<any> {\n        // The get_site_info WS call won't be cached.\n        const preSets = {\n            getFromCache: false,\n            saveToCache: false\n        };\n\n        // Reset clean Unicode to check if it's supported again.\n        this.cleanUnicode = false;\n\n        return this.read('core_webservice_get_site_info', {}, preSets);\n    }\n\n    /**\n     * Read some data from the Moodle site using WS. Requests are cached by default.\n     *\n     * @param {string} method WS method to use.\n     * @param {any} data Data to send to the WS.\n     * @param {CoreSiteWSPreSets} [preSets] Extra options.\n     * @return {Promise<any>} Promise resolved with the response, rejected with CoreWSError if it fails.\n     */\n    read(method: string, data: any, preSets?: CoreSiteWSPreSets): Promise<any> {\n        preSets = preSets || {};\n        if (typeof preSets.getFromCache == 'undefined') {\n            preSets.getFromCache = true;\n        }\n        if (typeof preSets.saveToCache == 'undefined') {\n            preSets.saveToCache = true;\n        }\n\n        return this.request(method, data, preSets);\n    }\n\n    /**\n     * Sends some data to the Moodle site using WS. Requests are NOT cached by default.\n     *\n     * @param {string} method  WS method to use.\n     * @param {any} data Data to send to the WS.\n     * @param {CoreSiteWSPreSets} [preSets] Extra options.\n     * @return {Promise<any>} Promise resolved with the response, rejected with CoreWSError if it fails.\n     */\n    write(method: string, data: any, preSets?: CoreSiteWSPreSets): Promise<any> {\n        preSets = preSets || {};\n        if (typeof preSets.getFromCache == 'undefined') {\n            preSets.getFromCache = false;\n        }\n        if (typeof preSets.saveToCache == 'undefined') {\n            preSets.saveToCache = false;\n        }\n        if (typeof preSets.emergencyCache == 'undefined') {\n            preSets.emergencyCache = false;\n        }\n\n        return this.request(method, data, preSets);\n    }\n\n    /**\n     * WS request to the site.\n     *\n     * @param {string} method The WebService method to be called.\n     * @param {any} data Arguments to pass to the method.\n     * @param {CoreSiteWSPreSets} preSets Extra options.\n     * @param {boolean} [retrying] True if we're retrying the call for some reason. This is to prevent infinite loops.\n     * @return {Promise<any>} Promise resolved with the response, rejected with CoreWSError if it fails.\n     * @description\n     *\n     * Sends a webservice request to the site. This method will automatically add the\n     * required parameters and pass it on to the low level API in CoreWSProvider.call().\n     *\n     * Caching is also implemented, when enabled this method will returned a cached version of the request if the\n     * data hasn't expired.\n     *\n     * This method is smart which means that it will try to map the method to a compatibility one if need be, usually this\n     * means that it will fallback on the 'local_mobile_' prefixed function if it is available and the non-prefixed is not.\n     */\n    request(method: string, data: any, preSets: CoreSiteWSPreSets, retrying?: boolean): Promise<any> {\n        const initialToken = this.token;\n        data = data || {};\n\n        // Check if the method is available, use a prefixed version if possible.\n        // We ignore this check when we do not have the site info, as the list of functions is not loaded yet.\n        if (this.getInfo() && !this.wsAvailable(method, false)) {\n            const compatibilityMethod = CoreConstants.WS_PREFIX + method;\n            if (this.wsAvailable(compatibilityMethod, false)) {\n                this.logger.info(`Using compatibility WS method '${compatibilityMethod}'`);\n                method = compatibilityMethod;\n            } else {\n                this.logger.error(`WS function '${method}' is not available, even in compatibility mode.`);\n\n                return Promise.reject(this.utils.createFakeWSError('core.wsfunctionnotavailable', true));\n            }\n        }\n\n        const wsPreSets: CoreWSPreSets = {\n            wsToken: this.token,\n            siteUrl: this.siteUrl,\n            cleanUnicode: this.cleanUnicode,\n            typeExpected: preSets.typeExpected,\n            responseExpected: preSets.responseExpected\n        };\n\n        if (wsPreSets.cleanUnicode && this.textUtils.hasUnicodeData(data)) {\n            // Data will be cleaned, notify the user.\n            this.domUtils.showToast('core.unicodenotsupported', true, 3000);\n        } else {\n            // No need to clean data in this call.\n            wsPreSets.cleanUnicode = false;\n        }\n\n        // Enable text filtering by default.\n        data.moodlewssettingfilter = preSets.filter === false ? false : true;\n        data.moodlewssettingfileurl = preSets.rewriteurls === false ? false : true;\n\n        // Convert the values to string before starting the cache process.\n        try {\n            data = this.wsProvider.convertValuesToString(data, wsPreSets.cleanUnicode);\n        } catch (e) {\n            // Empty cleaned text found.\n            return Promise.reject(this.utils.createFakeWSError('core.unicodenotsupportedcleanerror', true));\n        }\n\n        return this.getFromCache(method, data, preSets).catch(() => {\n            // Do not pass those options to the core WS factory.\n            return this.wsProvider.call(method, data, wsPreSets).then((response) => {\n                if (preSets.saveToCache) {\n                    this.saveToCache(method, data, response, preSets);\n                }\n\n                // We pass back a clone of the original object, this may prevent errors if in the callback the object is modified.\n                return this.utils.clone(response);\n            }).catch((error) => {\n                if (error.errorcode == 'invalidtoken' ||\n                    (error.errorcode == 'accessexception' && error.message.indexOf('Invalid token - token expired') > -1)) {\n                    if (initialToken !== this.token && !retrying) {\n                        // Token has changed, retry with the new token.\n                        return this.request(method, data, preSets, true);\n                    } else if (this.appProvider.isSSOAuthenticationOngoing()) {\n                        // There's an SSO authentication ongoing, wait for it to finish and try again.\n                        return this.appProvider.waitForSSOAuthentication().then(() => {\n                            return this.request(method, data, preSets, true);\n                        });\n                    }\n\n                    // Session expired, trigger event.\n                    this.eventsProvider.trigger(CoreEventsProvider.SESSION_EXPIRED, {}, this.id);\n                    // Change error message. We'll try to get data from cache.\n                    error.message = this.translate.instant('core.lostconnection');\n                } else if (error.errorcode === 'userdeleted') {\n                    // User deleted, trigger event.\n                    this.eventsProvider.trigger(CoreEventsProvider.USER_DELETED, { params: data }, this.id);\n                    error.message = this.translate.instant('core.userdeleted');\n\n                    return Promise.reject(error);\n                } else if (error.errorcode === 'forcepasswordchangenotice') {\n                    // Password Change Forced, trigger event.\n                    this.eventsProvider.trigger(CoreEventsProvider.PASSWORD_CHANGE_FORCED, {}, this.id);\n                    error.message = this.translate.instant('core.forcepasswordchangenotice');\n\n                    return Promise.reject(error);\n                } else if (error.errorcode === 'usernotfullysetup') {\n                    // User not fully setup, trigger event.\n                    this.eventsProvider.trigger(CoreEventsProvider.USER_NOT_FULLY_SETUP, {}, this.id);\n                    error.message = this.translate.instant('core.usernotfullysetup');\n\n                    return Promise.reject(error);\n                } else if (error.errorcode === 'sitepolicynotagreed') {\n                    // Site policy not agreed, trigger event.\n                    this.eventsProvider.trigger(CoreEventsProvider.SITE_POLICY_NOT_AGREED, {}, this.id);\n                    error.message = this.translate.instant('core.sitepolicynotagreederror');\n\n                    return Promise.reject(error);\n                } else if (error.errorcode === 'dmlwriteexception' && this.textUtils.hasUnicodeData(data)) {\n                    if (!this.cleanUnicode) {\n                        // Try again cleaning unicode.\n                        this.cleanUnicode = true;\n\n                        return this.request(method, data, preSets);\n                    }\n                    // This should not happen.\n                    error.message = this.translate.instant('core.unicodenotsupported');\n\n                    return Promise.reject(error);\n                } else if (typeof preSets.emergencyCache !== 'undefined' && !preSets.emergencyCache) {\n                    this.logger.debug(`WS call '${method}' failed. Emergency cache is forbidden, rejecting.`);\n\n                    return Promise.reject(error);\n                }\n\n                this.logger.debug(`WS call '${method}' failed. Trying to use the emergency cache.`);\n                preSets.omitExpires = true;\n                preSets.getFromCache = true;\n\n                return this.getFromCache(method, data, preSets, true).catch(() => {\n                    return Promise.reject(error);\n                });\n            });\n        });\n    }\n\n    /**\n     * Check if a WS is available in this site.\n     *\n     * @param {string} method WS name.\n     * @param {boolean} [checkPrefix=true] When true also checks with the compatibility prefix.\n     * @return {boolean} Whether the WS is available.\n     */\n    wsAvailable(method: string, checkPrefix: boolean = true): boolean {\n        if (typeof this.infos == 'undefined') {\n            return false;\n        }\n\n        for (let i = 0; i < this.infos.functions.length; i++) {\n            const func = this.infos.functions[i];\n            if (func.name == method) {\n                return true;\n            }\n        }\n\n        // Let's try again with the compatibility prefix.\n        if (checkPrefix) {\n            return this.wsAvailable(CoreConstants.WS_PREFIX + method, false);\n        }\n\n        return false;\n    }\n\n    /**\n     * Get cache ID.\n     *\n     * @param {string} method The WebService method.\n     * @param {any} data Arguments to pass to the method.\n     * @return {string} Cache ID.\n     */\n    protected getCacheId(method: string, data: any): string {\n        return <string> Md5.hashAsciiStr(method + ':' + this.utils.sortAndStringify(data));\n    }\n\n    /**\n     * Get a WS response from cache.\n     *\n     * @param {string} method The WebService method to be called.\n     * @param {any} data Arguments to pass to the method.\n     * @param {CoreSiteWSPreSets} preSets Extra options.\n     * @param {boolean} emergency Whether it's an \"emergency\" cache call (WS call failed).\n     * @return {Promise<any>} Promise resolved with the WS response.\n     */\n    protected getFromCache(method: string, data: any, preSets: CoreSiteWSPreSets, emergency?: boolean): Promise<any> {\n        if (!this.db || !preSets.getFromCache) {\n            return Promise.reject(null);\n        }\n\n        const id = this.getCacheId(method, data);\n        let promise;\n\n        if (preSets.getCacheUsingCacheKey || (emergency && preSets.getEmergencyCacheUsingCacheKey)) {\n            promise = this.db.getRecords(this.WS_CACHE_TABLE, { key: preSets.cacheKey }).then((entries) => {\n                if (!entries.length) {\n                    // Cache key not found, get by params sent.\n                    return this.db.getRecord(this.WS_CACHE_TABLE, { id: id });\n                } else if (entries.length > 1) {\n                    // More than one entry found. Search the one with same ID as this call.\n                    for (let i = 0, len = entries.length; i < len; i++) {\n                        const entry = entries[i];\n                        if (entry.id == id) {\n                            return entry;\n                        }\n                    }\n                }\n\n                return entries[0];\n            });\n        } else {\n            promise = this.db.getRecord(this.WS_CACHE_TABLE, { id: id });\n        }\n\n        return promise.then((entry) => {\n            const now = Date.now();\n\n            preSets.omitExpires = preSets.omitExpires || !this.appProvider.isOnline();\n\n            if (!preSets.omitExpires) {\n                if (now > entry.expirationTime) {\n                    this.logger.debug('Cached element found, but it is expired');\n\n                    return Promise.reject(null);\n                }\n            }\n\n            if (typeof entry != 'undefined' && typeof entry.data != 'undefined') {\n                const expires = (entry.expirationTime - now) / 1000;\n                this.logger.info(`Cached element found, id: ${id} expires in ${expires} seconds`);\n\n                return this.textUtils.parseJSON(entry.data, {});\n            }\n\n            return Promise.reject(null);\n        });\n    }\n\n    /**\n     * Save a WS response to cache.\n     *\n     * @param {string} method The WebService method.\n     * @param {any} data Arguments to pass to the method.\n     * @param {any} response The WS response.\n     * @param {CoreSiteWSPreSets} preSets Extra options.\n     * @return {Promise<any>} Promise resolved when the response is saved.\n     */\n    protected saveToCache(method: string, data: any, response: any, preSets: CoreSiteWSPreSets): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(null);\n        }\n\n        let promise;\n\n        if (preSets.uniqueCacheKey) {\n            // Cache key must be unique, delete all entries with same cache key.\n            promise = this.deleteFromCache(method, data, preSets, true).catch(() => {\n                // Ignore errors.\n            });\n        } else {\n            promise = Promise.resolve();\n        }\n\n        return promise.then(() => {\n            const id = this.getCacheId(method, data),\n                entry: any = {\n                    id: id,\n                    data: JSON.stringify(response)\n                };\n            let cacheExpirationTime = CoreConfigConstants.cache_expiration_time;\n\n            cacheExpirationTime = isNaN(cacheExpirationTime) ? 300000 : cacheExpirationTime;\n            entry.expirationTime = new Date().getTime() + cacheExpirationTime;\n            if (preSets.cacheKey) {\n                entry.key = preSets.cacheKey;\n            }\n\n            return this.db.insertOrUpdateRecord(this.WS_CACHE_TABLE, entry, { id: id });\n        });\n    }\n\n    /**\n     * Delete a WS cache entry or entries.\n     *\n     * @param {string} method The WebService method to be called.\n     * @param {any} data Arguments to pass to the method.\n     * @param {CoreSiteWSPreSets} preSets Extra options.\n     * @param {boolean} [allCacheKey] True to delete all entries with the cache key, false to delete only by ID.\n     * @return {Promise<any>} Promise resolved when the entries are deleted.\n     */\n    protected deleteFromCache(method: string, data: any, preSets: CoreSiteWSPreSets, allCacheKey?: boolean): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(null);\n        }\n\n        const id = this.getCacheId(method, data);\n\n        if (allCacheKey) {\n            return this.db.deleteRecords(this.WS_CACHE_TABLE, { key: preSets.cacheKey });\n        }\n\n        return this.db.deleteRecords(this.WS_CACHE_TABLE, { id: id });\n    }\n\n    /*\n     * Uploads a file using Cordova File API.\n     *\n     * @param {string} filePath File path.\n     * @param {CoreWSFileUploadOptions} options File upload options.\n     * @param {Function} [onProgress] Function to call on progress.\n     * @return {Promise<any>} Promise resolved when uploaded.\n     */\n    uploadFile(filePath: string, options: CoreWSFileUploadOptions, onProgress?: (event: ProgressEvent) => any): Promise<any> {\n        if (!options.fileArea) {\n            options.fileArea = 'draft';\n        }\n\n        return this.wsProvider.uploadFile(filePath, options, {\n            siteUrl: this.siteUrl,\n            wsToken: this.token\n        }, onProgress);\n    }\n\n    /**\n     * Invalidates all the cache entries.\n     *\n     * @return {Promise<any>} Promise resolved when the cache entries are invalidated.\n     */\n    invalidateWsCache(): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(null);\n        }\n\n        this.logger.debug('Invalidate all the cache for site: ' + this.id);\n\n        return this.db.updateRecords(this.WS_CACHE_TABLE, { expirationTime: 0 });\n    }\n\n    /**\n     * Invalidates all the cache entries with a certain key.\n     *\n     * @param {string} key Key to search.\n     * @return {Promise<any>} Promise resolved when the cache entries are invalidated.\n     */\n    invalidateWsCacheForKey(key: string): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(null);\n        }\n        if (!key) {\n            return Promise.resolve();\n        }\n\n        this.logger.debug('Invalidate cache for key: ' + key);\n\n        return this.db.updateRecords(this.WS_CACHE_TABLE, { expirationTime: 0 }, { key: key });\n    }\n\n    /**\n     * Invalidates all the cache entries in an array of keys.\n     *\n     * @param {string[]} keys Keys to search.\n     * @return {Promise<any>} Promise resolved when the cache entries are invalidated.\n     */\n    invalidateMultipleWsCacheForKey(keys: string[]): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(null);\n        }\n        if (!keys || !keys.length) {\n            return Promise.resolve();\n        }\n\n        const promises = [];\n\n        this.logger.debug('Invalidating multiple cache keys');\n        keys.forEach((key) => {\n            promises.push(this.invalidateWsCacheForKey(key));\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Invalidates all the cache entries whose key starts with a certain value.\n     *\n     * @param {string} key Key to search.\n     * @return {Promise}    Promise resolved when the cache entries are invalidated.\n     */\n    invalidateWsCacheForKeyStartingWith(key: string): Promise<any> {\n        if (!this.db) {\n            return Promise.reject(null);\n        }\n        if (!key) {\n            return Promise.resolve();\n        }\n\n        this.logger.debug('Invalidate cache for key starting with: ' + key);\n\n        const sql = 'UPDATE ' + this.WS_CACHE_TABLE + ' SET expirationTime=0 WHERE key LIKE ?';\n\n        return this.db.execute(sql, [key + '%']);\n    }\n\n    /**\n     * Generic function for adding the wstoken to Moodle urls and for pointing to the correct script.\n     * Uses CoreUtilsProvider.fixPluginfileURL, passing site's token.\n     *\n     * @param {string} url The url to be fixed.\n     * @return {string} Fixed URL.\n     */\n    fixPluginfileURL(url: string): string {\n        return this.urlUtils.fixPluginfileURL(url, this.token);\n    }\n\n    /**\n     * Deletes site's DB.\n     *\n     * @return {Promise<any>} Promise to be resolved when the DB is deleted.\n     */\n    deleteDB(): Promise<any> {\n        return this.dbProvider.deleteDB('Site-' + this.id);\n    }\n\n    /**\n     * Deletes site's folder.\n     *\n     * @return {Promise<any>} Promise to be resolved when the DB is deleted.\n     */\n    deleteFolder(): Promise<any> {\n        if (this.fileProvider.isAvailable()) {\n            const siteFolder = this.fileProvider.getSiteFolder(this.id);\n\n            return this.fileProvider.removeDir(siteFolder).catch(() => {\n                // Ignore any errors, $mmFS.removeDir fails if folder doesn't exists.\n            });\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    /**\n     * Get space usage of the site.\n     *\n     * @return {Promise<number>} Promise resolved with the site space usage (size).\n     */\n    getSpaceUsage(): Promise<number> {\n        if (this.fileProvider.isAvailable()) {\n            const siteFolderPath = this.fileProvider.getSiteFolder(this.id);\n\n            return this.fileProvider.getDirectorySize(siteFolderPath).catch(() => {\n                return 0;\n            });\n        } else {\n            return Promise.resolve(0);\n        }\n    }\n\n    /**\n     * Returns the URL to the documentation of the app, based on Moodle version and current language.\n     *\n     * @param {string} [page] Docs page to go to.\n     * @return {Promise<string>} Promise resolved with the Moodle docs URL.\n     */\n    getDocsUrl(page?: string): Promise<string> {\n        const release = this.infos.release ? this.infos.release : undefined;\n\n        return this.urlUtils.getDocsUrl(release, page);\n    }\n\n    /**\n     * Check if the local_mobile plugin is installed in the Moodle site.\n     *\n     * @param {boolean} [retrying] True if we're retrying the check.\n     * @return {Promise<LocalMobileResponse>} Promise resolved when the check is done.\n     */\n    checkLocalMobilePlugin(retrying?: boolean): Promise<LocalMobileResponse> {\n        const checkUrl = this.siteUrl + '/local/mobile/check.php',\n            service = CoreConfigConstants.wsextservice;\n\n        if (!service) {\n            // External service not defined.\n            return Promise.resolve({ code: 0 });\n        }\n\n        const promise = this.http.post(checkUrl, { service: service }).timeout(CoreConstants.WS_TIMEOUT).toPromise();\n\n        return promise.then((data: any) => {\n            if (typeof data != 'undefined' && data.errorcode === 'requirecorrectaccess') {\n                if (!retrying) {\n                    this.siteUrl = this.urlUtils.addOrRemoveWWW(this.siteUrl);\n\n                    return this.checkLocalMobilePlugin(true);\n                } else {\n                    return Promise.reject(data.error);\n                }\n            } else if (typeof data == 'undefined' || typeof data.code == 'undefined') {\n                // The local_mobile returned something we didn't expect. Let's assume it's not installed.\n                return { code: 0, warning: 'core.login.localmobileunexpectedresponse' };\n            }\n\n            const code = parseInt(data.code, 10);\n            if (data.error) {\n                switch (code) {\n                    case 1:\n                        // Site in maintenance mode.\n                        return Promise.reject(this.translate.instant('core.login.siteinmaintenance'));\n                    case 2:\n                        // Web services not enabled.\n                        return Promise.reject(this.translate.instant('core.login.webservicesnotenabled'));\n                    case 3:\n                        // Extended service not enabled, but the official is enabled.\n                        return { code: 0 };\n                    case 4:\n                        // Neither extended or official services enabled.\n                        return Promise.reject(this.translate.instant('core.login.mobileservicesnotenabled'));\n                    default:\n                        return Promise.reject(this.translate.instant('core.unexpectederror'));\n                }\n            } else {\n                return { code: code, service: service, coresupported: !!data.coresupported };\n            }\n        }, () => {\n            return { code: 0 };\n        });\n    }\n\n    /**\n     * Check if local_mobile has been installed in Moodle.\n     *\n     * @return {boolean} Whether the App is able to use local_mobile plugin for this site.\n     */\n    checkIfAppUsesLocalMobile(): boolean {\n        let appUsesLocalMobile = false;\n\n        if (!this.infos || !this.infos.functions) {\n            return appUsesLocalMobile;\n        }\n\n        this.infos.functions.forEach((func) => {\n            if (func.name.indexOf(CoreConstants.WS_PREFIX) != -1) {\n                appUsesLocalMobile = true;\n            }\n        });\n\n        return appUsesLocalMobile;\n    }\n\n    /**\n     * Check if local_mobile has been installed in Moodle but the app is not using it.\n     *\n     * @return {Promise<any>} Promise resolved it local_mobile was added, rejected otherwise.\n     */\n    checkIfLocalMobileInstalledAndNotUsed(): Promise<any> {\n        const appUsesLocalMobile = this.checkIfAppUsesLocalMobile();\n\n        if (appUsesLocalMobile) {\n            // App already uses local_mobile, it wasn't added.\n            return Promise.reject(null);\n        }\n\n        return this.checkLocalMobilePlugin().then((data: LocalMobileResponse): any => {\n            if (typeof data.service == 'undefined') {\n                // The local_mobile NOT installed. Reject.\n                return Promise.reject(null);\n            }\n\n            return data;\n        });\n    }\n\n    /**\n     * Check if a URL belongs to this site.\n     *\n     * @param {string} url URL to check.\n     * @return {boolean} Whether the URL belongs to this site.\n     */\n    containsUrl(url: string): boolean {\n        if (!url) {\n            return false;\n        }\n\n        const siteUrl = this.urlUtils.removeProtocolAndWWW(this.siteUrl);\n        url = this.urlUtils.removeProtocolAndWWW(url);\n\n        return url.indexOf(siteUrl) == 0;\n    }\n\n    /**\n     * Get the public config of this site.\n     *\n     * @return {Promise<any>} Promise resolved with public config. Rejected with an object if error, see CoreWSProvider.callAjax.\n     */\n    getPublicConfig(): Promise<any> {\n        return this.wsProvider.callAjax('tool_mobile_get_public_config', {}, { siteUrl: this.siteUrl }).then((config) => {\n            // Use the wwwroot returned by the server.\n            if (config.httpswwwroot) {\n                this.siteUrl = config.httpswwwroot;\n            }\n\n            return config;\n        });\n    }\n\n    /**\n     * Open a URL in browser using auto-login in the Moodle site if available.\n     *\n     * @param {string} url The URL to open.\n     * @param {string} [alertMessage] If defined, an alert will be shown before opening the browser.\n     * @return {Promise<any>} Promise resolved when done, rejected otherwise.\n     */\n    openInBrowserWithAutoLogin(url: string, alertMessage?: string): Promise<any> {\n        return this.openWithAutoLogin(false, url, undefined, alertMessage);\n    }\n\n    /**\n     * Open a URL in browser using auto-login in the Moodle site if available and the URL belongs to the site.\n     *\n     * @param {string} url The URL to open.\n     * @param {string} [alertMessage] If defined, an alert will be shown before opening the browser.\n     * @return {Promise<any>} Promise resolved when done, rejected otherwise.\n     */\n    openInBrowserWithAutoLoginIfSameSite(url: string, alertMessage?: string): Promise<any> {\n        return this.openWithAutoLoginIfSameSite(false, url, undefined, alertMessage);\n    }\n\n    /**\n     * Open a URL in inappbrowser using auto-login in the Moodle site if available.\n     *\n     * @param {string} url The URL to open.\n     * @param {any} [options] Override default options passed to InAppBrowser.\n     * @param {string} [alertMessage] If defined, an alert will be shown before opening the inappbrowser.\n     * @return {Promise<InAppBrowserObject>} Promise resolved when done.\n     */\n    openInAppWithAutoLogin(url: string, options?: any, alertMessage?: string): Promise<InAppBrowserObject> {\n        return this.openWithAutoLogin(true, url, options, alertMessage);\n    }\n\n    /**\n     * Open a URL in inappbrowser using auto-login in the Moodle site if available and the URL belongs to the site.\n     *\n     * @param {string} url The URL to open.\n     * @param {object} [options] Override default options passed to inappbrowser.\n     * @param {string} [alertMessage] If defined, an alert will be shown before opening the inappbrowser.\n     * @return {Promise<InAppBrowserObject>} Promise resolved when done.\n     */\n    openInAppWithAutoLoginIfSameSite(url: string, options?: any, alertMessage?: string): Promise<InAppBrowserObject> {\n        return this.openWithAutoLoginIfSameSite(true, url, options, alertMessage);\n    }\n\n    /**\n     * Open a URL in browser or InAppBrowser using auto-login in the Moodle site if available.\n     *\n     * @param {boolean} inApp True to open it in InAppBrowser, false to open in browser.\n     * @param {string} url The URL to open.\n     * @param {object} [options] Override default options passed to $cordovaInAppBrowser#open.\n     * @param {string} [alertMessage] If defined, an alert will be shown before opening the browser/inappbrowser.\n     * @return {Promise<InAppBrowserObject>} Promise resolved when done. Resolve param is returned only if inApp=true.\n     */\n    openWithAutoLogin(inApp: boolean, url: string, options?: any, alertMessage?: string): Promise<InAppBrowserObject> {\n        // Convenience function to open the URL.\n        const open = (url): Promise<any> => {\n            return new Promise<InAppBrowserObject>((resolve, reject): void => {\n                if (modal) {\n                    modal.dismiss();\n                }\n\n                if (alertMessage) {\n                    const alert = this.domUtils.showAlert(this.translate.instant('core.notice'), alertMessage, undefined, 3000);\n                    alert.onDidDismiss(() => {\n                        if (inApp) {\n                            resolve(this.utils.openInApp(url, options));\n                        } else {\n                            resolve(this.utils.openInBrowser(url));\n                        }\n                    });\n                } else {\n                    if (inApp) {\n                        resolve(this.utils.openInApp(url, options));\n                    } else {\n                        resolve(this.utils.openInBrowser(url));\n                    }\n                }\n            });\n        };\n\n        if (!this.privateToken || !this.wsAvailable('tool_mobile_get_autologin_key') ||\n                (this.lastAutoLogin && this.timeUtils.timestamp() - this.lastAutoLogin < CoreConstants.SECONDS_MINUTE * 6)) {\n            // No private token, WS not available or last auto-login was less than 6 minutes ago.\n            // Open the final URL without auto-login.\n            return Promise.resolve(open(url));\n        }\n\n        const userId = this.getUserId(),\n            params = {\n                privatetoken: this.privateToken\n            },\n            modal = this.domUtils.showModalLoading();\n\n        // Use write to not use cache.\n        return this.write('tool_mobile_get_autologin_key', params).then((data) => {\n            if (!data.autologinurl || !data.key) {\n                // Not valid data, open the final URL without auto-login.\n                return open(url);\n            }\n\n            this.lastAutoLogin = this.timeUtils.timestamp();\n\n            return open(data.autologinurl + '?userid=' + userId + '&key=' + data.key + '&urltogo=' + url);\n        }).catch(() => {\n            // Couldn't get autologin key, open the final URL without auto-login.\n            return open(url);\n        });\n    }\n\n    /**\n     * Open a URL in browser or InAppBrowser using auto-login in the Moodle site if available and the URL belongs to the site.\n     *\n     * @param {boolean} inApp True to open it in InAppBrowser, false to open in browser.\n     * @param {string} url The URL to open.\n     * @param {object} [options] Override default options passed to inappbrowser.\n     * @param {string} [alertMessage] If defined, an alert will be shown before opening the browser/inappbrowser.\n     * @return {Promise<InAppBrowserObject>} Promise resolved when done. Resolve param is returned only if inApp=true.\n     */\n    openWithAutoLoginIfSameSite(inApp: boolean, url: string, options?: any, alertMessage?: string): Promise<InAppBrowserObject> {\n        if (this.containsUrl(url)) {\n            return this.openWithAutoLogin(inApp, url, options, alertMessage);\n        } else {\n            if (inApp) {\n                this.utils.openInApp(url, options);\n            } else {\n                this.utils.openInBrowser(url);\n            }\n\n            return Promise.resolve(null);\n        }\n    }\n\n    /**\n     * Get the config of this site.\n     * It is recommended to use getStoredConfig instead since it's faster and doesn't use network.\n     *\n     * @param {string} [name] Name of the setting to get. If not set or false, all settings will be returned.\n     * @param {boolean} [ignoreCache] True if it should ignore cached data.\n     * @return {Promise<any>} Promise resolved with site config.\n     */\n    getConfig(name?: string, ignoreCache?: boolean): Promise<any> {\n        const preSets: CoreSiteWSPreSets = {\n            cacheKey: this.getConfigCacheKey()\n        };\n\n        if (ignoreCache) {\n            preSets.getFromCache = false;\n            preSets.emergencyCache = false;\n        }\n\n        return this.read('tool_mobile_get_config', {}, preSets).then((config) => {\n            if (name) {\n                // Return the requested setting.\n                for (const x in config.settings) {\n                    if (config.settings[x].name == name) {\n                        return config.settings[x].value;\n                    }\n                }\n\n                return Promise.reject(null);\n            } else {\n                // Return all settings in the same array.\n                const settings = {};\n                config.settings.forEach((setting) => {\n                    settings[setting.name] = setting.value;\n                });\n\n                return settings;\n            }\n        });\n    }\n\n    /**\n     * Invalidates config WS call.\n     *\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateConfig(): Promise<any> {\n        return this.invalidateWsCacheForKey(this.getConfigCacheKey());\n    }\n\n    /**\n     * Get cache key for getConfig WS calls.\n     *\n     * @return {string} Cache key.\n     */\n    protected getConfigCacheKey(): string {\n        return 'tool_mobile_get_config';\n    }\n\n    /**\n     * Get the stored config of this site.\n     *\n     * @param {string} [name] Name of the setting to get. If not set, all settings will be returned.\n     * @return {any} Site config or a specific setting.\n     */\n    getStoredConfig(name?: string): any {\n        if (!this.config) {\n            return;\n        }\n\n        if (name) {\n            return this.config[name];\n        } else {\n            return this.config;\n        }\n    }\n\n    /**\n     * Check if a certain feature is disabled in the site.\n     *\n     * @param {string} name Name of the feature to check.\n     * @return {boolean} Whether it's disabled.\n     */\n    isFeatureDisabled(name: string): boolean {\n        const disabledFeatures = this.getStoredConfig('tool_mobile_disabledfeatures');\n        if (!disabledFeatures) {\n            return false;\n        }\n\n        const regEx = new RegExp('(,|^)' + this.textUtils.escapeForRegex(name) + '(,|$)', 'g');\n\n        return !!disabledFeatures.match(regEx);\n    }\n\n    /**\n     * Check if the site version is greater than one or several versions.\n     * This function accepts a string or an array of strings. If array, the last version must be the highest.\n     *\n     * @param {string | string[]} versions Version or list of versions to check.\n     * @return {boolean} Whether it's greater or equal, false otherwise.\n     * @description\n     * If a string is supplied (e.g. '3.2.1'), it will check if the site version is greater or equal than this version.\n     *\n     * If an array of versions is supplied, it will check if the site version is greater or equal than the last version,\n     * or if it's higher or equal than any of the other releases supplied but lower than the next major release. The last\n     * version of the array must be the highest version.\n     * For example, if the values supplied are ['3.0.5', '3.2.3', '3.3.1'] the function will return true if the site version\n     * is either:\n     *     - Greater or equal than 3.3.1.\n     *     - Greater or equal than 3.2.3 but lower than 3.3.\n     *     - Greater or equal than 3.0.5 but lower than 3.1.\n     *\n     * This function only accepts versions from 2.4.0 and above. If any of the versions supplied isn't found, it will assume\n     * it's the last released major version.\n     */\n    isVersionGreaterEqualThan(versions: string | string[]): boolean {\n        const siteVersion = parseInt(this.getInfo().version, 10);\n\n        if (Array.isArray(versions)) {\n            if (!versions.length) {\n                return false;\n            }\n\n            for (let i = 0; i < versions.length; i++) {\n                const versionNumber = this.getVersionNumber(versions[i]);\n                if (i == versions.length - 1) {\n                    // It's the last version, check only if site version is greater than this one.\n                    return siteVersion >= versionNumber;\n                } else {\n                    // Check if site version if bigger than this number but lesser than next major.\n                    if (siteVersion >= versionNumber && siteVersion < this.getNextMajorVersionNumber(versions[i])) {\n                        return true;\n                    }\n                }\n            }\n        } else if (typeof versions == 'string') {\n            // Compare with this version.\n            return siteVersion >= this.getVersionNumber(versions);\n        }\n\n        return false;\n    }\n\n    /**\n     * Get a version number from a release version.\n     * If release version is valid but not found in the list of Moodle releases, it will use the last released major version.\n     *\n     * @param {string} version Release version to convert to version number.\n     * @return {number} Version number, 0 if invalid.\n     */\n    protected getVersionNumber(version: string): number {\n        const data = this.getMajorAndMinor(version);\n\n        if (!data) {\n            // Invalid version.\n            return 0;\n        }\n\n        if (typeof this.moodleReleases[data.major] == 'undefined') {\n            // Major version not found. Use the last one.\n            data.major = Object.keys(this.moodleReleases).slice(-1);\n        }\n\n        return this.moodleReleases[data.major] + data.minor;\n    }\n\n    /**\n     * Given a release version, return the major and minor versions.\n     *\n     * @param {string} version Release version (e.g. '3.1.0').\n     * @return {object} Object with major and minor. Returns false if invalid version.\n     */\n    protected getMajorAndMinor(version: string): any {\n        const match = version.match(/(\\d)+(?:\\.(\\d)+)?(?:\\.(\\d)+)?/);\n        if (!match || !match[1]) {\n            // Invalid version.\n            return false;\n        }\n\n        return {\n            major: match[1] + '.' + (match[2] || '0'),\n            minor: parseInt(match[3], 10) || 0\n        };\n    }\n\n    /**\n     * Given a release version, return the next major version number.\n     *\n     * @param {string} version Release version (e.g. '3.1.0').\n     * @return {number} Next major version number.\n     */\n    protected getNextMajorVersionNumber(version: string): number {\n        const data = this.getMajorAndMinor(version),\n            releases = Object.keys(this.moodleReleases);\n        let position;\n\n        if (!data) {\n            // Invalid version.\n            return 0;\n        }\n\n        position = releases.indexOf(data.major);\n\n        if (position == -1 || position == releases.length - 1) {\n            // Major version not found or it's the last one. Use the last one.\n            return this.moodleReleases[releases[position]];\n        }\n\n        return this.moodleReleases[releases[position + 1]];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/classes/site.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, ElementRef, Input, Output, EventEmitter, OnChanges, SimpleChange, Optional } from '@angular/core';\nimport { Platform, NavController, Content } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSite } from '@classes/site';\nimport { CoreLinkDirective } from '../directives/link';\nimport { CoreExternalContentDirective } from '../directives/external-content';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\n\n/**\n * Directive to format text rendered. It renders the HTML and treats all links and media, using CoreLinkDirective\n * and CoreExternalContentDirective.\n *\n * Example usage:\n * <core-format-text [text]=\"myText\" [component]=\"component\" [componentId]=\"componentId\"></core-format-text>\n *\n */\n@Directive({\n    selector: 'core-format-text'\n})\nexport class CoreFormatTextDirective implements OnChanges {\n    @Input() text: string; // The text to format.\n    @Input() siteId?: string; // Site ID to use.\n    @Input() component?: string; // Component for CoreExternalContentDirective.\n    @Input() componentId?: string | number; // Component ID to use in conjunction with the component.\n    @Input() adaptImg?: boolean | string = true; // Whether to adapt images to screen width.\n    @Input() clean?: boolean | string; // Whether all the HTML tags should be removed.\n    @Input() singleLine?: boolean | string; // Whether new lines should be removed (all text in single line). Only if clean=true.\n    @Input() maxHeight?: number; // Max height in pixels to render the content box. It should be 50 at least to make sense.\n                                 // Using this parameter will force display: block to calculate height better.\n                                 // If you want to avoid this use class=\"inline\" at the same time to use display: inline-block.\n    @Input() fullOnClick?: boolean | string; // Whether it should open a new page with the full contents on click.\n                                             // Only if \"max-height\" is set and the content has been collapsed.\n    @Input() fullTitle?: string; // Title to use in full view. Defaults to \"Description\".\n    @Output() afterRender?: EventEmitter<any>; // Called when the data is rendered.\n\n    protected tagsToIgnore = ['AUDIO', 'VIDEO', 'BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'A'];\n    protected element: HTMLElement;\n\n    constructor(element: ElementRef, private sitesProvider: CoreSitesProvider, private domUtils: CoreDomUtilsProvider,\n            private textUtils: CoreTextUtilsProvider, private translate: TranslateService, private platform: Platform,\n            private utils: CoreUtilsProvider, private urlUtils: CoreUrlUtilsProvider, private loggerProvider: CoreLoggerProvider,\n            private filepoolProvider: CoreFilepoolProvider, private appProvider: CoreAppProvider,\n            private contentLinksHelper: CoreContentLinksHelperProvider, @Optional() private navCtrl: NavController,\n            @Optional() private content: Content) {\n        this.element = element.nativeElement;\n        this.element.classList.add('opacity-hide'); // Hide contents until they're treated.\n        this.afterRender = new EventEmitter();\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if (changes.text) {\n            this.formatAndRenderContents();\n        }\n    }\n\n    /**\n     * Apply CoreExternalContentDirective to a certain element.\n     *\n     * @param {HTMLElement} element Element to add the attributes to.\n     */\n    protected addExternalContent(element: HTMLElement): void {\n        // Angular 2 doesn't let adding directives dynamically. Create the CoreExternalContentDirective manually.\n        const extContent = new CoreExternalContentDirective(<any> element, this.loggerProvider, this.filepoolProvider,\n            this.platform, this.sitesProvider, this.domUtils, this.urlUtils, this.appProvider);\n\n        extContent.component = this.component;\n        extContent.componentId = this.componentId;\n        extContent.siteId = this.siteId;\n\n        extContent.ngAfterViewInit();\n    }\n\n    /**\n     * Add class to adapt media to a certain element.\n     *\n     * @param {HTMLElement} element Element to add the class to.\n     */\n    protected addMediaAdaptClass(element: HTMLElement): void {\n        element.classList.add('core-media-adapt-width');\n    }\n\n    /**\n     * Wrap an image with a container to adapt its width and, if needed, add an anchor to view it in full size.\n     *\n     * @param {number} elWidth Width of the directive's element.\n     * @param {HTMLElement} img Image to adapt.\n     */\n    protected adaptImage(elWidth: number, img: HTMLElement): void {\n        const imgWidth = this.getElementWidth(img),\n            // Element to wrap the image.\n            container = document.createElement('span');\n\n        container.classList.add('core-adapted-img-container');\n        container.style.cssFloat = img.style.cssFloat; // Copy the float to correctly position the search icon.\n        if (img.classList.contains('atto_image_button_right')) {\n            container.classList.add('atto_image_button_right');\n        } else if (img.classList.contains('atto_image_button_left')) {\n            container.classList.add('atto_image_button_left');\n        }\n\n        this.domUtils.wrapElement(img, container);\n\n        if (imgWidth > elWidth) {\n            // The image has been adapted, add an anchor to view it in full size.\n            this.addMagnifyingGlass(container, img);\n        }\n    }\n\n    /**\n     * Add a magnifying glass icon to view an image at full size.\n     *\n     * @param {HTMLElement} container The container of the image.\n     * @param {HTMLElement} img The image.\n     */\n    addMagnifyingGlass(container: HTMLElement, img: HTMLElement): void {\n        const imgSrc = this.textUtils.escapeHTML(img.getAttribute('src')),\n            label = this.textUtils.escapeHTML(this.translate.instant('core.openfullimage')),\n            anchor = document.createElement('a');\n\n        anchor.classList.add('core-image-viewer-icon');\n        anchor.setAttribute('aria-label', label);\n        // Add an ion-icon item to apply the right styles, but the ion-icon component won't be executed.\n        anchor.innerHTML = '<ion-icon name=\"search\" class=\"icon icon-md ion-md-search\"></ion-icon>';\n\n        anchor.addEventListener('click', (e: Event) => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.domUtils.viewImage(imgSrc, img.getAttribute('alt'), this.component, this.componentId);\n        });\n\n        container.appendChild(anchor);\n    }\n\n    /**\n     * Finish the rendering, displaying the element again and calling afterRender.\n     */\n    protected finishRender(): void {\n        // Show the element again.\n        this.element.classList.remove('opacity-hide');\n        // Emit the afterRender output.\n        this.afterRender.emit();\n    }\n\n    /**\n     * Format contents and render.\n     */\n    protected formatAndRenderContents(): void {\n        if (!this.text) {\n            this.element.innerHTML = ''; // Remove current contents.\n            this.finishRender();\n\n            return;\n        }\n\n        this.text = this.text ? this.text.trim() : '';\n\n        this.formatContents().then((div: HTMLElement) => {\n            // Disable media adapt to correctly calculate the height.\n            this.element.classList.add('core-disable-media-adapt');\n\n            this.element.innerHTML = ''; // Remove current contents.\n            if (this.maxHeight && div.innerHTML != '') {\n                // Move the children to the current element to be able to calculate the height.\n                // @todo: Display the element?\n                this.domUtils.moveChildren(div, this.element);\n\n                // Height cannot be calculated if the element is not shown while calculating.\n                // Force shorten if it was previously shortened.\n                // @todo: Work on calculate this height better.\n                const height = this.element.style.maxHeight ? 0 : this.getElementHeight(this.element);\n\n                // If cannot calculate height, shorten always.\n                if (!height || height > this.maxHeight) {\n                    const expandInFullview = this.utils.isTrueOrOne(this.fullOnClick) || false,\n                        showMoreDiv = document.createElement('div');\n\n                    showMoreDiv.classList.add('core-show-more');\n                    showMoreDiv.innerHTML = this.translate.instant('core.showmore');\n                    this.element.appendChild(showMoreDiv);\n\n                    if (expandInFullview) {\n                        this.element.classList.add('core-expand-in-fullview');\n                    }\n                    this.element.classList.add('core-text-formatted');\n                    this.element.classList.add('core-shortened');\n                    this.element.style.maxHeight = this.maxHeight + 'px';\n\n                    this.element.addEventListener('click', (e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        const target = <HTMLElement> e.target;\n\n                        if (this.tagsToIgnore.indexOf(target.tagName) === -1 || (target.tagName === 'A' &&\n                            !target.getAttribute('href'))) {\n                            if (!expandInFullview) {\n                                // Change class.\n                                this.element.classList.toggle('core-shortened');\n\n                                return;\n                            }\n                        }\n\n                        // Open a new state with the contents.\n                        this.textUtils.expandText(this.fullTitle || this.translate.instant('core.description'), this.text,\n                            this.component, this.componentId);\n                    });\n                }\n            } else {\n                this.domUtils.moveChildren(div, this.element);\n            }\n\n            this.element.classList.remove('core-disable-media-adapt');\n            this.finishRender();\n        });\n    }\n\n    /**\n     * Apply formatText and set sub-directives.\n     *\n     * @return {Promise<HTMLElement>} Promise resolved with a div element containing the code.\n     */\n    protected formatContents(): Promise<HTMLElement> {\n\n        let site: CoreSite;\n\n        // Retrieve the site since it might be needed later.\n        return this.sitesProvider.getSite(this.siteId).catch(() => {\n            // Error getting the site. This probably means that there is no current site and no siteId was supplied.\n        }).then((siteInstance: CoreSite) => {\n            site = siteInstance;\n\n            // Apply format text function.\n            return this.textUtils.formatText(this.text, this.utils.isTrueOrOne(this.clean),\n                this.utils.isTrueOrOne(this.singleLine));\n        }).then((formatted) => {\n            const div = document.createElement('div'),\n                canTreatVimeo = site && site.isVersionGreaterEqualThan(['3.3.4', '3.4']);\n            let images,\n                anchors,\n                audios,\n                videos,\n                iframes,\n                buttons;\n\n            div.innerHTML = formatted;\n            images = Array.from(div.querySelectorAll('img'));\n            anchors = Array.from(div.querySelectorAll('a'));\n            audios = Array.from(div.querySelectorAll('audio'));\n            videos = Array.from(div.querySelectorAll('video'));\n            iframes = Array.from(div.querySelectorAll('iframe'));\n            buttons = Array.from(div.querySelectorAll('.button'));\n\n            // Walk through the content to find the links and add our directive to it.\n            // Important: We need to look for links first because in 'img' we add new links without core-link.\n            anchors.forEach((anchor) => {\n                // Angular 2 doesn't let adding directives dynamically. Create the CoreLinkDirective manually.\n                const linkDir = new CoreLinkDirective(anchor, this.domUtils, this.utils, this.sitesProvider, this.urlUtils,\n                    this.contentLinksHelper, this.navCtrl, this.content);\n                linkDir.capture = true;\n                linkDir.ngOnInit();\n\n                this.addExternalContent(anchor);\n            });\n\n            if (images && images.length > 0) {\n                // If cannot calculate element's width, use a medium number to avoid false adapt image icons appearing.\n                const elWidth = this.getElementWidth(this.element) || 100;\n\n                // Walk through the content to find images, and add our directive.\n                images.forEach((img: HTMLElement) => {\n                    this.addMediaAdaptClass(img);\n                    this.addExternalContent(img);\n                    if (this.utils.isTrueOrOne(this.adaptImg)) {\n                        this.adaptImage(elWidth, img);\n                    }\n                });\n            }\n\n            audios.forEach((audio) => {\n                this.treatMedia(audio);\n                if (this.platform.is('ios')) {\n                    // Set data-tap-disabled=\"true\" to make slider work in iOS.\n                    audio.setAttribute('data-tap-disabled', true);\n                }\n            });\n\n            videos.forEach((video) => {\n                this.treatVideoFilters(video);\n                this.treatMedia(video);\n                // Set data-tap-disabled=\"true\" to make controls work in Android (see MOBILE-1452).\n                video.setAttribute('data-tap-disabled', true);\n            });\n\n            iframes.forEach((iframe) => {\n                this.treatIframe(iframe, site, canTreatVimeo);\n            });\n\n            // Handle buttons with inner links.\n            buttons.forEach((button: HTMLElement) => {\n                // Check if it has a link inside.\n                if (button.querySelector('a')) {\n                    button.classList.add('core-button-with-inner-link');\n                }\n            });\n\n            return div;\n        });\n    }\n\n    /**\n     * Returns the element width in pixels.\n     *\n     * @param {HTMLElement} element Element to get width from.\n     * @return {number} The width of the element in pixels. When 0 is returned it means the element is not visible.\n     */\n    protected getElementWidth(element: HTMLElement): number {\n        let width = this.domUtils.getElementWidth(element);\n\n        if (!width) {\n            // All elements inside are floating or inline. Change display mode to allow calculate the width.\n            const parentWidth = this.domUtils.getElementWidth(element.parentNode, true, false, false, true),\n                previousDisplay = getComputedStyle(element, null).display;\n\n            element.style.display = 'inline-block';\n\n            width = this.domUtils.getElementWidth(element);\n\n            // If width is incorrectly calculated use parent width instead.\n            if (parentWidth > 0 && (!width || width > parentWidth)) {\n                width = parentWidth;\n            }\n\n            element.style.display = previousDisplay;\n        }\n\n        return width;\n    }\n\n    /**\n     * Returns the element height in pixels.\n     *\n     * @param {HTMLElement} elementAng Element to get height from.\n     * @return {number} The height of the element in pixels. When 0 is returned it means the element is not visible.\n     */\n    protected getElementHeight(element: HTMLElement): number {\n        return this.domUtils.getElementHeight(element) || 0;\n    }\n\n    /**\n     * Treat video filters. Currently only treating youtube video using video JS.\n     *\n     * @param {HTMLElement} el Video element.\n     */\n    protected treatVideoFilters(video: HTMLElement): void {\n        // Treat Video JS Youtube video links and translate them to iframes.\n        if (!video.classList.contains('video-js')) {\n            return;\n        }\n\n        const data = this.textUtils.parseJSON(video.getAttribute('data-setup') || video.getAttribute('data-setup-lazy') || '{}'),\n            youtubeId = data.techOrder && data.techOrder[0] && data.techOrder[0] == 'youtube' && data.sources && data.sources[0] &&\n                data.sources[0].src && this.youtubeGetId(data.sources[0].src);\n\n        if (!youtubeId) {\n            return;\n        }\n\n        const iframe = document.createElement('iframe');\n        iframe.id = video.id;\n        iframe.src = 'https://www.youtube.com/embed/' + youtubeId;\n        iframe.setAttribute('frameborder', '0');\n        iframe.width = '100%';\n        iframe.height = '300';\n\n        // Replace video tag by the iframe.\n        video.parentNode.replaceChild(iframe, video);\n    }\n\n    /**\n     * Add media adapt class and apply CoreExternalContentDirective to the media element and its sources and tracks.\n     *\n     * @param {HTMLElement} element Video or audio to treat.\n     */\n    protected treatMedia(element: HTMLElement): void {\n        this.addMediaAdaptClass(element);\n        this.addExternalContent(element);\n\n        const sources = Array.from(element.querySelectorAll('source')),\n            tracks = Array.from(element.querySelectorAll('track'));\n\n        sources.forEach((source) => {\n            source.setAttribute('target-src', source.getAttribute('src'));\n            source.removeAttribute('src');\n            this.addExternalContent(source);\n        });\n\n        tracks.forEach((track) => {\n            this.addExternalContent(track);\n        });\n    }\n\n    /**\n     * Add media adapt class and treat the iframe source.\n     *\n     * @param {HTMLIFrameElement} iframe Iframe to treat.\n     * @param {CoreSite} site Site instance.\n     * @param  {Boolean} canTreatVimeo Whether Vimeo videos can be treated in the site.\n     */\n    protected treatIframe(iframe: HTMLIFrameElement, site: CoreSite, canTreatVimeo: boolean): void {\n        this.addMediaAdaptClass(iframe);\n\n        if (iframe.src && canTreatVimeo) {\n            // Check if it's a Vimeo video. If it is, use the wsplayer script instead to make restricted videos work.\n            const matches = iframe.src.match(/https?:\\/\\/player\\.vimeo\\.com\\/video\\/([^\\/]*)/);\n            if (matches && matches[1]) {\n                let newUrl = this.textUtils.concatenatePaths(site.getURL(), '/media/player/vimeo/wsplayer.php?video=') +\n                    matches[1] + '&token=' + site.getToken();\n                if (iframe.width) {\n                    newUrl = newUrl + '&width=' + iframe.width;\n                }\n                if (iframe.height) {\n                    newUrl = newUrl + '&height=' + iframe.height;\n                }\n\n                iframe.src = newUrl;\n            }\n        }\n    }\n\n    /**\n     * Convenience function to extract YouTube Id to translate to embedded video.\n     * Based on http://stackoverflow.com/questions/3452546/javascript-regex-how-to-get-youtube-video-id-from-url\n     *\n     * @param {string} url URL of the video.\n     */\n    protected youtubeGetId(url: string): string {\n        const regExp = /^.*(?:(?:youtu.be\\/)|(?:v\\/)|(?:\\/u\\/\\w\\/)|(?:embed\\/)|(?:watch\\?))\\??v?=?([^#\\&\\?]*).*/,\n            match = url.match(regExp);\n\n        return (match && match[1].length == 11) ? match[1] : '';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/format-text.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, AfterViewInit, Input, ElementRef, OnDestroy } from '@angular/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Directive to keep the keyboard open when clicking a certain element (usually a button).\n *\n * @description\n *\n * This directive needs to be applied to an input or textarea. The value of the directive needs to be a selector\n * to identify the element to listen for clicks (usually a button).\n *\n * When that element is clicked, the input that has this directive will keep the focus if it has it already and the keyboard\n * won't be closed.\n *\n * Example usage:\n *\n * <textarea [core-keep-keyboard]=\"'#mma-messages-send-message-button'\"></textarea>\n * <button id=\"mma-messages-send-message-button\">Send</button>\n *\n * Alternatively, this directive can be applied to the button. The value of the directive needs to be a selector to identify\n * the input element. In this case, you need to set [inButton]=\"true\".\n *\n * Example usage:\n *\n * <textarea id=\"send-message-input\"></textarea>\n * <button [core-keep-keyboard]=\"'#send-message-input'\" [inButton]=\"true\">Send</button>\n */\n@Directive({\n    selector: '[core-keep-keyboard]'\n})\nexport class CoreKeepKeyboardDirective implements AfterViewInit, OnDestroy {\n    @Input('core-keep-keyboard') selector: string; // Selector to identify the button or input.\n    @Input() inButton?: boolean | string; // Whether this directive is applied to the button (true) or to the input (false).\n\n    protected element: HTMLElement; // Current element.\n    protected button: HTMLElement; // Button element.\n    protected input: HTMLElement; // Input element.\n    protected lastFocusOut = 0; // Last time the input was focused out.\n    protected clickListener: any; // Listener for clicks in the button.\n    protected focusOutListener: any; // Listener for focusout in the input.\n    protected focusAgainListener: any; // Another listener for focusout, with the purpose to focus again.\n    protected stopFocusAgainTimeout: any; // Timeout to stop focus again listener.\n\n    constructor(element: ElementRef, private domUtils: CoreDomUtilsProvider, private utils: CoreUtilsProvider) {\n        this.element = element.nativeElement;\n    }\n\n    /**\n     * View has been initialized.\n     */\n    ngAfterViewInit(): void {\n        // Use a setTimeout because to make sure that child components have been treated.\n        setTimeout(() => {\n            const inButton = this.utils.isTrueOrOne(this.inButton);\n            let candidateEls,\n                selectedEl;\n\n            if (typeof this.selector != 'string' || !this.selector) {\n                // Not a valid selector, stop.\n                return;\n            }\n\n            // Get the selected element. Get the last one found.\n            candidateEls = document.querySelectorAll(this.selector);\n            selectedEl = candidateEls[candidateEls.length - 1];\n            if (!selectedEl) {\n                // Element not found.\n                return;\n            }\n\n            if (inButton) {\n                // The directive is applied to the button.\n                this.button = this.element;\n                this.input = selectedEl;\n            } else {\n                // The directive is applied to the input.\n                this.button = selectedEl;\n\n                if (this.element.tagName == 'ION-INPUT') {\n                    // Search the inner input.\n                    this.input = this.element.querySelector('input');\n                } else if (this.element.tagName == 'ION-TEXTAREA') {\n                    // Search the inner textarea.\n                    this.input = this.element.querySelector('textarea');\n                } else {\n                    this.input = this.element;\n                }\n\n                if (!this.input) {\n                    // Input not found, stop.\n                    return;\n                }\n            }\n\n            // Listen for focusout event. This is to be able to check if previous focus was on this element.\n            this.focusOutListener = this.focusOut.bind(this);\n            this.input.addEventListener('focusout', this.focusOutListener);\n\n            // Listen for clicks in the button.\n            this.clickListener = this.buttonClicked.bind(this);\n            this.button.addEventListener('click', this.clickListener);\n        });\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        if (this.button && this.clickListener) {\n            this.button.removeEventListener('click', this.clickListener);\n        }\n        if (this.input && this.focusOutListener) {\n            this.input.removeEventListener('focusout', this.focusOutListener);\n        }\n    }\n\n    /**\n     * The button we're interested in was clicked.\n     */\n    protected buttonClicked(): void {\n        if (document.activeElement == this.input) {\n            // Directive's element is focused at the time the button is clicked. Listen for focusout to focus it again.\n            this.focusAgainListener = this.focusElementAgain.bind(this);\n            this.input.addEventListener('focusout', this.focusAgainListener);\n        } else if (document.activeElement == this.button && Date.now() - this.lastFocusOut < 200) {\n            // Last focused element was the directive's element, focus it again.\n            setTimeout(this.focusElementAgain.bind(this), 0);\n        }\n    }\n\n    /**\n     * If keyboard is open, focus the input again and stop listening focusout to focus again if needed.\n     */\n    protected focusElementAgain(): void {\n        this.domUtils.focusElement(this.input);\n\n        if (this.focusAgainListener) {\n            // Sometimes we can receive more than 1 focus out event.\n            // If we spend 1 second without receiving any, stop listening for them.\n            const listener = this.focusAgainListener; // Store it in a local variable, in case it changes.\n            clearTimeout(this.stopFocusAgainTimeout);\n            this.stopFocusAgainTimeout = setTimeout(() => {\n                this.input.removeEventListener('focusout', listener);\n                if (listener == this.focusAgainListener) {\n                    delete this.focusAgainListener;\n                }\n            }, 1000);\n        }\n    }\n\n    /**\n     * Input was focused out, save the time it was done.\n     */\n    protected focusOut(): void {\n        this.lastFocusOut = Date.now();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/keep-keyboard.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, OnInit, ElementRef, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n/**\n * Directive to go to user profile on click.\n */\n@Directive({\n    selector: '[core-user-link]'\n})\nexport class CoreUserLinkDirective implements OnInit {\n    @Input() userId: number; // User id to open the profile.\n    @Input() courseId?: number; // If set, course id to show the user info related to that course.\n\n    protected element: HTMLElement;\n\n    constructor(element: ElementRef, @Optional() private navCtrl: NavController) {\n        // This directive can be added dynamically. In that case, the first param is the anchor HTMLElement.\n        this.element = element.nativeElement || element;\n    }\n\n    /**\n     * Function executed when the component is initialized.\n     */\n    ngOnInit(): void {\n        this.element.addEventListener('click', (event) => {\n            // If the event prevented default action, do nothing.\n            if (!event.defaultPrevented) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.navCtrl.push('CoreUserProfilePage', { userId: this.userId, courseId: this.courseId });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/user-link.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, ElementRef, HostListener, Output, EventEmitter } from '@angular/core';\n\n/**\n * Directive to adapt a textarea rows depending on the input text. It's based on Moodle's data-auto-rows.\n *\n * @description\n * Usage:\n * <textarea class=\"core-textarea\" [(ngModel)]=\"message\" rows=\"1\" core-auto-rows></textarea>\n */\n@Directive({\n    selector: 'textarea[core-auto-rows]'\n})\nexport class CoreAutoRowsDirective {\n    protected element: HTMLTextAreaElement;\n    protected height = 0;\n\n    @Output() onResize: EventEmitter<void>; // Emit when resizing the textarea.\n\n    constructor(element: ElementRef) {\n        this.element = element.nativeElement || element;\n        this.height = this.element.scrollHeight;\n        this.onResize = new EventEmitter();\n    }\n\n    @HostListener('input') onInput(): void {\n        this.resize();\n    }\n\n    @HostListener('change') onChange(): void {\n        // Fired on reset. Wait to the change to be finished.\n        setTimeout(() => {\n            this.resize();\n        }, 300);\n    }\n\n    /**\n     * Resize after init.\n     */\n    ngAfterViewInit(): void {\n        this.resize();\n    }\n\n    /**\n     * Resize the textarea.\n     * @param {any} $event Event fired.\n     */\n    protected resize($event?: any): void {\n        // Set height to 1px to force scroll height to calculate correctly.\n        this.element.style.height = '1px';\n        this.element.style.height = this.element.scrollHeight + 'px';\n\n        // Emit event when resizing.\n        if (this.height != this.element.scrollHeight) {\n            this.height = this.element.scrollHeight;\n            this.onResize.emit();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/auto-rows.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// Based on http://roblouie.com/article/198/using-gestures-in-the-ionic-2-beta/\n\nimport { Directive, ElementRef, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { Gesture } from 'ionic-angular/gestures/gesture';\n\n/**\n * Directive to add long press actions to html elements.\n */\n@Directive({\n    selector: '[longPress]'\n})\nexport class CoreLongPressDirective implements OnInit, OnDestroy {\n    el: HTMLElement;\n    pressGesture: Gesture;\n\n    @Output() longPress = new EventEmitter();\n\n    constructor(el: ElementRef) {\n        this.el = el.nativeElement;\n        this.el.setAttribute('tappable', '');\n    }\n\n    /**\n     * Initialize gesture listening.\n     */\n    ngOnInit(): void {\n        this.pressGesture = new Gesture(this.el);\n        this.pressGesture.listen();\n        this.pressGesture.on('press', (e) => {\n            this.longPress.emit(e);\n        });\n    }\n\n    /**\n     * Destroy gesture listening.\n     */\n    ngOnDestroy(): void {\n        this.pressGesture.destroy();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/long-press.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\n\n/**\n * Pipe to turn a number in bytes to a human readable size (e.g. 5,25 MB).\n */\n@Pipe({\n    name: 'coreBytesToSize',\n})\nexport class CoreBytesToSizePipe implements PipeTransform {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private textUtils: CoreTextUtilsProvider) {\n        this.logger = logger.getInstance('CoreBytesToSizePipe');\n    }\n\n    /**\n     * Takes a number and turns it to a human readable size.\n     *\n     * @param {number|string} value The bytes to convert.\n     * @return {string} Readable bytes.\n     */\n    transform(value: number | string): string {\n        if (typeof value == 'string') {\n            // Convert the value to a number.\n            const numberValue = parseInt(value, 10);\n            if (isNaN(numberValue)) {\n                this.logger.error('Invalid value received', value);\n\n                return value;\n            }\n            value = numberValue;\n        }\n\n        return this.textUtils.bytesToSize(value);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/bytes-to-size.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to search URLs that are not inside <a> tags and add the corresponding <a> tags.\n */\n@Pipe({\n    name: 'coreCreateLinks',\n})\nexport class CoreCreateLinksPipe implements PipeTransform {\n    private replacePattern = /(\\b(https?|ftp):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])(?![^<]*>|[^<>]*<\\/)/gim;\n\n    /**\n     * Takes some text and adds anchor tags to all links that aren't inside anchors.\n     *\n     * @param {string} text Text to treat.\n     * @return {string} Treated text.\n     */\n    transform(text: string): string {\n        return text.replace(this.replacePattern, '<a href=\"$1\">$1</a>');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/create-links.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport * as moment from 'moment';\n\n/**\n * Filter to display a date using the day, or the time.\n *\n * This shows a short version of a date. Use this filter when you want\n * the user to visualise when the action was done relatively to today's date.\n *\n * For instance, if the action happened during this day it will display the time,\n * but when the action happened few days ago, it will display the day of the week.\n *\n * The older the date is, the more information about it will be displayed.\n *\n * This filter expects a timestamp NOT including milliseconds.\n */\n@Pipe({\n    name: 'coreDateDayOrTime',\n})\nexport class CoreDateDayOrTimePipe implements PipeTransform {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private translate: TranslateService) {\n        this.logger = logger.getInstance('CoreDateDayOrTimePipe');\n    }\n\n    /**\n     * Format a timestamp.\n     *\n     * @param {number|string} timestamp The UNIX timestamp (without milliseconds).\n     * @return {string} Formatted time.\n     */\n    transform(timestamp: string | number): string {\n        if (typeof timestamp == 'string') {\n            // Convert the value to a number.\n            const numberTimestamp = parseInt(timestamp, 10);\n            if (isNaN(numberTimestamp)) {\n                this.logger.error('Invalid value received', timestamp);\n\n                return timestamp;\n            }\n            timestamp = numberTimestamp;\n        }\n\n        return moment(timestamp * 1000).calendar(null, {\n            sameDay: 'LT',\n            lastDay: this.translate.instant('core.dflastweekdate'),\n            lastWeek: this.translate.instant('core.dflastweekdate'),\n            sameElse: 'L'\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/date-day-or-time.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport * as moment from 'moment';\n\n/**\n * Filter to turn a number of seconds to a duration. E.g. 60 -> 1 minute.\n */\n@Pipe({\n    name: 'coreDuration',\n})\nexport class CoreDurationPipe implements PipeTransform {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider) {\n        this.logger = logger.getInstance('CoreBytesToSizePipe');\n    }\n\n    /**\n     * Turn a number of seconds to a duration. E.g. 60 -> 1 minute.\n     *\n     * @param {number|string} seconds The number of seconds.\n     * @return {string} Formatted duration.\n     */\n    transform(seconds: string | number): string {\n        if (typeof seconds == 'string') {\n            // Convert the value to a number.\n            const numberSeconds = parseInt(seconds, 10);\n            if (isNaN(numberSeconds)) {\n                this.logger.error('Invalid value received', seconds);\n\n                return seconds;\n            }\n            seconds = numberSeconds;\n        }\n\n        return moment.duration(seconds * 1000).humanize();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/duration.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport * as moment from 'moment';\n\n/**\n * Filter to format a date.\n */\n@Pipe({\n    name: 'coreFormatDate',\n})\nexport class CoreFormatDatePipe implements PipeTransform {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private translate: TranslateService) {\n        this.logger = logger.getInstance('CoreDateDayOrTimePipe');\n    }\n\n    /**\n     * Format a date.\n     *\n     * @param {string|number} timestamp Timestamp to format (in milliseconds). If not defined, use current time.\n     * @param {string} format Format to use. It should be a string code to handle i18n (e.g. core.dftimedate). If the code\n     *                        doesn't have a prefix, 'core' will be used by default. E.g. 'dftimedate' -> 'core.dftimedate'.\n     * @return {string} Formatted date.\n     */\n    transform(timestamp: string | number, format: string): string {\n        timestamp = timestamp || Date.now();\n\n        if (typeof timestamp == 'string') {\n            // Convert the value to a number.\n            const numberTimestamp = parseInt(timestamp, 10);\n            if (isNaN(numberTimestamp)) {\n                this.logger.error('Invalid value received', timestamp);\n\n                return timestamp;\n            }\n            timestamp = numberTimestamp;\n        }\n\n        if (format.indexOf('df') == 0) {\n            format = this.translate.instant('core.' + format);\n        } else if (format.indexOf('.') > 0) {\n            format = this.translate.instant(format);\n        }\n\n        return moment(timestamp).format(format);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/format-date.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to remove HTML tags.\n */\n@Pipe({\n    name: 'coreNoTags',\n})\nexport class CoreNoTagsPipe implements PipeTransform {\n\n    /**\n     * Takes a text and removes HTML tags.\n     *\n     * @param {string} text The text to treat.\n     * @return {string} Treated text.\n     */\n    transform(text: string): string {\n        return text.replace(/(<([^>]+)>)/ig, '');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/no-tags.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreConstants } from '@core/constants';\n\n/**\n * Pipe to convert a number of seconds to Hours:Minutes:Seconds.\n *\n * This converts a number of seconds to Hours:Minutes:Seconds. If the number of seconds is negative, returns 00:00:00.\n */\n@Pipe({\n    name: 'coreSecondsToHMS',\n})\nexport class CoreSecondsToHMSPipe implements PipeTransform {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private textUtils: CoreTextUtilsProvider) {\n        this.logger = logger.getInstance('CoreSecondsToHMSPipe');\n    }\n\n    /**\n     * Convert a number of seconds to Hours:Minutes:Seconds.\n     *\n     * @param {number|string} seconds Number of seconds.\n     * @return {string} Formatted seconds.\n     */\n    transform(seconds: string | number): string {\n        let hours,\n            minutes;\n\n        if (!seconds || seconds < 0) {\n            seconds = 0;\n        } else if (typeof seconds == 'string') {\n            // Convert the value to a number.\n            const numberSeconds = parseInt(seconds, 10);\n            if (isNaN(numberSeconds)) {\n                this.logger.error('Invalid value received', seconds);\n\n                return seconds;\n            }\n            seconds = numberSeconds;\n        }\n\n        // Don't allow decimals.\n        seconds = Math.floor(seconds);\n\n        hours = Math.floor(seconds / CoreConstants.SECONDS_HOUR);\n        seconds -= hours * CoreConstants.SECONDS_HOUR;\n        minutes = Math.floor(seconds / CoreConstants.SECONDS_MINUTE);\n        seconds -= minutes * CoreConstants.SECONDS_MINUTE;\n\n        return this.textUtils.twoDigits(hours) + ':' + this.textUtils.twoDigits(minutes) + ':' + this.textUtils.twoDigits(seconds);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/seconds-to-hms.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport * as moment from 'moment';\n\n/**\n * Pipe to turn a UNIX timestamp to \"time ago\".\n */\n@Pipe({\n    name: 'coreTimeAgo',\n})\nexport class CoreTimeAgoPipe implements PipeTransform {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider) {\n        this.logger = logger.getInstance('CoreTimeAgoPipe');\n    }\n\n    /**\n     * Turn a UNIX timestamp to \"time ago\".\n     *\n     * @param {number|string} timestamp The UNIX timestamp (without milliseconds).\n     * @return {string} Formatted time.\n     */\n    transform(timestamp: string | number): string {\n        if (typeof timestamp == 'string') {\n            // Convert the value to a number.\n            const numberTimestamp = parseInt(timestamp, 10);\n            if (isNaN(numberTimestamp)) {\n                this.logger.error('Invalid value received', timestamp);\n\n                return timestamp;\n            }\n            timestamp = numberTimestamp;\n        }\n\n        return moment(timestamp * 1000).fromNow(true);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/time-ago.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { CoreLoggerProvider } from '@providers/logger';\n\n/**\n * Filter to format a timestamp to a locale string. Timestamp can be in seconds or milliseconds.\n */\n@Pipe({\n    name: 'coreToLocaleString',\n})\nexport class CoreToLocaleStringPipe implements PipeTransform {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider) {\n        this.logger = logger.getInstance('CoreToLocaleStringPipe');\n    }\n\n    /**\n     * Format a timestamp to a locale string.\n     *\n     * @param {number|string} timestamp The timestamp (can be in seconds or milliseconds).\n     * @return {string} Formatted time.\n     */\n    transform(timestamp: number | string): string {\n        if (typeof timestamp == 'string') {\n            // Convert the value to a number.\n            const numberTimestamp = parseInt(timestamp, 10);\n            if (isNaN(numberTimestamp)) {\n                this.logger.error('Invalid value received', timestamp);\n\n                return timestamp;\n            }\n            timestamp = numberTimestamp;\n        }\n\n        if (timestamp < 0) {\n            // Date not valid.\n            return '';\n        }\n        if (timestamp < 100000000000) {\n            // Timestamp is in seconds, convert it to milliseconds.\n            timestamp = timestamp * 1000;\n        }\n\n        return new Date(timestamp).toLocaleString();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/to-locale-string.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { coreShowHideAnimation } from '@classes/animations';\n\n/**\n * Component to show a loading spinner and message while data is being loaded.\n *\n * It will show a spinner with a message and hide all the content until 'dataLoaded' variable is set to true.\n * If 'message' and 'dynMessage' attributes aren't set, default message \"Loading\" is shown.\n * 'message' attribute accepts hardcoded strings, variables, filters, etc. E.g. message=\"'core.loading' | translate\".\n *\n * Usage:\n * <core-loading [message]=\"loadingMessage\" [hideUntil]=\"dataLoaded\">\n *     <!-- CONTENT TO HIDE UNTIL LOADED -->\n * </core-loading>\n *\n * IMPORTANT: Due to how ng-content works in Angular, the content of core-loading will be executed as soon as your view\n * is loaded, even if the content hidden. So if you have the following code:\n * <core-loading [hideUntil]=\"dataLoaded\"><my-component></my-component></core-loading>\n *\n * The component \"my-component\" will be initialized immediately, even if dataLoaded is false, but it will be hidden. If you want\n * your component to be initialized only if dataLoaded is true, then you should use ngIf:\n * <core-loading [hideUntil]=\"dataLoaded\"><my-component *ngIf=\"dataLoaded\"></my-component></core-loading>\n */\n@Component({\n    selector: 'core-loading',\n    templateUrl: 'loading.html',\n    animations: [coreShowHideAnimation]\n})\nexport class CoreLoadingComponent implements OnInit {\n    @Input() hideUntil: boolean; // Determine when should the contents be shown.\n    @Input() message?: string; // Message to show while loading.\n\n    constructor(private translate: TranslateService) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        if (!this.message) {\n            // Default loading message.\n            this.message = this.translate.instant('core.loading');\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/loading/loading.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, AfterViewInit, ElementRef } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Directive to add a red asterisk for required input fields.\n *\n * @description\n * For forms with required and not required fields, it is recommended to use this directive to mark the required ones.\n *\n * This directive should be applied in the label. Example:\n *\n * <ion-label core-mark-required=\"{{field.required}}\">{{ 'core.login.username' | translate }}</ion-label>\n */\n@Component({\n    selector: '[core-mark-required]',\n    templateUrl: 'mark-required.html'\n})\nexport class CoreMarkRequiredComponent implements OnInit, AfterViewInit {\n    @Input('core-mark-required') coreMarkRequired: boolean | string = true;\n    protected element: HTMLElement;\n    requiredLabel: string;\n\n    constructor(element: ElementRef, private translate: TranslateService, private textUtils: CoreTextUtilsProvider,\n            private utils: CoreUtilsProvider) {\n        this.element = element.nativeElement;\n        this.requiredLabel = this.translate.instant('core.required');\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.coreMarkRequired = this.utils.isTrueOrOne(this.coreMarkRequired);\n    }\n\n    /**\n     * Called after the view is initialized.\n     */\n    ngAfterViewInit(): void {\n        if (this.coreMarkRequired) {\n            // Add the \"required\" to the aria-label.\n            const ariaLabel = this.element.getAttribute('aria-label') || this.textUtils.cleanTags(this.element.innerHTML, true);\n            if (ariaLabel) {\n                this.element.setAttribute('aria-label', ariaLabel + ' ' + this.requiredLabel);\n            }\n        } else {\n            // Remove the \"required\" from the aria-label.\n            const ariaLabel = this.element.getAttribute('aria-label');\n            if (ariaLabel) {\n                this.element.setAttribute('aria-label', ariaLabel.replace(' ' + this.requiredLabel, ''));\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/mark-required/mark-required.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\n/**\n * Component to show errors if an input isn't valid.\n *\n * @description\n * The purpose of this component is to make easier and consistent the validation of forms.\n *\n * It should be applied next to the input element (ion-input, ion-select, ...). In case of ion-checkbox, it should be in another\n * item, placing it in the same item as the checkbox will cause problems.\n *\n * Please notice that the inputs need to have a FormControl to make it work. That FormControl needs to be passed to this component.\n *\n * If this component is placed in the same ion-item as a ion-label or ion-input, then it should have the attribute \"item-content\",\n * otherwise Ionic will remove it.\n *\n * Example usage:\n *\n * <ion-item text-wrap>\n *     <ion-label stacked core-mark-required=\"true\">{{ 'core.login.username' | translate }}</ion-label>\n *     <ion-input type=\"text\" name=\"username\" formControlName=\"username\"></ion-input>\n *     <core-input-errors item-content [control]=\"myForm.controls.username\" [errorMessages]=\"usernameErrors\"></core-input-errors>\n * </ion-item>\n */\n@Component({\n    selector: 'core-input-errors',\n    templateUrl: 'input-errors.html'\n})\nexport class CoreInputErrorsComponent implements OnInit {\n    @Input('control') formControl: FormControl;\n    @Input() errorMessages?: any;\n    errorKeys: any[];\n\n    constructor(private translate: TranslateService) { }\n\n    /**\n     * Component is being initialized.\n     */\n    ngOnInit(): void {\n        this.initErrorMessages();\n\n        this.errorKeys = Object.keys(this.errorMessages);\n    }\n\n    /**\n     * Initialize some common errors if they aren't set.\n     */\n    protected initErrorMessages(): void {\n        this.errorMessages = this.errorMessages || {};\n\n        this.errorMessages.required = this.errorMessages.required || this.translate.instant('core.required');\n        this.errorMessages.email = this.errorMessages.email || this.translate.instant('core.login.invalidemail');\n        this.errorMessages.date = this.errorMessages.date || this.translate.instant('core.login.invaliddate');\n        this.errorMessages.datetime = this.errorMessages.datetime || this.translate.instant('core.login.invaliddate');\n        this.errorMessages.datetimelocal = this.errorMessages.datetimelocal || this.translate.instant('core.login.invaliddate');\n        this.errorMessages.time = this.errorMessages.time || this.translate.instant('core.login.invalidtime');\n        this.errorMessages.url = this.errorMessages.url || this.translate.instant('core.login.invalidurl');\n\n        // @todo: Check how to handle min/max errors once we have a test case to use. Also, review previous errors.\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/input-errors/input-errors.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, AfterViewInit, Input, ElementRef } from '@angular/core';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Component to allow showing and hiding a password. The affected input MUST have a name to identify it.\n *\n * @description\n * This directive needs to surround the input with the password.\n *\n * You need to supply the name of the input.\n *\n * Example:\n *\n * <core-show-password item-content [name]=\"'password'\">\n *     <ion-input type=\"password\" name=\"password\"></ion-input>\n * </core-show-password>\n */\n@Component({\n    selector: 'core-show-password',\n    templateUrl: 'show-password.html'\n})\nexport class CoreShowPasswordComponent implements OnInit, AfterViewInit {\n    @Input() name: string; // Name of the input affected.\n    @Input() initialShown?: boolean | string; // Whether the password should be shown at start.\n\n    shown: boolean; // Whether the password is shown.\n    label: string; // Label for the button to show/hide.\n    iconName: string; // Name of the icon of the button to show/hide.\n    selector = ''; // Selector to identify the input.\n\n    protected input: HTMLInputElement; // Input affected.\n    protected element: HTMLElement; // Current element.\n\n    constructor(element: ElementRef, private utils: CoreUtilsProvider) {\n        this.element = element.nativeElement;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.shown = this.utils.isTrueOrOne(this.initialShown);\n        this.selector = 'input[name=\"' + this.name + '\"]';\n        this.setData();\n    }\n\n    /**\n     * View has been initialized.\n     */\n    ngAfterViewInit(): void {\n        this.searchInput();\n    }\n\n    /**\n     * Search the input to show/hide.\n     */\n    protected searchInput(): void {\n        // Search the input.\n        this.input = <HTMLInputElement> this.element.querySelector(this.selector);\n\n        if (this.input) {\n            // Input found. Set the right type.\n            this.input.type = this.shown ? 'text' : 'password';\n\n            // By default, don't autocapitalize and autocorrect.\n            if (!this.input.getAttribute('autocorrect')) {\n                this.input.setAttribute('autocorrect', 'off');\n            }\n            if (!this.input.getAttribute('autocapitalize')) {\n                this.input.setAttribute('autocapitalize', 'none');\n            }\n        }\n    }\n\n    /**\n     * Set label, icon name and input type.\n     */\n    protected setData(): void {\n        this.label = this.shown ? 'core.hide' : 'core.show';\n        this.iconName = this.shown ? 'eye-off' : 'eye';\n        if (this.input) {\n            this.input.type = this.shown ? 'text' : 'password';\n        }\n    }\n\n    /**\n     * Toggle show/hide password.\n     */\n    toggle(): void {\n        this.shown = !this.shown;\n        this.setData();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/show-password/show-password.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { Platform } from 'ionic-angular';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n */\n@Component({\n    selector: 'core-iframe',\n    templateUrl: 'iframe.html'\n})\nexport class CoreIframeComponent implements OnInit {\n\n    @ViewChild('iframe') iframe: ElementRef;\n    @Input() src: string;\n    @Input() iframeWidth: string;\n    @Input() iframeHeight: string;\n    loading: boolean;\n    safeUrl: SafeResourceUrl;\n\n    protected logger;\n    protected tags = ['iframe', 'frame', 'object', 'embed'];\n    protected IFRAME_TIMEOUT = 15000;\n\n    constructor(logger: CoreLoggerProvider, private fileProvider: CoreFileProvider, private urlUtils: CoreUrlUtilsProvider,\n            private textUtils: CoreTextUtilsProvider, private utils: CoreUtilsProvider, private domUtils: CoreDomUtilsProvider,\n            private sitesProvider: CoreSitesProvider, private platform: Platform, private sanitizer: DomSanitizer) {\n        this.logger = logger.getInstance('CoreIframe');\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        const iframe: HTMLIFrameElement = this.iframe && this.iframe.nativeElement;\n\n        this.safeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.src);\n        this.iframeWidth = this.domUtils.formatPixelsSize(this.iframeWidth) || '100%';\n        this.iframeHeight = this.domUtils.formatPixelsSize(this.iframeHeight) || '100%';\n\n        // Show loading only with external URLs.\n        this.loading = !this.src || !!this.src.match(/^https?:\\/\\//i);\n\n        this.treatFrame(iframe);\n\n        if (this.loading) {\n            iframe.addEventListener('load', () => {\n                this.loading = false;\n            });\n\n            iframe.addEventListener('error', () => {\n                this.loading = false;\n                this.domUtils.showErrorModal('core.errorloadingcontent', true);\n            });\n\n            setTimeout(() => {\n                this.loading = false;\n            }, this.IFRAME_TIMEOUT);\n        }\n    }\n\n    /**\n     * Given an element, return the content window and document.\n     *\n     * @param {any} element Element to treat.\n     * @return {{ window: Window, document: Document }} Window and Document.\n     */\n    protected getContentWindowAndDocument(element: any): { window: Window, document: Document } {\n        let contentWindow: Window = element.contentWindow,\n            contentDocument: Document = element.contentDocument || (contentWindow && contentWindow.document);\n\n        if (!contentWindow && contentDocument) {\n            // It's probably an <object>. Try to get the window.\n            contentWindow = contentDocument.defaultView;\n        }\n\n        if (!contentWindow && element.getSVGDocument) {\n            // It's probably an <embed>. Try to get the window and the document.\n            contentDocument = element.getSVGDocument();\n            if (contentDocument && contentDocument.defaultView) {\n                contentWindow = contentDocument.defaultView;\n            } else if (element.window) {\n                contentWindow = element.window;\n            } else if (element.getWindow) {\n                contentWindow = element.getWindow();\n            }\n        }\n\n        return { window: contentWindow, document: contentDocument };\n    }\n\n    /**\n     * Intercept window.open in a frame and its subframes, shows an error modal instead.\n     * Search links (<a>) and open them in browser or InAppBrowser if needed.\n     *\n     * @param {any} element Element to treat.\n     */\n    protected treatFrame(element: any): void {\n        if (element) {\n            let winAndDoc = this.getContentWindowAndDocument(element);\n            // Redefine window.open in this element and sub frames, it might have been loaded already.\n            this.redefineWindowOpen(element, winAndDoc.window, winAndDoc.document);\n            // Treat links.\n            this.treatLinks(element, winAndDoc.document);\n\n            element.addEventListener('load', () => {\n                // Element loaded, redefine window.open and treat links again.\n                winAndDoc = this.getContentWindowAndDocument(element);\n                this.redefineWindowOpen(element, winAndDoc.window, winAndDoc.document);\n                this.treatLinks(element, winAndDoc.document);\n            });\n        }\n    }\n\n    /**\n     * Redefine the open method in the contentWindow of an element and the sub frames.\n     *\n     * @param {any} element Element to treat.\n     * @param {Window} contentWindow The window of the element contents.\n     * @param {Document} contentDocument The document of the element contents.\n     */\n    protected redefineWindowOpen(element: any, contentWindow: Window, contentDocument: Document): void {\n        if (contentWindow) {\n            // Intercept window.open.\n            contentWindow.open = (url: string): Window => {\n                const scheme = this.urlUtils.getUrlScheme(url);\n                if (!scheme) {\n                    // It's a relative URL, use the frame src to create the full URL.\n                    const src = element.src || element.data;\n                    if (src) {\n                        const dirAndFile = this.fileProvider.getFileAndDirectoryFromPath(src);\n                        if (dirAndFile.directory) {\n                            url = this.textUtils.concatenatePaths(dirAndFile.directory, url);\n                        } else {\n                            this.logger.warn('Cannot get iframe dir path to open relative url', url, element);\n\n                            return new Window(); // Return new Window object.\n                        }\n                    } else {\n                        this.logger.warn('Cannot get iframe src to open relative url', url, element);\n\n                        return new Window(); // Return new Window object.\n                    }\n                }\n\n                if (url.indexOf('cdvfile://') === 0 || url.indexOf('file://') === 0) {\n                    // It's a local file.\n                    this.utils.openFile(url).catch((error) => {\n                        this.domUtils.showErrorModal(error);\n                    });\n                } else {\n                    // It's an external link, we will open with browser. Check if we need to auto-login.\n                    if (!this.sitesProvider.isLoggedIn()) {\n                        // Not logged in, cannot auto-login.\n                        this.utils.openInBrowser(url);\n                    } else {\n                        this.sitesProvider.getCurrentSite().openInBrowserWithAutoLoginIfSameSite(url);\n                    }\n                }\n\n                return new Window(); // Return new Window object.\n            };\n        }\n\n        if (contentDocument) {\n            // Search sub frames.\n            this.tags.forEach((tag) => {\n                const elements = Array.from(contentDocument.querySelectorAll(tag));\n                elements.forEach((subElement) => {\n                    this.treatFrame(subElement);\n                });\n            });\n        }\n    }\n\n    /**\n     * Search links (<a>) and open them in browser or InAppBrowser if needed.\n     * Only links that haven't been treated by the iframe's Javascript will be treated.\n     *\n     * @param {any} element Element to treat.\n     * @param {Document} contentDocument The document of the element contents.\n     */\n    protected treatLinks(element: any, contentDocument: Document): void {\n        if (!contentDocument) {\n            return;\n        }\n\n        const links = Array.from(contentDocument.querySelectorAll('a'));\n        links.forEach((el: HTMLAnchorElement) => {\n            const href = el.href;\n\n            // Check that href is not null.\n            if (href) {\n                const scheme = this.urlUtils.getUrlScheme(href);\n                if (scheme && scheme == 'javascript') {\n                    // Javascript links should be treated by the iframe's Javascript.\n                    // There's nothing to be done with these links, so they'll be ignored.\n                    return;\n                } else if (scheme && scheme != 'file' && scheme != 'filesystem') {\n                    // Scheme suggests it's an external resource, open it in browser.\n                    el.addEventListener('click', (e) => {\n                        // If the link's already prevented by SCORM JS then we won't open it in browser.\n                        if (!e.defaultPrevented) {\n                            e.preventDefault();\n                            if (!this.sitesProvider.isLoggedIn()) {\n                                this.utils.openInBrowser(href);\n                            } else {\n                                this.sitesProvider.getCurrentSite().openInBrowserWithAutoLoginIfSameSite(href);\n                            }\n                        }\n                    });\n                } else if (el.target == '_parent' || el.target == '_top' || el.target == '_blank') {\n                    // Opening links with _parent, _top or _blank can break the app. We'll open it in InAppBrowser.\n                    el.addEventListener('click', (e) => {\n                        // If the link's already prevented by SCORM JS then we won't open it in InAppBrowser.\n                        if (!e.defaultPrevented) {\n                            e.preventDefault();\n                            this.utils.openFile(href).catch((error) => {\n                                this.domUtils.showErrorModal(error);\n                            });\n                        }\n                    });\n                } else if (this.platform.is('ios') && (!el.target || el.target == '_self')) {\n                    // In cordova ios 4.1.0 links inside iframes stopped working. We'll manually treat them.\n                    el.addEventListener('click', (e) => {\n                        // If the link's already prevented by SCORM JS then we won't treat it.\n                        if (!e.defaultPrevented) {\n                            if (element.tagName.toLowerCase() == 'object') {\n                                e.preventDefault();\n                                element.attr('data', href);\n                            } else {\n                                e.preventDefault();\n                                element.attr('src', href);\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/iframe/iframe.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnChanges, SimpleChange, ChangeDetectionStrategy } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\n/**\n * Component to show a progress bar and its value.\n *\n * Example usage:\n * <core-progress-bar [progress]=\"percentage\"></core-progress-bar>\n */\n@Component({\n    selector: 'core-progress-bar',\n    templateUrl: 'progress-bar.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CoreProgressBarComponent implements OnChanges {\n    @Input() progress: number | string; // Percentage from 0 to 100.\n    @Input() text?: string; // Percentage in text to be shown at the right. If not defined, progress will be used.\n    width: SafeStyle;\n    protected textSupplied = false;\n\n    constructor(private sanitizer: DomSanitizer) { }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if (changes.text && typeof changes.text.currentValue != 'undefined') {\n            // User provided a custom text, don't use default.\n            this.textSupplied = true;\n        }\n\n        if (changes.progress) {\n            // Progress has changed.\n            if (typeof this.progress == 'string') {\n                this.progress = parseInt(this.progress, 10);\n            }\n\n            if (this.progress < 0 || isNaN(this.progress)) {\n                this.progress = -1;\n            }\n\n            if (this.progress != -1) {\n                // Remove decimals.\n                this.progress = Math.floor(this.progress);\n\n                if (!this.textSupplied) {\n                    this.text = String(this.progress);\n                }\n\n                this.width = this.sanitizer.bypassSecurityTrustStyle(this.progress + '%');\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/progress-bar/progress-bar.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input } from '@angular/core';\n\n/**\n * Component to show an empty box message. It will show an optional icon or image and a text centered on page.\n *\n * Usage:\n * <core-empty-box *ngIf=\"empty\" icon=\"bell\" [message]=\"'core.emptymessage' | translate\"></core-empty-box>\n */\n@Component({\n    selector: 'core-empty-box',\n    templateUrl: 'empty-box.html'\n})\nexport class CoreEmptyBoxComponent {\n    @Input() message: string; // Message to display.\n    @Input() icon?: string; // Name of the icon to use.\n    @Input() image?: string; // Image source. If an icon is provided, image won't be used.\n\n    constructor() {\n        // Nothing to do.\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/empty-box/empty-box.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Component to display a \"search box\".\n *\n * @description\n * This component will display a standalone search box with its search button in order to have a better UX.\n *\n * Example usage:\n * <core-search-box (onSubmit)=\"search($event)\" [placeholder]=\"'core.courses.search' | translate\"\n *     [searchLabel]=\"'core.courses.search' | translate\" autoFocus=\"true\"></core-search-box>\n */\n@Component({\n    selector: 'core-search-box',\n    templateUrl: 'search-box.html'\n})\nexport class CoreSearchBoxComponent implements OnInit {\n    @Input() searchLabel?: string; // Label to be used on action button.\n    @Input() placeholder?: string; // Placeholder text for search text input.\n    @Input() autocorrect = 'on'; // Enables/disable Autocorrection on search text input.\n    @Input() spellcheck?: string | boolean = true; // Enables/disable Spellchecker on search text input.\n    @Input() autoFocus?: string | boolean; // Enables/disable Autofocus when entering view.\n    @Input() lengthCheck = 3; // Check value length before submit. If 0, any string will be submitted.\n    @Input() showClear = true; // Show/hide clear button.\n    @Input() disabled = false; // Disables the input text.\n    @Output() onSubmit: EventEmitter<string>; // Send data when submitting the search form.\n    @Output() onClear: EventEmitter<void>; // Send event when clearing the search form.\n\n    searched = false;\n    searchText = '';\n\n    constructor(private translate: TranslateService, private utils: CoreUtilsProvider) {\n        this.onSubmit = new EventEmitter<string>();\n        this.onClear = new EventEmitter<void>();\n    }\n\n    ngOnInit(): void {\n        this.searchLabel = this.searchLabel || this.translate.instant('core.search');\n        this.placeholder = this.placeholder || this.translate.instant('core.search');\n        this.spellcheck = this.utils.isTrueOrOne(this.spellcheck);\n        this.showClear = this.utils.isTrueOrOne(this.showClear);\n    }\n\n    /**\n     * Form submitted.\n     *\n     * @param {string} value Entered value.\n     */\n    submitForm(value: string): void {\n        if (this.searchText.length < this.lengthCheck) {\n            // The view should handle this case, but we check it here too just in case.\n            return;\n        }\n\n        this.searched = true;\n        this.onSubmit.emit(this.searchText);\n    }\n\n    /**\n     * Form submitted.\n     */\n    clearForm(): void {\n        this.searched = false;\n        this.searchText = '';\n        this.onClear.emit();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/search-box/search-box.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreFileHelperProvider } from '@providers/file-helper';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreConstants } from '@core/constants';\n\n/**\n * Component to handle a remote file. Shows the file name, icon (depending on mimetype) and a button\n * to download/refresh it.\n */\n@Component({\n    selector: 'core-file',\n    templateUrl: 'file.html'\n})\nexport class CoreFileComponent implements OnInit, OnDestroy {\n    @Input() file: any; // The file. Must have a property 'filename' and a 'fileurl' or 'url'\n    @Input() component?: string; // Component the file belongs to.\n    @Input() componentId?: string | number; // Component ID.\n    @Input() canDelete?: boolean | string; // Whether file can be deleted.\n    @Input() alwaysDownload?: boolean | string; // Whether it should always display the refresh button when the file is downloaded.\n                                                // Use it for files that you cannot determine if they're outdated or not.\n    @Input() canDownload?: boolean | string = true; // Whether file can be downloaded.\n    @Output() onDelete?: EventEmitter<string>; // Will notify when the delete button is clicked.\n\n    isDownloaded: boolean;\n    isDownloading: boolean;\n    showDownload: boolean;\n    fileIcon: string;\n    fileName: string;\n\n    protected fileUrl: string;\n    protected siteId: string;\n    protected fileSize: number;\n    protected state: string;\n    protected timemodified: number;\n    protected observer;\n\n    constructor(private sitesProvider: CoreSitesProvider, private utils: CoreUtilsProvider, private domUtils: CoreDomUtilsProvider,\n            private filepoolProvider: CoreFilepoolProvider, private appProvider: CoreAppProvider,\n            private fileHelper: CoreFileHelperProvider, private mimeUtils: CoreMimetypeUtilsProvider,\n            private eventsProvider: CoreEventsProvider) {\n        this.onDelete = new EventEmitter();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.canDelete = this.utils.isTrueOrOne(this.canDelete);\n        this.alwaysDownload = this.utils.isTrueOrOne(this.alwaysDownload);\n        this.canDownload = this.utils.isTrueOrOne(this.canDownload);\n\n        this.fileUrl = this.fileHelper.getFileUrl(this.file);\n        this.timemodified = this.fileHelper.getFileTimemodified(this.file);\n        this.siteId = this.sitesProvider.getCurrentSiteId();\n        this.fileSize = this.file.filesize;\n        this.fileName = this.file.filename;\n\n        if (this.file.isexternalfile) {\n            this.alwaysDownload = true; // Always show the download button in external files.\n        }\n\n        this.fileIcon = this.mimeUtils.getFileIcon(this.file.filename);\n\n        if (this.canDownload) {\n            this.calculateState();\n\n            // Update state when receiving events about this file.\n            this.filepoolProvider.getFileEventNameByUrl(this.siteId, this.fileUrl).then((eventName) => {\n                this.observer = this.eventsProvider.on(eventName, () => {\n                    this.calculateState();\n                });\n            });\n        }\n    }\n\n    /**\n     * Convenience function to get the file state and set variables based on it.\n     *\n     * @return {Promise<void>} Promise resolved when state has been calculated.\n     */\n    protected calculateState(): Promise<void> {\n        return this.filepoolProvider.getFileStateByUrl(this.siteId, this.fileUrl, this.timemodified).then((state) => {\n            const canDownload = this.sitesProvider.getCurrentSite().canDownloadFiles();\n\n            this.state = state;\n            this.isDownloaded = state === CoreConstants.DOWNLOADED || state === CoreConstants.OUTDATED;\n            this.isDownloading = canDownload && state === CoreConstants.DOWNLOADING;\n            this.showDownload = canDownload && (state === CoreConstants.NOT_DOWNLOADED || state === CoreConstants.OUTDATED ||\n                (this.alwaysDownload && state === CoreConstants.DOWNLOADED));\n        });\n    }\n\n    /**\n     * Convenience function to open a file, downloading it if needed.\n     *\n     * @return {Promise<string>} Promise resolved when file is opened.\n     */\n    protected openFile(): Promise<any> {\n        return this.fileHelper.downloadAndOpenFile(this.file, this.component, this.componentId, this.state, (event) => {\n            if (event && event.calculating) {\n                // The process is calculating some data required for the download, show the spinner.\n                this.isDownloading = true;\n            }\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n        });\n    }\n\n    /**\n     * Download a file and, optionally, open it afterwards.\n     *\n     * @param {Event} e Click event.\n     * @param {boolean} openAfterDownload Whether the file should be opened after download.\n     */\n    download(e: Event, openAfterDownload: boolean): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let promise;\n\n        if (this.isDownloading && !openAfterDownload) {\n            return;\n        }\n\n        if (!this.appProvider.isOnline() && (!openAfterDownload || (openAfterDownload && !this.isDownloaded))) {\n            this.domUtils.showErrorModal('core.networkerrormsg', true);\n\n            return;\n        }\n\n        if (openAfterDownload) {\n            // File needs to be opened now.\n            this.openFile().catch((error) => {\n                this.domUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n            });\n        } else {\n            // File doesn't need to be opened (it's a prefetch). Show confirm modal if file size is defined and it's big.\n            promise = this.fileSize ? this.domUtils.confirmDownloadSize({ size: this.fileSize, total: true }) : Promise.resolve();\n            promise.then(() => {\n                // User confirmed, add the file to queue.\n                this.filepoolProvider.invalidateFileByUrl(this.siteId, this.fileUrl).finally(() => {\n                    this.isDownloading = true;\n                    this.filepoolProvider.addToQueueByUrl(this.siteId, this.fileUrl, this.component,\n                        this.componentId, this.timemodified, undefined, undefined, 0, this.file).catch((error) => {\n                            this.domUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n                            this.calculateState();\n                        });\n                });\n            });\n        }\n    }\n\n    /**\n     * Delete the file.\n     *\n     * @param {Event} e Click event.\n     */\n    deleteFile(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.canDelete) {\n            this.onDelete.emit();\n        }\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.observer && this.observer.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/file/file.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, OnInit, OnDestroy, EventEmitter, OnChanges, SimpleChange } from '@angular/core';\nimport { CoreContextMenuComponent } from './context-menu';\n\n/**\n * This directive adds a item to the Context Menu popover.\n *\n * @description\n * This directive defines and item to be added to the popover generated in CoreContextMenu.\n *\n * It is required to place this tag inside a core-context-menu tag.\n *\n * <core-context-menu>\n *     <core-context-menu-item [hidden]=\"showGrid\" [priority]=\"601\" [content]=\"'core.layoutgrid' | translate\"\n *         (action)=\"switchGrid()\" [iconAction]=\"'apps'\"></core-context-menu-item>\n * </core-context-menu>\n */\n@Component({\n    selector: 'core-context-menu-item',\n    template: ''\n})\nexport class CoreContextMenuItemComponent implements OnInit, OnDestroy, OnChanges {\n    @Input() content: string; // Content of the item.\n    @Input() iconDescription?: string; // Name of the icon to be shown on the left side of the item.\n    @Input() iconAction?: string; // Name of the icon to show on the right side of the item. Represents the action to do on click.\n                                  // If is \"spinner\" an spinner will be shown.\n                                  // If no icon or spinner is selected, no action or link will work.\n                                  // If href but no iconAction is provided arrow-right will be used.\n    @Input() ariaDescription?: string; // Aria label to add to iconDescription.\n    @Input() ariaAction?: string; // Aria label to add to iconAction. If not set, it will be equal to content.\n    @Input() href?: string; // Link to go if no action provided.\n    @Input() captureLink?: boolean | string; // Whether the link needs to be captured by the app.\n    @Input() autoLogin?: string; // Whether the link needs to be opened using auto-login.\n    @Input() closeOnClick?: boolean | string = true; // Whether to close the popover when the item is clicked.\n    @Input() priority?: number; // Used to sort items. The highest priority, the highest position.\n    @Input() badge?: string; // A badge to show in the item.\n    @Input() badgeClass?: number; // A class to set in the badge.\n    @Input() hidden?: boolean; // Whether the item should be hidden.\n    @Output() action?: EventEmitter<() => void>; // Will emit an event when the item clicked.\n\n    protected hasAction = false;\n    protected destroyed = false;\n\n    constructor(private ctxtMenu: CoreContextMenuComponent) {\n        this.action = new EventEmitter();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Initialize values.\n        this.priority = this.priority || 1;\n        this.closeOnClick = this.getBooleanValue(this.closeOnClick, true);\n        this.hasAction = this.action.observers.length > 0;\n        this.ariaAction = this.ariaAction || this.content;\n\n        if (this.hasAction) {\n            this.href = '';\n        }\n\n        // Navigation help if href provided.\n        this.captureLink = this.href && this.captureLink ? this.captureLink : false;\n        this.autoLogin = this.autoLogin || 'check';\n\n        if (!this.destroyed) {\n            this.ctxtMenu.addItem(this);\n        }\n    }\n\n    /**\n     * Get a boolean value from item.\n     *\n     * @param {any} value Value to check.\n     * @param {boolean} defaultValue Value to use if undefined.\n     * @return {boolean} Boolean value.\n     */\n    protected getBooleanValue(value: any, defaultValue: boolean): boolean {\n        if (typeof value == 'undefined') {\n            return defaultValue;\n        }\n\n        return value && value !== 'false';\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.destroyed = true;\n        this.ctxtMenu.removeItem(this);\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if (changes.hidden && !changes.hidden.firstChange) {\n            this.ctxtMenu.itemsChanged();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/context-menu/context-menu-item.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnChanges, OnDestroy, Output, EventEmitter, SimpleChange, ChangeDetectorRef } from '@angular/core';\n\n/**\n * This component shows a chronometer in format HH:MM:SS.\n *\n * If no startTime is provided, it will start at 00:00:00.\n * If an endTime is provided, the chrono will stop and emit an event in the onEnd output when that number of milliseconds is\n * reached. E.g. if startTime=60000 and endTime=120000, the chrono will start at 00:01:00 and end when it reaches 00:02:00.\n *\n * This component has 2 boolean inputs to control the timer: running (to start and stop it) and reset.\n *\n * Example usage:\n * <core-chrono [running]=\"running\" [reset]=\"reset\" [endTime]=\"maxTime\" (onEnd)=\"stopCapturing()\"></core-chrono>\n */\n@Component({\n    selector: 'core-chrono',\n    template: '<span>{{ time / 1000 | coreSecondsToHMS }}</span>'\n})\nexport class CoreChronoComponent implements OnChanges, OnDestroy {\n    @Input() running: boolean; // Set it to true to start the chrono. Set it to false to stop it.\n    @Input() startTime = 0; // Number of milliseconds to put in the chrono before starting.\n    @Input() endTime?: number; // Number of milliseconds to stop the chrono.\n    @Input() reset?: boolean; // Set it to true to reset the chrono.\n    @Output() onEnd?: EventEmitter<void>; // Will emit an event when the endTime is reached.\n\n    time = 0;\n    protected interval;\n\n    constructor(private cdr: ChangeDetectorRef) {\n        this.onEnd = new EventEmitter();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.time = this.startTime || 0;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if (changes && changes.running) {\n            if (changes.running.currentValue) {\n                this.start();\n            } else {\n                this.stop();\n            }\n        }\n        if (changes && changes.reset && changes.reset.currentValue) {\n            this.resetChrono();\n        }\n    }\n\n    /**\n     * Reset the chrono, stopping it and setting it to startTime.\n     */\n    protected resetChrono(): void {\n        this.stop();\n        this.time = this.startTime || 0;\n    }\n\n    /**\n     * Start the chrono if it isn't running.\n     */\n    protected start(): void {\n        if (this.interval) {\n            // Already setup.\n            return;\n        }\n\n        let lastExecTime = Date.now();\n\n        this.interval = setInterval(() => {\n            // Increase the chrono.\n            this.time += Date.now() - lastExecTime;\n            lastExecTime = Date.now();\n\n            if (typeof this.endTime != 'undefined' && this.time > this.endTime) {\n                // End time reached, stop the timer and call the end function.\n                this.stop();\n                this.onEnd.emit();\n            }\n\n            // Force change detection. Angular doesn't detect these async operations.\n            this.cdr.detectChanges();\n        }, 200);\n    }\n\n    /**\n     * Stop the chrono, leaving the same time it has.\n     */\n    protected stop(): void {\n        clearInterval(this.interval);\n        delete this.interval;\n    }\n\n    ngOnDestroy(): void {\n        this.stop();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/chrono/chrono.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, OnInit, EventEmitter } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport * as moment from 'moment';\n\n/**\n * Component to handle a local file. Only files inside the app folder can be managed.\n *\n * Shows the file name, icon (depending on extension), size and time modified.\n * Also, if managing is enabled it will also show buttons to rename and delete the file.\n */\n@Component({\n    selector: 'core-local-file',\n    templateUrl: 'local-file.html'\n})\nexport class CoreLocalFileComponent implements OnInit {\n    @Input() file: any; // A fileEntry retrieved using CoreFileProvider.getFile or similar.\n    @Input() manage?: boolean | string; // Whether the user can manage the file (edit and delete).\n    @Input() overrideClick?: boolean | string; // Whether the default item click should be overridden.\n    @Output() onDelete?: EventEmitter<void>; // Will notify when the file is deleted.\n    @Output() onRename?: EventEmitter<any>; // Will notify when the file is renamed. Receives the FileEntry as the param.\n    @Output() onClick?: EventEmitter<void>; // Will notify when the file is clicked. Only if overrideClick is true.\n\n    fileName: string;\n    fileIcon: string;\n    fileExtension: string;\n    size: string;\n    timemodified: string;\n    newFileName = '';\n    editMode: boolean;\n    relativePath: string;\n\n    constructor(private mimeUtils: CoreMimetypeUtilsProvider, private utils: CoreUtilsProvider, private translate: TranslateService,\n            private textUtils: CoreTextUtilsProvider, private fileProvider: CoreFileProvider,\n            private domUtils: CoreDomUtilsProvider) {\n        this.onDelete = new EventEmitter();\n        this.onRename = new EventEmitter();\n        this.onClick = new EventEmitter();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.manage = this.utils.isTrueOrOne(this.manage);\n\n        // Let's calculate the relative path for the file.\n        this.relativePath = this.fileProvider.removeBasePath(this.file.toURL());\n        if (!this.relativePath) {\n            // Didn't find basePath, use fullPath but if the user tries to manage the file it'll probably fail.\n            this.relativePath = this.file.fullPath;\n        }\n\n        this.loadFileBasicData();\n\n        // Get the size and timemodified.\n        this.fileProvider.getMetadata(this.file).then((metadata) => {\n            if (metadata.size >= 0) {\n                this.size = this.textUtils.bytesToSize(metadata.size, 2);\n            }\n\n            this.timemodified = moment(metadata.modificationTime).format('LLL');\n        });\n    }\n\n    /**\n     * Load the basic data for the file.\n     */\n    protected loadFileBasicData(): void {\n        this.fileName = this.file.name;\n        this.fileIcon = this.mimeUtils.getFileIcon(this.file.name);\n        this.fileExtension = this.mimeUtils.getFileExtension(this.file.name);\n    }\n\n    /**\n     * File clicked.\n     *\n     * @param {Event} e Click event.\n     */\n    fileClicked(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (this.utils.isTrueOrOne(this.overrideClick) && this.onClick.observers.length) {\n            this.onClick.emit();\n        } else {\n            this.utils.openFile(this.file.toURL());\n        }\n    }\n\n    /**\n     * Activate the edit mode.\n     *\n     * @param {Event} e Click event.\n     */\n    activateEdit(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n        this.editMode = true;\n        this.newFileName = this.file.name;\n\n        // @todo For some reason core-auto-focus isn't working right. Focus the input manually.\n        // $timeout(function() {\n        //     $mmUtil.focusElement(element[0].querySelector('input'));\n        // });\n    }\n\n    /**\n     * Rename the file.\n     *\n     * @param {string} newName New name.\n     */\n    changeName(newName: string): void {\n        if (newName == this.file.name) {\n            // Name hasn't changed, stop.\n            this.editMode = false;\n\n            return;\n        }\n\n        const modal = this.domUtils.showModalLoading(),\n            fileAndDir = this.fileProvider.getFileAndDirectoryFromPath(this.relativePath),\n            newPath = this.textUtils.concatenatePaths(fileAndDir.directory, newName);\n\n        // Check if there's a file with this name.\n        this.fileProvider.getFile(newPath).then(() => {\n            // There's a file with this name, show error and stop.\n            this.domUtils.showErrorModal('core.errorfileexistssamename', true);\n        }).catch(() => {\n            // File doesn't exist, move it.\n            return this.fileProvider.moveFile(this.relativePath, newPath).then((fileEntry) => {\n                this.editMode = false;\n                this.file = fileEntry;\n                this.loadFileBasicData();\n                this.onRename.emit({ file: this.file });\n            }).catch(() => {\n                this.domUtils.showErrorModal('core.errorrenamefile', true);\n            });\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Delete the file.\n     *\n     * @param {Event} e Click event.\n     */\n    deleteFile(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        // Ask confirmation.\n        this.domUtils.showConfirm(this.translate.instant('core.confirmdeletefile')).then(() => {\n            const modal = this.domUtils.showModalLoading();\n            this.fileProvider.removeFile(this.relativePath).then(() => {\n                this.onDelete.emit();\n            }).catch(() => {\n                this.domUtils.showErrorModal('core.errordeletefile', true);\n            }).finally(() => {\n                modal.dismiss();\n            });\n        }).catch(() => {\n            // User cancelled.\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/local-file/local-file.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\n\n/**\n * Component to display a site selector. It will display a select with the list of sites. If the selected site changes,\n * an output will be emitted with the site ID.\n *\n * Example usage:\n * <core-site-picker (siteSelected)=\"changeSite($event)\"></core-site-picker>\n */\n@Component({\n    selector: 'core-site-picker',\n    templateUrl: 'site-picker.html'\n})\nexport class CoreSitePickerComponent implements OnInit {\n    @Input() initialSite?: string; // Initial site. If not provided, current site.\n    @Output() siteSelected: EventEmitter<string>; // Emit an event when a site is selected. Sends the siteId as parameter.\n\n    selectedSite: string;\n    sites: any[];\n\n    constructor(private translate: TranslateService, private sitesProvider: CoreSitesProvider,\n        private textUtils: CoreTextUtilsProvider) {\n        this.siteSelected = new EventEmitter();\n    }\n\n    ngOnInit(): void {\n        this.selectedSite = this.initialSite || this.sitesProvider.getCurrentSiteId();\n\n        // Load the sites.\n        this.sitesProvider.getSites().then((sites) => {\n            const promises = [];\n\n            sites.forEach((site: any) => {\n                // Format the site name.\n                promises.push(this.textUtils.formatText(site.siteName, true, true).catch(() => {\n                    return site.siteName;\n                }).then((formatted) => {\n                    site.fullNameAndSiteName = this.translate.instant('core.fullnameandsitename',\n                        { fullname: site.fullName, sitename: formatted });\n                }));\n            });\n\n            return Promise.all(promises).then(() => {\n                this.sites = sites;\n            });\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/site-picker/site-picker.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, OnInit, OnDestroy, ElementRef, EventEmitter, ContentChild, TemplateRef } from '@angular/core';\nimport { CoreTabsComponent } from './tabs';\nimport { Content } from 'ionic-angular';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreNavBarButtonsComponent } from '../navbar-buttons/navbar-buttons';\n\n/**\n * A tab to use inside core-tabs. The content of this tab will be displayed when the tab is selected.\n *\n * You must provide either a title or an icon for the tab.\n *\n * The tab content MUST be surrounded by ng-template. This component uses ngTemplateOutlet instead of ng-content because the\n * latter executes all the code immediately. This means that all the tabs would be initialized as soon as your view is\n * loaded, leading to performance issues.\n *\n * Example usage:\n *\n * <core-tabs selectedIndex=\"1\">\n *     <core-tab [title]=\"'core.courses.timeline' | translate\" (ionSelect)=\"switchTab('timeline')\">\n *         <ng-template> <!-- This ng-template is required. -->\n *             <!-- Tab contents. -->\n *         </ng-template>\n *     </core-tab>\n * </core-tabs>\n */\n@Component({\n    selector: 'core-tab',\n    template: '<ng-container *ngIf=\"loaded\" [ngTemplateOutlet]=\"template\"></ng-container>'\n})\nexport class CoreTabComponent implements OnInit, OnDestroy {\n    @Input() title?: string; // The tab title.\n    @Input() icon?: string; // The tab icon.\n    @Input() badge?: string; // A badge to add in the tab.\n    @Input() badgeStyle?: string; // The badge color.\n    @Input() enabled = true; // Whether the tab is enabled.\n    @Input() show = true; // Whether the tab should be shown.\n    @Input() id?: string; // An ID to identify the tab.\n    @Output() ionSelect: EventEmitter<CoreTabComponent> = new EventEmitter<CoreTabComponent>();\n\n    @ContentChild(TemplateRef) template: TemplateRef<any>; // Template defined by the content.\n    @ContentChild(Content) scroll: Content;\n\n    element: HTMLElement; // The core-tab element.\n    loaded = false;\n\n    constructor(protected tabs: CoreTabsComponent, element: ElementRef, protected domUtils: CoreDomUtilsProvider) {\n        this.element = element.nativeElement;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.tabs.addTab(this);\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.tabs.removeTab(this);\n    }\n\n    /**\n     * Select tab.\n     */\n    selectTab(): void {\n        this.element.classList.add('selected');\n\n        this.loaded = true;\n        this.ionSelect.emit(this);\n        this.showHideNavBarButtons(true);\n\n        // Setup tab scrolling.\n        setTimeout(() => {\n            if (this.scroll) {\n                this.scroll.getScrollElement().onscroll = (e): void => {\n                    this.tabs.showHideTabs(e);\n                };\n            }\n        }, 1);\n    }\n\n    /**\n     * Unselect tab.\n     */\n    unselectTab(): void {\n        this.element.classList.remove('selected');\n        this.showHideNavBarButtons(false);\n    }\n\n    /**\n     * Get all child core-navbar-buttons. We need to use querySelectorAll because ContentChildren doesn't work with ng-template.\n     * https://github.com/angular/angular/issues/14842\n     *\n     * @return {CoreNavBarButtonsComponent[]} List of component instances.\n     */\n    protected getChildrenNavBarButtons(): CoreNavBarButtonsComponent[] {\n        const elements = this.element.querySelectorAll('core-navbar-buttons'),\n            instances: CoreNavBarButtonsComponent[] = [];\n\n        for (let i = 0; i < elements.length; i++) {\n            const instance = this.domUtils.getInstanceByElement(elements[i]);\n            if (instance) {\n                instances.push(instance);\n            }\n        }\n\n        return instances;\n    }\n\n    /**\n     * Show all hide all children navbar buttons.\n     *\n     * @param {boolean} show Whether to show or hide the buttons.\n     */\n    protected showHideNavBarButtons(show: boolean): void {\n        const instances = this.getChildrenNavBarButtons();\n\n        for (const i in instances) {\n            instances[i].forceHide(!show);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/tabs/tab.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\nimport { TextInput } from 'ionic-angular';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { FormControl } from '@angular/forms';\nimport { Keyboard } from '@ionic-native/keyboard';\n\n/**\n * Directive to display a rich text editor if enabled.\n *\n * If enabled, this directive will show a rich text editor. Otherwise it'll show a regular textarea.\n *\n * This directive requires an OBJECT model. The text written in the editor or textarea will be stored inside\n * a \"text\" property in that object. This is to ensure 2-way data-binding, since using a string as a model\n * could be easily broken.\n *\n * Example:\n * <core-rich-text-editor item-content [control]=\"control\" [placeholder]=\"field.name\"></core-rich-text-editor>\n *\n * In the example above, the text written in the editor will be stored in newpost.text.\n */\n@Component({\n    selector: 'core-rich-text-editor',\n    templateUrl: 'rich-text-editor.html'\n})\nexport class CoreRichTextEditorComponent {\n    // Based on: https://github.com/judgewest2000/Ionic3RichText/\n    // @todo: Resize, images, anchor button, fullscreen...\n\n    @Input() placeholder = ''; // Placeholder to set in textarea.\n    @Input() control: FormControl; // Form control.\n    @Output() contentChanged: EventEmitter<string>;\n\n    @ViewChild('editor') editor: ElementRef; // WYSIWYG editor.\n    @ViewChild('textarea') textarea: TextInput; // Textarea editor.\n    @ViewChild('decorate') decorate: ElementRef; // Buttons.\n\n    rteEnabled = false;\n    uniqueId = `rte{Math.floor(Math.random() * 1000000)}`;\n    editorElement: HTMLDivElement;\n\n    constructor(private domUtils: CoreDomUtilsProvider, private keyboard: Keyboard) {\n        this.contentChanged = new EventEmitter<string>();\n    }\n\n    /**\n     * Init editor\n     */\n    ngAfterContentInit(): void {\n        this.domUtils.isRichTextEditorEnabled().then((enabled) => {\n            this.rteEnabled = !!enabled;\n        });\n\n        // Setup the editor.\n        this.editorElement = this.editor.nativeElement as HTMLDivElement;\n        this.editorElement.innerHTML = this.control.value;\n        this.textarea.value = this.control.value;\n        this.control.setValue(this.control.value);\n\n        this.editorElement.onchange = this.onChange.bind(this);\n        this.editorElement.onkeyup = this.onChange.bind(this);\n        this.editorElement.onpaste = this.onChange.bind(this);\n        this.editorElement.oninput = this.onChange.bind(this);\n\n        // Setup button actions.\n        const buttons = (this.decorate.nativeElement as HTMLDivElement).getElementsByTagName('button');\n        for (let i = 0; i < buttons.length; i++) {\n            const button = buttons[i];\n            let command = button.getAttribute('data-command');\n\n            if (command) {\n                if (command.includes('|')) {\n                    const parameter = command.split('|')[1];\n                    command = command.split('|')[0];\n\n                    button.addEventListener('click', ($event) => {\n                        this.buttonAction($event, command, parameter);\n                    });\n                } else {\n                    button.addEventListener('click', ($event) => {\n                        this.buttonAction($event, command);\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * On change function to sync with form data.\n     *\n     * @param {Event} $event The event.\n     */\n    onChange($event: Event): void {\n        if (this.rteEnabled) {\n            if (this.isNullOrWhiteSpace(this.editorElement.innerText)) {\n                this.clearText();\n            } else {\n                this.control.setValue(this.editorElement.innerHTML);\n            }\n        } else {\n            if (this.isNullOrWhiteSpace(this.textarea.value)) {\n                this.clearText();\n            } else {\n                this.control.setValue(this.textarea.value);\n            }\n        }\n        this.contentChanged.emit(this.control.value);\n    }\n\n    /**\n     * Toggle from rte editor to textarea syncing values.\n     *\n     * @param {Event} $event The event.\n     */\n    toggleEditor($event: Event): void {\n        $event.preventDefault();\n        $event.stopPropagation();\n\n        if (this.isNullOrWhiteSpace(this.control.value)) {\n            this.clearText();\n        } else {\n            this.editorElement.innerHTML = this.control.value;\n            this.textarea.value = this.control.value;\n        }\n\n        this.rteEnabled = !this.rteEnabled;\n\n        // Set focus and cursor at the end.\n        setTimeout(() => {\n            if (this.rteEnabled) {\n                this.editorElement.focus();\n\n                const range = document.createRange();\n                range.selectNodeContents(this.editorElement);\n                range.collapse(false);\n\n                const sel = window.getSelection();\n                sel.removeAllRanges();\n                sel.addRange(range);\n            } else {\n                this.textarea.setFocus();\n            }\n            setTimeout(() => {\n                this.keyboard.show();\n            }, 1);\n        }, 1);\n    }\n\n    /**\n     * Check if text is empty.\n     * @param {string} value text\n     */\n    protected isNullOrWhiteSpace(value: string): boolean {\n        if (value == null || typeof value == 'undefined') {\n            return true;\n        }\n\n        value = value.replace(/[\\n\\r]/g, '');\n        value = value.split(' ').join('');\n\n        return value.length === 0;\n    }\n\n    /**\n     * Clear the text.\n     */\n    clearText(): void {\n        this.editorElement.innerHTML = '<p></p>';\n        this.textarea.value = '';\n        this.control.setValue(null);\n    }\n\n    /**\n     * Execute an action over the selected text.\n     *  API docs: https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\n     *\n     * @param {any} $event       Event data\n     * @param {string} command   Command to execute.\n     * @param {any} [parameters] Parameters of the command.\n     */\n    protected buttonAction($event: any, command: string, parameters: any = null): void {\n        $event.preventDefault();\n        $event.stopPropagation();\n        document.execCommand(command, false, parameters);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/rich-text-editor/rich-text-editor.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, OnDestroy, ContentChildren, ElementRef, QueryList } from '@angular/core';\nimport { Button } from 'ionic-angular';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreContextMenuComponent } from '../context-menu/context-menu';\n\n/**\n * Component to add buttons to the app's header without having to place them inside the header itself. This is meant for\n * pages that are loaded inside a sub ion-nav, so they don't have a header.\n *\n * If this component indicates a position (start/end), the buttons will only be added if the header has some buttons in that\n * position. If no start/end is specified, then the buttons will be added to the first <ion-buttons> found in the header.\n *\n * You can use the [hidden] input to hide all the inner buttons if a certain condition is met.\n *\n * IMPORTANT: Do not use *ngIf in the buttons inside this component, it can cause problems. Please use [hidden] instead.\n *\n * Example usage:\n *\n * <core-navbar-buttons end>\n *     <button ion-button icon-only [hidden]=\"!buttonShown\" [attr.aria-label]=\"Do something\" (click)=\"action()\">\n *         <ion-icon name=\"funnel\"></ion-icon>\n *     </button>\n * </core-navbar-buttons>\n */\n@Component({\n    selector: 'core-navbar-buttons',\n    template: '<ng-content></ng-content>'\n})\nexport class CoreNavBarButtonsComponent implements OnInit, OnDestroy {\n\n    protected BUTTON_HIDDEN_CLASS = 'core-navbar-button-hidden';\n\n    // If the hidden input is true, hide all buttons.\n    @Input('hidden') set hidden(value: boolean) {\n        this._hidden = value;\n        this.showHideAllElements();\n    }\n\n    // Get all the ion-buttons inside this directive and apply the role bar-button.\n    @ContentChildren(Button) set buttons(buttons: QueryList<Button>) {\n        buttons.forEach((button: Button) => {\n            button.setRole('bar-button');\n        });\n    }\n\n    protected element: HTMLElement;\n    protected _hidden: boolean;\n    protected forceHidden = false;\n    protected logger: any;\n    protected movedChildren: Node[];\n    protected instanceId: string;\n    protected mergedContextMenu: CoreContextMenuComponent;\n\n    constructor(element: ElementRef, logger: CoreLoggerProvider, private domUtils: CoreDomUtilsProvider) {\n        this.element = element.nativeElement;\n        this.logger = logger.getInstance('CoreNavBarButtonsComponent');\n        this.instanceId = this.domUtils.storeInstanceByElement(this.element, this);\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.searchHeader().then((header) => {\n            if (header) {\n                // Search the right buttons container (start, end or any).\n                let selector = 'ion-buttons',\n                    buttonsContainer: HTMLElement;\n\n                if (this.element.hasAttribute('start')) {\n                    selector += '[start]';\n                } else if (this.element.hasAttribute('end')) {\n                    selector += '[end]';\n                }\n\n                buttonsContainer = <HTMLElement> header.querySelector(selector);\n                if (buttonsContainer) {\n                    this.mergeContextMenus(buttonsContainer);\n\n                    this.movedChildren = this.domUtils.moveChildren(this.element, buttonsContainer);\n                    this.showHideAllElements();\n\n                } else {\n                    this.logger.warn('The header was found, but it didn\\'t have the right ion-buttons.', selector);\n                }\n            }\n        }).catch(() => {\n            // Header not found.\n            this.logger.warn('Header not found.');\n        });\n    }\n\n    /**\n     * Force or unforce hiding all buttons. If this is true, it will override the \"hidden\" input.\n     *\n     * @param {boolean} value The value to set.\n     */\n    forceHide(value: boolean): void {\n        this.forceHidden = value;\n\n        this.showHideAllElements();\n    }\n\n    /**\n     * If both button containers have a context menu, merge them into a single one.\n     *\n     * @param {HTMLElement} buttonsContainer The container where the buttons will be moved.\n     */\n    protected mergeContextMenus(buttonsContainer: HTMLElement): void {\n        // Check if both button containers have a context menu.\n        const mainContextMenu = buttonsContainer.querySelector('core-context-menu');\n        if (!mainContextMenu) {\n            return;\n        }\n\n        const secondaryContextMenu = this.element.querySelector('core-context-menu');\n        if (!secondaryContextMenu) {\n            return;\n        }\n\n        // Both containers have a context menu. Merge them to prevent having 2 menus at the same time.\n        const mainContextMenuInstance = this.domUtils.getInstanceByElement(mainContextMenu),\n            secondaryContextMenuInstance = this.domUtils.getInstanceByElement(secondaryContextMenu);\n\n        if (mainContextMenuInstance && secondaryContextMenuInstance) {\n            this.mergedContextMenu = secondaryContextMenuInstance;\n\n            this.mergedContextMenu.mergeContextMenus(mainContextMenuInstance);\n\n            // Remove the empty context menu from the DOM.\n            secondaryContextMenu.parentElement.removeChild(secondaryContextMenu);\n        }\n    }\n\n    /**\n     * Search the ion-header where the buttons should be added.\n     *\n     * @param {number} [retries] Number of retries so far.\n     * @return {Promise<HTMLElement>} Promise resolved with the header element.\n     */\n    protected searchHeader(retries: number = 0): Promise<HTMLElement> {\n        let parentPage: HTMLElement = this.element;\n\n        while (parentPage) {\n            if (!parentPage.parentElement) {\n                // No parent, stop.\n                break;\n            }\n\n            // Get the next parent page.\n            parentPage = <HTMLElement> this.domUtils.closest(parentPage.parentElement, '.ion-page');\n            if (parentPage) {\n                // Check if the page has a header. If it doesn't, search the next parent page.\n                const header = this.searchHeaderInPage(parentPage);\n                if (header && getComputedStyle(header, null).display != 'none') {\n                    return Promise.resolve(header);\n                }\n            }\n        }\n\n        // Header not found.\n        if (retries < 5) {\n            // If the component or any of its parent is inside a ng-content or similar it can be detached when it's initialized.\n            // Try again after a while.\n            return new Promise((resolve, reject): void => {\n                setTimeout(() => {\n                    this.searchHeader(retries + 1).then(resolve, reject);\n                }, 200);\n            });\n        }\n\n        // We've waited enough time, reject.\n        return Promise.reject(null);\n    }\n\n    /**\n     * Search ion-header inside a page. The header should be a direct child.\n     *\n     * @param  {HTMLElement} page Page to search in.\n     * @return {HTMLElement} Header element. Undefined if not found.\n     */\n    protected searchHeaderInPage(page: HTMLElement): HTMLElement {\n        for (let i = 0; i < page.children.length; i++) {\n            const child = page.children[i];\n            if (child.tagName == 'ION-HEADER') {\n                return <HTMLElement> child;\n            }\n        }\n    }\n\n    /**\n     * Show or hide all the elements.\n     */\n    protected showHideAllElements(): void {\n        // Show or hide all moved children.\n        if (this.movedChildren) {\n            this.movedChildren.forEach((child: Node) => {\n                this.showHideElement(child);\n            });\n        }\n\n        // Show or hide all the context menu items that were merged to another context menu.\n        if (this.mergedContextMenu) {\n            if (this.forceHidden || this._hidden) {\n                this.mergedContextMenu.removeMergedItems();\n            } else {\n                this.mergedContextMenu.restoreMergedItems();\n            }\n        }\n    }\n\n    /**\n     * Show or hide an element.\n     *\n     * @param {Node} element Element to show or hide.\n     */\n    protected showHideElement(element: Node): void {\n        // Check if it's an HTML Element\n        if (element instanceof Element) {\n            if (this.forceHidden || this._hidden) {\n                element.classList.add(this.BUTTON_HIDDEN_CLASS);\n            } else {\n                element.classList.remove(this.BUTTON_HIDDEN_CLASS);\n            }\n        }\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.domUtils.removeInstanceById(this.instanceId);\n\n        // This component was destroyed, remove all the buttons that were moved.\n        // The buttons can be moved outside of the current page, that's why we need to manually destroy them.\n        // There's no need to destroy context menu items that were merged because they weren't moved from their DOM position.\n        if (this.movedChildren) {\n            this.movedChildren.forEach((child) => {\n                if (child.parentElement) {\n                    child.parentElement.removeChild(child);\n                }\n            });\n        }\n\n        if (this.mergedContextMenu) {\n            this.mergedContextMenu.removeMergedItems();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/navbar-buttons/navbar-buttons.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\n\n/**\n * Component to display a \"send message form\".\n *\n * @description\n * This component will display a standalone send message form in order to have a better UX.\n *\n * Example usage:\n * <core-send-message-form (onSubmit)=\"sendMessage($event)\" [placeholder]=\"'core.messages.newmessage' | translate\"\n * [show-keyboard]=\"showKeyboard\"></core-send-message-form>\n */\n@Component({\n    selector: 'core-send-message-form',\n    templateUrl: 'send-message-form.html'\n})\nexport class CoreSendMessageFormComponent implements OnInit {\n    @Input() placeholder = ''; // Placeholder for the input area.\n    @Input() showKeyboard = false; // If keyboard is shown or not.\n    @Output() onSubmit: EventEmitter<string>; // Send data when submitting the message form.\n    @Output() onResize: EventEmitter<void>; // Emit when resizing the textarea.\n\n    message: string;\n\n    constructor(private utils: CoreUtilsProvider, private textUtils: CoreTextUtilsProvider) {\n        this.onSubmit = new EventEmitter();\n        this.onResize = new EventEmitter();\n    }\n\n    ngOnInit(): void {\n        this.showKeyboard = this.utils.isTrueOrOne(this.showKeyboard);\n    }\n\n    /**\n     * Form submitted.\n     * @param {any} $event Form submit\n     */\n    submitForm($event: any): void {\n        let value = this.message.trim();\n        $event.target.reset();\n\n        // Focus again on textarea.\n        $event.target[0].focus();\n\n        if (!value) {\n            // Silent error.\n            return;\n        }\n\n        value = this.textUtils.replaceNewLines(value, '<br>');\n        this.onSubmit.emit(value);\n    }\n\n    /**\n     * Textarea resized.\n     */\n    textareaResized(): void {\n        this.onResize.emit();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/send-message-form/send-message-form.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter, OnInit, OnDestroy, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreCourseHelperProvider } from '../../providers/helper';\nimport { CoreCourseModuleHandlerButton } from '../../providers/module-delegate';\nimport { CoreCourseModulePrefetchDelegate, CoreCourseModulePrefetchHandler } from '../../providers/module-prefetch-delegate';\nimport { CoreConstants } from '../../../constants';\n\n/**\n * Component to display a module entry in a list of modules.\n *\n * Example usage:\n *\n * <core-course-module [module]=\"module\" [courseId]=\"courseId\" (completionChanged)=\"onCompletionChange()\"></core-course-module>\n */\n@Component({\n    selector: 'core-course-module',\n    templateUrl: 'module.html'\n})\nexport class CoreCourseModuleComponent implements OnInit, OnDestroy {\n    @Input() module: any; // The module to render.\n    @Input() courseId: number; // The course the module belongs to.\n    @Input('downloadEnabled') set enabled(value: boolean) {\n        this.downloadEnabled = value;\n\n        if (this.module.handlerData.showDownloadButton && this.downloadEnabled && !this.statusObserver) {\n            // First time that the download is enabled. Initialize the data.\n            this.spinner = true; // Show spinner while calculating the status.\n\n            this.prefetchHandler = this.prefetchDelegate.getPrefetchHandlerFor(this.module);\n\n            // Get current status to decide which icon should be shown.\n            this.prefetchDelegate.getModuleStatus(this.module, this.courseId).then(this.showStatus.bind(this));\n\n            // Listen for changes on this module status.\n            this.statusObserver = this.eventsProvider.on(CoreEventsProvider.PACKAGE_STATUS_CHANGED, (data) => {\n                if (data.componentId === this.module.id && this.prefetchHandler &&\n                        data.component === this.prefetchHandler.component) {\n                    this.showStatus(data.status);\n                }\n            }, this.sitesProvider.getCurrentSiteId());\n        }\n    }\n    @Output() completionChanged?: EventEmitter<void>; // Will emit an event when the module completion changes.\n\n    showDownload: boolean; // Whether to display the download button.\n    showRefresh: boolean; // Whether to display the refresh button.\n    spinner: boolean; // Whether to display a spinner.\n    downloadEnabled: boolean; // Whether the download of sections and modules is enabled.\n\n    protected prefetchHandler: CoreCourseModulePrefetchHandler;\n    protected statusObserver;\n\n    constructor(@Optional() protected navCtrl: NavController, protected prefetchDelegate: CoreCourseModulePrefetchDelegate,\n            protected domUtils: CoreDomUtilsProvider, protected courseHelper: CoreCourseHelperProvider,\n            protected eventsProvider: CoreEventsProvider, protected sitesProvider: CoreSitesProvider) {\n        this.completionChanged = new EventEmitter();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Handler data must be defined. If it isn't, set it to prevent errors.\n        if (this.module && !this.module.handlerData) {\n            this.module.handlerData = {};\n        }\n    }\n\n    /**\n     * Function called when the module is clicked.\n     *\n     * @param {Event} event Click event.\n     */\n    moduleClicked(event: Event): void {\n        if (this.module.uservisible !== false && this.module.handlerData.action) {\n            this.module.handlerData.action(event, this.navCtrl, this.module, this.courseId);\n        }\n    }\n\n    /**\n     * Function called when a button is clicked.\n     *\n     * @param {Event} event Click event.\n     * @param {CoreCourseModuleHandlerButton} button The clicked button.\n     */\n    buttonClicked(event: Event, button: CoreCourseModuleHandlerButton): void {\n        if (button && button.action) {\n            event.preventDefault();\n            event.stopPropagation();\n\n            button.action(event, this.navCtrl, this.module, this.courseId);\n        }\n    }\n\n    /**\n     * Download the module.\n     *\n     * @param {Event} event Click event.\n     * @param {boolean} refresh Whether it's refreshing.\n     */\n    download(event: Event, refresh: boolean): void {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (!this.prefetchHandler) {\n            return;\n        }\n\n        // Show spinner since this operation might take a while.\n        this.spinner = true;\n\n        // Get download size to ask for confirm if it's high.\n        this.prefetchHandler.getDownloadSize(module, this.courseId).then((size) => {\n            this.courseHelper.prefetchModule(this.prefetchHandler, this.module, size, this.courseId, refresh).catch((error) => {\n                // Error or cancelled.\n                this.spinner = false;\n            });\n        }).catch((error) => {\n            // Error getting download size, hide spinner.\n            this.spinner = false;\n            this.domUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n        });\n    }\n\n    /**\n     * Show download buttons according to module status.\n     *\n     * @param {string} status Module status.\n     */\n    protected showStatus(status: string): void {\n        if (status) {\n            this.spinner = status === CoreConstants.DOWNLOADING;\n            this.showDownload = status === CoreConstants.NOT_DOWNLOADED;\n            this.showRefresh = status === CoreConstants.OUTDATED ||\n                (!this.prefetchDelegate.canCheckUpdates() && status === CoreConstants.DOWNLOADED);\n        }\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.statusObserver && this.statusObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/components/module/module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter, OnChanges, SimpleChange } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUserProvider } from '@core/user/providers/user';\n\n/**\n * Component to handle activity completion. It shows a checkbox with the current status, and allows manually changing\n * the completion if it's allowed.\n *\n * Example usage:\n *\n * <core-course-module-completion [completion]=\"module.completionstatus\" [moduleName]=\"module.name\"\n *     (completionChanged)=\"completionChanged()\"></core-course-module-completion>\n */\n@Component({\n    selector: 'core-course-module-completion',\n    templateUrl: 'module-completion.html'\n})\nexport class CoreCourseModuleCompletionComponent implements OnChanges {\n    @Input() completion: any; // The completion status.\n    @Input() moduleName?: string; // The name of the module this completion affects.\n    @Output() completionChanged?: EventEmitter<void>; // Will emit an event when the completion changes.\n\n    completionImage: string;\n    completionDescription: string;\n\n    constructor(private textUtils: CoreTextUtilsProvider, private domUtils: CoreDomUtilsProvider,\n            private translate: TranslateService, private sitesProvider: CoreSitesProvider, private userProvider: CoreUserProvider) {\n        this.completionChanged = new EventEmitter();\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: { [name: string]: SimpleChange }): void {\n        if (changes.completion && this.completion) {\n            this.showStatus();\n        }\n    }\n\n    /**\n     * Completion clicked.\n     *\n     * @param {Event} e The click event.\n     */\n    completionClicked(e: Event): void {\n        if (this.completion) {\n            if (typeof this.completion.cmid == 'undefined' || this.completion.tracking !== 1) {\n                return;\n            }\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            const modal = this.domUtils.showModalLoading(),\n                params = {\n                    cmid: this.completion.cmid,\n                    completed: this.completion.state === 1 ? 0 : 1\n                },\n                currentSite = this.sitesProvider.getCurrentSite();\n\n            currentSite.write('core_completion_update_activity_completion_status_manually', params).then((response) => {\n                if (!response.status) {\n                    return Promise.reject(null);\n                }\n\n                this.completionChanged.emit();\n            }).catch((error) => {\n                this.domUtils.showErrorModalDefault(error, 'core.errorchangecompletion', true);\n            }).finally(() => {\n                modal.dismiss();\n            });\n        }\n    }\n\n    /**\n     * Set image and description to show as completion icon.\n     */\n    protected showStatus(): void {\n        const moduleName = this.moduleName || '';\n        let langKey,\n            image;\n\n        if (this.completion.tracking === 1 && this.completion.state === 0) {\n            image = 'completion-manual-n';\n            langKey = 'core.completion-alt-manual-n';\n        } else if (this.completion.tracking === 1 && this.completion.state === 1) {\n            image = 'completion-manual-y';\n            langKey = 'core.completion-alt-manual-y';\n        } else if (this.completion.tracking === 2 && this.completion.state === 0) {\n            image = 'completion-auto-n';\n            langKey = 'core.completion-alt-auto-n';\n        } else if (this.completion.tracking === 2 && this.completion.state === 1) {\n            image = 'completion-auto-y';\n            langKey = 'core.completion-alt-auto-y';\n        } else if (this.completion.tracking === 2 && this.completion.state === 2) {\n            image = 'completion-auto-pass';\n            langKey = 'core.completion-alt-auto-pass';\n        } else if (this.completion.tracking === 2 && this.completion.state === 3) {\n            image = 'completion-auto-fail';\n            langKey = 'core.completion-alt-auto-fail';\n        }\n\n        if (image) {\n            if (this.completion.overrideby > 0) {\n                image += '-override';\n            }\n            this.completionImage = 'assets/img/completion/' + image + '.svg';\n        }\n\n        if (moduleName) {\n            this.textUtils.formatText(moduleName, true, true, 50).then((modNameFormatted) => {\n                let promise;\n\n                if (this.completion.overrideby > 0) {\n                    langKey += '-override';\n\n                    promise = this.userProvider.getProfile(this.completion.overrideby, this.completion.courseId, true).then(\n                        (profile) => {\n                            return {\n                                overrideuser: profile.fullname,\n                                modname: modNameFormatted\n                            };\n                        });\n                } else {\n                    promise = Promise.resolve(modNameFormatted);\n                }\n\n                return promise.then((translateParams) => {\n                    this.completionDescription = this.translate.instant(langKey, { $a: translateParams });\n                });\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/components/module-completion/module-completion.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input } from '@angular/core';\n\n/**\n * Component to display the description of a module.\n *\n * This directive is meant to display a module description in a similar way throughout all the app.\n *\n * You can add a note at the right side of the description by using the 'note' attribute.\n *\n * You can also pass a component and componentId to be used in format-text.\n *\n * Module descriptions are shortened by default, allowing the user to see the full description by clicking in it.\n * If you want the whole description to be shown you can use the 'showFull' attribute.\n *\n * Example usage:\n *\n * <core-course-module-description [description]=\"myDescription\"></core-course-module-description\n */\n@Component({\n    selector: 'core-course-module-description',\n    templateUrl: 'module-description.html'\n})\nexport class CoreCourseModuleDescriptionComponent {\n    @Input() description: string; // The description to display.\n    @Input() note?: string; // A note to display along with the description.\n    @Input() component?: string; // Component for format text directive.\n    @Input() componentId?: string | number; // Component ID to use in conjunction with the component.\n    @Input() showFull?: string | boolean; // Whether to always display the full description.\n\n    constructor() {\n        // Nothing to do.\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/components/module-description/module-description.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Component to navigate to previous or next chapter in a book.\n */\n@Component({\n    selector: 'addon-mod-book-navigation-arrows',\n    templateUrl: 'navigation-arrows.html'\n})\nexport class AddonModBookNavigationArrowsComponent {\n    @Input() previous?: string; // Previous chapter ID.\n    @Input() next?: string; // Next chapter ID.\n    @Output() action?: EventEmitter<string>; // Will emit an event when the item clicked.\n\n    constructor() {\n        this.action = new EventEmitter();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/components/navigation-arrows/navigation-arrows.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, OnDestroy, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreCourseFormatDelegate } from '@core/course/providers/format-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\n\n/**\n * This component is meant to display a course for a list of courses with progress.\n *\n * Example usage:\n *\n * <core-courses-course-progress [course]=\"course\">\n * </core-courses-course-progress>\n */\n@Component({\n    selector: 'core-courses-course-progress',\n    templateUrl: 'course-progress.html'\n})\nexport class CoreCoursesCourseProgressComponent implements OnInit, OnDestroy {\n    @Input() course: any; // The course to render.\n\n    isDownloading: boolean;\n    prefetchCourseData = {\n        prefetchCourseIcon: 'spinner'\n    };\n\n    protected isDestroyed = false;\n    protected courseStatusObserver;\n\n    constructor(@Optional() private navCtrl: NavController, private courseHelper: CoreCourseHelperProvider,\n            private courseFormatDelegate: CoreCourseFormatDelegate, private domUtils: CoreDomUtilsProvider,\n            private courseProvider: CoreCourseProvider, eventsProvider: CoreEventsProvider, sitesProvider: CoreSitesProvider) {\n        // Listen for status change in course.\n        this.courseStatusObserver = eventsProvider.on(CoreEventsProvider.COURSE_STATUS_CHANGED, (data) => {\n            if (data.courseId == this.course.id) {\n                this.prefetchCourseData.prefetchCourseIcon = this.courseHelper.getCourseStatusIconFromStatus(data.status);\n            }\n        }, sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Determine course prefetch icon.\n        this.courseHelper.getCourseStatusIcon(this.course.id).then((icon) => {\n            this.prefetchCourseData.prefetchCourseIcon = icon;\n\n            if (icon == 'spinner') {\n                // Course is being downloaded. Get the download promise.\n                const promise = this.courseHelper.getCourseDownloadPromise(this.course.id);\n                if (promise) {\n                    // There is a download promise. If it fails, show an error.\n                    promise.catch((error) => {\n                        if (!this.isDestroyed) {\n                            this.domUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\n                        }\n                    });\n                } else {\n                    // No download, this probably means that the app was closed while downloading. Set previous status.\n                    this.courseProvider.setCoursePreviousStatus(this.course.id);\n                }\n            }\n        });\n    }\n\n    /**\n     * Open a course.\n     *\n     * @param {any} course The course to open.\n     */\n    openCourse(course: any): void {\n        this.courseFormatDelegate.openCourse(this.navCtrl, course);\n    }\n\n    /**\n     * Prefetch the course.\n     *\n     * @param {Event} e Click event.\n     */\n    prefetchCourse(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.courseHelper.confirmAndPrefetchCourse(this.prefetchCourseData, this.course).catch((error) => {\n            if (!this.isDestroyed) {\n                this.domUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\n            }\n        });\n    }\n\n    /**\n     * Component destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n\n        if (this.courseStatusObserver) {\n            this.courseStatusObserver.off();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/components/course-progress/course-progress.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreCoursesProvider } from '../../providers/courses';\n\n/**\n * This directive is meant to display an item for a list of courses.\n *\n * Example usage:\n *\n * <core-courses-course-list-item [course]=\"course\"></core-courses-course-list-item>\n */\n@Component({\n    selector: 'core-courses-course-list-item',\n    templateUrl: 'course-list-item.html'\n})\nexport class CoreCoursesCourseListItemComponent implements OnInit {\n    @Input() course: any; // The course to render.\n\n    constructor(@Optional() private navCtrl: NavController, private translate: TranslateService,\n            private coursesProvider: CoreCoursesProvider) {\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Check if the user is enrolled in the course.\n        this.coursesProvider.getUserCourse(this.course.id).then(() => {\n            this.course.isEnrolled = true;\n        }).catch(() => {\n            this.course.isEnrolled = false;\n            this.course.enrollment = [];\n\n            this.course.enrollmentmethods.forEach((instance) => {\n                if (instance === 'self') {\n                    this.course.enrollment.push({\n                        name: this.translate.instant('core.courses.selfenrolment'),\n                        icon: 'unlock'\n                    });\n                } else if (instance === 'guest') {\n                    this.course.enrollment.push({\n                        name: this.translate.instant('core.courses.allowguests'),\n                        icon: 'person'\n                    });\n                } else if (instance === 'paypal') {\n                    this.course.enrollment.push({\n                        name: this.translate.instant('core.courses.paypalaccepted'),\n                        img: 'assets/img/icons/paypal.png'\n                    });\n                }\n            });\n\n            if (this.course.enrollment.length == 0) {\n                this.course.enrollment.push({\n                    name: this.translate.instant('core.courses.notenrollable'),\n                    icon: 'lock'\n                });\n            }\n        });\n    }\n\n    /**\n     * Open a course.\n     *\n     * @param {any} course The course to open.\n     */\n    openCourse(course: any): void {\n        this.navCtrl.push('CoreCoursesCoursePreviewPage', {course: course});\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/components/course-list-item/course-list-item.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, Output, OnChanges, EventEmitter, SimpleChange, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport * as moment from 'moment';\n\n/**\n * Directive to render a list of events in course overview.\n */\n@Component({\n    selector: 'core-courses-overview-events',\n    templateUrl: 'overview-events.html'\n})\nexport class CoreCoursesOverviewEventsComponent implements OnChanges {\n    @Input() events: any[]; // The events to render.\n    @Input() showCourse?: boolean | string; // Whether to show the course name.\n    @Input() canLoadMore?: boolean; // Whether more events can be loaded.\n    @Output() loadMore: EventEmitter<void>; // Notify that more events should be loaded.\n\n    empty: boolean;\n    loadingMore: boolean;\n    recentlyOverdue: any[] = [];\n    today: any[] = [];\n    next7Days: any[] = [];\n    next30Days: any[] = [];\n    future: any[] = [];\n\n    constructor(@Optional() private navCtrl: NavController, private utils: CoreUtilsProvider,\n            private textUtils: CoreTextUtilsProvider, private domUtils: CoreDomUtilsProvider,\n            private sitesProvider: CoreSitesProvider, private courseProvider: CoreCourseProvider,\n            private contentLinksHelper: CoreContentLinksHelperProvider) {\n        this.loadMore = new EventEmitter();\n    }\n\n    /**\n     * Detect changes on input properties.\n     */\n    ngOnChanges(changes: {[name: string]: SimpleChange}): void {\n        this.showCourse = this.utils.isTrueOrOne(this.showCourse);\n\n        if (changes.events) {\n            this.updateEvents();\n        }\n    }\n\n    /**\n     * Filter the events by time.\n     *\n     * @param {number} start Number of days to start getting events from today. E.g. -1 will get events from yesterday.\n     * @param {number} [end] Number of days after the start.\n     * @return {any[]} Filtered events.\n     */\n    protected filterEventsByTime(start: number, end?: number): any[] {\n        start = moment().add(start, 'days').unix();\n        end = typeof end != 'undefined' ? moment().add(end, 'days').unix() : end;\n\n        return this.events.filter((event) => {\n            if (end) {\n                return start <= event.timesort && event.timesort < end;\n            }\n\n            return start <= event.timesort;\n        }).map((event) => {\n            event.iconUrl = this.courseProvider.getModuleIconSrc(event.icon.component);\n\n            return event;\n        });\n    }\n\n    /**\n     * Update the events displayed.\n     */\n    protected updateEvents(): void {\n        this.empty = !this.events || this.events.length <= 0;\n        if (!this.empty) {\n            this.recentlyOverdue = this.filterEventsByTime(-14, 0);\n            this.today = this.filterEventsByTime(0, 1);\n            this.next7Days = this.filterEventsByTime(1, 7);\n            this.next30Days = this.filterEventsByTime(7, 30);\n            this.future = this.filterEventsByTime(30);\n        }\n    }\n\n    /**\n     * Load more events clicked.\n     */\n    loadMoreEvents(): void {\n        this.loadingMore = true;\n        this.loadMore.emit();\n    }\n\n    /**\n     * Action clicked.\n     *\n     * @param {Event} e Click event.\n     * @param {string} url Url of the action.\n     */\n    action(e: Event, url: string): void {\n        e.preventDefault();\n        e.stopPropagation();\n\n        // Fix URL format.\n        url = this.textUtils.decodeHTMLEntities(url);\n\n        const modal = this.domUtils.showModalLoading();\n        this.contentLinksHelper.handleLink(url, undefined, this.navCtrl).then((treated) => {\n            if (!treated) {\n                return this.sitesProvider.getCurrentSite().openInBrowserWithAutoLoginIfSameSite(url);\n            }\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/components/overview-events/overview-events.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseModulePrefetchDelegate } from '@core/course/providers/module-prefetch-delegate';\n\n/**\n * Component that displays site home index.\n */\n@Component({\n    selector: 'core-sitehome-index',\n    templateUrl: 'index.html',\n})\nexport class CoreSiteHomeIndexComponent implements OnInit {\n    dataLoaded: boolean;\n    section: any;\n    block: any;\n    hasContent: boolean;\n    items: any[] = [];\n    siteHomeId: number;\n\n    protected sectionsLoaded: any[];\n\n    constructor(private domUtils: CoreDomUtilsProvider, private sitesProvider: CoreSitesProvider,\n            private courseProvider: CoreCourseProvider, private courseHelper: CoreCourseHelperProvider,\n            private prefetchDelegate: CoreCourseModulePrefetchDelegate) {\n        this.siteHomeId = sitesProvider.getCurrentSite().getSiteHomeId();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.loadContent().finally(() => {\n            this.dataLoaded = true;\n        });\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} refresher Refresher.\n     */\n    doRefresh(refresher: any): void {\n        const promises = [],\n            currentSite = this.sitesProvider.getCurrentSite();\n\n        promises.push(this.courseProvider.invalidateSections(this.siteHomeId));\n        promises.push(currentSite.invalidateConfig().then(() => {\n            // Config invalidated, fetch it again.\n            return currentSite.getConfig().then((config) => {\n                currentSite.setConfig(config);\n            });\n        }));\n\n        if (this.sectionsLoaded) {\n            // Invalidate modules prefetch data.\n            const modules = this.courseProvider.getSectionsModules(this.sectionsLoaded);\n            promises.push(this.prefetchDelegate.invalidateModules(modules, this.siteHomeId));\n        }\n\n        Promise.all(promises).finally(() => {\n            this.loadContent().finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n\n    /**\n     * Convenience function to fetch the data.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected loadContent(): Promise<any> {\n        this.hasContent = false;\n\n        const config = this.sitesProvider.getCurrentSite().getStoredConfig() || { numsections: 1 };\n\n        if (config.frontpageloggedin) {\n            // Items with index 1 and 3 were removed on 2.5 and not being supported in the app.\n            const frontpageItems = [\n                    'news', // News items.\n                    false,\n                    'categories', // List of categories.\n                    false,\n                    'categories', // Combo list.\n                    'enrolled-course-list', // Enrolled courses.\n                    'all-course-list', // List of courses.\n                    'course-search' // Course search box.\n                ],\n                items = config.frontpageloggedin.split(',');\n\n            this.items = [];\n\n            items.forEach((itemNumber) => {\n                // Get the frontpage item \"name\".\n                const item = frontpageItems[parseInt(itemNumber, 10)];\n                if (!item || this.items.indexOf(item) >= 0) {\n                    return;\n                }\n\n                this.hasContent = true;\n                this.items.push(item);\n            });\n        }\n\n        return this.courseProvider.getSections(this.siteHomeId, false, true).then((sections) => {\n            this.sectionsLoaded = Array.from(sections);\n\n            // Check \"Include a topic section\" setting from numsections.\n            this.section = config.numsections && sections.length > 0 ? sections.pop() : false;\n            if (this.section) {\n                this.section.hasContent = this.courseHelper.sectionHasContent(this.section);\n            }\n\n            this.block = sections.length > 0 ? sections.pop() : false;\n            if (this.block) {\n                this.block.hasContent = this.courseHelper.sectionHasContent(this.block);\n            }\n\n            this.hasContent = this.courseHelper.addHandlerDataForModules(this.sectionsLoaded, this.siteHomeId) || this.hasContent;\n\n            // Add log in Moodle.\n            this.courseProvider.logView(this.siteHomeId);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'core.course.couldnotloadsectioncontent', true);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/components/index/index.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\n\n/**\n * Component to open the page to view the list of all courses.\n */\n@Component({\n    selector: 'core-sitehome-all-course-list',\n    templateUrl: 'all-course-list.html',\n})\nexport class CoreSiteHomeAllCourseListComponent {\n    show: boolean;\n\n    constructor(coursesProvider: CoreCoursesProvider) {\n        this.show = coursesProvider.isGetCoursesByFieldAvailable();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/components/all-course-list/all-course-list.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\n\n/**\n * Component to open the page to view the list of categories.\n */\n@Component({\n    selector: 'core-sitehome-categories',\n    templateUrl: 'categories.html',\n})\nexport class CoreSiteHomeCategoriesComponent {\n    show: boolean;\n\n    constructor(coursesProvider: CoreCoursesProvider) {\n        this.show = coursesProvider.isGetCoursesByFieldAvailable();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/components/categories/categories.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\n\n/**\n * Component to open the page to search courses.\n */\n@Component({\n    selector: 'core-sitehome-course-search',\n    templateUrl: 'course-search.html',\n})\nexport class CoreSiteHomeCourseSearchComponent {\n    show: boolean;\n\n    constructor(coursesProvider: CoreCoursesProvider) {\n        this.show = !coursesProvider.isSearchCoursesDisabledInSite();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/components/course-search/course-search.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\n\n/**\n * Component to open the page to view the list of courses the user is enrolled in.\n */\n@Component({\n    selector: 'core-sitehome-enrolled-course-list',\n    templateUrl: 'enrolled-course-list.html',\n})\nexport class CoreSiteHomeEnrolledCourseListComponent implements OnInit {\n    show: boolean;\n\n    constructor(private coursesProvider: CoreCoursesProvider) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        if (this.coursesProvider.isMyCoursesDisabledInSite()) {\n            this.show = false;\n        } else {\n            this.coursesProvider.getUserCourses().then((courses) => {\n                this.show = courses.length > 0;\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/components/enrolled-course-list/enrolled-course-list.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoreSitesProvider } from '@providers/sites';\n\n/**\n * Component that displays site home news.\n */\n@Component({\n    selector: 'core-sitehome-news',\n    templateUrl: 'news.html',\n})\nexport class CoreSiteHomeNewsComponent implements OnInit {\n    module: any;\n    show: boolean;\n    siteHomeId: number;\n\n    constructor(private sitesProvider: CoreSitesProvider) {\n        this.siteHomeId = sitesProvider.getCurrentSite().getSiteHomeId();\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Get number of news items to show.\n        const newsItems = this.sitesProvider.getCurrentSite().getStoredConfig('newsitems') || 0;\n        if (!newsItems) {\n            return;\n        }\n\n        // @todo: Implement it once forum is supported.\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/components/news/news.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit, Injector } from '@angular/core';\nimport { CoreUserProfileFieldDelegate } from '../../providers/user-profile-field-delegate';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n/**\n * Directive to render user profile field.\n */\n@Component({\n    selector: 'core-user-profile-field',\n    templateUrl: 'user-profile-field.html'\n})\nexport class CoreUserProfileFieldComponent implements OnInit {\n    @Input() field: any; // The profile field to be rendered.\n    @Input() signup = false; // True if editing the field in signup. Defaults to false.\n    @Input() edit = false; // True if editing the field. Defaults to false.\n    @Input() form?: any; // Form where to add the form control. Required if edit=true or signup=true.\n    @Input() registerAuth?: string; // Register auth method. E.g. 'email'.\n\n    componentClass: any; // The class of the component to render.\n    data: any = {}; // Data to pass to the component.\n\n    constructor(private ufDelegate: CoreUserProfileFieldDelegate, private utilsProvider: CoreUtilsProvider,\n            private injector: Injector) { }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.ufDelegate.getComponent(this.injector, this.field, this.signup).then((component) => {\n            this.componentClass = component;\n        });\n\n        this.data.field = this.field;\n        this.data.edit = this.utilsProvider.isTrueOrOne(this.edit);\n        if (this.edit) {\n            this.data.signup = this.utilsProvider.isTrueOrOne(this.signup);\n            this.data.disabled = this.utilsProvider.isTrueOrOne(this.field.locked);\n            this.data.form = this.form;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/components/user-profile-field/user-profile-field.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreCompileHtmlComponent } from './compile-html';\n\n@NgModule({\n    declarations: [\n        CoreCompileHtmlComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        CoreCompileHtmlComponent\n    ]\n})\nexport class CoreCompileHtmlComponentModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/compile/components/compile-html/compile-html.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreCourseFormatSingleActivityComponent } from './components/singleactivity';\nimport { CoreCourseFormatSingleActivityHandler } from './providers/handler';\nimport { CoreCourseFormatDelegate } from '../../providers/format-delegate';\nimport { CoreComponentsModule } from '@components/components.module';\n\n@NgModule({\n    declarations: [\n        CoreCourseFormatSingleActivityComponent\n    ],\n    imports: [\n        CoreComponentsModule\n    ],\n    providers: [\n        CoreCourseFormatSingleActivityHandler\n    ],\n    exports: [\n        CoreCourseFormatSingleActivityComponent\n    ],\n    entryComponents: [\n        CoreCourseFormatSingleActivityComponent\n    ]\n})\nexport class CoreCourseFormatSingleActivityModule {\n    constructor(formatDelegate: CoreCourseFormatDelegate, handler: CoreCourseFormatSingleActivityHandler) {\n        formatDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/singleactivity/singleactivity.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreCourseFormatSocialHandler } from './providers/handler';\nimport { CoreCourseFormatDelegate } from '../../providers/format-delegate';\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    providers: [\n        CoreCourseFormatSocialHandler\n    ],\n    exports: []\n})\nexport class CoreCourseFormatSocialModule {\n    constructor(formatDelegate: CoreCourseFormatDelegate, handler: CoreCourseFormatSocialHandler) {\n        formatDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/social/social.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCourseFormatSingleActivityHandler } from '../../singleactivity/providers/handler';\n\n/**\n * Handler to support social course format.\n * This format is like singleactivity in the mobile app, so we'll use the same implementation for both.\n */\n@Injectable()\nexport class CoreCourseFormatSocialHandler extends CoreCourseFormatSingleActivityHandler {\n    name = 'social';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/social/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreCourseFormatTopicsHandler } from './providers/handler';\nimport { CoreCourseFormatDelegate } from '../../providers/format-delegate';\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    providers: [\n        CoreCourseFormatTopicsHandler\n    ],\n    exports: []\n})\nexport class CoreCourseFormatTopicsModule {\n    constructor(formatDelegate: CoreCourseFormatDelegate, handler: CoreCourseFormatTopicsHandler) {\n        formatDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/topics/topics.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCourseFormatHandler } from '../../../providers/format-delegate';\n\n/**\n * Handler to support topics course format.\n */\n@Injectable()\nexport class CoreCourseFormatTopicsHandler implements CoreCourseFormatHandler {\n    name = 'topics';\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/topics/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreCourseFormatWeeksHandler } from './providers/handler';\nimport { CoreCourseFormatDelegate } from '../../providers/format-delegate';\n\n@NgModule({\n    declarations: [],\n    imports: [\n    ],\n    providers: [\n        CoreCourseFormatWeeksHandler\n    ],\n    exports: []\n})\nexport class CoreCourseFormatWeeksModule {\n    constructor(formatDelegate: CoreCourseFormatDelegate, handler: CoreCourseFormatWeeksHandler) {\n        formatDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/weeks/weeks.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCourseFormatHandler } from '../../../providers/format-delegate';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreConstants } from '../../../../constants';\n\n/**\n * Handler to support weeks course format.\n */\n@Injectable()\nexport class CoreCourseFormatWeeksHandler implements CoreCourseFormatHandler {\n    name = 'weeks';\n\n    constructor(private timeUtils: CoreTimeUtilsProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Given a list of sections, get the \"current\" section that should be displayed first.\n     *\n     * @param {any} course The course to get the title.\n     * @param {any[]} sections List of sections.\n     * @return {any|Promise<any>} Current section (or promise resolved with current section).\n     */\n    getCurrentSection(course: any, sections: any[]): any | Promise<any> {\n        const now = this.timeUtils.timestamp();\n\n        if (now < course.startdate || (course.enddate && now > course.enddate)) {\n            // Course hasn't started yet or it has ended already. Return the first section.\n            return sections[1];\n        }\n\n        for (let i = 0; i < sections.length; i++) {\n            const section = sections[i];\n            if (typeof section.section == 'undefined' || section.section < 1) {\n                continue;\n            }\n\n            const dates = this.getSectionDates(section, course.startdate);\n            if ((now >= dates.start) && (now < dates.end)) {\n                return section;\n            }\n        }\n\n        // The section wasn't found, return the first section.\n        return sections[1];\n    }\n\n    /**\n     * Return the start and end date of a section.\n     *\n     * @param {any} section The section to treat.\n     * @param {number} startDate The course start date (in seconds).\n     * @return {{start: number, end: number}} An object with the start and end date of the section.\n     */\n    protected getSectionDates(section: any, startDate: number): { start: number, end: number } {\n        // Hack alert. We add 2 hours to avoid possible DST problems. (e.g. we go into daylight savings and the date changes).\n        startDate = startDate + 7200;\n\n        const dates = {\n            start: startDate + (CoreConstants.SECONDS_WEEK * (section.section - 1)),\n            end: 0\n        };\n        dates.end = dates.start + CoreConstants.SECONDS_WEEK;\n\n        return dates;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/formats/weeks/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCoursesProvider } from './courses';\nimport { CoreMainMenuHandler, CoreMainMenuHandlerData } from '@core/mainmenu/providers/delegate';\nimport { CoreCoursesMyOverviewProvider } from '../providers/my-overview';\n\n/**\n * Handler to add My Courses or My Overview into main menu.\n */\n@Injectable()\nexport class CoreCoursesMainMenuHandler implements CoreMainMenuHandler {\n    name = 'CoreCourses';\n    priority = 1100;\n    isOverviewEnabled: boolean;\n\n    constructor(private coursesProvider: CoreCoursesProvider, private myOverviewProvider: CoreCoursesMyOverviewProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean | Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        // Check if my overview is enabled.\n        return this.myOverviewProvider.isEnabled().then((enabled) => {\n            this.isOverviewEnabled = enabled;\n            if (enabled) {\n                return true;\n            }\n\n            // My overview not enabled, check if my courses is enabled.\n            return !this.coursesProvider.isMyCoursesDisabledInSite();\n        });\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHandlerData {\n        if (this.isOverviewEnabled) {\n            return {\n                icon: 'home',\n                title: 'core.courses.courseoverview',\n                page: 'CoreCoursesMyOverviewPage',\n                class: 'core-courseoverview-handler'\n            };\n        } else {\n            return {\n                icon: 'ionic',\n                title: 'core.courses.mycourses',\n                page: 'CoreCoursesMyCoursesPage',\n                class: 'core-mycourses-handler'\n            };\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/providers/mainmenu-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreCoursesProvider } from './courses';\n\n/**\n * Handler to treat links to course view or enrol (except site home).\n */\n@Injectable()\nexport class CoreCoursesCourseLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'CoreCoursesCourseLinkHandler';\n    pattern = /((\\/enrol\\/index\\.php)|(\\/course\\/enrol\\.php)|(\\/course\\/view\\.php)).*([\\?\\&]id=\\d+)/;\n\n    protected waitStart = 0;\n\n    constructor(private sitesProvider: CoreSitesProvider, private coursesProvider: CoreCoursesProvider,\n            private loginHelper: CoreLoginHelperProvider, private domUtils: CoreDomUtilsProvider,\n            private translate: TranslateService, private courseProvider: CoreCourseProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        courseId = parseInt(params.id, 10);\n\n        const sectionId = params.sectionid ? parseInt(params.sectionid, 10) : null,\n            sectionNumber = typeof params.section != 'undefined' ? parseInt(params.section, 10) : NaN,\n            pageParams: any = {\n                course: { id: courseId },\n                sectionId: sectionId || null\n            };\n\n        if (!isNaN(sectionNumber)) {\n            pageParams.sectionNumber = sectionNumber;\n        }\n\n        return [{\n            action: (siteId, navCtrl?): void => {\n                siteId = siteId || this.sitesProvider.getCurrentSiteId();\n                if (siteId == this.sitesProvider.getCurrentSiteId()) {\n                    this.actionEnrol(courseId, url, pageParams).catch(() => {\n                        // Ignore errors.\n                    });\n                } else {\n                    // Use redirect to make the course the new history root (to avoid \"loops\" in history).\n                    this.loginHelper.redirect('CoreCourseSectionPage', pageParams, siteId);\n                }\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        courseId = parseInt(params.id, 10);\n\n        if (!courseId) {\n            return false;\n        }\n\n        // Get the course id of Site Home.\n        return this.sitesProvider.getSiteHomeId(siteId).then((siteHomeId) => {\n            return courseId != siteHomeId;\n        });\n    }\n\n    /**\n     * Action to perform when an enrol link is clicked.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} url Treated URL.\n     * @param {any} pageParams Params to send to the new page.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected actionEnrol(courseId: number, url: string, pageParams: any): Promise<any> {\n        const modal = this.domUtils.showModalLoading(),\n            isEnrolUrl = !!url.match(/(\\/enrol\\/index\\.php)|(\\/course\\/enrol\\.php)/);\n\n        // Check if user is enrolled in the course.\n        return this.coursesProvider.getUserCourse(courseId).catch(() => {\n            // User is not enrolled in the course. Check if can self enrol.\n            return this.canSelfEnrol(courseId).then(() => {\n                modal.dismiss();\n\n                // The user can self enrol. If it's not a enrolment URL we'll ask for confirmation.\n                const promise = isEnrolUrl ? Promise.resolve() :\n                    this.domUtils.showConfirm(this.translate.instant('core.courses.confirmselfenrol'));\n\n                return promise.then(() => {\n                    // Enrol URL or user confirmed.\n                    return this.selfEnrol(courseId).catch((error) => {\n                        if (error) {\n                            this.domUtils.showErrorModal(error);\n                        }\n\n                        return Promise.reject(null);\n                    });\n                }, () => {\n                    // User cancelled. Check if the user can view the course contents (guest access or similar).\n                    return this.courseProvider.getSections(courseId, false, true);\n                });\n            }, (error) => {\n                // Can't self enrol. Check if the user can view the course contents (guest access or similar).\n                return this.courseProvider.getSections(courseId, false, true).catch(() => {\n                    // Error. Show error message and allow the user to open the link in browser.\n                    modal.dismiss();\n\n                    if (error) {\n                        error = error.message || error.error || error.content || error.body || error;\n                    }\n                    if (!error) {\n                        error = this.translate.instant('core.courses.notenroled');\n                    }\n\n                    const body = this.translate.instant('core.twoparagraphs',\n                        { p1: error, p2: this.translate.instant('core.confirmopeninbrowser') });\n                    this.domUtils.showConfirm(body).then(() => {\n                        this.sitesProvider.getCurrentSite().openInBrowserWithAutoLogin(url);\n                    }).catch(() => {\n                        // User cancelled.\n                    });\n\n                    return Promise.reject(null);\n                });\n            });\n        }).then(() => {\n            modal.dismiss();\n\n            // Use redirect to make the course the new history root (to avoid \"loops\" in history).\n            this.loginHelper.redirect('CoreCourseSectionPage', pageParams, this.sitesProvider.getCurrentSiteId());\n        });\n    }\n\n    /**\n     * Check if a user can be \"automatically\" self enrolled in a course.\n     *\n     * @param {number} courseId Course ID.\n     * @return {Promise<any>} Promise resolved if user can be enrolled in a course, rejected otherwise.\n     */\n    protected canSelfEnrol(courseId: number): Promise<any> {\n        // Check that the course has self enrolment enabled.\n        return this.coursesProvider.getCourseEnrolmentMethods(courseId).then((methods) => {\n            let isSelfEnrolEnabled = false,\n                instances = 0;\n\n            methods.forEach((method) => {\n                if (method.type == 'self' && method.status) {\n                    isSelfEnrolEnabled = true;\n                    instances++;\n                }\n            });\n\n            if (!isSelfEnrolEnabled || instances != 1) {\n                // Self enrol not enabled or more than one instance.\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Try to self enrol a user in a course.\n     *\n     * @param {number} courseId Course ID.\n     * @param {string} [password] Password.\n     * @return {Promise<any>} Promise resolved when the user is enrolled, rejected otherwise.\n     */\n    protected selfEnrol(courseId: number, password?: string): Promise<any> {\n        const modal = this.domUtils.showModalLoading();\n\n        return this.coursesProvider.selfEnrol(courseId, password).then(() => {\n            // Success self enrolling the user, invalidate the courses list.\n            return this.coursesProvider.invalidateUserCourses().catch(() => {\n                // Ignore errors.\n            }).then(() => {\n                // Sometimes the list of enrolled courses takes a while to be updated. Wait for it.\n                return this.waitForEnrolled(courseId, true).finally(() => {\n                    modal.dismiss();\n                });\n            });\n\n        }).catch((error) => {\n            modal.dismiss();\n            if (error && error.code === CoreCoursesProvider.ENROL_INVALID_KEY) {\n                // Invalid password. Allow the user to input password.\n                const title = this.translate.instant('core.courses.selfenrolment'),\n                    body = ' ', // Empty message.\n                    placeholder = this.translate.instant('core.courses.password');\n\n                if (typeof password != 'undefined') {\n                    // The user attempted a password. Show an error message.\n                    this.domUtils.showErrorModal(error.message);\n                }\n\n                return this.domUtils.showPrompt(body, title, placeholder).then((password) => {\n                    return this.selfEnrol(courseId, password);\n                });\n            } else {\n                return Promise.reject(error);\n            }\n        });\n    }\n\n    /**\n     * Wait for the user to be enrolled in a course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {boolean} first If it's the first call (true) or it's a recursive call (false).\n     * @return {Promise<any>} Promise resolved when enrolled or timeout.\n     */\n    protected waitForEnrolled(courseId: number, first?: boolean): Promise<any> {\n        if (first) {\n            this.waitStart = Date.now();\n        }\n\n        // Check if user is enrolled in the course.\n        return this.coursesProvider.invalidateUserCourses().catch(() => {\n            // Ignore errors.\n        }).then(() => {\n            return this.coursesProvider.getUserCourse(courseId);\n        }).catch(() => {\n            // Not enrolled, wait a bit and try again.\n            if (Date.now() - this.waitStart > 60000) {\n                // Max time reached, stop.\n                return;\n            }\n\n            return new Promise((resolve, reject): void => {\n                setTimeout(() => {\n                    this.waitForEnrolled(courseId).then(resolve);\n                }, 5000);\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/providers/course-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\nimport { CoreCoursesProvider } from './courses';\n\n/**\n * Handler to treat links to course index (list of courses).\n */\n@Injectable()\nexport class CoreCoursesIndexLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'CoreCoursesIndexLinkHandler';\n    featureName = '$mmSideMenuDelegate_mmCourses';\n    pattern = /\\/course\\/?(index\\.php.*)?$/;\n\n    constructor(private coursesProvider: CoreCoursesProvider, private loginHelper: CoreLoginHelperProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[] | Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId, navCtrl?): void => {\n                let page = 'CoreCoursesMyCoursesPage'; // By default, go to My Courses.\n                const pageParams: any = {};\n\n                if (this.coursesProvider.isGetCoursesByFieldAvailable()) {\n                    if (params.categoryid) {\n                        page = 'CoreCoursesCategoriesPage';\n                        pageParams.categoryId = parseInt(params.categoryid, 10);\n                    } else {\n                        page = 'CoreCoursesAvailableCoursesPage';\n                    }\n                }\n\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.loginHelper.redirect(page, pageParams, siteId);\n            }\n        }];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/providers/courses-index-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\n\n/**\n * Handler to treat links to my overview.\n */\n@Injectable()\nexport class CoreCoursesMyOverviewLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'CoreCoursesMyOverviewLinkHandler';\n    featureName = '$mmSideMenuDelegate_mmCourses';\n    pattern = /\\/my\\/?$/;\n\n    constructor(private loginHelper: CoreLoginHelperProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId, navCtrl?): void => {\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.loginHelper.redirect('CoreCoursesMyOverviewPage', undefined, siteId);\n            }\n        }];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/providers/my-overview-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreFileUploaderHandler, CoreFileUploaderHandlerData } from './delegate';\nimport { CoreFileUploaderHelperProvider } from './helper';\n/**\n * Handler to upload files from the album.\n */\n@Injectable()\nexport class CoreFileUploaderAlbumHandler implements CoreFileUploaderHandler {\n    name = 'CoreFileUploaderAlbum';\n    priority = 2000;\n\n    constructor(private appProvider: CoreAppProvider, private utils: CoreUtilsProvider,\n            private uploaderHelper: CoreFileUploaderHelperProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.appProvider.isMobile();\n    }\n\n    /**\n     * Given a list of mimetypes, return the ones that are supported by the handler.\n     *\n     * @param {string[]} [mimetypes] List of mimetypes.\n     * @return {string[]} Supported mimetypes.\n     */\n    getSupportedMimetypes(mimetypes: string[]): string[] {\n        // Album allows picking images and videos.\n        return this.utils.filterByRegexp(mimetypes, /^(image|video)\\//);\n    }\n\n    /**\n     * Get the data to display the handler.\n     *\n     * @return {CoreFileUploaderHandlerData} Data.\n     */\n    getData(): CoreFileUploaderHandlerData {\n        return {\n            title: 'core.fileuploader.photoalbums',\n            class: 'core-fileuploader-album-handler',\n            icon: 'images',\n            action: (maxSize?: number, upload?: boolean, allowOffline?: boolean, mimetypes?: string[]): Promise<any> => {\n                return this.uploaderHelper.uploadImage(true, maxSize, upload, mimetypes).then((result) => {\n                    return {\n                        treated: true,\n                        result: result\n                    };\n                });\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/providers/album-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreFileUploaderHandler, CoreFileUploaderHandlerData } from './delegate';\nimport { CoreFileUploaderHelperProvider } from './helper';\n/**\n * Handler to record an audio to upload it.\n */\n@Injectable()\nexport class CoreFileUploaderAudioHandler implements CoreFileUploaderHandler {\n    name = 'CoreFileUploaderAudio';\n    priority = 1600;\n\n    constructor(private appProvider: CoreAppProvider, private utils: CoreUtilsProvider, private platform: Platform,\n            private uploaderHelper: CoreFileUploaderHelperProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.appProvider.isMobile() || (this.appProvider.canGetUserMedia() && this.appProvider.canRecordMedia());\n    }\n\n    /**\n     * Given a list of mimetypes, return the ones that are supported by the handler.\n     *\n     * @param {string[]} [mimetypes] List of mimetypes.\n     * @return {string[]} Supported mimetypes.\n     */\n    getSupportedMimetypes(mimetypes: string[]): string[] {\n        if (this.platform.is('ios')) {\n            // In iOS it's recorded as WAV.\n            return this.utils.filterByRegexp(mimetypes, /^audio\\/wav$/);\n        } else if (this.platform.is('android')) {\n            // In Android we don't know the format the audio will be recorded, so accept any audio mimetype.\n            return this.utils.filterByRegexp(mimetypes, /^audio\\//);\n        } else {\n            // In desktop, support audio formats that are supported by MediaRecorder.\n            const mediaRecorder = (<any> window).MediaRecorder;\n            if (mediaRecorder) {\n                return mimetypes.filter((type) => {\n                    const matches = type.match(/^audio\\//);\n\n                    return matches && matches.length && mediaRecorder.isTypeSupported(type);\n                });\n            }\n        }\n\n        return [];\n    }\n\n    /**\n     * Get the data to display the handler.\n     *\n     * @return {CoreFileUploaderHandlerData} Data.\n     */\n    getData(): CoreFileUploaderHandlerData {\n        return {\n            title: 'core.fileuploader.audio',\n            class: 'core-fileuploader-audio-handler',\n            icon: 'microphone',\n            action: (maxSize?: number, upload?: boolean, allowOffline?: boolean, mimetypes?: string[]): Promise<any> => {\n                return this.uploaderHelper.uploadAudioOrVideo(true, maxSize, upload, mimetypes).then((result) => {\n                    return {\n                        treated: true,\n                        result: result\n                    };\n                });\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/providers/audio-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreFileUploaderHandler, CoreFileUploaderHandlerData } from './delegate';\nimport { CoreFileUploaderHelperProvider } from './helper';\n/**\n * Handler to take a picture to upload it.\n */\n@Injectable()\nexport class CoreFileUploaderCameraHandler implements CoreFileUploaderHandler {\n    name = 'CoreFileUploaderCamera';\n    priority = 1800;\n\n    constructor(private appProvider: CoreAppProvider, private utils: CoreUtilsProvider,\n            private uploaderHelper: CoreFileUploaderHelperProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.appProvider.isMobile() || this.appProvider.canGetUserMedia();\n    }\n\n    /**\n     * Given a list of mimetypes, return the ones that are supported by the handler.\n     *\n     * @param {string[]} [mimetypes] List of mimetypes.\n     * @return {string[]} Supported mimetypes.\n     */\n    getSupportedMimetypes(mimetypes: string[]): string[] {\n        // Camera only supports JPEG and PNG.\n        return this.utils.filterByRegexp(mimetypes, /^image\\/(jpeg|png)$/);\n    }\n\n    /**\n     * Get the data to display the handler.\n     *\n     * @return {CoreFileUploaderHandlerData} Data.\n     */\n    getData(): CoreFileUploaderHandlerData {\n        return {\n            title: 'core.fileuploader.camera',\n            class: 'core-fileuploader-camera-handler',\n            icon: 'camera',\n            action: (maxSize?: number, upload?: boolean, allowOffline?: boolean, mimetypes?: string[]): Promise<any> => {\n                return this.uploaderHelper.uploadImage(false, maxSize, upload, mimetypes).then((result) => {\n                    return {\n                        treated: true,\n                        result: result\n                    };\n                });\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/providers/camera-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\nimport { CoreFileUploaderHandler, CoreFileUploaderHandlerData } from './delegate';\nimport { CoreFileUploaderHelperProvider } from './helper';\nimport { CoreFileUploaderProvider } from './fileuploader';\n/**\n * Handler to upload any type of file.\n */\n@Injectable()\nexport class CoreFileUploaderFileHandler implements CoreFileUploaderHandler {\n    name = 'CoreFileUploaderFile';\n    priority = 1200;\n\n    constructor(private appProvider: CoreAppProvider, private platform: Platform, private timeUtils: CoreTimeUtilsProvider,\n            private uploaderHelper: CoreFileUploaderHelperProvider, private uploaderProvider: CoreFileUploaderProvider,\n            private domUtils: CoreDomUtilsProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.platform.is('android') || !this.appProvider.isMobile() ||\n            (this.platform.is('ios') && this.platform.version().major >= 9);\n    }\n\n    /**\n     * Given a list of mimetypes, return the ones that are supported by the handler.\n     *\n     * @param {string[]} [mimetypes] List of mimetypes.\n     * @return {string[]} Supported mimetypes.\n     */\n    getSupportedMimetypes(mimetypes: string[]): string[] {\n        return mimetypes;\n    }\n\n    /**\n     * Get the data to display the handler.\n     *\n     * @return {CoreFileUploaderHandlerData} Data.\n     */\n    getData(): CoreFileUploaderHandlerData {\n        const isIOS = this.platform.is('ios');\n\n        return {\n            title: isIOS ? 'core.fileuploader.more' : 'core.fileuploader.file',\n            class: 'core-fileuploader-file-handler',\n            icon: isIOS ? 'more' : 'folder',\n            afterRender: (maxSize: number, upload: boolean, allowOffline: boolean, mimetypes: string[]): void => {\n                // Add an invisible file input in the file handler.\n                // It needs to be done like this because the action sheet items don't accept inputs.\n                const element = document.querySelector('.core-fileuploader-file-handler');\n                if (element) {\n                    const input = document.createElement('input');\n                    input.setAttribute('type', 'file');\n                    if (mimetypes && mimetypes.length && (!this.platform.is('android') || mimetypes.length == 1)) {\n                        // Don't use accept attribute in Android with several mimetypes, it's not supported.\n                        input.setAttribute('accept', mimetypes.join(', '));\n                    }\n\n                    input.addEventListener('change', (evt: Event) => {\n                        const file = input.files[0];\n                        let fileName;\n\n                        input.value = ''; // Unset input.\n                        if (!file) {\n                            return;\n                        }\n\n                        // Verify that the mimetype of the file is supported, in case the accept attribute isn't supported.\n                        const error = this.uploaderProvider.isInvalidMimetype(mimetypes, file.name, file.type);\n                        if (error) {\n                            this.domUtils.showErrorModal(error);\n\n                            return;\n                        }\n\n                        fileName = file.name;\n                        if (isIOS) {\n                            // Check the name of the file and add a timestamp if needed (take picture).\n                            const matches = fileName.match(/image\\.(jpe?g|png)/);\n                            if (matches) {\n                                fileName = 'image_' + this.timeUtils.readableTimestamp() + '.' + matches[1];\n                            }\n                        }\n\n                        // Upload the picked file.\n                        this.uploaderHelper.uploadFileObject(file, maxSize, upload, allowOffline, fileName).then((result) => {\n                            this.uploaderHelper.fileUploaded(result);\n                        }).catch((error) => {\n                            if (error) {\n                                this.domUtils.showErrorModal(error);\n                            }\n                        });\n                    });\n\n                    element.appendChild(input);\n                }\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/providers/file-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreFileUploaderHandler, CoreFileUploaderHandlerData } from './delegate';\nimport { CoreFileUploaderHelperProvider } from './helper';\n/**\n * Handler to record a video to upload it.\n */\n@Injectable()\nexport class CoreFileUploaderVideoHandler implements CoreFileUploaderHandler {\n    name = 'CoreFileUploaderVideo';\n    priority = 1400;\n\n    constructor(private appProvider: CoreAppProvider, private utils: CoreUtilsProvider, private platform: Platform,\n            private uploaderHelper: CoreFileUploaderHelperProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.appProvider.isMobile() || (this.appProvider.canGetUserMedia() && this.appProvider.canRecordMedia());\n    }\n\n    /**\n     * Given a list of mimetypes, return the ones that are supported by the handler.\n     *\n     * @param {string[]} [mimetypes] List of mimetypes.\n     * @return {string[]} Supported mimetypes.\n     */\n    getSupportedMimetypes(mimetypes: string[]): string[] {\n        if (this.platform.is('ios')) {\n            // In iOS it's recorded as MOV.\n            return this.utils.filterByRegexp(mimetypes, /^video\\/quicktime$/);\n        } else if (this.platform.is('android')) {\n            // In Android we don't know the format the video will be recorded, so accept any video mimetype.\n            return this.utils.filterByRegexp(mimetypes, /^video\\//);\n        } else {\n            // In desktop, support video formats that are supported by MediaRecorder.\n            const mediaRecorder = (<any> window).MediaRecorder;\n            if (mediaRecorder) {\n                return mimetypes.filter((type) => {\n                    const matches = type.match(/^video\\//);\n\n                    return matches && matches.length && mediaRecorder.isTypeSupported(type);\n                });\n            }\n        }\n\n        return [];\n    }\n\n    /**\n     * Get the data to display the handler.\n     *\n     * @return {CoreFileUploaderHandlerData} Data.\n     */\n    getData(): CoreFileUploaderHandlerData {\n        return {\n            title: 'core.fileuploader.video',\n            class: 'core-fileuploader-video-handler',\n            icon: 'videocam',\n            action: (maxSize?: number, upload?: boolean, allowOffline?: boolean, mimetypes?: string[]): Promise<any> => {\n                return this.uploaderHelper.uploadAudioOrVideo(false, maxSize, upload, mimetypes).then((result) => {\n                    return {\n                        treated: true,\n                        result: result\n                    };\n                });\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/fileuploader/providers/video-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreGradesProvider } from './grades';\nimport { CoreMainMenuHandler, CoreMainMenuHandlerData } from '@core/mainmenu/providers/delegate';\n\n/**\n * Handler to inject an option into main menu.\n */\n@Injectable()\nexport class CoreGradesMainMenuHandler implements CoreMainMenuHandler {\n    name = 'CoreGrades';\n    priority = 600;\n\n    constructor(private gradesProvider: CoreGradesProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean | Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.gradesProvider.isCourseGradesEnabled();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHandlerData {\n        return {\n            icon: 'stats',\n            title: 'core.grades.grades',\n            page: 'CoreGradesCoursesPage',\n            class: 'core-grades-coursesgrades-handler'\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/providers/mainmenu-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseOptionsHandler, CoreCourseOptionsHandlerData } from '@core/course/providers/options-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreGradesProvider } from './grades';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\nimport { CoreGradesCourseComponent } from '../components/course/course';\n\n/**\n * Course nav handler.\n */\n@Injectable()\nexport class CoreGradesCourseOptionHandler implements CoreCourseOptionsHandler {\n    name = 'CoreGrades';\n    priority = 400;\n\n    constructor(private gradesProvider: CoreGradesProvider, private coursesProvider: CoreCoursesProvider) {}\n\n    /**\n     * Should invalidate the data to determine if the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    invalidateEnabledForCourse(courseId: number, navOptions?: any, admOptions?: any): Promise<any> {\n        if (navOptions && typeof navOptions.grades != 'undefined') {\n            // No need to invalidate anything.\n            return Promise.resolve();\n        }\n\n        return this.coursesProvider.invalidateUserCourses();\n    }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Whether or not the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} accessData Access type and data. Default, guest, ...\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabledForCourse(courseId: number, accessData: any, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        if (accessData && accessData.type == CoreCourseProvider.ACCESS_GUEST) {\n            return false; // Not enabled for guests.\n        }\n\n        if (navOptions && typeof navOptions.grades != 'undefined') {\n            return navOptions.grades;\n        }\n\n        return this.gradesProvider.isPluginEnabledForCourse(courseId);\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @param {Injector} injector Injector.\n     * @param {number} courseId The course ID.\n     * @return {CoreCourseOptionsHandlerData|Promise<CoreCourseOptionsHandlerData>} Data or promise resolved with the data.\n     */\n    getDisplayData(injector: Injector, courseId: number): CoreCourseOptionsHandlerData | Promise<CoreCourseOptionsHandlerData> {\n        return {\n            title: 'core.grades.grades',\n            class: 'core-grades-course-handler',\n            component: CoreGradesCourseComponent\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/providers/course-option-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { CoreGradesProvider } from './grades';\n\n/**\n * Handler to treat links to user grades.\n */\n@Injectable()\nexport class CoreGradesUserLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'CoreGradesUserLinkHandler';\n    pattern = /\\/grade\\/report\\/user\\/index.php/;\n\n    constructor(private linkHelper: CoreContentLinksHelperProvider, private gradesProvider: CoreGradesProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId, navCtrl?): void => {\n                const pageParams = {\n                    course: {id: courseId},\n                    userId: params.userid ? parseInt(params.userid, 10) : false,\n                };\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.linkHelper.goInSite(navCtrl, 'CoreGradesCoursePage', pageParams, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        if (!courseId) {\n            return false;\n        }\n\n        return this.gradesProvider.isPluginEnabledForCourse(courseId, siteId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/providers/user-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { CoreGradesProvider } from './grades';\n\n/**\n * Handler to treat links to overview courses grades.\n */\n@Injectable()\nexport class CoreGradesOverviewLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'CoreGradesOverviewLinkHandler';\n    pattern = /\\/grade\\/report\\/overview\\/index.php/;\n\n    constructor(private linkHelper: CoreContentLinksHelperProvider, private gradesProvider: CoreGradesProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId, navCtrl?): void => {\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.linkHelper.goInSite(navCtrl, 'CoreGradesCoursesPage', undefined, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        return this.gradesProvider.isCourseGradesEnabled(siteId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/providers/overview-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreUserDelegate, CoreUserProfileHandler, CoreUserProfileHandlerData } from '@core/user/providers/user-delegate';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { CoreGradesProvider } from './grades';\n\n/**\n * Profile grades handler.\n */\n@Injectable()\nexport class CoreGradesUserHandler implements CoreUserProfileHandler {\n    name = 'mmGrades';\n    priority = 400;\n    type = CoreUserDelegate.TYPE_NEW_PAGE;\n    viewGradesEnabledCache = {};\n\n    constructor(private linkHelper: CoreContentLinksHelperProvider, protected sitesProvider: CoreSitesProvider,\n        private gradesProvider: CoreGradesProvider) { }\n\n    /**\n     * Clear view grades cache.\n     * If a courseId and userId are specified, it will only delete the entry for that user and course.\n     *\n     * @param  {number} [courseId] Course ID.\n     * @param  {number} [userId]   User ID.\n     */\n    clearViewGradesCache(courseId?: number, userId?: number): void {\n        if (courseId && userId) {\n            delete this.viewGradesEnabledCache[this.getCacheKey(courseId, userId)];\n        } else {\n            this.viewGradesEnabledCache = {};\n        }\n    }\n\n    /**\n     * Get a cache key to identify a course and a user.\n     *\n     * @param  {number} courseId Course ID.\n     * @param  {number} userId   User ID.\n     * @return {string}          Cache key.\n     */\n    protected getCacheKey(courseId: number, userId: number): string {\n        return courseId + '#' + userId;\n    }\n\n    /**\n     * Check if handler is enabled.\n     *\n     * @return {boolean} Always enabled.\n     */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /**\n     * Check if handler is enabled for this user in this context.\n     *\n     * @param {any} user     User to check.\n     * @param {number} courseId Course ID.\n     * @param  {any} [navOptions] Course navigation options for current user. See $mmCourses#getUserNavigationOptions.\n     * @param  {any} [admOptions] Course admin options for current user. See $mmCourses#getUserAdministrationOptions.\n     * @return  {boolean|Promise<boolean>}   Promise resolved with true if enabled, resolved with false otherwise.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        const cacheKey = this.getCacheKey(courseId, user.id),\n            cache = this.viewGradesEnabledCache[cacheKey];\n        if (typeof cache != 'undefined') {\n            return cache;\n        }\n\n        return this.gradesProvider.isPluginEnabledForCourse(courseId).then(() => {\n            return this.gradesProvider.getCourseGradesTable(courseId, user.id).then(() => {\n                this.viewGradesEnabledCache[cacheKey] = true;\n\n                return true;\n            }).catch(() => {\n                this.viewGradesEnabledCache[cacheKey] = false;\n\n                return false;\n            });\n        });\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreUserProfileHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData {\n        return {\n            icon: 'stats',\n            title: 'core.grades.grades',\n            class: 'core-grades-user-handler',\n            action: (event, navCtrl, user, courseId): void => {\n                event.preventDefault();\n                event.stopPropagation();\n                const pageParams = {\n                    courseId: courseId,\n                    userId: user.id\n                };\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.linkHelper.goInSite(navCtrl, 'CoreGradesCoursePage', pageParams);\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/grades/providers/user-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { CoreFileUploaderHandler, CoreFileUploaderHandlerData } from '@core/fileuploader/providers/delegate';\nimport { CoreSharedFilesHelperProvider } from './helper';\n/**\n * Handler to upload files from the album.\n */\n@Injectable()\nexport class CoreSharedFilesUploadHandler implements CoreFileUploaderHandler {\n    name = 'CoreSharedFilesUpload';\n    priority = 1300;\n\n    constructor(private sharedFilesHelper: CoreSharedFilesHelperProvider, private platform: Platform) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.platform.is('ios');\n    }\n\n    /**\n     * Given a list of mimetypes, return the ones that are supported by the handler.\n     *\n     * @param {string[]} [mimetypes] List of mimetypes.\n     * @return {string[]} Supported mimetypes.\n     */\n    getSupportedMimetypes(mimetypes: string[]): string[] {\n        return mimetypes;\n    }\n\n    /**\n     * Get the data to display the handler.\n     *\n     * @return {CoreFileUploaderHandlerData} Data.\n     */\n    getData(): CoreFileUploaderHandlerData {\n        return {\n            title: 'core.sharedfiles.sharedfiles',\n            class: 'core-sharedfiles-fileuploader-handler',\n            icon: 'folder',\n            action: (maxSize?: number, upload?: boolean, allowOffline?: boolean, mimetypes?: string[]): Promise<any> => {\n                // Don't use the params because the file won't be uploaded, it is returned to the fileuploader.\n                return this.sharedFilesHelper.pickSharedFile(mimetypes);\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sharedfiles/providers/upload-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSiteHomeProvider } from './sitehome';\nimport { CoreMainMenuHandler, CoreMainMenuHandlerData } from '@core/mainmenu/providers/delegate';\nimport { CoreCoursesMyOverviewProvider } from '@core/courses/providers/my-overview';\n\n/**\n * Handler to add Site Home into main menu.\n */\n@Injectable()\nexport class CoreSiteHomeMainMenuHandler implements CoreMainMenuHandler {\n    name = 'CoreSiteHome';\n    priority = 1000;\n    isOverviewEnabled: boolean;\n\n    constructor(private siteHomeProvider: CoreSiteHomeProvider, private myOverviewProvider: CoreCoursesMyOverviewProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        // Check if my overview is enabled.\n        return this.myOverviewProvider.isEnabled().then((enabled) => {\n            if (enabled) {\n                // My overview is enabled, Site Home will be inside the overview page.\n                return false;\n            }\n\n            // My overview not enabled, check if site home is enabled.\n            return this.siteHomeProvider.isAvailable();\n        });\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHandlerData {\n        return {\n            icon: 'home',\n            title: 'core.sitehome.sitehome',\n            page: 'CoreSiteHomeIndexPage',\n            class: 'core-sitehome-handler'\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/providers/mainmenu-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\nimport { CoreSiteHomeProvider } from './sitehome';\n\n/**\n * Handler to treat links to site home index.\n */\n@Injectable()\nexport class CoreSiteHomeIndexLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'CoreSiteHomeIndexLinkHandler';\n    featureName = '$mmSideMenuDelegate_mmaFrontpage';\n    pattern = /\\/course\\/view\\.php.*([\\?\\&]id=\\d+)/;\n\n    constructor(private sitesProvider: CoreSitesProvider, private siteHomeProvider: CoreSiteHomeProvider,\n            private loginHelper: CoreLoginHelperProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n        CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId, navCtrl?): void => {\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.loginHelper.redirect('CoreSiteHomeIndexPage', undefined, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        courseId = parseInt(params.id, 10);\n        if (!courseId) {\n            return false;\n        }\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (courseId != site.getSiteHomeId()) {\n                // The course is not site home.\n                return false;\n            }\n\n            return this.siteHomeProvider.isAvailable(siteId).then(() => {\n                return true;\n            }).catch(() => {\n                return false;\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/sitehome/providers/index-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreUserDelegate, CoreUserProfileHandler, CoreUserProfileHandlerData } from './user-delegate';\nimport { CoreSitesProvider } from '@providers/sites';\n\n/**\n * Profile links email handler.\n */\n@Injectable()\nexport class CoreUserProfileMailHandler implements CoreUserProfileHandler {\n    name = 'mmUser';\n    priority = 700;\n    type = CoreUserDelegate.TYPE_COMMUNICATION;\n\n    constructor(protected sitesProvider: CoreSitesProvider) { }\n\n    /**\n     * Check if handler is enabled.\n     *\n     * @return {boolean} Always enabled.\n     */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /**\n     * Check if handler is enabled for this user in this context.\n     *\n     * @param {any} user     User to check.\n     * @param {number} courseId Course ID.\n     * @param  {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param  {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return  {boolean|Promise<boolean>}   Promise resolved with true if enabled, resolved with false otherwise.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        // Not current user required.\n        return user.id != this.sitesProvider.getCurrentSite().getUserId() && user.email;\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreUserProfileHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData {\n        return {\n            icon: 'mail',\n            title: 'core.user.sendemail',\n            class: 'core-user-profile-mail',\n            action: (event, navCtrl, user, courseId): void => {\n                event.preventDefault();\n                event.stopPropagation();\n                window.open('mailto:' + user.email, '_blank');\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/providers/user-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\n\n/**\n * Handler to treat links to user profiles.\n */\n@Injectable()\nexport class CoreUserProfileLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'CoreUserProfileLinkHandler';\n    // Match user/view.php and user/profile.php but NOT grade/report/user/.\n    pattern = /((\\/user\\/view\\.php)|(\\/user\\/profile\\.php)).*([\\?\\&]id=\\d+)/;\n\n    constructor(private linkHelper: CoreContentLinksHelperProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId, navCtrl?): void => {\n                const pageParams = {\n                    courseId: params.course,\n                    userId: parseInt(params.id, 10)\n                };\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.linkHelper.goInSite(navCtrl, 'CoreUserProfilePage', pageParams, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        return url.indexOf('/grade/report/') == -1;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/providers/user-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseOptionsHandler, CoreCourseOptionsHandlerData } from '@core/course/providers/options-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreUserProvider } from './user';\nimport { CoreUserParticipantsComponent } from '../components/participants/participants';\n\n/**\n * Course nav handler.\n */\n@Injectable()\nexport class CoreUserParticipantsCourseOptionHandler implements CoreCourseOptionsHandler {\n    name = 'CoreUserParticipants';\n    priority = 600;\n\n    constructor(private userProvider: CoreUserProvider) {}\n\n    /**\n     * Should invalidate the data to determine if the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    invalidateEnabledForCourse(courseId: number, navOptions?: any, admOptions?: any): Promise<any> {\n        if (navOptions && typeof navOptions.participants != 'undefined') {\n            // No need to invalidate anything.\n            return Promise.resolve();\n        }\n\n        return this.userProvider.invalidateParticipantsList(courseId);\n    }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Whether or not the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} accessData Access type and data. Default, guest, ...\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabledForCourse(courseId: number, accessData: any, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        if (accessData && accessData.type == CoreCourseProvider.ACCESS_GUEST) {\n            return false; // Not enabled for guests.\n        }\n\n        if (navOptions && typeof navOptions.participants != 'undefined') {\n            return navOptions.participants;\n        }\n\n        return this.userProvider.isPluginEnabledForCourse(courseId);\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @param {Injector} injector Injector.\n     * @param {number} courseId The course ID.\n     * @return {CoreCourseOptionsHandlerData|Promise<CoreCourseOptionsHandlerData>} Data or promise resolved with the data.\n     */\n    getDisplayData(injector: Injector, courseId: number): CoreCourseOptionsHandlerData | Promise<CoreCourseOptionsHandlerData> {\n        return {\n            title: 'core.user.participants',\n            class: 'core-user-participants-handler',\n            component: CoreUserParticipantsComponent\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/providers/course-option-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\nimport { CoreUserProvider } from './user';\n\n/**\n * Handler to treat links to user participants page.\n */\n@Injectable()\nexport class CoreUserParticipantsLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'CoreUserParticipants';\n    featureName = '$mmCoursesDelegate_mmaParticipants';\n    pattern = /\\/user\\/index\\.php/;\n\n    constructor(private userProvider: CoreUserProvider, private loginHelper: CoreLoginHelperProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        courseId = parseInt(params.id, 10) || courseId;\n\n        return [{\n            action: (siteId, navCtrl?): void => {\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.loginHelper.redirect('CoreUserParticipantsPage', {courseId: courseId}, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        courseId = parseInt(params.id, 10) || courseId;\n\n        if (!courseId || url.indexOf('/grade/report/') != -1) {\n            return false;\n        }\n\n        return this.userProvider.isPluginEnabledForCourse(courseId, siteId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/user/providers/participants-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Camera, CameraOptions } from '@ionic-native/camera';\nimport { CoreEmulatorCaptureHelperProvider } from './capture-helper';\n\n/**\n * Emulates the Cordova Camera plugin in desktop apps and in browser.\n */\n@Injectable()\nexport class CameraMock extends Camera {\n\n    constructor(private captureHelper: CoreEmulatorCaptureHelperProvider) {\n        super();\n    }\n\n    /**\n     * Remove intermediate image files that are kept in temporary storage after calling camera.getPicture.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    cleanup(): Promise<any> {\n        // This function is iOS only, nothing to do.\n        return Promise.resolve();\n    }\n\n    /**\n     * Take a picture.\n     *\n     * @param {CameraOptions} options Options that you want to pass to the camera.\n     * @return {Promise<any>} Promise resolved when captured.\n     */\n    getPicture(options: CameraOptions): Promise<any> {\n        return this.captureHelper.captureMedia('image', options);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/camera.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { CoreAppProvider } from '@providers/app';\n\n/**\n * Emulates the Cordova Clipboard plugin in desktop apps and in browser.\n */\n@Injectable()\nexport class ClipboardMock extends Clipboard {\n    isDesktop: boolean;\n    clipboard: any;\n    copyTextarea: HTMLTextAreaElement;\n\n    constructor(appProvider: CoreAppProvider) {\n        super();\n\n        this.isDesktop = appProvider.isDesktop();\n        if (this.isDesktop) {\n            this.clipboard = require('electron').clipboard;\n        } else {\n            // In browser the text must be selected in order to copy it. Create a hidden textarea to put the text in it.\n            this.copyTextarea = document.createElement('textarea');\n            this.copyTextarea.className = 'core-browser-copy-area';\n            this.copyTextarea.setAttribute('aria-hidden', 'true');\n            document.body.appendChild(this.copyTextarea);\n        }\n    }\n\n    /**\n     * Copy some text to the clipboard.\n     *\n     * @param {string} text The text to copy.\n     * @return {Promise<any>} Promise resolved when copied.\n     */\n    copy(text: string): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            if (this.isDesktop) {\n                this.clipboard.writeText(text);\n                resolve();\n            } else {\n                // Put the text in the hidden textarea and select it.\n                this.copyTextarea.innerHTML = text;\n                this.copyTextarea.select();\n\n                try {\n                    if (document.execCommand('copy')) {\n                        resolve();\n                    } else {\n                        reject();\n                    }\n                } catch (err) {\n                    reject();\n                }\n\n                this.copyTextarea.innerHTML = '';\n            }\n        });\n    }\n\n    /*\n     * Get the text stored in the clipboard.\n     *\n     * @return {Promise<any>} Promise resolved with the text.\n     */\n    paste(): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            if (this.isDesktop) {\n                resolve(this.clipboard.readText());\n            } else {\n                // Paste the text in the hidden textarea and get it.\n                this.copyTextarea.innerHTML = '';\n                this.copyTextarea.select();\n\n                try {\n                    if (document.execCommand('paste')) {\n                        resolve(this.copyTextarea.innerHTML);\n                    } else {\n                        reject();\n                    }\n                } catch (err) {\n                    reject();\n                }\n\n                this.copyTextarea.innerHTML = '';\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/clipboard.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { File, Entry, DirectoryEntry, FileEntry, FileError, IWriteOptions } from '@ionic-native/file';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreConfigConstants } from '../../../configconstants';\n\n/**\n * Emulates the Cordova File plugin in desktop apps and in browser.\n * Most of the code is extracted from the File class of Ionic Native.\n */\n@Injectable()\nexport class FileMock extends File {\n\n    constructor(private appProvider: CoreAppProvider, private textUtils: CoreTextUtilsProvider) {\n        super();\n    }\n\n    /**\n     * Check if a directory exists in a certain path, directory.\n     *\n     * @param {string} path Base FileSystem.\n     * @param {string} dir Name of directory to check\n     * @returns {Promise<boolean>} Returns a Promise that resolves to true if the directory exists or rejects with an error.\n     */\n    checkDir(path: string, dir: string): Promise<boolean> {\n        const fullPath = this.textUtils.concatenatePaths(path, dir);\n\n        return this.resolveDirectoryUrl(fullPath).then(() => {\n            return true;\n        });\n    }\n\n    /**\n     * Check if a file exists in a certain path, directory.\n     *\n     * @param {string} path Base FileSystem.\n     * @param {string} file Name of file to check.\n     * @returns {Promise<boolean>} Returns a Promise that resolves with a boolean or rejects with an error.\n     */\n    checkFile(path: string, file: string): Promise<boolean> {\n        return this.resolveLocalFilesystemUrl(this.textUtils.concatenatePaths(path, file)).then((fse) => {\n            if (fse.isFile) {\n                return true;\n            } else {\n                const err = new FileError(13);\n                err.message = 'input is not a file';\n\n                return Promise.reject<boolean>(err);\n            }\n        });\n    }\n\n    /**\n     * Copy a file or directory.\n     *\n     * @param {Entry} srce The Entry to copy.\n     * @param {DirectoryEntry} destDir The directory where to put the copy.\n     * @param {string} newName New name of the file/dir.\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\n     */\n    private copyMock(srce: Entry, destDir: DirectoryEntry, newName: string): Promise<Entry> {\n        return new Promise<Entry>((resolve, reject): void => {\n            srce.copyTo(destDir, newName, (deste) => {\n                resolve(deste);\n            }, (err) => {\n                this.fillErrorMessageMock(err);\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * Copy a directory in various methods. If destination directory exists, will fail to copy.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above.\n     * @param {string} dirName Name of directory to copy.\n     * @param {string} newPath Base FileSystem of new location.\n     * @param {string} newDirName New name of directory to copy to (leave blank to remain the same).\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\n     */\n    copyDir(path: string, dirName: string, newPath: string, newDirName: string): Promise<Entry> {\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getDirectory(fse, dirName, { create: false });\n        }).then((srcde) => {\n            return this.resolveDirectoryUrl(newPath).then((deste) => {\n                return this.copyMock(srcde, deste, newDirName);\n            });\n        });\n    }\n\n    /**\n     * Copy a file in various methods. If file exists, will fail to copy.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to copy\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newFileName New name of file to copy to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to an Entry or rejects with an error.\n     */\n    copyFile(path: string, fileName: string, newPath: string, newFileName: string): Promise<Entry> {\n        newFileName = newFileName || fileName;\n\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getFile(fse, fileName, { create: false });\n        }).then((srcfe) => {\n            return this.resolveDirectoryUrl(newPath).then((deste) => {\n                return this.copyMock(srcfe, deste, newFileName);\n            });\n        });\n    }\n\n    /**\n     * Creates a new directory in the specific path.\n     * The replace boolean value determines whether to replace an existing directory with the same name.\n     * If an existing directory exists and the replace value is false, the promise will fail and return an error.\n     *\n     * @param {string} path Base FileSystem.\n     * @param {string} dirName Name of directory to create\n     * @param {boolean} replace If true, replaces file with same name. If false returns error\n     * @returns {Promise<DirectoryEntry>} Returns a Promise that resolves with a DirectoryEntry or rejects with an error.\n     */\n    createDir(path: string, dirName: string, replace: boolean): Promise<DirectoryEntry> {\n        const options: any = {\n            create: true\n        };\n\n        if (!replace) {\n            options.exclusive = true;\n        }\n\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getDirectory(fse, dirName, options);\n        });\n    }\n\n    /**\n     * Creates a new file in the specific path.\n     * The replace boolean value determines whether to replace an existing file with the same name.\n     * If an existing file exists and the replace value is false, the promise will fail and return an error.\n     *\n     * @param {string} path  Base FileSystem.\n     * @param {string} fileName Name of file to create.\n     * @param {boolean} replace If true, replaces file with same name. If false returns error.\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to a FileEntry or rejects with an error.\n     */\n    createFile(path: string, fileName: string, replace: boolean): Promise<FileEntry> {\n        const options: any = {\n            create: true\n        };\n\n        if (!replace) {\n            options.exclusive = true;\n        }\n\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getFile(fse, fileName, options);\n        });\n    }\n\n    /**\n     * Create a file writer for a certain file.\n     *\n     * @param {FileEntry} fe File entry object.\n     * @returns {Promise<FileWriter>} Promise resolved with the FileWriter.\n     */\n    private createWriterMock(fe: FileEntry): Promise<FileWriter> {\n        return new Promise<FileWriter>((resolve, reject): void => {\n            fe.createWriter((writer) => {\n                resolve(writer);\n            }, (err) => {\n                this.fillErrorMessageMock(err);\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * Fill the message for an error.\n     *\n     * @param {any} err Error.\n     */\n    private fillErrorMessageMock(err: any): void {\n        try {\n            err.message = this.cordovaFileError[err.code];\n        } catch (e) {\n            // Ignore errors.\n        }\n    }\n\n    /**\n     * Get a directory.\n     *\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n     * @param directoryName {string} Directory name\n     * @param flags {Flags} Options\n     * @returns {Promise<DirectoryEntry>}\n     */\n    getDirectory(directoryEntry: DirectoryEntry, directoryName: string, flags: Flags): Promise<DirectoryEntry> {\n        return new Promise<DirectoryEntry>((resolve, reject): void => {\n            try {\n                directoryEntry.getDirectory(directoryName, flags, (de) => {\n                    resolve(de);\n                }, (err) => {\n                    this.fillErrorMessageMock(err);\n                    reject(err);\n                });\n            } catch (xc) {\n                this.fillErrorMessageMock(xc);\n                reject(xc);\n            }\n        });\n    }\n\n    /**\n     * Get a file\n     * @param directoryEntry {DirectoryEntry} Directory entry, obtained by resolveDirectoryUrl method\n     * @param fileName {string} File name\n     * @param flags {Flags} Options\n     * @returns {Promise<FileEntry>}\n     */\n    getFile(directoryEntry: DirectoryEntry, fileName: string, flags: Flags): Promise<FileEntry> {\n        return new Promise<FileEntry>((resolve, reject): void => {\n            try {\n                directoryEntry.getFile(fileName, flags, resolve, (err) => {\n                    this.fillErrorMessageMock(err);\n                    reject(err);\n                });\n            } catch (xc) {\n                this.fillErrorMessageMock(xc);\n                reject(xc);\n            }\n        });\n    }\n\n    /**\n     * Get free disk space.\n     *\n     * @return {Promise<number>} Promise resolved with the free space.\n     */\n    getFreeDiskSpace(): Promise<number> {\n        // FRequest a file system instance with a minimum size until we get an error.\n        if (window.requestFileSystem) {\n            return new Promise((resolve, reject): void => {\n                let iterations = 0,\n                    maxIterations = 50;\n                const calculateByRequest = (size: number, ratio: number): Promise<any> => {\n                        return new Promise((resolve, reject): void => {\n                            window.requestFileSystem(LocalFileSystem.PERSISTENT, size, () => {\n                                iterations++;\n                                if (iterations > maxIterations) {\n                                    resolve(size);\n\n                                    return;\n                                }\n                                calculateByRequest(size * ratio, ratio).then(resolve);\n                            }, () => {\n                                resolve(size / ratio);\n                            });\n                        });\n                    };\n\n                // General calculation, base 1MB and increasing factor 1.3.\n                calculateByRequest(1048576, 1.3).then((size: number) => {\n                    iterations = 0;\n                    maxIterations = 10;\n                    // More accurate. Factor is 1.1.\n                    calculateByRequest(size, 1.1).then((size: number) => {\n                        return size / 1024; // Return size in KB.\n                    });\n                });\n\n            });\n        } else {\n            return Promise.reject(null);\n        }\n    }\n\n    /**\n     * List files and directory from a given path.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory\n     * @returns {Promise<Entry[]>} Returns a Promise that resolves to an array of Entry objects or rejects with an error.\n     */\n    listDir(path: string, dirName: string): Promise<Entry[]> {\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getDirectory(fse, dirName, { create: false, exclusive: false });\n        }).then((de) => {\n            const reader: any = de.createReader();\n\n            return this.readEntriesMock(reader);\n        });\n    }\n\n    /**\n     * Loads an initialize the API for browser and desktop.\n     *\n     * @return {Promise<any>} Promise resolved when loaded.\n     */\n    load(): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            const win = <any> window; // Convert to <any> to be able to use non-standard properties.\n            let basePath;\n\n            if (typeof win.requestFileSystem == 'undefined') {\n                win.requestFileSystem = win.webkitRequestFileSystem;\n            }\n            if (typeof win.resolveLocalFileSystemURL == 'undefined') {\n                win.resolveLocalFileSystemURL = win.webkitResolveLocalFileSystemURL;\n            }\n            win.LocalFileSystem = {\n                PERSISTENT: 1\n            };\n\n            if (this.appProvider.isDesktop()) {\n                const fs = require('fs'),\n                    app = require('electron').remote.app;\n\n                // @todo emulateCordovaFileForDesktop(fs);\n\n                // Initialize File System. Get the path to use.\n                basePath = app.getPath('documents') || app.getPath('home');\n                if (!basePath) {\n                    reject('Cannot calculate base path for file system.');\n\n                    return;\n                }\n\n                basePath = this.textUtils.concatenatePaths(basePath.replace(/\\\\/g, '/'), CoreConfigConstants.app_id) + '/';\n\n                // Create the folder if needed.\n                fs.mkdir(basePath, (e) => {\n                    if (!e || (e && e.code === 'EEXIST')) {\n                        // Create successful or it already exists. Resolve.\n                        // @todo this.fileProvider.setHTMLBasePath(basePath);\n                        resolve(basePath);\n                    } else {\n                        reject('Error creating base path.');\n                    }\n                });\n            } else {\n                // It's browser, request a quota to use. Request 500MB.\n                (<any> navigator).webkitPersistentStorage.requestQuota(500 * 1024 * 1024, (granted) => {\n                    window.requestFileSystem(LocalFileSystem.PERSISTENT, granted, (entry) => {\n                        basePath = entry.root.toURL();\n                        resolve(basePath);\n                    }, reject);\n                }, reject);\n            }\n\n        });\n    }\n\n    /**\n     * Move a file or directory.\n     *\n     * @param {Entry} srce The Entry to copy.\n     * @param {DirectoryEntry} destDir The directory where to move the file/dir.\n     * @param {string} newName New name of the file/dir.\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry object or rejects with an error.\n     */\n    private moveMock(srce: Entry, destDir: DirectoryEntry, newName: string): Promise<Entry> {\n        return new Promise<Entry>((resolve, reject): void => {\n            srce.moveTo(destDir, newName, (deste) => {\n                resolve(deste);\n            }, (err) => {\n                this.fillErrorMessageMock(err);\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * Move a directory to a given path.\n     *\n     * @param {string} path The source path to the directory.\n     * @param {string} dirName The source directory name.\n     * @param {string} newPath The destionation path to the directory.\n     * @param {string} newDirName The destination directory name.\n     * @returns {Promise<DirectoryEntry|Entry>} Returns a Promise that resolves to the new DirectoryEntry object or rejects with\n     *                                          an error.\n     */\n    moveDir(path: string, dirName: string, newPath: string, newDirName: string): Promise<DirectoryEntry | Entry> {\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getDirectory(fse, dirName, { create: false });\n        }).then((srcde) => {\n            return this.resolveDirectoryUrl(newPath).then((deste) => {\n                return this.moveMock(srcde, deste, newDirName);\n            });\n        });\n    }\n\n    /**\n     * Move a file to a given path.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName Name of file to move\n     * @param {string} newPath Base FileSystem of new location\n     * @param {string} newFileName New name of file to move to (leave blank to remain the same)\n     * @returns {Promise<Entry>} Returns a Promise that resolves to the new Entry or rejects with an error.\n     */\n    moveFile(path: string, fileName: string, newPath: string, newFileName: string): Promise<Entry> {\n        newFileName = newFileName || fileName;\n\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getFile(fse, fileName, { create: false });\n        }).then((srcfe) => {\n            return this.resolveDirectoryUrl(newPath).then((deste) => {\n                return this.moveMock(srcfe, deste, newFileName);\n            });\n        });\n    }\n\n    /**\n     * Read file and return data as an ArrayBuffer.\n     * @param {string} path Base FileSystem.\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<ArrayBuffer>} Returns a Promise that resolves with the contents of the file as ArrayBuffer or rejects\n     *                                 with an error.\n     */\n    readAsArrayBuffer(path: string, file: string): Promise<ArrayBuffer> {\n        return this.readFileMock<ArrayBuffer>(path, file, 'ArrayBuffer');\n    }\n\n    /**\n     * Read file and return data as a binary data.\n     * @param {string} path Base FileSystem.\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string rejects with an error.\n     */\n    readAsBinaryString(path: string, file: string): Promise<string> {\n        return this.readFileMock<string>(path, file, 'BinaryString');\n    }\n\n    /**\n     * Read file and return data as a base64 encoded data url.\n     * A data url is of the form:\n     *      data: [<mediatype>][;base64],<data>\n     * @param {string} path Base FileSystem.\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as data URL or rejects\n     *                            with an error.\n     */\n    readAsDataURL(path: string, file: string): Promise<string> {\n        return this.readFileMock<string>(path, file, 'DataURL');\n    }\n\n    /**\n     * Read the contents of a file as text.\n     *\n     * @param {string} path Base FileSystem.\n     * @param {string} file Name of file, relative to path.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file as string or rejects with an error.\n     */\n    readAsText(path: string, file: string): Promise<string> {\n        return this.readFileMock<string>(path, file, 'Text');\n    }\n\n    /**\n     * Read all the files and directories inside a directory.\n     *\n     * @param {DirectoryReader} dr The directory reader.\n     * @return {Promise<Entry[]>} Promise resolved with the list of files/dirs.\n     */\n    private readEntriesMock(dr: DirectoryReader): Promise<Entry[]> {\n        return new Promise<Entry[]>((resolve, reject): void => {\n            dr.readEntries((entries: any) => {\n                resolve(entries);\n            }, (err) => {\n                this.fillErrorMessageMock(err);\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * Read the contents of a file.\n     *\n     * @param {string} path Base FileSystem.\n     * @param {string} file Name of file, relative to path.\n     * @param {string} readAs Format to read as.\n     * @returns {Promise<string>} Returns a Promise that resolves with the contents of the file or rejects with an error.\n     */\n    private readFileMock<T>(path: string, file: string, readAs: 'ArrayBuffer' | 'BinaryString' | 'DataURL' | 'Text'): Promise<T> {\n        return this.resolveDirectoryUrl(path).then((directoryEntry: DirectoryEntry) => {\n            return this.getFile(directoryEntry, file, { create: false });\n        }).then((fileEntry: FileEntry) => {\n            const reader = new FileReader();\n\n            return new Promise<T>((resolve, reject): void => {\n                reader.onloadend = (): void => {\n                    if (reader.result !== undefined || reader.result !== null) {\n                        resolve(<T> <any> reader.result);\n                    } else if (reader.error !== undefined || reader.error !== null) {\n                        reject(reader.error);\n                    } else {\n                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });\n                    }\n                };\n\n                fileEntry.file((file) => {\n                    reader[`readAs${readAs}`].call(reader, file);\n                }, (error) => {\n                    reject(error);\n                });\n            });\n        });\n    }\n\n    /**\n     * Delete a file.\n     *\n     * @param {Entry} fe The file to remove.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    private removeMock(fe: Entry): Promise<any> {\n        return new Promise<any>((resolve, reject): void => {\n            fe.remove(() => {\n                resolve({ success: true, fileRemoved: fe });\n            }, (err) => {\n                this.fillErrorMessageMock(err);\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * Remove a directory at a given path.\n     *\n     * @param {string} path The path to the directory.\n     * @param {string} dirName The directory name.\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n     */\n    removeDir(path: string, dirName: string): Promise<any> {\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getDirectory(fse, dirName, { create: false });\n        }).then((de) => {\n            return this.removeMock(de);\n        });\n    }\n\n    /**\n     * Removes a file from a desired location.\n     *\n     * @param {string} path  Base FileSystem.\n     * @param {string} fileName Name of file to remove.\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves to a RemoveResult or rejects with an error.\n     */\n    removeFile(path: string, fileName: string): Promise<any> {\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getFile(fse, fileName, { create: false });\n        }).then((fe) => {\n            return this.removeMock(fe);\n        });\n    }\n\n    /**\n     * Removes all files and the directory from a desired location.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} dirName Name of directory\n     * @returns {Promise<RemoveResult>} Returns a Promise that resolves with a RemoveResult or rejects with an error.\n     */\n    removeRecursively(path: string, dirName: string): Promise<any> {\n        return this.resolveDirectoryUrl(path).then((fse) => {\n            return this.getDirectory(fse, dirName, { create: false });\n        }).then((de) => {\n            return this.rimrafMock(de);\n        });\n    }\n\n    /**\n     * Resolves a local directory url\n     * @param directoryUrl {string} directory system url\n     * @returns {Promise<DirectoryEntry>}\n     */\n    resolveDirectoryUrl(directoryUrl: string): Promise<DirectoryEntry> {\n        return this.resolveLocalFilesystemUrl(directoryUrl).then((de) => {\n            if (de.isDirectory) {\n                return <DirectoryEntry> de;\n            } else {\n                const err = new FileError(13);\n                err.message = 'input is not a directory';\n\n                return Promise.reject<DirectoryEntry>(err);\n            }\n        });\n    }\n\n    /**\n     * Resolves a local file system URL\n     * @param fileUrl {string} file system url\n     * @returns {Promise<Entry>}\n     */\n    resolveLocalFilesystemUrl(fileUrl: string): Promise<Entry> {\n        return new Promise<Entry>((resolve, reject): void => {\n            try {\n                window.resolveLocalFileSystemURL(fileUrl, (entry: any) => {\n                    resolve(entry);\n                }, (err) => {\n                    this.fillErrorMessageMock(err);\n                    reject(err);\n                });\n            } catch (xc) {\n                this.fillErrorMessageMock(xc);\n                reject(xc);\n            }\n        });\n    }\n\n    /**\n     * Remove a directory and all its contents.\n     *\n     * @param {DirectoryEntry} de Directory to remove.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    private rimrafMock(de: DirectoryEntry): Promise<any> {\n        return new Promise<any>((resolve, reject): void => {\n            de.removeRecursively(() => {\n                resolve({ success: true, fileRemoved: de });\n            }, (err) => {\n                this.fillErrorMessageMock(err);\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * Write some data in a file.\n     *\n     * @param {FileWriter} writer File writer.\n     * @param {any} data The data to write.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    private writeMock(writer: FileWriter, data: any): Promise<any> {\n        if (data instanceof Blob) {\n            return this.writeFileInChunksMock(writer, data);\n        }\n\n        return new Promise<any>((resolve, reject): void => {\n            writer.onwriteend = (evt): void => {\n                if (writer.error) {\n                    reject(writer.error);\n                } else {\n                    resolve(evt);\n                }\n            };\n            writer.write(data);\n        });\n    }\n\n    /**\n     * Write to an existing file.\n     *\n     * @param {string} path Base FileSystem.\n     * @param {string} fileName path relative to base path.\n     * @param {string | Blob} text content or blob to write.\n     * @returns {Promise<void>} Returns a Promise that resolves or rejects with an error.\n     */\n    writeExistingFile(path: string, fileName: string, text: string | Blob): Promise<void> {\n        return this.writeFile(path, fileName, text, { replace: true });\n    }\n\n    /**\n     * Write a new file to the desired location.\n     *\n     * @param {string} path Base FileSystem. Please refer to the iOS and Android filesystems above\n     * @param {string} fileName path relative to base path\n     * @param {string | Blob} text content or blob to write\n     * @param {any} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<any>} Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    writeFile(path: string, fileName: string, text: string | Blob | ArrayBuffer, options: IWriteOptions = {}): Promise<any> {\n        const getFileOpts: any = {\n            create: !options.append,\n            exclusive: !options.replace\n        };\n\n        return this.resolveDirectoryUrl(path).then((directoryEntry: DirectoryEntry) => {\n            return this.getFile(directoryEntry, fileName, getFileOpts);\n        }).then((fileEntry: FileEntry) => {\n            return this.writeFileEntryMock(fileEntry, text, options);\n        });\n    }\n\n    /**\n     * Write content to FileEntry.\n     *\n     * @param {FileEntry} fe File entry object.\n     * @param {string | Blob} text Content or blob to write.\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<FileEntry>} Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    private writeFileEntryMock(fe: FileEntry, text: string | Blob | ArrayBuffer, options: IWriteOptions): Promise<FileEntry> {\n        return this.createWriterMock(fe).then((writer) => {\n            if (options.append) {\n                writer.seek(writer.length);\n            }\n\n            if (options.truncate) {\n                writer.truncate(options.truncate);\n            }\n\n            return this.writeMock(writer, text);\n        }).then(() => fe);\n    }\n\n    /**\n     * Write a file in chunks.\n     *\n     * @param {FileWriter} writer File writer.\n     * @param {Blob} data Data to write.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    private writeFileInChunksMock(writer: FileWriter, data: Blob): Promise<any> {\n        let writtenSize = 0;\n        const BLOCK_SIZE = 1024 * 1024,\n            writeNextChunk = (): void => {\n                const size = Math.min(BLOCK_SIZE, data.size - writtenSize);\n                const chunk = data.slice(writtenSize, writtenSize + size);\n\n                writtenSize += size;\n                writer.write(chunk);\n            };\n\n        return new Promise<any>((resolve, reject): void => {\n            writer.onerror = reject;\n            writer.onwrite = (): void => {\n                if (writtenSize < data.size) {\n                    writeNextChunk();\n                } else {\n                    resolve();\n                }\n            };\n            writeNextChunk();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/file.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Globalization } from '@ionic-native/globalization';\nimport { CoreAppProvider } from '@providers/app';\n\n/**\n * Emulates the Cordova Globalization plugin in desktop apps and in browser.\n */\n@Injectable()\nexport class GlobalizationMock extends Globalization {\n\n    constructor(private appProvider: CoreAppProvider) {\n        super();\n    }\n\n    /**\n     * Get the current locale.\n     *\n     * @return {string} Locale name.\n     */\n    private getCurrentlocale(): string {\n        // Get browser language.\n        const navLang = (<any> navigator).userLanguage || navigator.language;\n\n        try {\n            if (this.appProvider.isDesktop()) {\n                return require('electron').remote.app.getLocale() || navLang;\n            } else {\n                return navLang;\n            }\n        } catch (ex) {\n            // Something went wrong, return browser language.\n            return navLang;\n        }\n    }\n\n    /**\n     * Get the current locale name.\n     *\n     * @return {Promise<{value: string}>} Promise resolved with an object with the language string.\n     */\n    getLocaleName(): Promise<{ value: string }> {\n        const locale = this.getCurrentlocale();\n        if (locale) {\n            return Promise.resolve({ value: locale });\n        } else {\n            const error = { code: GlobalizationError.UNKNOWN_ERROR, message: 'Cannot get language' };\n\n            return Promise.reject(error);\n        }\n    }\n\n    /*\n     * Get the current preferred language.\n     *\n     * @return {Promise<{value: string}>} Promise resolved with an object with the language string.\n     */\n    getPreferredLanguage(): Promise<{ value: string }> {\n        return this.getLocaleName();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/globalization.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { InAppBrowser, InAppBrowserObject } from '@ionic-native/in-app-browser';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { InAppBrowserObjectMock } from '../classes/inappbrowserobject';\n\n/**\n * Emulates the Cordova InAppBrowser plugin in desktop apps.\n */\n@Injectable()\nexport class InAppBrowserMock extends InAppBrowser {\n\n    constructor(private appProvider: CoreAppProvider, private fileProvider: CoreFileProvider,\n            private urlUtils: CoreUrlUtilsProvider) {\n        super();\n    }\n\n    /**\n     * Opens a URL in a new InAppBrowser instance, the current browser instance, or the system browser.\n     *\n     * @param {string} url The URL to load.\n     * @param {string} [target] The target in which to load the URL, an optional parameter that defaults to _self.\n     * @param {string} [options] Options for the InAppBrowser.\n     * @return {InAppBrowserObject} The new instance.\n     */\n    create(url: string, target?: string, options: string = ''): InAppBrowserObject {\n        if (!this.appProvider.isDesktop()) {\n            return super.create(url, target, options);\n        }\n\n        return new InAppBrowserObjectMock(this.appProvider, this.fileProvider, this.urlUtils, url, target, options);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/inappbrowser.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreUrlUtilsProvider } from '@providers/utils/url';\nimport { Observable, Observer } from 'rxjs';\nimport { InAppBrowserObject, InAppBrowserEvent } from '@ionic-native/in-app-browser';\n\n/**\n * Emulates the Cordova InAppBrowserObject in desktop apps.\n */\nexport class InAppBrowserObjectMock extends InAppBrowserObject {\n    protected window;\n    protected browserWindow;\n    protected screen;\n    protected isSSO: boolean;\n    protected isLinux: boolean;\n\n    constructor(appProvider: CoreAppProvider, private fileProvider: CoreFileProvider, private urlUtils: CoreUrlUtilsProvider,\n            private url: string, target?: string, options: string = '') {\n        super(url, target, options);\n\n        if (!appProvider.isDesktop()) {\n            // This plugin is only supported in desktop.\n            return;\n        }\n\n        this.browserWindow = require('electron').remote.BrowserWindow;\n        this.screen = require('electron').screen;\n        this.isSSO = !!(url && url.match(/\\/launch\\.php\\?service=.+&passport=/));\n        this.isLinux = appProvider.isLinux();\n\n        let width = 800,\n            height = 600,\n            display;\n        const bwOptions: any = {};\n\n        if (screen) {\n            display = this.screen.getPrimaryDisplay();\n            if (display && display.workArea) {\n                width = display.workArea.width || width;\n                height = display.workArea.height || height;\n            }\n        }\n\n        // Create the BrowserWindow options based on the received options.\n        bwOptions.width = width;\n        bwOptions.height = height;\n        if (options.indexOf('hidden=yes') != -1) {\n            bwOptions.show = false;\n        }\n        if (options.indexOf('location=no') != -1) {\n            bwOptions.frame = false;\n        }\n        if (options.indexOf('fullscreen=yes') != -1) {\n            bwOptions.fullscreen = true;\n        }\n\n        this.window = new this.browserWindow(bwOptions);\n        this.window.loadURL(url);\n\n        if (this.isLinux && this.isSSO) {\n            // SSO in Linux. Simulate it's an iOS device so we can retrieve the launch URL.\n            // This is needed because custom URL scheme is not supported in Linux.\n            const userAgent = 'Mozilla/5.0 (iPad) AppleWebKit/603.3.8 (KHTML, like Gecko) Mobile/14G60';\n            this.window.webContents.setUserAgent(userAgent);\n        }\n    }\n\n    /**\n     * Close the window.\n     */\n    close(): void {\n        this.window.close();\n    }\n\n    /**\n     * Execute a JS script.\n     *\n     * @param {any} details Details of the script to run, specifying either a file or code key.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    executeScript(details: any): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            if (details.code) {\n                this.window.webContents.executeJavaScript(details.code, false, resolve);\n            } else if (details.file) {\n                this.fileProvider.readFile(details.file).then((code) => {\n                    this.window.webContents.executeJavaScript(code, false, resolve);\n                }).catch(reject);\n            } else {\n                reject('executeScript requires exactly one of code or file to be specified');\n            }\n        });\n    }\n\n    /**\n     * Recursive function to get the launch URL from the contents of a BrowserWindow.\n     *\n     * @param {number} [retry=0] Retry number.\n     * @return {Promise<string>} Promise resolved with the launch URL.\n     */\n    protected getLaunchUrl(retry: number = 0): Promise<string> {\n        return new Promise((resolve, reject): void => {\n            // Execute Javascript to retrieve the launch link.\n            const jsCode = 'var el = document.querySelector(\"#launchapp\"); el && el.href;';\n            let found = false;\n\n            this.window.webContents.executeJavaScript(jsCode).then((launchUrl) => {\n                found = true;\n                resolve(launchUrl);\n            });\n\n            setTimeout(() => {\n                if (found) {\n                    // URL found, stop.\n                } else if (retry > 5) {\n                    // Waited enough, stop.\n                    reject();\n                } else {\n                    this.getLaunchUrl(retry + 1).then(resolve, reject);\n                }\n            }, 300);\n\n        });\n    }\n\n    /**\n     * Hide the window.\n     */\n    hide(): void {\n        this.window.hide();\n    }\n\n    /**\n     * Insert CSS.\n     *\n     * @param {any} details Details of the CSS to insert, specifying either a file or code key.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    insertCSS(details: any): Promise<any> {\n        return new Promise((resolve, reject): void => {\n            if (details.code) {\n                this.window.webContents.insertCSS(details.code);\n                resolve();\n            } else if (details.file) {\n                this.fileProvider.readFile(details.file).then((code) => {\n                    this.window.webContents.insertCSS(code);\n                    resolve();\n                }).catch(reject);\n            } else {\n                reject('insertCSS requires exactly one of code or file to be specified');\n            }\n        });\n    }\n\n    /**\n     * Listen to events happening.\n     *\n     * @param {string} name Name of the event.\n     * @return {Observable<InAppBrowserEvent>} Observable that will listen to the event on subscribe, and will stop listening\n     *                                         to the event on unsubscribe.\n     */\n    on(name: string): Observable<InAppBrowserEvent> {\n        // Create the observable.\n        return new Observable<InAppBrowserEvent>((observer: Observer<InAppBrowserEvent>): any => {\n            // Helper functions to handle events.\n            const received = (event, url): void => {\n                    try {\n                        event.url = url || this.window.getURL();\n                        event.type = name;\n                        observer.next(event);\n                    } catch (ex) {\n                        // Ignore errors.\n                    }\n                },\n                finishLoad = (event): void => {\n                    // Check if user is back to launch page.\n                    if (this.urlUtils.removeUrlParams(this.url) == this.urlUtils.removeUrlParams(this.window.getURL())) {\n                        // The launch page was loaded. Search for the launch link.\n                        this.getLaunchUrl().then((launchUrl) => {\n                            if (launchUrl) {\n                                // Launch URL retrieved, send it and stop listening.\n                                received(event, launchUrl);\n                            }\n                        });\n                    }\n                };\n\n            switch (name) {\n                case 'loadstart':\n                    this.window.webContents.on('did-start-loading', received);\n\n                    if (this.isLinux && this.isSSO) {\n                        // Linux doesn't support custom URL Schemes. Check if launch page is loaded.\n                        this.window.webContents.on('did-finish-load', finishLoad);\n                    }\n                    break;\n\n                case 'loadstop':\n                    this.window.webContents.on('did-finish-load', received);\n                    break;\n\n                case 'loaderror':\n                    this.window.webContents.on('did-fail-load', received);\n                    break;\n                case 'exit':\n                    this.window.on('close', received);\n                    break;\n                default:\n            }\n\n            return (): void => {\n                // Unsubscribing. We need to remove the listeners.\n                switch (name) {\n                    case 'loadstart':\n                        this.window.webContents.removeListener('did-start-loading', received);\n                        this.window.webContents.removeListener('did-finish-load', finishLoad);\n                        break;\n\n                    case 'loadstop':\n                        this.window.webContents.removeListener('did-finish-load', received);\n                        break;\n\n                    case 'loaderror':\n                        this.window.webContents.removeListener('did-fail-load', received);\n                        break;\n\n                    case 'exit':\n                        this.window.removeListener('close', received);\n                        break;\n                    default:\n                }\n            };\n        });\n    }\n\n    /**\n     * Show the window.\n     */\n    show(): void {\n        this.window.show();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/classes/inappbrowserobject.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { LocalNotifications, ILocalNotification } from '@ionic-native/local-notifications';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { SQLiteDB } from '@classes/sqlitedb';\nimport { CoreConstants } from '@core/constants';\nimport { CoreConfigConstants } from '../../../configconstants';\nimport * as moment from 'moment';\n\n/**\n * Emulates the Cordova Globalization plugin in desktop apps and in browser.\n */\n@Injectable()\nexport class LocalNotificationsMock extends LocalNotifications {\n    // Variables for Windows notifications.\n    protected winNotif; // Library for Windows notifications.\n    // Templates for Windows ToastNotifications and TileNotifications.\n    protected toastTemplate = '<toast><visual><binding template=\"ToastText02\"><text id=\"1\" hint-wrap=\"true\">%s</text>' +\n        '<text id=\"2\" hint-wrap=\"true\">%s</text></binding></visual></toast>';\n    protected tileBindingTemplate = '<text hint-style=\"base\" hint-wrap=\"true\">%s</text>' +\n        '<text hint-style=\"captionSubtle\" hint-wrap=\"true\">%s</text>';\n    protected tileTemplate = '<tile><visual branding=\"nameAndLogo\">' +\n        '<binding template=\"TileMedium\">' + this.tileBindingTemplate + '</binding>' +\n        '<binding template=\"TileWide\">' + this.tileBindingTemplate + '</binding>' +\n        '<binding template=\"TileLarge\">' + this.tileBindingTemplate + '</binding>' +\n        '</visual></tile>';\n\n    // Variables for database.\n    protected DESKTOP_NOTIFS_TABLE = 'desktop_local_notifications';\n    protected tableSchema = {\n        name: this.DESKTOP_NOTIFS_TABLE,\n        columns: [\n            {\n                name: 'id',\n                type: 'INTEGER',\n                primaryKey: true\n            },\n            {\n                name: 'triggered',\n                type: 'INTEGER'\n            }\n        ]\n    };\n\n    protected appDB: SQLiteDB;\n    protected scheduled: { [i: number]: any } = {};\n    protected triggered: { [i: number]: any } = {};\n    protected observers;\n    protected defaults = {\n        text: '',\n        title: '',\n        sound: '',\n        badge: 0,\n        id: 0,\n        data: undefined,\n        every: undefined,\n        at: undefined\n    };\n\n    constructor(private appProvider: CoreAppProvider, private utils: CoreUtilsProvider) {\n        super();\n\n        this.appDB = appProvider.getDB();\n        this.appDB.createTableFromSchema(this.tableSchema);\n\n        // Initialize observers.\n        this.observers = {\n            schedule: [],\n            trigger: [],\n            click: [],\n            update: [],\n            clear: [],\n            clearall: [],\n            cancel: [],\n            cancelall: []\n        };\n    }\n\n    /**\n     * Cancels single or multiple notifications\n     * @param notificationId {any} A single notification id, or an array of notification ids.\n     * @returns {Promise<any>} Returns a promise when the notification is canceled\n     */\n    cancel(notificationId: any): Promise<any> {\n        const promises = [];\n\n        notificationId = Array.isArray(notificationId) ? notificationId : [notificationId];\n        notificationId = this.convertIds(notificationId);\n\n        // Cancel the notifications.\n        notificationId.forEach((id) => {\n            if (this.scheduled[id]) {\n                promises.push(this.cancelNotification(id, false, 'cancel'));\n            }\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Cancels all notifications.\n     *\n     * @returns {Promise<any>} Returns a promise when all notifications are canceled.\n     */\n    cancelAll(): Promise<any> {\n        return this.cancel(Object.keys(this.scheduled)).then(() => {\n            this.triggerEvent('cancelall', 'foreground');\n        });\n    }\n\n    /**\n     * Cancel a local notification.\n     *\n     * @param {number} id Notification ID.\n     * @param {boolean} omitEvent If true, the clear/cancel event won't be triggered.\n     * @param {string} eventName Name of the event to trigger.\n     * @return {Void}\n     */\n    protected cancelNotification(id: number, omitEvent: boolean, eventName: string): void {\n        const notification = this.scheduled[id].notification;\n\n        clearTimeout(this.scheduled[id].timeout);\n        clearInterval(this.scheduled[id].interval);\n        delete this.scheduled[id];\n        delete this.triggered[id];\n\n        this.removeNotification(id);\n\n        if (!omitEvent) {\n            this.triggerEvent(eventName, notification, 'foreground');\n        }\n    }\n\n    /**\n     * Clears single or multiple notifications.\n     *\n     * @param {any} notificationId A single notification id, or an array of notification ids.\n     * @returns {Promise<any>} Returns a promise when the notification had been cleared.\n     */\n    clear(notificationId: any): Promise<any> {\n        const promises = [];\n\n        notificationId = Array.isArray(notificationId) ? notificationId : [notificationId];\n        notificationId = this.convertIds(notificationId);\n\n        // Clear the notifications.\n        notificationId.forEach((id) => {\n            // Cancel only the notifications that aren't repeating.\n            if (this.scheduled[id] && this.scheduled[id].notification && !this.scheduled[id].notification.every) {\n                promises.push(this.cancelNotification(id, false, 'clear'));\n            }\n        });\n\n        return Promise.all(promises);\n    }\n    /**\n     * Clears all notifications.\n     *\n     * @returns {Promise<any>} Returns a promise when all notifications have cleared\n     */\n    clearAll(): Promise<any> {\n        return this.clear(Object.keys(this.scheduled)).then(() => {\n            this.triggerEvent('clearall', 'foreground');\n        });\n    }\n\n    /**\n     * Convert a list of IDs to numbers.\n     * Code extracted from the Cordova plugin.\n     *\n     * @param {any[]} ids List of IDs.\n     * @return {number[]} List of IDs as numbers.\n     */\n    protected convertIds(ids: any[]): number[] {\n        const convertedIds = [];\n\n        for (let i = 0; i < ids.length; i++) {\n            convertedIds.push(Number(ids[i]));\n        }\n\n        return convertedIds;\n    }\n\n    /**\n     * Convert the notification options to their required type.\n     * Code extracted from the Cordova plugin.\n     *\n     * @param {ILocalNotification} notification Notification.\n     * @return {ILocalNotification} Converted notification.\n     */\n    protected convertProperties(notification: ILocalNotification): ILocalNotification {\n        if (notification.id) {\n            if (isNaN(notification.id)) {\n                notification.id = this.defaults.id;\n            } else {\n                notification.id = Number(notification.id);\n            }\n        }\n\n        if (notification.title) {\n            notification.title = notification.title.toString();\n        }\n\n        if (notification.text) {\n            notification.text = notification.text.toString();\n        }\n\n        if (notification.badge) {\n            if (isNaN(notification.badge)) {\n                notification.badge = this.defaults.badge;\n            } else {\n                notification.badge = Number(notification.badge);\n            }\n        }\n\n        if (notification.at) {\n            if (typeof notification.at == 'object') {\n                notification.at = notification.at.getTime();\n            }\n\n            notification.at = Math.round(notification.at / 1000);\n        }\n\n        if (typeof notification.data == 'object') {\n            notification.data = JSON.stringify(notification.data);\n        }\n\n        return notification;\n    }\n\n    /**\n     * Get a notification object.\n     *\n     * @param {any} notificationId The id of the notification to get.\n     * @returns {Promise<ILocalNotification>}\n     */\n    get(notificationId: any): Promise<ILocalNotification> {\n        return Promise.resolve(this.getNotifications([Number(notificationId)], true, true)[0]);\n    }\n\n    /**\n     * Get all notification objects.\n     *\n     * @returns {Promise<Array<ILocalNotification>>}\n     */\n    getAll(): Promise<Array<ILocalNotification>> {\n        return Promise.resolve(this.getNotifications(undefined, true, true));\n    }\n\n    /**\n     * Get all the notification ids.\n     *\n     * @returns {Promise<Array<number>>}\n     */\n    getAllIds(): Promise<Array<number>> {\n        let ids = this.utils.mergeArraysWithoutDuplicates(Object.keys(this.scheduled), Object.keys(this.triggered));\n        ids = ids.map((id) => {\n            return Number(id);\n        });\n\n        return Promise.resolve(ids);\n    }\n\n    /**\n     * Get all the notification stored in local DB.\n     *\n     * @return {Promise<any>} Promise resolved with the notifications.\n     */\n    protected getAllNotifications(): Promise<any> {\n        return this.appDB.getAllRecords(this.DESKTOP_NOTIFS_TABLE);\n    }\n\n    /**\n     * Get all scheduled notification objects.\n     *\n     * @returns {Promise<Array<ILocalNotification>>}\n     */\n    getAllScheduled(): Promise<Array<ILocalNotification>> {\n        return Promise.resolve(this.getNotifications(undefined, true, false));\n    }\n\n    /**\n     * Get all triggered notification objects.\n     *\n     * @returns {Promise<Array<ILocalNotification>>}\n     */\n    getAllTriggered(): Promise<Array<ILocalNotification>> {\n        return Promise.resolve(this.getNotifications(undefined, false, true));\n    }\n\n    /**\n     * Get a set of notifications. If ids isn't specified, return all the notifications.\n     *\n     * @param {Number[]} [ids] Ids of notifications to get. If not specified, get all notifications.\n     * @param {boolean} [getScheduled] Get scheduled notifications.\n     * @param {boolean} [getTriggered] Get triggered notifications.\n     * @return {ILocalNotification[]} List of notifications.\n     */\n    protected getNotifications(ids?: number[], getScheduled?: boolean, getTriggered?: boolean): ILocalNotification[] {\n        const notifications = [];\n\n        if (getScheduled) {\n            for (const id in this.scheduled) {\n                if (!ids || ids.indexOf(Number(id)) != -1) {\n                    notifications.push(this.scheduled[id].notification);\n                }\n            }\n        }\n\n        if (getTriggered) {\n            for (const id in this.triggered) {\n                if ((!getScheduled || !this.scheduled[id]) && (!ids || ids.indexOf(Number(id)) != -1)) {\n                    notifications.push(this.triggered[id].notification);\n                }\n            }\n        }\n\n        return notifications;\n    }\n\n    /**\n     * Get a scheduled notification object.\n     *\n     * @param {any} notificationId The id of the notification to ge.\n     * @returns {Promise<ILocalNotification>}\n     */\n    getScheduled(notificationId: any): Promise<ILocalNotification> {\n        return Promise.resolve(this.getNotifications([Number(notificationId)], true, false)[0]);\n    }\n\n    /**\n     * Get the ids of scheduled notifications.\n     *\n     * @returns {Promise<Array<number>>} Returns a promise\n     */\n    getScheduledIds(): Promise<Array<number>> {\n        const ids = Object.keys(this.scheduled).map((id) => {\n            return Number(id);\n        });\n\n        return Promise.resolve(ids);\n    }\n\n    /**\n     * Get a triggered notification object.\n     *\n     * @param {any} notificationId The id of the notification to get.\n     * @returns {Promise<ILocalNotification>}\n     */\n    getTriggered(notificationId: any): Promise<ILocalNotification> {\n        return Promise.resolve(this.getNotifications([Number(notificationId)], false, true)[0]);\n    }\n\n    /**\n     * Get the ids of triggered notifications.\n     *\n     * @returns {Promise<Array<number>>}\n     */\n    getTriggeredIds(): Promise<Array<number>> {\n        const ids = Object.keys(this.triggered).map((id) => {\n            return Number(id);\n        });\n\n        return Promise.resolve(ids);\n    }\n\n    /**\n     * Given an object of options and a list of properties, return the first property that exists.\n     * Code extracted from the Cordova plugin.\n     *\n     * @param {ILocalNotification} notification Notification.\n     * @param {any} ...args List of keys to check.\n     * @return {any} First value found.\n     */\n    protected getValueFor(notification: ILocalNotification, ...args: any[]): any {\n        for (const i in args) {\n            const key = args[i];\n            if (notification.hasOwnProperty(key)) {\n                return notification[key];\n            }\n        }\n    }\n\n    /**\n     * Informs if the app has the permission to show notifications.\n     *\n     * @returns {Promise<boolean>}\n     */\n    hasPermission(): Promise<boolean> {\n        return Promise.resolve(true);\n    }\n\n    /**\n     * Checks presence of a notification.\n     *\n     * @param {number} notificationId Notification ID.\n     * @returns {Promise<boolean>}\n     */\n    isPresent(notificationId: number): Promise<boolean> {\n        return Promise.resolve(!!this.scheduled[notificationId] || !!this.triggered[notificationId]);\n    }\n\n    /**\n     * Checks is a notification is scheduled.\n     *\n     * @param {number} notificationId Notification ID.\n     * @returns {Promise<boolean>}\n     */\n    isScheduled(notificationId: number): Promise<boolean> {\n        return Promise.resolve(!!this.scheduled[notificationId]);\n    }\n    /**\n     * Checks if a notification is triggered.\n     *\n     * @param {number} notificationId Notification ID.\n     * @returns {Promise<boolean>}\n     */\n    isTriggered(notificationId: number): Promise<boolean> {\n        return Promise.resolve(!!this.triggered[notificationId]);\n    }\n\n    /**\n     * Loads an initialize the API for desktop.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    load(): Promise<any> {\n        if (!this.appProvider.isDesktop()) {\n            return Promise.resolve();\n        }\n\n        if (this.appProvider.isWindows()) {\n            try {\n                this.winNotif = require('electron-windows-notifications');\n            } catch (ex) {\n                // Ignore errors.\n            }\n        }\n\n        // App is being loaded, re-schedule all the notifications that were scheduled before.\n        return this.getAllNotifications().catch(() => {\n            return [];\n        }).then((notifications) => {\n            notifications.forEach((notification) => {\n                if (notification.triggered) {\n                    // Notification was triggered already, store it in memory but don't schedule it again.\n                    delete notification.triggered;\n                    this.scheduled[notification.id] = {\n                        notification: notification\n                    };\n                    this.triggered[notification.id] = notification;\n                } else {\n                    // Schedule the notification again unless it should have been triggered more than an hour ago.\n                    delete notification.triggered;\n                    notification.at = notification.at * 1000;\n                    if (notification.at - Date.now() > - CoreConstants.SECONDS_HOUR * 1000) {\n                        this.schedule(notification);\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Merge notification options with default values.\n     * Code extracted from the Cordova plugin.\n     *\n     * @param {ILocalNotification} notification Notification.\n     * @return {ILocalNotification} Treated notification.\n     */\n    protected mergeWithDefaults(notification: ILocalNotification): ILocalNotification {\n        notification.at = this.getValueFor(notification, 'at', 'firstAt', 'date');\n        notification.text = this.getValueFor(notification, 'text', 'message');\n        notification.data = this.getValueFor(notification, 'data', 'json');\n\n        if (notification.at === undefined || notification.at === null) {\n            notification.at = new Date();\n        }\n\n        for (const key in this.defaults) {\n            if (notification[key] === null || notification[key] === undefined) {\n                if (notification.hasOwnProperty(key) && ['data', 'sound'].indexOf(key) > -1) {\n                    notification[key] = undefined;\n                } else {\n                    notification[key] = this.defaults[key];\n                }\n            }\n        }\n\n        for (const key in notification) {\n            if (!this.defaults.hasOwnProperty(key)) {\n                delete notification[key];\n            }\n        }\n\n        return notification;\n    }\n\n    /**\n     * Function called when a notification is clicked.\n     *\n     * @param {ILocalNotification} notification Clicked notification.\n     */\n    protected notificationClicked(notification: ILocalNotification): void {\n        this.triggerEvent('click', notification, 'foreground');\n        // Focus the app.\n        require('electron').ipcRenderer.send('focusApp');\n    }\n\n    /**\n     * Sets a callback for a specific event.\n     *\n     * @param {string} eventName Name of the event. Events: schedule, trigger, click, update, clear, clearall, cancel, cancelall\n     * @param {any} callback Call back function.\n     */\n    on(eventName: string, callback: any): void {\n        if (!this.observers[eventName] || typeof callback != 'function') {\n            // Event not supported, stop.\n            return;\n        }\n        this.observers[eventName].push(callback);\n    }\n\n    /**\n     * Parse a interval and convert it to a number of milliseconds (0 if not valid).\n     * Code extracted from the Cordova plugin.\n     *\n     * @param {string} every Interval to convert.\n     * @return {number} Number of milliseconds of the interval-\n     */\n    protected parseInterval(every: string): number {\n        let interval;\n\n        every = String(every).toLowerCase();\n\n        if (!every || every == 'undefined') {\n            interval = 0;\n        } else if (every == 'second') {\n            interval = 1000;\n        } else if (every == 'minute') {\n            interval = CoreConstants.SECONDS_MINUTE * 1000;\n        } else if (every == 'hour') {\n            interval = CoreConstants.SECONDS_HOUR * 1000;\n        } else if (every == 'day') {\n            interval = CoreConstants.SECONDS_DAY * 1000;\n        } else if (every == 'week') {\n            interval = CoreConstants.SECONDS_DAY * 7 * 1000;\n        } else if (every == 'month') {\n            interval = CoreConstants.SECONDS_DAY * 31 * 1000;\n        } else if (every == 'quarter') {\n            interval = CoreConstants.SECONDS_HOUR * 2190 * 1000;\n        } else if (every == 'year') {\n            interval = CoreConstants.SECONDS_YEAR * 1000;\n        } else {\n            interval = parseInt(every, 10);\n            if (isNaN(interval)) {\n                interval = 0;\n            } else {\n                interval *= 60000;\n            }\n        }\n\n        return interval;\n    }\n\n    /**\n     * Register permission to show notifications if not already granted.\n     *\n     * @returns {Promise<boolean>}\n     */\n    registerPermission(): Promise<boolean> {\n        return Promise.resolve(true);\n    }\n\n    /**\n     * Remove a notification from local DB.\n     *\n     * @param {number} id ID of the notification.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected removeNotification(id: number): Promise<any> {\n        return this.appDB.deleteRecords(this.DESKTOP_NOTIFS_TABLE, { id: id });\n    }\n\n    /**\n     * Schedules a single or multiple notifications.\n     *\n     * @param {ILocalNotification | Array<ILocalNotification>} [options] Notification or notifications.\n     */\n    schedule(options?: ILocalNotification | Array<ILocalNotification>): void {\n        this.scheduleOrUpdate(options);\n    }\n\n    /**\n     * Schedules or updates a single or multiple notifications.\n     *\n     * @param {ILocalNotification | Array<ILocalNotification>} [options] Notification or notifications.\n     * @param {string} [eventName] Name of the event: schedule or update.\n     */\n    protected scheduleOrUpdate(options?: ILocalNotification | Array<ILocalNotification>, eventName: string = 'schedule'): void {\n        options = Array.isArray(options) ? options : [options];\n\n        options.forEach((notification) => {\n            this.mergeWithDefaults(notification);\n            this.convertProperties(notification);\n\n            // Cancel current notification if exists.\n            this.cancelNotification(notification.id, true, 'cancel');\n\n            // Store the notification in the scheduled list and in the DB.\n            this.scheduled[notification.id] = {\n                notification: notification\n            };\n            this.storeNotification(notification, false);\n\n            if (Math.abs(moment().diff(notification.at * 1000, 'days')) > 15) {\n                // Notification should trigger more than 15 days from now, don't schedule it.\n                return;\n            }\n\n            // Schedule the notification.\n            const toTriggerTime = notification.at * 1000 - Date.now(),\n                trigger = (): void => {\n                    // Trigger the notification.\n                    this.triggerNotification(notification);\n\n                    // Store the notification as triggered. Don't remove it from scheduled, it's how the plugin works.\n                    this.triggered[notification.id] = notification;\n                    this.storeNotification(notification, true);\n\n                    // Launch the trigger event.\n                    this.triggerEvent('trigger', notification, 'foreground');\n\n                    if (notification.every && this.scheduled[notification.id] && !this.scheduled[notification.id].interval) {\n                        const interval = this.parseInterval(notification.every);\n                        if (interval > 0) {\n                            this.scheduled[notification.id].interval = setInterval(trigger, interval);\n                        }\n                    }\n                };\n\n            this.scheduled[notification.id].timeout = setTimeout(trigger, toTriggerTime);\n\n            // Launch the scheduled/update event.\n            this.triggerEvent(eventName, notification, 'foreground');\n        });\n    }\n\n    /**\n     * Store a notification in local DB.\n     *\n     * @param {any} notification Notification to store.\n     * @param {boolean} triggered Whether the notification has been triggered.\n     * @return {Promise<any>} Promise resolved when stored.\n     */\n    protected storeNotification(notification: any, triggered: boolean): Promise<any> {\n        notification = Object.assign({}, notification); // Clone the object.\n        notification.triggered = !!triggered;\n\n        return this.appDB.insertOrUpdateRecord(this.DESKTOP_NOTIFS_TABLE, notification, { id: notification.id });\n    }\n\n    /**\n     * Trigger an event.\n     *\n     * @param {string} eventName Event name.\n     * @param {any[]} ...args List of parameters to pass.\n     */\n    protected triggerEvent(eventName: string, ...args: any[]): void {\n        if (this.observers[eventName]) {\n            this.observers[eventName].forEach((callback) => {\n                callback.apply(null, args);\n            });\n        }\n    }\n\n    /**\n     * Trigger a notification, using the best method depending on the OS.\n     *\n     * @param {ILocalNotification} notification Notification to trigger.\n     */\n    protected triggerNotification(notification: ILocalNotification): void {\n        if (this.winNotif) {\n            // Use Windows notifications.\n            const notifInstance = new this.winNotif.ToastNotification({\n                appId: CoreConfigConstants.app_id,\n                template: this.toastTemplate,\n                strings: [notification.title, notification.text]\n            });\n\n            // Listen for click events.\n            notifInstance.on('activated', () => {\n                this.notificationClicked(notification);\n            });\n\n            notifInstance.show();\n\n            try {\n                // Show it in Tile too.\n                const tileNotif = new this.winNotif.TileNotification({\n                    tag: notification.id + '',\n                    template: this.tileTemplate,\n                    strings: [notification.title, notification.text, notification.title, notification.text, notification.title,\n                    notification.text],\n                    expirationTime: new Date(Date.now() + CoreConstants.SECONDS_HOUR * 1000) // Expire in 1 hour.\n                });\n\n                tileNotif.show();\n            } catch (ex) {\n                // tslint:disable-next-line\n                console.warn('Error showing TileNotification. Please notice they only work with the app installed.', ex);\n            }\n        } else {\n            // Use Electron default notifications.\n            const notifInstance = new Notification(notification.title, {\n                body: notification.text\n            });\n\n            // Listen for click events.\n            notifInstance.onclick = (): void => {\n                this.notificationClicked(notification);\n            };\n        }\n    }\n\n    /**\n     * Removes a callback of a specific event.\n     *\n     * @param {string} eventName Name of the event. Events: schedule, trigger, click, update, clear, clearall, cancel, cancelall\n     * @param {any} callback Call back function.\n     */\n    un(eventName: string, callback: any): void {\n        if (this.observers[eventName] && this.observers[eventName].length) {\n            for (let i = 0; i < this.observers[eventName].length; i++) {\n                if (this.observers[eventName][i] == callback) {\n                    this.observers[eventName].splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Updates a previously scheduled notification. Must include the id in the options parameter.\n     *\n     * @param {ILocalNotification} [options] Notification.\n     */\n    update(options?: ILocalNotification): void {\n        return this.scheduleOrUpdate(options, 'update');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/local-notifications.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { MediaCapture, CaptureAudioOptions, CaptureImageOptions, CaptureVideoOptions } from '@ionic-native/media-capture';\nimport { CoreEmulatorCaptureHelperProvider } from './capture-helper';\n\n/**\n * Emulates the Cordova MediaCapture plugin in desktop apps and in browser.\n */\n@Injectable()\nexport class MediaCaptureMock extends MediaCapture {\n\n    constructor(private captureHelper: CoreEmulatorCaptureHelperProvider) {\n        super();\n    }\n\n    /**\n     * Start the audio recorder application and return information about captured audio clip files.\n     *\n     * @param {CaptureAudioOptions} options Options.\n     * @return {Promise<any>} Promise resolved when captured.\n     */\n    captureAudio(options: CaptureAudioOptions): Promise<any> {\n        return this.captureHelper.captureMedia('audio', options);\n    }\n\n    /**\n     * Start the camera application and return information about captured image files.\n     *\n     * @param {CaptureImageOptions} options Options.\n     * @return {Promise<any>} Promise resolved when captured.\n     */\n    captureImage(options: CaptureImageOptions): Promise<any> {\n        return this.captureHelper.captureMedia('captureimage', options);\n    }\n\n    /**\n     * Start the video recorder application and return information about captured video clip files.\n     *\n     * @param {CaptureVideoOptions} options Options.\n     * @return {Promise<any>} Promise resolved when captured.\n     */\n    captureVideo(options: CaptureVideoOptions): Promise<any> {\n        return this.captureHelper.captureMedia('video', options);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/media-capture.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Network } from '@ionic-native/network';\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * Emulates the Cordova Globalization plugin in desktop apps and in browser.\n */\n@Injectable()\nexport class NetworkMock extends Network {\n    type: null;\n\n    constructor() {\n        super();\n\n        (<any> window).Connection = {\n            UNKNOWN: 'unknown',\n            ETHERNET: 'ethernet',\n            WIFI: 'wifi',\n            CELL_2G: '2g',\n            CELL_3G: '3g',\n            CELL_4G: '4g',\n            CELL: 'cellular',\n            NONE: 'none'\n        };\n    }\n\n    /**\n     * Returns an observable to watch connection changes.\n     *\n     * @return {Observable<any>} Observable.\n     */\n    onchange(): Observable<any> {\n        return Observable.merge(this.onConnect(), this.onDisconnect());\n    }\n\n    /**\n     * Returns an observable to notify when the app is connected.\n     *\n     * @return {Observable<any>} Observable.\n     */\n    onConnect(): Observable<any> {\n        const observable = new Subject<any>();\n\n        window.addEventListener('online', (ev) => {\n            observable.next(ev);\n        }, false);\n\n        return observable;\n    }\n\n    /**\n     * Returns an observable to notify when the app is disconnected.\n     *\n     * @return {Observable<any>} Observable.\n     */\n    onDisconnect(): Observable<any> {\n        const observable = new Subject<any>();\n\n        window.addEventListener('offline', (ev) => {\n            observable.next(ev);\n        }, false);\n\n        return observable;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/network.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Zip } from '@ionic-native/zip';\nimport { JSZip } from 'jszip';\nimport { File } from '@ionic-native/file';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\n\n/**\n * Emulates the Cordova Zip plugin in desktop apps and in browser.\n */\n@Injectable()\nexport class ZipMock extends Zip {\n\n    constructor(private file: File, private mimeUtils: CoreMimetypeUtilsProvider) {\n        super();\n    }\n\n    /**\n     * Extracts files from a ZIP archive.\n     *\n     * @param {string} source Path to the source ZIP file.\n     * @param {string} destination Destination folder.\n     * @param {Function} [onProgress] Optional callback to be called on progress update\n     * @return {Promise<number>} Promise that resolves with a number. 0 is success, -1 is error.\n     */\n    unzip(source: string, destination: string, onProgress?: Function): Promise<number> {\n        // Replace all %20 with spaces.\n        source = source.replace(/%20/g, ' ');\n        destination = destination.replace(/%20/g, ' ');\n\n        const sourceDir = source.substring(0, source.lastIndexOf('/')),\n            sourceName = source.substr(source.lastIndexOf('/') + 1);\n\n        return this.file.readAsArrayBuffer(sourceDir, sourceName).then((data) => {\n            const zip = new JSZip(data),\n                promises = [],\n                total = Object.keys(zip.files).length;\n            let loaded = 0;\n\n            if (!zip.files || !zip.files.length) {\n                // Nothing to extract.\n                return 0;\n            }\n\n            zip.files.forEach((file, name) => {\n                let type,\n                    promise;\n\n                if (!file.dir) {\n                    // It's a file. Get the mimetype and write the file.\n                    type = this.mimeUtils.getMimeType(this.mimeUtils.getFileExtension(name));\n                    promise = this.file.writeFile(destination, name, new Blob([file.asArrayBuffer()], { type: type }));\n                } else {\n                    // It's a folder, create it if it doesn't exist.\n                    promise = this.file.createDir(destination, name, false);\n                }\n\n                promises.push(promise.then(() => {\n                    // File unzipped, call the progress.\n                    loaded++;\n                    onProgress && onProgress({ loaded: loaded, total: total });\n                }));\n            });\n\n            return Promise.all(promises).then(() => {\n                return 0;\n            });\n        }).catch(() => {\n            // Error.\n            return -1;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/zip.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 1144\n// module chunks = 60","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { File } from '@ionic-native/file';\nimport { LocalNotifications } from '@ionic-native/local-notifications';\nimport { CoreInitDelegate, CoreInitHandler } from '@providers/init';\nimport { FileTransferErrorMock } from './file-transfer';\nimport { CoreEmulatorCaptureHelperProvider } from './capture-helper';\n\n/**\n * Helper service for the emulator feature. It also acts as an init handler.\n */\n@Injectable()\nexport class CoreEmulatorHelperProvider implements CoreInitHandler {\n    name = 'CoreEmulator';\n    priority = CoreInitDelegate.MAX_RECOMMENDED_PRIORITY + 500;\n    blocking = true;\n\n    constructor(private file: File, private fileProvider: CoreFileProvider, private utils: CoreUtilsProvider,\n            initDelegate: CoreInitDelegate, private localNotif: LocalNotifications,\n            private captureHelper: CoreEmulatorCaptureHelperProvider) { }\n\n    /**\n     * Load the Mocks that need it.\n     *\n     * @return {Promise<void>} Promise resolved when loaded.\n     */\n    load(): Promise<void> {\n        const promises = [];\n\n        promises.push((<any> this.file).load().then((basePath: string) => {\n            this.fileProvider.setHTMLBasePath(basePath);\n        }));\n        promises.push((<any> this.localNotif).load());\n        promises.push(this.captureHelper.load());\n\n        (<any> window).FileTransferError = FileTransferErrorMock;\n\n        return this.utils.allPromises(promises);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/emulator/providers/helper.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// electron (ignored)\n// module id = 1190\n// module chunks = 60","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NavController } from 'ionic-angular';\nimport { CoreContentLinksAction } from '../providers/delegate';\nimport { CoreContentLinksHandlerBase } from './base-handler';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\n\n/**\n * Handler to handle URLs pointing to the grade of a module.\n */\nexport class CoreContentLinksModuleGradeHandler extends CoreContentLinksHandlerBase {\n\n    /**\n     * Whether the module can be reviewed in the app. If true, the handler needs to implement the goToReview function.\n     * @type {boolean}\n     */\n    canReview: boolean;\n\n    /**\n     * Construct the handler.\n     *\n     * @param {CoreCourseHelperProvider} courseHelper The CoreCourseHelperProvider instance.\n     * @param {CoreDomUtilsProvider} domUtils The CoreDomUtilsProvider instance.\n     * @param {CoreSitesProvider} sitesProvider The CoreSitesProvider instance.\n     * @param {string} addon Name of the addon as it's registered in course delegate. It'll be used to check if it's disabled.\n     * @param {string} modName Name of the module (assign, book, ...).\n     */\n    constructor(protected courseHelper: CoreCourseHelperProvider, protected domUtils: CoreDomUtilsProvider,\n            protected sitesProvider: CoreSitesProvider, public addon: string, public modName: string) {\n        super();\n\n        // Match the grade.php URL with an id param.\n        this.pattern = new RegExp('\\/mod\\/' + modName + '\\/grade\\.php.*([\\&\\?]id=\\\\d+)');\n        this.featureName = '$mmCourseDelegate_' + addon;\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n\n        courseId = courseId || params.courseid || params.cid;\n\n        return [{\n            action: (siteId, navCtrl?): void => {\n                // Check if userid is the site's current user.\n                const modal = this.domUtils.showModalLoading();\n                this.sitesProvider.getSite(siteId).then((site) => {\n                    if (!params.userid || params.userid == site.getUserId()) {\n                        // No user specified or current user. Navigate to module.\n                        this.courseHelper.navigateToModule(parseInt(params.id, 10), siteId, courseId);\n                    } else if (this.canReview) {\n                        // Use the goToReview function.\n                        this.goToReview(url, params, courseId, siteId, navCtrl);\n                    } else {\n                        // Not current user and cannot review it in the app, open it in browser.\n                        site.openInBrowserWithAutoLogin(url);\n                    }\n                }).finally(() => {\n                    modal.dismiss();\n                });\n            }\n        }];\n    }\n\n    /**\n     * Go to the page to review.\n     *\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} courseId Course ID related to the URL.\n     * @param {string} siteId Site to use.\n     * @param {NavController} [navCtrl] Nav Controller to use to navigate.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected goToReview(url: string, params: any, courseId: number, siteId: string, navCtrl?: NavController): Promise<any> {\n        // This function should be overridden.\n        return Promise.resolve();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/contentlinks/classes/module-grade-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreCourseDownloadModuleMainFileDirective } from './download-module-main-file';\n\n@NgModule({\n    declarations: [\n        CoreCourseDownloadModuleMainFileDirective\n    ],\n    imports: [],\n    exports: [\n        CoreCourseDownloadModuleMainFileDirective\n    ]\n})\nexport class CoreCourseDirectivesModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/directives/directives.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, OnInit, ElementRef } from '@angular/core';\nimport { CoreCourseProvider } from '../providers/course';\nimport { CoreCourseHelperProvider } from '../providers/helper';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\n\n/**\n * Directive to allow downloading and open the main file of a module.\n * When the item with this directive is clicked, the module will be downloaded (if needed) and opened.\n * This is meant for modules like mod_resource.\n *\n * This directive must receive either a module or a moduleId. If no files are provided, it will use module.contents.\n */\n@Directive({\n    selector: '[core-course-download-module-main-file]'\n})\nexport class CoreCourseDownloadModuleMainFileDirective implements OnInit {\n    @Input() module: any; // The module.\n    @Input() moduleId: string | number; // The module ID. Required if module is not supplied.\n    @Input() courseId: string | number; // The course ID.\n    @Input() component?: string; // Component to link the file to.\n    @Input() componentId?: string | number; // Component ID to use in conjunction with the component. If not defined, use moduleId.\n    @Input() files?: any[]; // List of files of the module. If not provided, use module.contents.\n\n    protected element: HTMLElement;\n\n    constructor(element: ElementRef, protected domUtils: CoreDomUtilsProvider, protected courseHelper: CoreCourseHelperProvider,\n            protected courseProvider: CoreCourseProvider) {\n        this.element = element.nativeElement || element;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.element.addEventListener('click', (ev: Event): void => {\n            if (!this.module && !this.moduleId) {\n                return;\n            }\n\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            const modal = this.domUtils.showModalLoading(),\n                courseId = typeof this.courseId == 'string' ? parseInt(this.courseId, 10) : this.courseId;\n            let promise;\n\n            if (this.module) {\n                // We already have the module.\n                promise = Promise.resolve(module);\n            } else {\n                // Try to get the module from cache.\n                this.moduleId = typeof this.moduleId == 'string' ? parseInt(this.moduleId, 10) : this.moduleId;\n                promise = this.courseProvider.getModule(this.moduleId, courseId);\n            }\n\n            promise.then((module) => {\n                const componentId = this.componentId || module.id;\n\n                return this.courseHelper.downloadModuleAndOpenFile(module, courseId, this.component, componentId, this.files);\n            }).catch((error) => {\n                this.domUtils.showErrorModalDefault(error, 'core.errordownloading', true);\n            }).finally(() => {\n                modal.dismiss();\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/course/directives/download-module-main-file.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreSitePluginsCallWSDirective } from './call-ws';\nimport { CoreSitePluginsCallWSNewContentDirective } from './call-ws-new-content';\nimport { CoreSitePluginsCallWSOnLoadDirective } from './call-ws-on-load';\nimport { CoreSitePluginsNewContentDirective } from './new-content';\n\n@NgModule({\n    declarations: [\n        CoreSitePluginsCallWSDirective,\n        CoreSitePluginsCallWSNewContentDirective,\n        CoreSitePluginsCallWSOnLoadDirective,\n        CoreSitePluginsNewContentDirective\n    ],\n    imports: [],\n    exports: [\n        CoreSitePluginsCallWSDirective,\n        CoreSitePluginsCallWSNewContentDirective,\n        CoreSitePluginsCallWSOnLoadDirective,\n        CoreSitePluginsNewContentDirective\n    ]\n})\nexport class CoreSitePluginsDirectivesModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/directives/directives.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, ElementRef, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreSitePluginsCallWSOnClickBaseDirective } from '../classes/call-ws-click-directive';\nimport { CoreSitePluginsPluginContentComponent } from '../components/plugin-content/plugin-content';\n\n/**\n * Directive to call a WS when the element is clicked. The action to do when the WS call is successful depends on the input data:\n * display a message, go back or refresh current view.\n *\n * If you want to load a new content when the WS call is done, @see CoreSitePluginsCallWSNewContentDirective.\n *\n * @see CoreSitePluginsCallWSOnClickBaseDirective.\n *\n * Example usages:\n *\n * A button to send some data to the server without using cache, displaying default messages and refreshing on success:\n *\n * <button ion-button core-site-plugins-call-ws name=\"mod_certificate_view_certificate\"\n *             [params]=\"{certificateid: <% certificate.id %>}\" [preSets]=\"{getFromCache: 0, saveToCache: 0}\" confirmMessage\n *             successMessage refreshOnSuccess=\"true\">\n *     {{ 'plugin.mod_certificate_coursecertificate.senddata' | translate }}\n * </button>\n *\n * A button to send some data to the server using cache, without confirm, going back on success and using userid from otherdata:\n *\n * <button ion-button core-site-plugins-call-ws name=\"mod_certificate_view_certificate\"\n *             [params]=\"{certificateid: <% certificate.id %>}\" goBackOnSuccess=\"true\" [useOtherData]=\"['userid']\">\n *     {{ 'plugin.mod_certificate_coursecertificate.senddata' | translate }}\n * </button>\n */\n@Directive({\n    selector: '[core-site-plugins-call-ws]'\n})\nexport class CoreSitePluginsCallWSDirective extends CoreSitePluginsCallWSOnClickBaseDirective {\n    @Input() successMessage: string; // Message to show on success. If not supplied, no message. If empty, default message.\n    @Input() goBackOnSuccess: boolean | string; // Whether to go back if the WS call is successful.\n    @Input() refreshOnSuccess: boolean | string; // Whether to refresh the current view if the WS call is successful.\n\n    constructor(element: ElementRef, translate: TranslateService, domUtils: CoreDomUtilsProvider,\n            sitePluginsProvider: CoreSitePluginsProvider, @Optional() parentContent: CoreSitePluginsPluginContentComponent,\n            protected utils: CoreUtilsProvider, protected navCtrl: NavController) {\n        super(element, translate, domUtils, sitePluginsProvider, parentContent);\n    }\n\n    /**\n     * Function called when the WS call is successful.\n     *\n     * @param {any} result Result of the WS call.\n     */\n    protected wsCallSuccess(result: any): void {\n        if (typeof this.successMessage != 'undefined') {\n            // Display the success message.\n            this.domUtils.showToast(this.successMessage || this.translate.instant('core.success'));\n        }\n\n        if (this.utils.isTrueOrOne(this.goBackOnSuccess)) {\n            this.navCtrl.pop();\n        } else if (this.utils.isTrueOrOne(this.refreshOnSuccess) && this.parentContent) {\n            this.parentContent.refreshData(true);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/directives/call-ws.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, ElementRef, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreSitePluginsCallWSOnClickBaseDirective } from '../classes/call-ws-click-directive';\nimport { CoreSitePluginsPluginContentComponent } from '../components/plugin-content/plugin-content';\n\n/**\n * Directive to call a WS when the element is clicked and load a new content passing the WS result as args. This new content\n * can be displayed in a new page or in the same page (only if current page is already displaying a site plugin content).\n *\n * If you don't need to load some new content when done, @see CoreSitePluginsCallWSDirective.\n *\n * @see CoreSitePluginsCallWSOnClickBaseDirective.\n *\n * Example usages:\n *\n * A button to get some data from the server without using cache, showing default confirm and displaying a new page:\n *\n * <button ion-button core-site-plugins-call-ws-new-content name=\"mod_certificate_get_issued_certificates\"\n *             [params]=\"{certificateid: <% certificate.id %>}\" [preSets]=\"{getFromCache: 0, saveToCache: 0}\" confirmMessage\n *             title=\"<% certificate.name %>\" component=\"mod_certificate\" method=\"mobile_issues_view\"\n *             [args]=\"{cmid: <% cmid %>, courseid: <% courseid %>}\">\n *     {{ 'plugin.mod_certificate_coursecertificate.getissued' | translate }}\n * </button>\n *\n * A button to get some data from the server using cache, without confirm, displaying new content in same page and using\n * userid from otherdata:\n *\n * <button ion-button core-site-plugins-call-ws-new-content name=\"mod_certificate_get_issued_certificates\"\n *             [params]=\"{certificateid: <% certificate.id %>}\" component=\"mod_certificate\" method=\"mobile_issues_view\"\n *             [args]=\"{cmid: <% cmid %>, courseid: <% courseid %>}\" samePage=\"true\" [useOtherData]=\"['userid']\">\n *     {{ 'plugin.mod_certificate_coursecertificate.getissued' | translate }}\n * </button>\n */\n@Directive({\n    selector: '[core-site-plugins-call-ws-new-content]'\n})\nexport class CoreSitePluginsCallWSNewContentDirective extends CoreSitePluginsCallWSOnClickBaseDirective {\n    @Input() component: string; // The component of the new content.\n    @Input() method: string; // The method to get the new content.\n    @Input() args: any; // The params to get the new content.\n    @Input() title: string; // The title to display with the new content. Only if samePage=false.\n    @Input() samePage: boolean | string; // Whether to display the content in same page or open a new one. Defaults to new page.\n    @Input() useOtherData: any[]; // Whether to include other data in the args. @see CoreSitePluginsProvider.loadOtherDataInArgs.\n\n    constructor(element: ElementRef, translate: TranslateService, domUtils: CoreDomUtilsProvider,\n            sitePluginsProvider: CoreSitePluginsProvider, @Optional() parentContent: CoreSitePluginsPluginContentComponent,\n            protected utils: CoreUtilsProvider, @Optional() protected navCtrl: NavController) {\n        super(element, translate, domUtils, sitePluginsProvider, parentContent);\n    }\n\n    /**\n     * Function called when the WS call is successful.\n     *\n     * @param {any} result Result of the WS call.\n     */\n    protected wsCallSuccess(result: any): void {\n        let args = this.args || {};\n\n        if (this.parentContent) {\n            args = this.sitePluginsProvider.loadOtherDataInArgs(this.args, this.parentContent.otherData, this.useOtherData);\n        }\n\n        // Add the properties from the WS call result to the args.\n        args = Object.assign(args, result);\n\n        if (this.utils.isTrueOrOne(this.samePage)) {\n            // Update the parent content (if it exists).\n            if (this.parentContent) {\n                this.parentContent.updateContent(this.component, this.method, args);\n            }\n        } else {\n            this.navCtrl.push('CoreSitePluginsPluginPage', {\n                title: this.title,\n                component: this.component,\n                method: this.method,\n                args: args,\n                bootstrapResult: this.parentContent && this.parentContent.bootstrapResult\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/directives/call-ws-new-content.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, OnInit, ElementRef, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreSitePluginsCallWSBaseDirective } from '../classes/call-ws-directive';\nimport { CoreSitePluginsPluginContentComponent } from '../components/plugin-content/plugin-content';\n\n/**\n * Directive to call a WS as soon as its loaded.\n * This directive is meant for actions to do in the background, like calling logging WebServices.\n *\n * If you want to call a WS when the user clicks on a certain element, @see CoreSitePluginsCallWSDirective.\n *\n * @see CoreSitePluginsCallWSBaseDirective.\n *\n * Example usage:\n *\n * <span core-site-plugins-call-ws-on-load name=\"mod_certificate_view_certificate\" [params]=\"{certificateid: <% certificate.id %>}\"\n *     [preSets]=\"{getFromCache: 0, saveToCache: 0}\"></span>\n */\n@Directive({\n    selector: '[core-site-plugins-call-ws-on-load]'\n})\nexport class CoreSitePluginsCallWSOnLoadDirective extends CoreSitePluginsCallWSBaseDirective implements OnInit {\n\n    constructor(element: ElementRef, translate: TranslateService, domUtils: CoreDomUtilsProvider,\n            sitePluginsProvider: CoreSitePluginsProvider, @Optional() parentContent: CoreSitePluginsPluginContentComponent) {\n        super(element, translate, domUtils, sitePluginsProvider, parentContent);\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        // Call the WS immediately.\n        this.callWS().catch(() => {\n            // Ignore errors.\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/directives/call-ws-on-load.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Directive, Input, OnInit, ElementRef, Optional } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreSitePluginsPluginContentComponent } from '../components/plugin-content/plugin-content';\n\n/**\n * Directive to display a new site plugin content when clicked. This new content can be displayed in a new page or in the\n * current page (only if the current page is already displaying a site plugin content).\n *\n * Example usages:\n *\n * A button to go to a new content page:\n *\n * <button ion-button core-site-plugins-new-content title=\"<% certificate.name %>\" component=\"mod_certificate\"\n *             method=\"mobile_issues_view\" [args]=\"{cmid: <% cmid %>, courseid: <% courseid %>}\">\n *     {{ 'plugin.mod_certificate_coursecertificate.viewissued' | translate }}\n * </button>\n *\n * A button to load new content in current page using a param from otherdata:\n *\n * <button ion-button core-site-plugins-new-content component=\"mod_certificate\" method=\"mobile_issues_view\"\n *         [args]=\"{cmid: <% cmid %>, courseid: <% courseid %>}\" samePage=\"true\" [useOtherData]=\"['userid']\">\n *     {{ 'plugin.mod_certificate_coursecertificate.viewissued' | translate }}\n * </button>\n */\n@Directive({\n    selector: '[core-site-plugins-new-content]'\n})\nexport class CoreSitePluginsNewContentDirective implements OnInit {\n    @Input() component: string; // The component of the new content.\n    @Input() method: string; // The method to get the new content.\n    @Input() args: any; // The params to get the new content.\n    @Input() title: string; // The title to display with the new content. Only if samePage=false.\n    @Input() samePage: boolean | string; // Whether to display the content in same page or open a new one. Defaults to new page.\n    @Input() useOtherData: any[]; // Whether to include other data in the args. @see CoreSitePluginsProvider.loadOtherDataInArgs.\n    @Input() form: string; // ID or name to identify a form. The form will be obtained from document.forms.\n                           // If supplied and form is found, the form data will be retrieved and sent to the new content.\n\n    protected element: HTMLElement;\n\n    constructor(element: ElementRef, protected utils: CoreUtilsProvider, @Optional() protected navCtrl: NavController,\n            @Optional() protected parentContent: CoreSitePluginsPluginContentComponent, protected domUtils: CoreDomUtilsProvider,\n            protected sitePluginsProvider: CoreSitePluginsProvider) {\n        this.element = element.nativeElement || element;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.element.addEventListener('click', (ev: Event): void => {\n            ev.preventDefault();\n            ev.stopPropagation();\n\n            let args = this.args || {};\n\n            if (this.parentContent) {\n                args = this.sitePluginsProvider.loadOtherDataInArgs(this.args, this.parentContent.otherData, this.useOtherData);\n            }\n\n            if (this.form && document.forms[this.form]) {\n                args = Object.assign(args, this.domUtils.getDataFromForm(document.forms[this.form]));\n            }\n\n            if (this.utils.isTrueOrOne(this.samePage)) {\n                // Update the parent content (if it exists).\n                if (this.parentContent) {\n                    this.parentContent.updateContent(this.component, this.method, args);\n                }\n            } else {\n                this.navCtrl.push('CoreSitePluginsPluginPage', {\n                    title: this.title,\n                    component: this.component,\n                    method: this.method,\n                    args: args,\n                    bootstrapResult: this.parentContent && this.parentContent.bootstrapResult\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/directives/new-content.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MoodleMobileApp implements OnInit {\n    // Use page name (string) because the page is lazy loaded (Ionic feature). That way we can load pages without importing them.\n    // The downside is that each page needs to implement a ngModule.\n    rootPage: any = 'CoreLoginInitPage';\n    protected logger;\n    protected lastUrls = {};\n\n    constructor(private platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, logger: CoreLoggerProvider,\n        private eventsProvider: CoreEventsProvider, private loginHelper: CoreLoginHelperProvider,\n        private appProvider: CoreAppProvider) {\n        this.logger = logger.getInstance('AppComponent');\n\n        platform.ready().then(() => {\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            statusBar.styleDefault();\n            splashScreen.hide();\n        });\n\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        // Go to sites page when user is logged out.\n        this.eventsProvider.on(CoreEventsProvider.LOGOUT, () => {\n            this.appProvider.getRootNavController().setRoot('CoreLoginSitesPage');\n        });\n\n        // Listen for session expired events.\n        this.eventsProvider.on(CoreEventsProvider.SESSION_EXPIRED, (data) => {\n            this.loginHelper.sessionExpired(data);\n        });\n\n        // Listen for passwordchange and usernotfullysetup events to open InAppBrowser.\n        this.eventsProvider.on(CoreEventsProvider.PASSWORD_CHANGE_FORCED, (data) => {\n            this.loginHelper.openInAppForEdit(data.siteId, '/login/change_password.php', 'core.forcepasswordchangenotice', true);\n        });\n        this.eventsProvider.on(CoreEventsProvider.USER_NOT_FULLY_SETUP, (data) => {\n            this.loginHelper.openInAppForEdit(data.siteId, '/user/edit.php', 'core.usernotfullysetup');\n        });\n\n        // Listen for sitepolicynotagreed event to accept the site policy.\n        this.eventsProvider.on(CoreEventsProvider.SITE_POLICY_NOT_AGREED, (data) => {\n            this.loginHelper.sitePolicyNotAgreed(data.siteId);\n        });\n\n        // Check URLs loaded in any InAppBrowser.\n        this.eventsProvider.on(CoreEventsProvider.IAB_LOAD_START, (event) => {\n            this.loginHelper.inAppBrowserLoadStart(event.url);\n        });\n\n        // Check InAppBrowser closed.\n        this.eventsProvider.on(CoreEventsProvider.IAB_EXIT, () => {\n            this.loginHelper.waitingForBrowser = false;\n            this.loginHelper.lastInAppUrl = '';\n            this.loginHelper.checkLogout();\n        });\n\n        this.platform.resume.subscribe(() => {\n            // Wait a second before setting it to false since in iOS there could be some frozen WS calls.\n            setTimeout(() => {\n                this.loginHelper.waitingForBrowser = false;\n                this.loginHelper.checkLogout();\n            }, 1000);\n        });\n\n        // Handle app launched with a certain URL (custom URL scheme).\n        (<any> window).handleOpenURL = (url: string): void => {\n            // First check that the URL hasn't been treated a few seconds ago. Sometimes this function is called more than once.\n            if (this.lastUrls[url] && Date.now() - this.lastUrls[url] < 3000) {\n                // Function called more than once, stop.\n                return;\n            }\n\n            this.logger.debug('App launched by URL ', url);\n\n            this.lastUrls[url] = Date.now();\n\n            this.eventsProvider.trigger(CoreEventsProvider.APP_LAUNCHED_URL, url);\n        };\n\n        // Listen for app launched URLs. If we receive one, check if it's a SSO authentication.\n        this.eventsProvider.on(CoreEventsProvider.APP_LAUNCHED_URL, (url) => {\n            this.loginHelper.appLaunchedByURL(url);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreSitesProvider } from './sites';\n\n/**\n * Helper to store some temporary data for file submission.\n *\n * It uses siteId and component name to index the files.\n * Every component can provide a File area identifier to indentify every file list on the session.\n * This value can be the activity id or a mix of name and numbers.\n */\n@Injectable()\nexport class CoreFileSessionProvider {\n    protected files = {};\n\n    constructor(private sitesProvider: CoreSitesProvider) { }\n\n    /**\n     * Add a file to the session.\n     *\n     * @param {string} component Component Name.\n     * @param {string|number} id File area identifier.\n     * @param {any} file File to add.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    addFile(component: string, id: string | number, file: any, siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        this.initFileArea(component, id, siteId);\n\n        this.files[siteId][component][id].push(file);\n    }\n\n    /**\n     * Clear files stored in session.\n     *\n     * @param {string} component Component Name.\n     * @param {string|number} id File area identifier.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    clearFiles(component: string, id: string | number, siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n        if (this.files[siteId] && this.files[siteId][component] && this.files[siteId][component][id]) {\n            this.files[siteId][component][id] = [];\n        }\n    }\n\n    /**\n     * Get files stored in session.\n     *\n     * @param {string} component Component Name.\n     * @param {string|number} id File area identifier.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {any[]} Array of files in session.\n     */\n    getFiles(component: string, id: string | number, siteId?: string): any[] {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n        if (this.files[siteId] && this.files[siteId][component] && this.files[siteId][component][id]) {\n            return this.files[siteId][component][id];\n        }\n\n        return [];\n    }\n\n    /**\n     * Initializes the filearea to store the file.\n     *\n     * @param {string} component Component Name.\n     * @param {string|number} id File area identifier.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    protected initFileArea(component: string, id: string | number, siteId?: string): void {\n        if (!this.files[siteId]) {\n            this.files[siteId] = {};\n        }\n\n        if (!this.files[siteId][component]) {\n            this.files[siteId][component] = {};\n        }\n\n        if (!this.files[siteId][component][id]) {\n            this.files[siteId][component][id] = [];\n        }\n    }\n\n    /**\n     * Remove a file stored in session.\n     *\n     * @param {string} component Component Name.\n     * @param {string|number} id File area identifier.\n     * @param {any} file File to remove. The instance should be exactly the same as the one stored in session.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    removeFile(component: string, id: string | number, file: any, siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n        if (this.files[siteId] && this.files[siteId][component] && this.files[siteId][component][id]) {\n            const position = this.files[siteId][component][id].indexOf(file);\n            if (position != -1) {\n                this.files[siteId][component][id].splice(position, 1);\n            }\n        }\n    }\n\n    /**\n     * Remove a file stored in session.\n     *\n     * @param {string} component Component Name.\n     * @param {string|number} id File area identifier.\n     * @param {number} index Position of the file to remove.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    removeFileByIndex(component: string, id: string | number, index: number, siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n        if (this.files[siteId] && this.files[siteId][component] && this.files[siteId][component][id] && index >= 0 &&\n            index < this.files[siteId][component][id].length) {\n            this.files[siteId][component][id].splice(index, 1);\n        }\n    }\n\n    /**\n     * Set a group of files in the session.\n     *\n     * @param {string} component Component Name.\n     * @param {string|number} id File area identifier.\n     * @param {any[]} newFiles Files to set.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    setFiles(component: string, id: string | number, newFiles: any[], siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        this.initFileArea(component, id, siteId);\n\n        this.files[siteId][component][id] = newFiles;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/file-session.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreConfigProvider } from './config';\nimport { CoreFilepoolProvider } from './filepool';\nimport { CoreInitHandler, CoreInitDelegate } from './init';\nimport { CoreLocalNotificationsProvider } from './local-notifications';\nimport { CoreLoggerProvider } from './logger';\nimport { CoreSitesProvider } from './sites';\nimport { CoreConfigConstants } from '../configconstants';\n\n/**\n * Factory to handle app updates. This factory shouldn't be used outside of core.\n *\n * This service handles processes that need to be run when updating the app, like migrate Ionic 1 database data to Ionic 3.\n */\n@Injectable()\nexport class CoreUpdateManagerProvider implements CoreInitHandler {\n    // Data for init delegate.\n    name = 'CoreUpdateManager';\n    priority = CoreInitDelegate.MAX_RECOMMENDED_PRIORITY + 300;\n    blocking = true;\n\n    protected VERSION_APPLIED = 'version_applied';\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private configProvider: CoreConfigProvider, private sitesProvider: CoreSitesProvider,\n            private filepoolProvider: CoreFilepoolProvider, private notifProvider: CoreLocalNotificationsProvider) {\n        this.logger = logger.getInstance('CoreUpdateManagerProvider');\n    }\n\n    /**\n     * Check if the app has been updated and performs the needed processes.\n     * This function shouldn't be used outside of core.\n     *\n     * @return {Promise<any>} Promise resolved when the update process finishes.\n     */\n    load(): Promise<any> {\n        const promises = [],\n            versionCode = CoreConfigConstants.versioncode;\n\n        return this.configProvider.get(this.VERSION_APPLIED, 0).then((versionApplied: number) => {\n            // @todo: Migrate all data from ydn-db to SQLite if there is no versionApplied.\n\n            if (versionCode >= 2013 && versionApplied < 2013) {\n                promises.push(this.migrateFileExtensions());\n            }\n\n            if (versionCode >= 2017 && versionApplied < 2017) {\n                promises.push(this.setCalendarDefaultNotifTime());\n                promises.push(this.setSitesConfig());\n            }\n\n            if (versionCode >= 2018 && versionApplied < 2018) {\n                promises.push(this.adaptForumOfflineStores());\n            }\n\n            return Promise.all(promises).then(() => {\n                return this.configProvider.set(this.VERSION_APPLIED, versionCode);\n            }).catch((error) => {\n                this.logger.error(`Error applying update from ${versionApplied} to ${versionCode}`, error);\n            });\n        });\n    }\n\n    /**\n     * Migrates files filling extensions.\n     *\n     * @return {Promise<any>} Promise resolved when the site migration is finished.\n     */\n    protected migrateFileExtensions(): Promise<any> {\n        return this.sitesProvider.getSitesIds().then((sites) => {\n            const promises = [];\n            sites.forEach((siteId) => {\n                promises.push(this.filepoolProvider.fillMissingExtensionInFiles(siteId));\n            });\n            promises.push(this.filepoolProvider.treatExtensionInQueue());\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Calendar default notification time is configurable from version 3.2.1, and a new option \"Default\" is added.\n     * All events that were configured to use the fixed default time should now be configured to use \"Default\" option.\n     *\n     * @return {Promise<any>} Promise resolved when the events are configured.\n     */\n    protected setCalendarDefaultNotifTime(): Promise<any> {\n        if (!this.notifProvider.isAvailable()) {\n            // Local notifications not available, nothing to do.\n            return Promise.resolve();\n        }\n\n        // @todo: Implement it once Calendar addon is implemented.\n        return Promise.resolve();\n    }\n\n    /**\n     * In version 3.2.1 we want the site config to be stored in each site if available.\n     * Since it can be slow, we'll only block retrieving the config of current site, the rest will be in background.\n     *\n     * @return {Promise<any>} Promise resolved when the config is loaded for the current site (if any).\n     */\n    protected setSitesConfig(): Promise<any> {\n        return this.sitesProvider.getSitesIds().then((siteIds) => {\n\n            return this.sitesProvider.getStoredCurrentSiteId().catch(() => {\n                // Error getting current site.\n            }).then((currentSiteId) => {\n                let promise;\n\n                // Load the config of current site first.\n                if (currentSiteId) {\n                    promise = this.setSiteConfig(currentSiteId);\n                } else {\n                    promise = Promise.resolve();\n                }\n\n                // Load the config of rest of sites in background.\n                siteIds.forEach((siteId) => {\n                    if (siteId != currentSiteId) {\n                        this.setSiteConfig(siteId);\n                    }\n                });\n\n                return promise;\n            });\n        });\n    }\n\n    /**\n     * Store the config of a site.\n     *\n     * @param {String} siteId Site ID.\n     * @return {Promise<any>} Promise resolved when the config is loaded for the site.\n     */\n    protected setSiteConfig(siteId: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (site.getStoredConfig() || !site.wsAvailable('tool_mobile_get_config')) {\n                // Site already has the config or it cannot be retrieved. Stop.\n                return;\n            }\n\n            // Get the site config.\n            return site.getConfig().then((config) => {\n                return this.sitesProvider.addSite(\n                    site.getId(), site.getURL(), site.getToken(), site.getInfo(), site.getPrivateToken(), config);\n            }).catch(() => {\n                // Ignore errors.\n            });\n        });\n    }\n\n    /**\n     * The data stored for offline discussions and posts changed its format. Adapt the entries already stored.\n     * Since it can be slow, we'll only block migrating the db of current site, the rest will be in background.\n     *\n     * @return {Promise<any>} Promise resolved when the db is migrated.\n     */\n    protected adaptForumOfflineStores(): Promise<any> {\n        // @todo: Implement it once Forum addon is implemented.\n        return Promise.resolve();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/update-manager.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreSettingsDelegate } from './providers/delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        CoreSettingsDelegate\n    ]\n})\nexport class CoreSettingsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/settings/settings.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreSitePluginsProvider } from './providers/siteplugins';\nimport { CoreSitePluginsHelperProvider } from './providers/helper';\nimport { CoreSitePluginsComponentsModule } from './components/components.module';\n\n// List of providers.\nexport const CORE_SITEPLUGINS_PROVIDERS = [\n    CoreSitePluginsProvider,\n    CoreSitePluginsHelperProvider\n];\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        CoreSitePluginsComponentsModule\n    ],\n    providers: CORE_SITEPLUGINS_PROVIDERS\n})\nexport class CoreSitePluginsModule {\n    constructor(helper: CoreSitePluginsHelperProvider) {\n        // Inject the helper even if it isn't used so it's instantiated.\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/siteplugins.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLangProvider } from '@providers/lang';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSite } from '@classes/site';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreSitePluginsProvider } from './siteplugins';\nimport { CoreCompileProvider } from '@core/compile/providers/compile';\n\n// Delegates\nimport { CoreMainMenuDelegate } from '@core/mainmenu/providers/delegate';\nimport { CoreCourseModuleDelegate } from '@core/course/providers/module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@core/course/providers/module-prefetch-delegate';\nimport { CoreCourseOptionsDelegate } from '@core/course/providers/options-delegate';\nimport { CoreCourseFormatDelegate } from '@core/course/providers/format-delegate';\nimport { CoreUserDelegate } from '@core/user/providers/user-delegate';\nimport { CoreUserProfileFieldDelegate } from '@core/user/providers/user-profile-field-delegate';\n\n// Handler classes.\nimport { CoreSitePluginsCourseFormatHandler } from '../classes/course-format-handler';\nimport { CoreSitePluginsCourseOptionHandler } from '../classes/course-option-handler';\nimport { CoreSitePluginsModuleHandler } from '../classes/module-handler';\nimport { CoreSitePluginsModulePrefetchHandler } from '../classes/module-prefetch-handler';\nimport { CoreSitePluginsMainMenuHandler } from '../classes/main-menu-handler';\nimport { CoreSitePluginsUserProfileHandler } from '../classes/user-handler';\nimport { CoreSitePluginsUserProfileFieldHandler } from '../classes/user-profile-field-handler';\n\n/**\n * Helper service to provide functionalities regarding site plugins. It basically has the features to load and register site\n * plugin.\n *\n * This code is split from CoreSitePluginsProvider to prevent circular dependencies.\n *\n * @todo: Support ViewChild and similar in site plugins. Possible solution: make components and directives inject the instance\n * inside the host DOM element?\n */\n@Injectable()\nexport class CoreSitePluginsHelperProvider {\n    protected logger;\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider,  private injector: Injector,\n            private mainMenuDelegate: CoreMainMenuDelegate, private moduleDelegate: CoreCourseModuleDelegate,\n            private userDelegate: CoreUserDelegate, private langProvider: CoreLangProvider,\n            private sitePluginsProvider: CoreSitePluginsProvider, private prefetchDelegate: CoreCourseModulePrefetchDelegate,\n            private compileProvider: CoreCompileProvider, private utils: CoreUtilsProvider,\n            private courseOptionsDelegate: CoreCourseOptionsDelegate, eventsProvider: CoreEventsProvider,\n            private courseFormatDelegate: CoreCourseFormatDelegate, private profileFieldDelegate: CoreUserProfileFieldDelegate,\n            private textUtils: CoreTextUtilsProvider) {\n        this.logger = logger.getInstance('CoreSitePluginsHelperProvider');\n\n        // Fetch the plugins on login.\n        eventsProvider.on(CoreEventsProvider.LOGIN, () => {\n            const siteId = this.sitesProvider.getCurrentSiteId();\n            this.fetchSitePlugins(siteId).then((plugins) => {\n                // Plugins fetched, check that site hasn't changed.\n                if (siteId == this.sitesProvider.getCurrentSiteId() && plugins.length) {\n                    // Site is still the same. Load the plugins and trigger the event.\n                    this.loadSitePlugins(plugins).then(() => {\n                        eventsProvider.trigger(CoreEventsProvider.SITE_PLUGINS_LOADED, {}, siteId);\n                    });\n\n                }\n            });\n        });\n\n        // Unload plugins on logout if any.\n        eventsProvider.on(CoreEventsProvider.LOGOUT, () => {\n            if (this.sitePluginsProvider.hasSitePluginsLoaded) {\n                // Temporary fix. Reload the page to unload all plugins.\n                window.location.reload();\n            }\n        });\n    }\n\n    /**\n     * Bootstrap a handler if it has some bootstrap method.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {any} handlerSchema Data about the handler.\n     * @return {Promise<any>} Promise resolved when done. It returns the results of the getContent call and the data returned by\n     *                        the bootstrap JS (if any).\n     */\n    protected bootstrapHandler(plugin: any, handlerSchema: any): Promise<any> {\n        if (!handlerSchema.bootstrap) {\n            return Promise.resolve({});\n        }\n\n        return this.executeMethodAndJS(plugin, handlerSchema.bootstrap);\n    }\n\n    /**\n     * Execute a get_content method and run its javascript (if any).\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} method The method to call.\n     * @return {Promise<any>} Promise resolved when done. It returns the results of the getContent call and the data returned by\n     *                        the JS (if any).\n     */\n    protected executeMethodAndJS(plugin: any, method: string): Promise<any> {\n        const siteId = this.sitesProvider.getCurrentSiteId(),\n            preSets = {getFromCache: false}; // Try to ignore cache.\n\n        return this.sitePluginsProvider.getContent(plugin.component, method, {}, preSets).then((result) => {\n            if (!result.javascript || this.sitesProvider.getCurrentSiteId() != siteId) {\n                // No javascript or site has changed, stop.\n                return result;\n            }\n\n            // Create a \"fake\" instance to hold all the libraries.\n            const instance = {};\n            this.compileProvider.injectLibraries(instance);\n\n            // Add some data of the WS call result.\n            const jsData = this.sitePluginsProvider.createDataForJS(result);\n            for (const name in jsData) {\n                instance[name] = jsData[name];\n            }\n\n            // Now execute the javascript using this instance.\n            result.jsResult = this.compileProvider.executeJavascript(instance, result.javascript);\n\n            return result;\n        });\n    }\n\n    /**\n     * Fetch site plugins.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<any[]>} Promise resolved when done. Returns the list of plugins to load.\n     */\n    fetchSitePlugins(siteId?: string): Promise<any[]> {\n        const plugins = [];\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            if (!this.sitePluginsProvider.isGetContentAvailable(site)) {\n                // Cannot load site plugins, so there's no point to fetch them.\n                return plugins;\n            }\n\n            // Get the list of plugins. Try not to use cache.\n            return site.read('tool_mobile_get_plugins_supporting_mobile', {}, { getFromCache: false }).then((data) => {\n                data.plugins.forEach((plugin: any) => {\n                    // Check if it's a site plugin and it's enabled.\n                    if (this.isSitePluginEnabled(plugin, site)) {\n                        plugins.push(plugin);\n                    }\n                });\n\n                return plugins;\n            });\n        });\n    }\n\n    /**\n     * Given an addon name, return the prefix to add to its string keys.\n     *\n     * @param {string} addon Name of the addon (plugin.addon).\n     * @return {string} Prefix.\n     */\n    protected getPrefixForStrings(addon: string): string {\n        if (addon) {\n            return 'plugin.' + addon + '.';\n        }\n\n        return '';\n    }\n\n    /**\n     * Given an addon name and the key of a string, return the full string key (prefixed).\n     *\n     * @param {string} addon Name of the addon (plugin.addon).\n     * @param {string} key The key of the string.\n     * @return {string} Full string key.\n     */\n    protected getPrefixedString(addon: string, key: string): string {\n        return this.getPrefixForStrings(addon) + key;\n    }\n\n    /**\n     * Check if a certain plugin is a site plugin and it's enabled in a certain site.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {CoreSite} site Site affected.\n     * @return {boolean} Whether it's a site plugin and it's enabled.\n     */\n    isSitePluginEnabled(plugin: any, site: CoreSite): boolean {\n        if (!site.isFeatureDisabled('sitePlugin_' + plugin.component + '_' + plugin.addon) && plugin.handlers) {\n            // Site plugin not disabled. Check if it has handlers.\n            if (!plugin.parsedHandlers) {\n                plugin.parsedHandlers = this.textUtils.parseJSON(plugin.handlers, null,\n                    this.logger.error.bind(this.logger, 'Error parsing site plugin handlers'));\n            }\n\n            return !!(plugin.parsedHandlers && Object.keys(plugin.parsedHandlers).length);\n        }\n\n        return false;\n    }\n\n    /**\n     * Load the lang strings for a plugin.\n     *\n     * @param {any} plugin Data of the plugin.\n     */\n    loadLangStrings(plugin: any): void {\n        if (!plugin.parsedLang) {\n            return;\n        }\n\n        for (const lang in plugin.parsedLang) {\n            const prefix = this.getPrefixForStrings(plugin.addon);\n\n            this.langProvider.addSitePluginsStrings(lang, plugin.parsedLang[lang], prefix);\n        }\n    }\n\n    /**\n     * Load a site plugin.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @return {Promise<any>} Promise resolved when loaded.\n     */\n    loadSitePlugin(plugin: any): Promise<any> {\n        const promises = [];\n\n        this.logger.debug('Load site plugin:', plugin);\n\n        if (!plugin.parsedHandlers) {\n            plugin.parsedHandlers = this.textUtils.parseJSON(plugin.handlers, null,\n                this.logger.error.bind(this.logger, 'Error parsing site plugin handlers'));\n        }\n        if (!plugin.parsedLang && plugin.lang) {\n            plugin.parsedLang = this.textUtils.parseJSON(plugin.lang, null,\n                this.logger.error.bind(this.logger, 'Error parsing site plugin lang'));\n        }\n\n        this.sitePluginsProvider.hasSitePluginsLoaded = true;\n\n        // Register lang strings.\n        this.loadLangStrings(plugin);\n\n        // Register all the handlers.\n        for (const name in plugin.parsedHandlers) {\n            promises.push(this.registerHandler(plugin, name, plugin.parsedHandlers[name]));\n        }\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Load site plugins.\n     *\n     * @param {any[]} plugins The plugins to load.\n     * @return {Promise<any>} Promise resolved when loaded.\n     */\n    loadSitePlugins(plugins: any[]): Promise<any> {\n        const promises = [];\n\n        plugins.forEach((plugin) => {\n            promises.push(this.loadSitePlugin(plugin));\n        });\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Register a site plugin handler in the right delegate.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} handlerName Name of the handler in the plugin.\n     * @param {any} handlerSchema Data about the handler.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    registerHandler(plugin: any, handlerName: string, handlerSchema: any): Promise<any> {\n\n        // Wait for the bootstrap JS to be executed.\n        return this.bootstrapHandler(plugin, handlerSchema).then((result) => {\n            let promise;\n\n            switch (handlerSchema.delegate) {\n                case 'CoreMainMenuDelegate':\n                    promise = Promise.resolve(this.registerMainMenuHandler(plugin, handlerName, handlerSchema, result));\n                    break;\n\n                case 'CoreCourseModuleDelegate':\n                    promise = Promise.resolve(this.registerModuleHandler(plugin, handlerName, handlerSchema, result));\n                    break;\n\n                case 'CoreUserDelegate':\n                    promise = Promise.resolve(this.registerUserProfileHandler(plugin, handlerName, handlerSchema, result));\n                    break;\n\n                case 'CoreCourseOptionsDelegate':\n                    promise = Promise.resolve(this.registerCourseOptionHandler(plugin, handlerName, handlerSchema, result));\n                    break;\n\n                case 'CoreCourseFormatDelegate':\n                    promise = Promise.resolve(this.registerCourseFormatHandler(plugin, handlerName, handlerSchema, result));\n                    break;\n\n                case 'CoreUserProfileFieldDelegate':\n                    promise = Promise.resolve(this.registerUserProfileFieldHandler(plugin, handlerName, handlerSchema, result));\n                    break;\n\n                default:\n                    // Nothing to do.\n                    promise = Promise.resolve();\n            }\n\n            return promise.then((uniqueName) => {\n                if (uniqueName) {\n                    // Store the handler data.\n                    this.sitePluginsProvider.setSitePluginHandler(uniqueName, {\n                        plugin: plugin,\n                        handlerName: handlerName,\n                        handlerSchema: handlerSchema,\n                        bootstrapResult: result\n                    });\n                }\n            });\n        }).catch((err) => {\n            this.logger.error('Error executing bootstrap method', handlerSchema.bootstrap, err);\n        });\n    }\n\n    /**\n     * Given a handler in a plugin, register it in the course format delegate.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} handlerName Name of the handler in the plugin.\n     * @param {any} handlerSchema Data about the handler.\n     * @param {any} bootstrapResult Result of the bootstrap WS call.\n     * @return {string} A string to identify the handler.\n     */\n    protected registerCourseFormatHandler(plugin: any, handlerName: string, handlerSchema: any, bootstrapResult: any): string {\n        this.logger.debug('Register site plugin in course format delegate:', plugin, handlerSchema, bootstrapResult);\n\n        // Create and register the handler.\n        const formatName = plugin.component.replace('format_', '');\n        this.courseFormatDelegate.registerHandler(new CoreSitePluginsCourseFormatHandler(formatName, handlerSchema));\n\n        return formatName;\n    }\n\n    /**\n     * Given a handler in an plugin, register it in the course options delegate.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} handlerName Name of the handler in the plugin.\n     * @param {any} handlerSchema Data about the handler.\n     * @param {any} bootstrapResult Result of the bootstrap WS call.\n     * @return {string} A string to identify the handler.\n     */\n    protected registerCourseOptionHandler(plugin: any, handlerName: string, handlerSchema: any, bootstrapResult: any): string {\n        if (!handlerSchema.displaydata) {\n            // Required data not provided, stop.\n            this.logger.warn('Ignore site plugin because it doesn\\'t provide displaydata', plugin, handlerSchema);\n\n            return;\n        }\n\n        this.logger.debug('Register site plugin in course option delegate:', plugin, handlerSchema, bootstrapResult);\n\n        // Create and register the handler.\n        const uniqueName = this.sitePluginsProvider.getHandlerUniqueName(plugin, handlerName),\n            prefixedTitle = this.getPrefixedString(plugin.addon, handlerSchema.displaydata.title);\n\n        this.courseOptionsDelegate.registerHandler(new CoreSitePluginsCourseOptionHandler(uniqueName, prefixedTitle, plugin,\n                handlerSchema, bootstrapResult, this.sitePluginsProvider));\n\n        return uniqueName;\n    }\n\n    /**\n     * Given a handler in an plugin, register it in the main menu delegate.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} handlerName Name of the handler in the plugin.\n     * @param {any} handlerSchema Data about the handler.\n     * @param {any} bootstrapResult Result of the bootstrap WS call.\n     * @return {string} A string to identify the handler.\n     */\n    protected registerMainMenuHandler(plugin: any, handlerName: string, handlerSchema: any, bootstrapResult: any): string {\n        if (!handlerSchema.displaydata) {\n            // Required data not provided, stop.\n            this.logger.warn('Ignore site plugin because it doesn\\'t provide displaydata', plugin, handlerSchema);\n\n            return;\n        }\n\n        this.logger.debug('Register site plugin in main menu delegate:', plugin, handlerSchema, bootstrapResult);\n\n        // Create and register the handler.\n        const uniqueName = this.sitePluginsProvider.getHandlerUniqueName(plugin, handlerName),\n            prefixedTitle = this.getPrefixedString(plugin.addon, handlerSchema.displaydata.title);\n\n        this.mainMenuDelegate.registerHandler(\n                new CoreSitePluginsMainMenuHandler(uniqueName, prefixedTitle, plugin, handlerSchema, bootstrapResult));\n\n        return uniqueName;\n    }\n\n    /**\n     * Given a handler in an plugin, register it in the module delegate.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} handlerName Name of the handler in the plugin.\n     * @param {any} handlerSchema Data about the handler.\n     * @param {any} bootstrapResult Result of the bootstrap WS call.\n     * @return {string} A string to identify the handler.\n     */\n    protected registerModuleHandler(plugin: any, handlerName: string, handlerSchema: any, bootstrapResult: any): string {\n        if (!handlerSchema.displaydata) {\n            // Required data not provided, stop.\n            this.logger.warn('Ignore site plugin because it doesn\\'t provide displaydata', plugin, handlerSchema);\n\n            return;\n        }\n\n        this.logger.debug('Register site plugin in module delegate:', plugin, handlerSchema, bootstrapResult);\n\n        // Create and register the handler.\n        const modName = plugin.component.replace('mod_', '');\n\n        this.moduleDelegate.registerHandler(new CoreSitePluginsModuleHandler(modName, handlerSchema));\n\n        if (handlerSchema.offlinefunctions && Object.keys(handlerSchema.offlinefunctions).length) {\n            // Register the prefetch handler.\n            this.prefetchDelegate.registerHandler(new CoreSitePluginsModulePrefetchHandler(\n                this.injector, this.sitePluginsProvider, plugin.component, modName, handlerSchema));\n        }\n\n        return modName;\n    }\n\n    /**\n     * Given a handler in an plugin, register it in the user profile delegate.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} handlerName Name of the handler in the plugin.\n     * @param {any} handlerSchema Data about the handler.\n     * @param {any} bootstrapResult Result of the bootstrap WS call.\n     * @return {string} A string to identify the handler.\n     */\n    protected registerUserProfileHandler(plugin: any, handlerName: string, handlerSchema: any, bootstrapResult: any): string {\n        if (!handlerSchema.displaydata) {\n            // Required data not provided, stop.\n            this.logger.warn('Ignore site plugin because it doesn\\'t provide displaydata', plugin, handlerSchema);\n\n            return;\n        }\n\n        this.logger.debug('Register site plugin in user profile delegate:', plugin, handlerSchema, bootstrapResult);\n\n        // Create and register the handler.\n        const uniqueName = this.sitePluginsProvider.getHandlerUniqueName(plugin, handlerName),\n            prefixedTitle = this.getPrefixedString(plugin.addon, handlerSchema.displaydata.title);\n\n        this.userDelegate.registerHandler(new CoreSitePluginsUserProfileHandler(uniqueName, prefixedTitle, plugin, handlerSchema,\n                bootstrapResult, this.sitePluginsProvider));\n\n        return uniqueName;\n    }\n\n    /**\n     * Given a handler in an plugin, register it in the user profile field delegate.\n     *\n     * @param {any} plugin Data of the plugin.\n     * @param {string} handlerName Name of the handler in the plugin.\n     * @param {any} handlerSchema Data about the handler.\n     * @param {any} bootstrapResult Result of the bootstrap WS call.\n     * @return {string|Promise<string>} A string (or a promise resolved with a string) to identify the handler.\n     */\n    protected registerUserProfileFieldHandler(plugin: any, handlerName: string, handlerSchema: any, bootstrapResult: any)\n            : string | Promise<string> {\n        if (!handlerSchema.method) {\n            // Required data not provided, stop.\n            this.logger.warn('Ignore site plugin because it doesn\\'t provide method', plugin, handlerSchema);\n\n            return;\n        }\n\n        this.logger.debug('Register site plugin in user profile field delegate:', plugin, handlerSchema, bootstrapResult);\n\n        // Execute the main method and its JS. The template returned will be used in the profile field component.\n        return this.executeMethodAndJS(plugin, handlerSchema.method).then((result) => {\n            // Create and register the handler.\n            const fieldType = plugin.component.replace('profilefield_', ''),\n                fieldHandler = new CoreSitePluginsUserProfileFieldHandler(fieldType);\n\n            // Store in handlerSchema some data required by the component.\n            handlerSchema.methodTemplates = result.templates;\n            handlerSchema.methodJSResult = result.jsResult;\n\n            if (result && result.jsResult) {\n                // Override default handler functions with the result of the method JS.\n                for (const property in fieldHandler) {\n                    if (property != 'constructor' && typeof fieldHandler[property] == 'function' &&\n                            typeof result.jsResult[property] == 'function') {\n                        fieldHandler[property] = result.jsResult[property].bind(fieldHandler);\n                    }\n                }\n            }\n\n            this.profileFieldDelegate.registerHandler(fieldHandler);\n\n            return fieldType;\n        }).catch((err) => {\n            this.logger.error('Error executing main method', handlerSchema.method, err);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/providers/helper.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector } from '@angular/core';\nimport { CoreCourseFormatHandler } from '@core/course/providers/format-delegate';\nimport { CoreSitePluginsBaseHandler } from './base-handler';\nimport { CoreSitePluginsCourseFormatComponent } from '../components/course-format/course-format';\n\n/**\n * Handler to support a course format using a site plugin.\n */\nexport class CoreSitePluginsCourseFormatHandler extends CoreSitePluginsBaseHandler implements CoreCourseFormatHandler {\n\n    constructor(name: string, protected handlerSchema: any) {\n        super(name);\n    }\n\n    /**\n     * Whether it allows seeing all sections at the same time. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether it can view all sections.\n     */\n    canViewAllSections(course: any): boolean {\n        return typeof this.handlerSchema.canviewallsections != 'undefined' ? this.handlerSchema.canviewallsections : true;\n    }\n\n    /**\n     * Whether the option to enable section/module download should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether the option to enable section/module download should be displayed.\n     */\n    displayEnableDownload(course: any): boolean {\n        return typeof this.handlerSchema.displayenabledownload != 'undefined' ? this.handlerSchema.displayenabledownload : true;\n    }\n\n    /**\n     * Whether the default section selector should be displayed. Defaults to true.\n     *\n     * @param {any} course The course to check.\n     * @type {boolean} Whether the default section selector should be displayed.\n     */\n    displaySectionSelector(course: any): boolean {\n        return typeof this.handlerSchema.displaysectionselector != 'undefined' ? this.handlerSchema.displaysectionselector : true;\n    }\n\n    /**\n     * Return the Component to use to display the course format instead of using the default one.\n     * Use it if you want to display a format completely different from the default one.\n     * If you want to customize the default format there are several methods to customize parts of it.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course to render.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getCourseFormatComponent(injector: Injector, course: any): any | Promise<any> {\n        if (this.handlerSchema.method) {\n            return CoreSitePluginsCourseFormatComponent;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/course-format-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector } from '@angular/core';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreCourseOptionsHandler, CoreCourseOptionsHandlerData } from '@core/course/providers/options-delegate';\nimport { CoreSitePluginsBaseHandler } from './base-handler';\nimport { CoreSitePluginsCourseOptionComponent } from '../components/course-option/course-option';\n\n/**\n * Handler to display a site plugin in course options.\n */\nexport class CoreSitePluginsCourseOptionHandler extends CoreSitePluginsBaseHandler implements CoreCourseOptionsHandler {\n    priority: number;\n\n    constructor(name: string, protected title: string, protected plugin: any, protected handlerSchema: any,\n            protected bootstrapResult: any, protected sitePluginsProvider: CoreSitePluginsProvider) {\n        super(name);\n\n        this.priority = handlerSchema.priority;\n    }\n\n    /**\n     * Whether or not the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} accessData Access type and data. Default, guest, ...\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabledForCourse(courseId: number, accessData: any, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        return this.sitePluginsProvider.isHandlerEnabledForCourse(\n                courseId, this.handlerSchema.restricttoenrolledcourses, this.bootstrapResult.restrict);\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @param {Injector} injector Injector.\n     * @param {number} courseId The course ID.\n     * @return {CoreCourseOptionsHandlerData|Promise<CoreCourseOptionsHandlerData>} Data or promise resolved with the data.\n     */\n    getDisplayData(injector: Injector, courseId: number): CoreCourseOptionsHandlerData | Promise<CoreCourseOptionsHandlerData> {\n        return {\n            title: this.title,\n            class: this.handlerSchema.displaydata.class,\n            component: CoreSitePluginsCourseOptionComponent,\n            componentData: {\n                handlerUniqueName: this.name\n            }\n        };\n    }\n\n    /**\n     * Called when a course is downloaded. It should prefetch all the data to be able to see the plugin in offline.\n     *\n     * @param {any} course The course.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    prefetch(course: any): Promise<any> {\n        const args = {\n                courseid: course.id,\n            },\n            component = this.plugin.component;\n\n        return this.sitePluginsProvider.prefetchFunctions(component, args, this.handlerSchema, course.id, undefined, true);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/course-option-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector } from '@angular/core';\nimport { NavController, NavOptions } from 'ionic-angular';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@core/course/providers/module-delegate';\nimport { CoreSitePluginsBaseHandler } from './base-handler';\nimport { CoreSitePluginsModuleIndexComponent } from '../components/module-index/module-index';\n\n/**\n * Handler to support a module using a site plugin.\n */\nexport class CoreSitePluginsModuleHandler extends CoreSitePluginsBaseHandler implements CoreCourseModuleHandler {\n    priority: number;\n\n    constructor(name: string, protected handlerSchema: any) {\n        super(name);\n    }\n\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getData(module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData {\n        const hasOffline = !!(this.handlerSchema.offlinefunctions && Object.keys(this.handlerSchema.offlinefunctions).length),\n            showDowloadButton = this.handlerSchema.downloadbutton;\n\n        return {\n            title: module.name,\n            icon: this.handlerSchema.displaydata.icon,\n            class: this.handlerSchema.displaydata.class,\n            showDownloadButton: typeof showDowloadButton != 'undefined' ? showDowloadButton : hasOffline,\n            action: (event: Event, navCtrl: NavController, module: any, courseId: number, options: NavOptions): void => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                navCtrl.push('CoreSitePluginsModuleIndexPage', {\n                    title: module.name,\n                    module: module,\n                    courseId: courseId\n                }, options);\n            }\n        };\n    }\n\n    /**\n     * Get the component to render the module. This is needed to support singleactivity course format.\n     * The component returned must implement CoreCourseModuleMainComponent.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getMainComponent(injector: Injector, course: any, module: any): any | Promise<any> {\n        return CoreSitePluginsModuleIndexComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/module-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector } from '@angular/core';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreCourseModulePrefetchHandlerBase } from '@core/course/classes/module-prefetch-handler';\n\n/**\n * Handler to prefetch a module site plugin.\n */\nexport class CoreSitePluginsModulePrefetchHandler extends CoreCourseModulePrefetchHandlerBase {\n    protected ROOT_CACHE_KEY = 'CoreSitePluginsModulePrefetchHandler:';\n\n    constructor(injector: Injector, protected sitePluginsProvider: CoreSitePluginsProvider, component: string, modName: string,\n            protected handlerSchema: any) {\n        super(injector);\n\n        this.component = component;\n        this.name = modName;\n        this.isResource = handlerSchema.isresource;\n\n        if (handlerSchema.updatesnames) {\n            try {\n                this.updatesNames = new RegExp(handlerSchema.updatesnames);\n            } catch (ex) {\n                // Ignore errors.\n            }\n        }\n    }\n\n    /**\n     * Download or prefetch the content.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. This is to keep the files\n     *                           relative paths and make the package work in an iframe. Undefined to download the files\n     *                           in the filepool root folder.\n     * @return {Promise<any>} Promise resolved when all content is downloaded. Data returned is not reliable.\n     */\n    downloadOrPrefetch(module: any, courseId: number, prefetch?: boolean, dirPath?: string): Promise<any> {\n        return this.prefetchPackage(module, courseId, false, this.downloadPrefetchPlugin.bind(this), undefined, prefetch, dirPath);\n    }\n\n    /**\n     * Download or prefetch the plugin, downloading the files and calling the needed WS.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {boolean} [single] True if we're downloading a single module, false if we're downloading a whole section.\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. @see downloadOrPrefetch.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected downloadPrefetchPlugin(module: any, courseId: number, single?: boolean, siteId?: string, prefetch?: boolean,\n            dirPath?: string): Promise<any> {\n        return this.sitesProvider.getSite(siteId).then((site) => {\n\n            const promises = [],\n                args = {\n                    courseid: courseId,\n                    cmid: module.id,\n                    userid: site.getUserId()\n                };\n\n            // Download the files (if any).\n            promises.push(this.downloadOrPrefetchFiles(site.id, module, courseId, prefetch, dirPath));\n\n            // Call all the offline functions.\n            promises.push(this.sitePluginsProvider.prefetchFunctions(this.component, args, this.handlerSchema, courseId,\n                    module, prefetch, dirPath, site));\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Download or prefetch the plugin files.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. @see downloadOrPrefetch.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected downloadOrPrefetchFiles(siteId: string, module: any, courseId: number, prefetch?: boolean, dirPath?: string)\n            : Promise<any> {\n        // Load module contents (ignore cache so we always have the latest data).\n        return this.loadContents(module, courseId, true).then(() => {\n            // Get the intro files.\n            return this.getIntroFiles(module, courseId);\n        }).then((introFiles) => {\n            const contentFiles = this.getContentDownloadableFiles(module),\n                promises = [];\n\n            if (dirPath) {\n                // Download intro files in filepool root folder.\n                promises.push(this.filepoolProvider.downloadOrPrefetchFiles(siteId, introFiles, prefetch, false,\n                    this.component, module.id));\n\n                // Download content files inside dirPath.\n                promises.push(this.filepoolProvider.downloadOrPrefetchFiles(siteId, contentFiles, prefetch, false,\n                    this.component, module.id, dirPath));\n            } else {\n                // No dirPath, download everything in filepool root folder.\n                const files = introFiles.concat(contentFiles);\n                promises.push(this.filepoolProvider.downloadOrPrefetchFiles(siteId, files, prefetch, false,\n                    this.component, module.id));\n            }\n\n            return Promise.all(promises);\n        });\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number): Promise<any> {\n        const promises = [],\n            currentSite = this.sitesProvider.getCurrentSite(),\n            siteId = currentSite.getId(),\n            args = {\n                courseid: courseId,\n                cmid: moduleId,\n                userid: currentSite.getUserId()\n            };\n\n        // Invalidate files and the module.\n        promises.push(this.filepoolProvider.invalidateFilesByComponent(siteId, this.component, moduleId));\n        promises.push(this.courseProvider.invalidateModule(moduleId, siteId));\n\n        // Also invalidate all the WS calls.\n        for (const method in this.handlerSchema.offlinefunctions) {\n            if (currentSite.wsAvailable(method)) {\n                // The method is a WS.\n                promises.push(currentSite.invalidateWsCacheForKey(this.sitePluginsProvider.getCallWSCacheKey(method, args)));\n            } else {\n                // It's a method to get content.\n                promises.push(this.sitePluginsProvider.invalidateContent(this.component, method, args));\n            }\n        }\n\n        return this.utils.allPromises(promises);\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} A boolean, or a promise resolved with a boolean, indicating if the handler is enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/module-prefetch-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { CoreMainMenuHandler, CoreMainMenuHandlerData } from '@core/mainmenu/providers/delegate';\nimport { CoreSitePluginsBaseHandler } from './base-handler';\n\n/**\n * Handler to display a site plugin in the main menu.\n */\nexport class CoreSitePluginsMainMenuHandler extends CoreSitePluginsBaseHandler implements CoreMainMenuHandler {\n    priority: number;\n\n    constructor(name: string, protected title: string, protected plugin: any, protected handlerSchema: any,\n            protected bootstrapResult: any) {\n        super(name);\n\n        this.priority = handlerSchema.priority;\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerData} Data.\n     */\n    getDisplayData(): CoreMainMenuHandlerData {\n        return {\n            title: this.title,\n            icon: this.handlerSchema.displaydata.icon,\n            class: this.handlerSchema.displaydata.class,\n            page: 'CoreSitePluginsPluginPage',\n            pageParams: {\n                title: this.title,\n                component: this.plugin.component,\n                method: this.handlerSchema.method,\n                bootstrapResult: this.bootstrapResult\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/main-menu-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NavController } from 'ionic-angular';\nimport { CoreUserDelegate, CoreUserProfileHandler, CoreUserProfileHandlerData } from '@core/user/providers/user-delegate';\nimport { CoreSitePluginsProvider } from '../providers/siteplugins';\nimport { CoreSitePluginsBaseHandler } from './base-handler';\n\n/**\n * Handler to display a site plugin in the user profile.\n */\nexport class CoreSitePluginsUserProfileHandler extends CoreSitePluginsBaseHandler implements CoreUserProfileHandler {\n    /**\n     * The highest priority is displayed first.\n     * @type {number}\n     */\n    priority: number;\n\n    /**\n     * A type should be specified among these:\n     * - TYPE_COMMUNICATION: will be displayed under the user avatar. Should have icon. Spinner not used.\n     * - TYPE_NEW_PAGE: will be displayed as a list of items. Should have icon. Spinner not used.\n     *     Default value if none is specified.\n     * - TYPE_ACTION: will be displayed as a button and should not redirect to any state. Spinner use is recommended.\n     * @type {string}\n     */\n    type: string;\n\n    constructor(name: string, protected title: string, protected plugin: any, protected handlerSchema: any,\n            protected bootstrapResult: any, protected sitePluginsProvider: CoreSitePluginsProvider) {\n        super(name);\n\n        this.priority = handlerSchema.priority;\n\n        // Only support TYPE_COMMUNICATION and TYPE_NEW_PAGE.\n        this.type = handlerSchema.type != CoreUserDelegate.TYPE_COMMUNICATION ?\n            CoreUserDelegate.TYPE_NEW_PAGE : CoreUserDelegate.TYPE_COMMUNICATION;\n    }\n\n    /**\n     * Whether or not the handler is enabled for a user.\n     * @param  {any}     user       User object.\n     * @param  {number}  courseId   Course ID where to show.\n     * @param  {any}     [navOptions] Navigation options for the course.\n     * @param  {any}     [admOptions] Admin options for the course.\n     * @return {boolean|Promise<boolean>}            Whether or not the handler is enabled for a user.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        // First check if it's enabled for the user.\n        const enabledForUser = this.sitePluginsProvider.isHandlerEnabledForUser(user.id, this.handlerSchema.restricttocurrentuser,\n                this.bootstrapResult.restrict);\n        if (!enabledForUser) {\n            return false;\n        }\n\n        // Enabled for user, check if it's enabled for the course.\n        return this.sitePluginsProvider.isHandlerEnabledForCourse(\n                courseId, this.handlerSchema.restricttoenrolledcourses, this.bootstrapResult.restrict);\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     * @param  {any}     user       User object.\n     * @param  {number}  courseId   Course ID where to show.\n     * @return {CoreUserProfileHandlerData}    Data to be shown.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData {\n        return {\n            title: this.title,\n            icon: this.handlerSchema.displaydata.icon,\n            class: this.handlerSchema.displaydata.class,\n            action: (event: Event, navCtrl: NavController, user: any, courseId?: number): void => {\n                event.preventDefault();\n                event.stopPropagation();\n\n                navCtrl.push('CoreSitePluginsPluginPage', {\n                    title: this.title,\n                    component: this.plugin.component,\n                    method: this.handlerSchema.method,\n                    args: {\n                        courseid: courseId,\n                        userid: user.id\n                    },\n                    bootstrapResult: this.bootstrapResult\n                });\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/user-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injector } from '@angular/core';\nimport { CoreUserProfileFieldHandler, CoreUserProfileFieldHandlerData } from '@core/user/providers/user-profile-field-delegate';\nimport { CoreSitePluginsBaseHandler } from './base-handler';\nimport { CoreSitePluginsUserProfileFieldComponent } from '../components/user-profile-field/user-profile-field';\n\n/**\n * Handler to display a site plugin in the user profile.\n */\nexport class CoreSitePluginsUserProfileFieldHandler extends CoreSitePluginsBaseHandler implements CoreUserProfileFieldHandler {\n\n    constructor(name: string) {\n        super(name);\n    }\n\n    /**\n     * Return the Component to use to display the user profile field.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(injector: Injector): any | Promise<any> {\n        return CoreSitePluginsUserProfileFieldComponent;\n    }\n\n    /**\n     * Get the data to send for the field based on the input data.\n     * @param  {any}     field          User field to get the data for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @param  {string}  [registerAuth] Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form Values.\n     * @return {Promise<CoreUserProfileFieldHandlerData>|CoreUserProfileFieldHandlerData}  Data to send for the field.\n     */\n    getData(field: any, signup: boolean, registerAuth: string, formValues: any):\n            Promise<CoreUserProfileFieldHandlerData> | CoreUserProfileFieldHandlerData {\n        // No getData function implemented, use a default behaviour.\n        const name = 'profile_field_' + field.shortname;\n\n        return {\n            type: field.type || field.datatype,\n            name: name,\n            value: formValues[name]\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/siteplugins/classes/user-profile-field-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CoreCompileProvider } from './providers/compile';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        CoreCompileProvider\n    ]\n})\nexport class CoreCompileModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/compile/compile.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonBadgesProvider } from './providers/badges';\nimport { AddonBadgesUserHandler } from './providers/user-handler';\nimport { AddonBadgesMyBadgesLinkHandler } from './providers/mybadges-link-handler';\nimport { AddonBadgesBadgeLinkHandler } from './providers/badge-link-handler';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreUserDelegate } from '@core/user/providers/user-delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        AddonBadgesProvider,\n        AddonBadgesUserHandler,\n        AddonBadgesMyBadgesLinkHandler,\n        AddonBadgesBadgeLinkHandler\n    ]\n})\nexport class AddonBadgesModule {\n    constructor(userDelegate: CoreUserDelegate, userHandler: AddonBadgesUserHandler,\n        contentLinksDelegate: CoreContentLinksDelegate, myBadgesLinkHandler: AddonBadgesMyBadgesLinkHandler,\n        badgeLinkHandler: AddonBadgesBadgeLinkHandler) {\n\n        userDelegate.registerHandler(userHandler);\n        contentLinksDelegate.registerHandler(myBadgesLinkHandler);\n        contentLinksDelegate.registerHandler(badgeLinkHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/badges.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreUserDelegate, CoreUserProfileHandler, CoreUserProfileHandlerData } from '@core/user/providers/user-delegate';\nimport { AddonBadgesProvider } from './badges';\n\n/**\n * Profile badges handler.\n */\n@Injectable()\nexport class AddonBadgesUserHandler implements CoreUserProfileHandler {\n    name = 'mmaBadges';\n    priority = 50;\n    type = CoreUserDelegate.TYPE_NEW_PAGE;\n\n    constructor(protected badgesProvider: AddonBadgesProvider) { }\n\n    /**\n     * Check if handler is enabled.\n     *\n     * @return {Promise<boolean>} Always enabled.\n     */\n    isEnabled(): Promise<boolean> {\n        return this.badgesProvider.isPluginEnabled();\n    }\n\n    /**\n     * Check if handler is enabled for this user in this context.\n     *\n     * @param {any} user     User to check.\n     * @param {number} courseId Course ID.\n     * @param  {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param  {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return  {boolean}   True if enabled, false otherwise.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean {\n\n        if (navOptions && typeof navOptions.badges != 'undefined') {\n            return navOptions.badges;\n        }\n\n        // If we reach here, it means we are opening the user site profile.\n        return true;\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreUserProfileHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData {\n        return {\n            icon: 'trophy',\n            title: 'addon.badges.badges',\n            class: '',\n            action: (event, navCtrl, user, courseId): void => {\n                event.preventDefault();\n                event.stopPropagation();\n                navCtrl.push('AddonBadgesUserBadgesPage', {courseId: courseId, userId: user.id });\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/providers/user-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\nimport { AddonBadgesProvider } from './badges';\n\n/**\n * Handler to treat links to user participants page.\n */\n@Injectable()\nexport class AddonBadgesMyBadgesLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'AddonBadgesMyBadgesLinkHandler';\n    featureName = '$mmUserDelegate_mmaBadges';\n    pattern = /\\/badges\\/mybadges\\.php/;\n\n    constructor(private badgesProvider: AddonBadgesProvider, private loginHelper: CoreLoginHelperProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n\n        return [{\n            action: (siteId, navCtrl?): void => {\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.loginHelper.redirect('AddonBadgesUserBadgesPage', {}, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n\n        return this.badgesProvider.isPluginEnabled(siteId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/providers/mybadges-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\nimport { AddonBadgesProvider } from './badges';\n\n/**\n * Handler to treat links to user participants page.\n */\n@Injectable()\nexport class AddonBadgesBadgeLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'AddonBadgesBadgeLinkHandler';\n    pattern = /\\/badges\\/badge\\.php.*([\\?\\&]hash=)/;\n\n    constructor(private badgesProvider: AddonBadgesProvider, private loginHelper: CoreLoginHelperProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n\n        return [{\n            action: (siteId, navCtrl?): void => {\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.loginHelper.redirect('AddonBadgesIssuedBadgePage', {courseId: 0, badgeHash: params.hash}, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n\n        return this.badgesProvider.isPluginEnabled(siteId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/providers/badge-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonCalendarProvider } from './providers/calendar';\nimport { AddonCalendarHelperProvider } from './providers/helper';\nimport { AddonCalendarMainMenuHandler } from './providers/mainmenu-handler';\nimport { CoreMainMenuDelegate } from '@core/mainmenu/providers/delegate';\nimport { CoreInitDelegate } from '@providers/init';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreLoginHelperProvider } from '@core/login/providers/helper';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        AddonCalendarProvider,\n        AddonCalendarHelperProvider,\n        AddonCalendarMainMenuHandler\n    ]\n})\nexport class AddonCalendarModule {\n    constructor(mainMenuDelegate: CoreMainMenuDelegate, calendarHandler: AddonCalendarMainMenuHandler,\n            initDelegate: CoreInitDelegate, calendarProvider: AddonCalendarProvider, loginHelper: CoreLoginHelperProvider,\n            localNotificationsProvider: CoreLocalNotificationsProvider) {\n        mainMenuDelegate.registerHandler(calendarHandler);\n\n        initDelegate.ready().then(() => {\n            calendarProvider.scheduleAllSitesEventsNotifications();\n        });\n\n        localNotificationsProvider.registerClick(AddonCalendarProvider.COMPONENT, (data) => {\n            if (data.eventid) {\n                initDelegate.ready().then(() => {\n                    calendarProvider.isDisabled(data.siteId).then((disabled) => {\n                        if (disabled) {\n                            // The calendar is disabled in the site, don't open it.\n                            return;\n                        }\n\n                        loginHelper.redirect('AddonCalendarListPage', {eventid: data.eventid}, data.siteId);\n                    });\n                });\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/calendar.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { AddonCalendarProvider } from './calendar';\nimport { CoreMainMenuHandler, CoreMainMenuHandlerData } from '@core/mainmenu/providers/delegate';\n\n/**\n * Handler to inject an option into main menu.\n */\n@Injectable()\nexport class AddonCalendarMainMenuHandler implements CoreMainMenuHandler {\n    name = 'AddonCalendar';\n    priority = 900;\n\n    constructor(private calendarProvider: AddonCalendarProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return !this.calendarProvider.isCalendarDisabledInSite();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHandlerData {\n        return {\n            icon: 'calendar',\n            title: 'addon.calendar.calendar',\n            page: 'AddonCalendarListPage',\n            class: 'addon-calendar-handler'\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/calendar/providers/mainmenu-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonCompetencyProvider } from './providers/competency';\nimport { AddonCompetencyHelperProvider } from './providers/helper';\nimport { AddonCompetencyCourseOptionHandler } from './providers/course-option-handler';\nimport { AddonCompetencyMainMenuHandler } from './providers/mainmenu-handler';\nimport { AddonCompetencyUserHandler } from './providers/user-handler';\nimport { AddonCompetencyComponentsModule } from './components/components.module';\nimport { CoreCourseOptionsDelegate } from '@core/course/providers/options-delegate';\nimport { CoreMainMenuDelegate } from '@core/mainmenu/providers/delegate';\nimport { CoreUserDelegate } from '@core/user/providers/user-delegate';\nimport { CoreUserProvider } from '@core/user/providers/user';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreCoursesProvider } from '@core/courses/providers/courses';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        AddonCompetencyComponentsModule\n    ],\n    providers: [\n        AddonCompetencyProvider,\n        AddonCompetencyHelperProvider,\n        AddonCompetencyCourseOptionHandler,\n        AddonCompetencyMainMenuHandler,\n        AddonCompetencyUserHandler\n    ]\n})\nexport class AddonCompetencyModule {\n    constructor(mainMenuDelegate: CoreMainMenuDelegate, mainMenuHandler: AddonCompetencyMainMenuHandler,\n            courseOptionsDelegate: CoreCourseOptionsDelegate, courseOptionHandler: AddonCompetencyCourseOptionHandler,\n            userDelegate: CoreUserDelegate, userHandler: AddonCompetencyUserHandler,\n            eventsProvider: CoreEventsProvider, sitesProvider: CoreSitesProvider) {\n\n        mainMenuDelegate.registerHandler(mainMenuHandler);\n        courseOptionsDelegate.registerHandler(courseOptionHandler);\n        userDelegate.registerHandler(userHandler);\n\n        eventsProvider.on(CoreEventsProvider.LOGOUT, () => {\n            courseOptionHandler.clearCoursesNavCache();\n            userHandler.clearUsersNavCache();\n        }, sitesProvider.getCurrentSiteId());\n\n        eventsProvider.on(CoreCoursesProvider.EVENT_MY_COURSES_REFRESHED, () => {\n            courseOptionHandler.clearCoursesNavCache();\n        }, sitesProvider.getCurrentSiteId());\n\n        eventsProvider.on(CoreUserProvider.PROFILE_REFRESHED, () => {\n            userHandler.clearUsersNavCache();\n        }, sitesProvider.getCurrentSiteId());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/competency.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseOptionsHandler, CoreCourseOptionsHandlerData } from '@core/course/providers/options-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { AddonCompetencyCourseComponent } from '../components/course/course';\nimport { AddonCompetencyProvider } from '../providers/competency';\n\n/**\n * Course nav handler.\n */\n@Injectable()\nexport class AddonCompetencyCourseOptionHandler implements CoreCourseOptionsHandler {\n    name = 'AddonCompetency';\n    priority = 700;\n\n    protected coursesNavEnabledCache = {};\n\n    constructor(private competencyProvider: AddonCompetencyProvider) {}\n\n    /**\n     * Clear courses nav cache.\n     */\n    clearCoursesNavCache(): void {\n        this.coursesNavEnabledCache = {};\n    }\n\n    /**\n     * Whether or not the handler is enabled ona site level.\n     * @return {boolean|Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Whether or not the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} accessData Access type and data. Default, guest, ...\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabledForCourse(courseId: number, accessData: any, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        if (accessData && accessData.type == CoreCourseProvider.ACCESS_GUEST) {\n            return false; // Not enabled for guests.\n        }\n\n        if (navOptions && typeof navOptions.competencies != 'undefined') {\n            return navOptions.competencies;\n        }\n\n        if (typeof this.coursesNavEnabledCache[courseId] != 'undefined') {\n            return this.coursesNavEnabledCache[courseId];\n        }\n\n        return this.competencyProvider.isPluginForCourseEnabled(courseId).then((competencies) => {\n            const enabled = competencies ? !competencies.canmanagecoursecompetencies : false;\n            this.coursesNavEnabledCache[courseId] = enabled;\n\n            return enabled;\n        });\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @param {Injector} injector Injector.\n     * @param {number} courseId The course ID.\n     * @return {CoreCourseOptionsHandlerData|Promise<CoreCourseOptionsHandlerData>} Data or promise resolved with the data.\n     */\n    getDisplayData?(injector: Injector, courseId: number): CoreCourseOptionsHandlerData | Promise<CoreCourseOptionsHandlerData> {\n        return {\n            title: 'addon.competency.competencies',\n            class: 'addon-competency-course-handler',\n            component: AddonCompetencyCourseComponent\n        };\n    }\n\n    /**\n     * Should invalidate the data to determine if the handler is enabled for a certain course.\n     *\n     * @param {number} courseId The course ID.\n     * @param {any} [navOptions] Course navigation options for current user. See CoreCoursesProvider.getUserNavigationOptions.\n     * @param {any} [admOptions] Course admin options for current user. See CoreCoursesProvider.getUserAdministrationOptions.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    invalidateEnabledForCourse(courseId: number, navOptions?: any, admOptions?: any): Promise<any> {\n        if (navOptions && typeof navOptions.competencies != 'undefined') {\n            // No need to invalidate anything.\n            return Promise.resolve();\n        }\n\n        return this.competencyProvider.invalidateCourseCompetencies(courseId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/providers/course-option-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { AddonCompetencyProvider } from './competency';\nimport { CoreMainMenuHandler, CoreMainMenuHandlerData } from '@core/mainmenu/providers/delegate';\n\n/**\n * Handler to inject an option into main menu.\n */\n@Injectable()\nexport class AddonCompetencyMainMenuHandler implements CoreMainMenuHandler  {\n    name = 'AddonCompetency';\n    priority = 500;\n\n    constructor(private competencyProvider: AddonCompetencyProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        // Check the user has at least one learn plan available.\n        return this.competencyProvider.getLearningPlans().then((plans) => {\n            return plans.length > 0;\n        });\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHandlerData {\n        return {\n            icon: 'map',\n            title: 'addon.competency.myplans',\n            page: 'AddonCompetencyPlanListPage',\n            class: 'addon-competency-handler'\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/providers/mainmenu-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreUserDelegate, CoreUserProfileHandler, CoreUserProfileHandlerData } from '@core/user/providers/user-delegate';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { AddonCompetencyProvider } from './competency';\n\n/**\n * Profile competencies handler.\n */\n@Injectable()\nexport class AddonCompetencyUserHandler implements CoreUserProfileHandler {\n    name = 'AddonCompetency';\n    priority = 900;\n    type = CoreUserDelegate.TYPE_NEW_PAGE;\n    participantsNavEnabledCache = {};\n    usersNavEnabledCache = {};\n\n    constructor(private linkHelper: CoreContentLinksHelperProvider, protected sitesProvider: CoreSitesProvider,\n            private competencyProvider: AddonCompetencyProvider) {\n    }\n\n    /**\n     * Clear users nav cache.\n     */\n    clearUsersNavCache(): void {\n        this.participantsNavEnabledCache = {};\n        this.usersNavEnabledCache = {};\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     * @return {boolean|Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Check if handler is enabled for this user in this context.\n     *\n     * @param {any} user     User to check.\n     * @param {number} courseId Course ID.\n     * @param  {any} [navOptions] Course navigation options for current user. See $mmCourses#getUserNavigationOptions.\n     * @param  {any} [admOptions] Course admin options for current user. See $mmCourses#getUserAdministrationOptions.\n     * @return  {boolean|Promise<boolean>}   Promise resolved with true if enabled, resolved with false otherwise.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        if (courseId) {\n            const cacheKey = courseId + '.' + user.id;\n\n            // Link on a user course profile.\n            if (typeof this.participantsNavEnabledCache[cacheKey] != 'undefined') {\n                return this.participantsNavEnabledCache[cacheKey];\n            }\n\n            return this.competencyProvider.getCourseCompetencies(courseId, user.id).then((response) => {\n                const enabled = response.competencies.length > 0;\n                this.participantsNavEnabledCache[cacheKey] = enabled;\n\n                return enabled;\n            }).catch((message) => {\n                this.participantsNavEnabledCache[cacheKey] = false;\n\n                return false;\n            });\n        } else {\n            // Link on a user site profile.\n            if (typeof this.usersNavEnabledCache[user.id] != 'undefined') {\n                return this.usersNavEnabledCache[user.id];\n            }\n\n            return this.competencyProvider.getLearningPlans(user.id).then((plans) => {\n                // Check the user has at least one learn plan available.\n                const enabled = plans.length > 0;\n                this.usersNavEnabledCache[user.id] = enabled;\n\n                return enabled;\n            });\n        }\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreUserProfileHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData {\n        if (courseId) {\n            return {\n                icon: 'ribbon',\n                title: 'addon.competency.competencies',\n                class: 'addon-competency-handler',\n                action: (event, navCtrl, user, courseId): void => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                    this.linkHelper.goInSite(navCtrl, 'AddonCompetencyCourseCompetenciesPage', {courseId, userId: user.id});\n                }\n            };\n        } else {\n            return {\n                icon: 'map',\n                title: 'addon.competency.learningplans',\n                class: 'addon-competency-handler',\n                action: (event, navCtrl, user, courseId): void => {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                    this.linkHelper.goInSite(navCtrl, 'AddonCompetencyPlanListPage', {userId: user.id});\n                }\n            };\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/providers/user-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { NgModule } from '@angular/core';\nimport { AddonUserProfileFieldCheckboxModule } from './checkbox/checkbox.module';\nimport { AddonUserProfileFieldDatetimeModule } from './datetime/datetime.module';\nimport { AddonUserProfileFieldMenuModule } from './menu/menu.module';\nimport { AddonUserProfileFieldTextModule } from './text/text.module';\nimport { AddonUserProfileFieldTextareaModule } from './textarea/textarea.module';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        AddonUserProfileFieldCheckboxModule,\n        AddonUserProfileFieldDatetimeModule,\n        AddonUserProfileFieldMenuModule,\n        AddonUserProfileFieldTextModule,\n        AddonUserProfileFieldTextareaModule\n    ],\n    providers: [\n    ],\n    exports: []\n})\nexport class AddonUserProfileFieldModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/userprofilefield.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddonUserProfileFieldCheckboxHandler } from './providers/handler';\nimport { CoreUserProfileFieldDelegate } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldCheckboxComponent } from './component/checkbox';\nimport { CoreComponentsModule } from '@components/components.module';\n\n@NgModule({\n    declarations: [\n        AddonUserProfileFieldCheckboxComponent\n    ],\n    imports: [\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule\n    ],\n    providers: [\n        AddonUserProfileFieldCheckboxHandler\n    ],\n    exports: [\n        AddonUserProfileFieldCheckboxComponent\n    ],\n    entryComponents: [\n        AddonUserProfileFieldCheckboxComponent\n    ]\n})\nexport class AddonUserProfileFieldCheckboxModule {\n    constructor(userProfileFieldDelegate: CoreUserProfileFieldDelegate, handler: AddonUserProfileFieldCheckboxHandler) {\n        userProfileFieldDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/checkbox/checkbox.module.ts","\n// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreUserProfileFieldHandler, CoreUserProfileFieldHandlerData } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldCheckboxComponent } from '../component/checkbox';\n\n/**\n * Checkbox user profile field handlers.\n */\n@Injectable()\nexport class AddonUserProfileFieldCheckboxHandler implements CoreUserProfileFieldHandler {\n    name = 'checkbox';\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Get the data to send for the field based on the input data.\n     *\n     * @param  {any}     field          User field to get the data for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @param  {string}  [registerAuth] Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form Values.\n     * @return {CoreUserProfileFieldHandlerData}  Data to send for the field.\n     */\n    getData(field: any, signup: boolean, registerAuth: string, formValues: any): CoreUserProfileFieldHandlerData {\n        const name = 'profile_field_' + field.shortname;\n\n        if (typeof formValues[name] != 'undefined') {\n            return {\n                type: 'checkbox',\n                name: name,\n                value: formValues[name] ? 1 : 0\n            };\n        }\n    }\n\n    /**\n     * Return the Component to use to display the user profile field.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(injector: Injector): any | Promise<any> {\n        return AddonUserProfileFieldCheckboxComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/checkbox/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddonUserProfileFieldDatetimeHandler } from './providers/handler';\nimport { CoreUserProfileFieldDelegate } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldDatetimeComponent } from './component/datetime';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\n\n@NgModule({\n    declarations: [\n        AddonUserProfileFieldDatetimeComponent\n    ],\n    imports: [\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CorePipesModule\n    ],\n    providers: [\n        AddonUserProfileFieldDatetimeHandler\n    ],\n    exports: [\n        AddonUserProfileFieldDatetimeComponent\n    ],\n    entryComponents: [\n        AddonUserProfileFieldDatetimeComponent\n    ]\n})\nexport class AddonUserProfileFieldDatetimeModule {\n    constructor(userProfileFieldDelegate: CoreUserProfileFieldDelegate, handler: AddonUserProfileFieldDatetimeHandler) {\n        userProfileFieldDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/datetime/datetime.module.ts","\n// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreUserProfileFieldHandler, CoreUserProfileFieldHandlerData } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldDatetimeComponent } from '../component/datetime';\n\n/**\n * Datetime user profile field handlers.\n */\n@Injectable()\nexport class AddonUserProfileFieldDatetimeHandler implements CoreUserProfileFieldHandler {\n    name = 'datetime';\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Get the data to send for the field based on the input data.\n     *\n     * @param  {any}     field          User field to get the data for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @param  {string}  [registerAuth] Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form Values.\n     * @return {CoreUserProfileFieldHandlerData}  Data to send for the field.\n     */\n    getData(field: any, signup: boolean, registerAuth: string, formValues: any): CoreUserProfileFieldHandlerData {\n        const name = 'profile_field_' + field.shortname;\n\n        if (formValues[name]) {\n            const milliseconds = new Date(formValues[name]).getTime();\n\n            return {\n                type: 'datetime',\n                name: 'profile_field_' + field.shortname,\n                value: Math.round(milliseconds / 1000)\n            };\n        }\n    }\n\n    /**\n     * Return the Component to use to display the user profile field.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(injector: Injector): any | Promise<any> {\n        return AddonUserProfileFieldDatetimeComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/datetime/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddonUserProfileFieldMenuHandler } from './providers/handler';\nimport { CoreUserProfileFieldDelegate } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldMenuComponent } from './component/menu';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\n\n@NgModule({\n    declarations: [\n        AddonUserProfileFieldMenuComponent\n    ],\n    imports: [\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule\n    ],\n    providers: [\n        AddonUserProfileFieldMenuHandler\n    ],\n    exports: [\n        AddonUserProfileFieldMenuComponent\n    ],\n    entryComponents: [\n        AddonUserProfileFieldMenuComponent\n    ]\n})\nexport class AddonUserProfileFieldMenuModule {\n    constructor(userProfileFieldDelegate: CoreUserProfileFieldDelegate, handler: AddonUserProfileFieldMenuHandler) {\n        userProfileFieldDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/menu/menu.module.ts","\n// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreUserProfileFieldHandler, CoreUserProfileFieldHandlerData } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldMenuComponent } from '../component/menu';\n\n/**\n * Menu user profile field handlers.\n */\n@Injectable()\nexport class AddonUserProfileFieldMenuHandler implements CoreUserProfileFieldHandler {\n    name = 'menu';\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Get the data to send for the field based on the input data.\n     *\n     * @param  {any}     field          User field to get the data for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @param  {string}  [registerAuth] Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form Values.\n     * @return {CoreUserProfileFieldHandlerData}  Data to send for the field.\n     */\n    getData(field: any, signup: boolean, registerAuth: string, formValues: any): CoreUserProfileFieldHandlerData {\n        const name = 'profile_field_' + field.shortname;\n\n        if (formValues[name]) {\n            return {\n                type: 'menu',\n                name: name,\n                value: formValues[name]\n            };\n        }\n    }\n\n    /**\n     * Return the Component to use to display the user profile field.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(injector: Injector): any | Promise<any> {\n        return AddonUserProfileFieldMenuComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/menu/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddonUserProfileFieldTextHandler } from './providers/handler';\nimport { CoreUserProfileFieldDelegate } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldTextComponent } from './component/text';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\n\n@NgModule({\n    declarations: [\n        AddonUserProfileFieldTextComponent\n    ],\n    imports: [\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule\n    ],\n    providers: [\n        AddonUserProfileFieldTextHandler\n    ],\n    exports: [\n        AddonUserProfileFieldTextComponent\n    ],\n    entryComponents: [\n        AddonUserProfileFieldTextComponent\n    ]\n})\nexport class AddonUserProfileFieldTextModule {\n    constructor(userProfileFieldDelegate: CoreUserProfileFieldDelegate, handler: AddonUserProfileFieldTextHandler) {\n        userProfileFieldDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/text/text.module.ts","\n// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreUserProfileFieldHandler, CoreUserProfileFieldHandlerData } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldTextComponent } from '../component/text';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\n\n/**\n * Text user profile field handlers.\n */\n@Injectable()\nexport class AddonUserProfileFieldTextHandler implements CoreUserProfileFieldHandler {\n    name = 'text';\n\n    constructor(private textUtils: CoreTextUtilsProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Get the data to send for the field based on the input data.\n     *\n     * @param  {any}     field          User field to get the data for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @param  {string}  [registerAuth] Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form Values.\n     * @return {CoreUserProfileFieldHandlerData}  Data to send for the field.\n     */\n    getData(field: any, signup: boolean, registerAuth: string, formValues: any): CoreUserProfileFieldHandlerData {\n        const name = 'profile_field_' + field.shortname;\n\n        return {\n            type: 'text',\n            name: name,\n            value: this.textUtils.cleanTags(formValues[name])\n        };\n    }\n\n    /**\n     * Return the Component to use to display the user profile field.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(injector: Injector): any | Promise<any> {\n        return AddonUserProfileFieldTextComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/text/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddonUserProfileFieldTextareaHandler } from './providers/handler';\nimport { CoreUserProfileFieldDelegate } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldTextareaComponent } from './component/textarea';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\n\n@NgModule({\n    declarations: [\n        AddonUserProfileFieldTextareaComponent\n    ],\n    imports: [\n        IonicModule,\n        TranslateModule.forChild(),\n        CoreComponentsModule,\n        CoreDirectivesModule\n    ],\n    providers: [\n        AddonUserProfileFieldTextareaHandler\n    ],\n    exports: [\n        AddonUserProfileFieldTextareaComponent\n    ],\n    entryComponents: [\n        AddonUserProfileFieldTextareaComponent\n    ]\n})\nexport class AddonUserProfileFieldTextareaModule {\n    constructor(userProfileFieldDelegate: CoreUserProfileFieldDelegate, handler: AddonUserProfileFieldTextareaHandler) {\n        userProfileFieldDelegate.registerHandler(handler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/textarea/textarea.module.ts","\n// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreUserProfileFieldHandler, CoreUserProfileFieldHandlerData } from '@core/user/providers/user-profile-field-delegate';\nimport { AddonUserProfileFieldTextareaComponent } from '../component/textarea';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\n\n/**\n * Textarea user profile field handlers.\n */\n@Injectable()\nexport class AddonUserProfileFieldTextareaHandler implements CoreUserProfileFieldHandler {\n    name = 'textarea';\n\n    constructor(private textUtils: CoreTextUtilsProvider) { }\n\n    /**\n     * Whether or not the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} True or promise resolved with true if enabled.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Get the data to send for the field based on the input data.\n     *\n     * @param  {any}     field          User field to get the data for.\n     * @param  {boolean} signup         True if user is in signup page.\n     * @param  {string}  [registerAuth] Register auth method. E.g. 'email'.\n     * @param  {any}     formValues     Form Values.\n     * @return {CoreUserProfileFieldHandlerData}  Data to send for the field.\n     */\n    getData(field: any, signup: boolean, registerAuth: string, formValues: any): CoreUserProfileFieldHandlerData {\n        const name = 'profile_field_' + field.shortname;\n\n        if (formValues[name]) {\n            let text = formValues[name] || '';\n            // Add some HTML to the message in case the user edited with textarea.\n            text = this.textUtils.formatHtmlLines(text);\n\n            return {\n                type: 'textarea',\n                name: name,\n                value: JSON.stringify({\n                    text: text,\n                    format: 1 // Always send this format.\n                })\n            };\n        }\n    }\n\n    /**\n     * Return the Component to use to display the user profile field.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getComponent(injector: Injector): any | Promise<any> {\n        return AddonUserProfileFieldTextareaComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/userprofilefield/textarea/providers/handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonFilesProvider } from './providers/files';\nimport { AddonFilesHelperProvider } from './providers/helper';\nimport { AddonFilesMainMenuHandler } from './providers/mainmenu-handler';\nimport { CoreMainMenuDelegate } from '@core/mainmenu/providers/delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        AddonFilesProvider,\n        AddonFilesHelperProvider,\n        AddonFilesMainMenuHandler\n    ]\n})\nexport class AddonFilesModule {\n    constructor(mainMenuDelegate: CoreMainMenuDelegate, filesHandler: AddonFilesMainMenuHandler) {\n        mainMenuDelegate.registerHandler(filesHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/files/files.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { AddonFilesProvider } from './files';\nimport { CoreMainMenuHandler, CoreMainMenuHandlerData } from '@core/mainmenu/providers/delegate';\n\n/**\n * Handler to inject an option into main menu.\n */\n@Injectable()\nexport class AddonFilesMainMenuHandler implements CoreMainMenuHandler {\n    name = 'AddonFiles';\n    priority = 400;\n\n    constructor(private filesProvider: AddonFilesProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.filesProvider.isPluginEnabled();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHandlerData {\n        return {\n            icon: 'folder',\n            title: 'addon.files.files',\n            page: 'AddonFilesListPage',\n            class: 'addon-files-handler'\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/files/providers/mainmenu-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonModBookComponentsModule } from './components/components.module';\nimport { AddonModBookProvider } from './providers/book';\nimport { AddonModBookModuleHandler } from './providers/module-handler';\nimport { AddonModBookLinkHandler } from './providers/link-handler';\nimport { AddonModBookPrefetchHandler } from './providers/prefetch-handler';\nimport { CoreCourseModuleDelegate } from '@core/course/providers/module-delegate';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@core/course/providers/module-prefetch-delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        AddonModBookComponentsModule\n    ],\n    providers: [\n        AddonModBookProvider,\n        AddonModBookModuleHandler,\n        AddonModBookLinkHandler,\n        AddonModBookPrefetchHandler\n    ]\n})\nexport class AddonModBookModule {\n    constructor(moduleDelegate: CoreCourseModuleDelegate, moduleHandler: AddonModBookModuleHandler,\n            contentLinksDelegate: CoreContentLinksDelegate, linkHandler: AddonModBookLinkHandler,\n            prefetchDelegate: CoreCourseModulePrefetchDelegate, prefetchHandler: AddonModBookPrefetchHandler) {\n        moduleDelegate.registerHandler(moduleHandler);\n        contentLinksDelegate.registerHandler(linkHandler);\n        prefetchDelegate.registerHandler(prefetchHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/book.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { NavController, NavOptions } from 'ionic-angular';\nimport { AddonModBookProvider } from './book';\nimport { AddonModBookIndexComponent } from '../components/index/index';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@core/course/providers/module-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Handler to support book modules.\n */\n@Injectable()\nexport class AddonModBookModuleHandler implements CoreCourseModuleHandler {\n    name = 'book';\n\n    constructor(protected bookProvider: AddonModBookProvider, private courseProvider: CoreCourseProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.bookProvider.isPluginEnabled();\n    }\n\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getData(module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData {\n        return {\n            icon: this.courseProvider.getModuleIconSrc('book'),\n            title: module.name,\n            class: 'addon-mod_book-handler',\n            showDownloadButton: true,\n            action(event: Event, navCtrl: NavController, module: any, courseId: number, options: NavOptions): void {\n                navCtrl.push('AddonModBookIndexPage', {module: module, courseId: courseId}, options);\n            }\n        };\n    }\n\n    /**\n     * Get the component to render the module. This is needed to support singleactivity course format.\n     * The component returned must implement CoreCourseModuleMainComponent.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getMainComponent(injector: Injector, course: any, module: any): any | Promise<any> {\n        return AddonModBookIndexComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/providers/module-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksModuleIndexHandler } from '@core/contentlinks/classes/module-index-handler';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { AddonModBookProvider } from './book';\n\n/**\n * Handler to treat links to book.\n */\n@Injectable()\nexport class AddonModBookLinkHandler extends CoreContentLinksModuleIndexHandler {\n    name = 'AddonModBookLinkHandler';\n\n    constructor(courseHelper: CoreCourseHelperProvider) {\n        super(courseHelper, AddonModBookProvider.COMPONENT, 'book');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/book/providers/link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonModLabelModuleHandler } from './providers/module-handler';\nimport { AddonModLabelLinkHandler } from './providers/link-handler';\nimport { CoreCourseModuleDelegate } from '@core/course/providers/module-delegate';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        AddonModLabelModuleHandler,\n        AddonModLabelLinkHandler\n    ]\n})\nexport class AddonModLabelModule {\n    constructor(moduleDelegate: CoreCourseModuleDelegate, moduleHandler: AddonModLabelModuleHandler,\n            contentLinksDelegate: CoreContentLinksDelegate, linkHandler: AddonModLabelLinkHandler) {\n        moduleDelegate.registerHandler(moduleHandler);\n        contentLinksDelegate.registerHandler(linkHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/label/label.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@core/course/providers/module-delegate';\n\n/**\n * Handler to support label modules.\n */\n@Injectable()\nexport class AddonModLabelModuleHandler implements CoreCourseModuleHandler {\n    name = 'label';\n\n    constructor() {\n        // Nothing to do.\n    }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getData(module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData {\n        // Remove the description from the module so it isn't rendered twice.\n        const title = module.description;\n        module.description = '';\n\n        return {\n            icon: '',\n            title: title,\n            class: 'addon-mod-label-handler'\n        };\n    }\n\n    /**\n     * Get the component to render the module. This is needed to support singleactivity course format.\n     * The component returned must implement CoreCourseModuleMainComponent.\n     * It's recommended to return the class of the component, but you can also return an instance of the component.\n     *\n     * @param {Injector} injector Injector.\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {any|Promise<any>} The component (or promise resolved with component) to use, undefined if not found.\n     */\n    getMainComponent(injector: Injector, course: any, module: any): any | Promise<any> {\n        // There's no need to implement this because label cannot be used in singleactivity course format.\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/label/providers/module-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksModuleIndexHandler } from '@core/contentlinks/classes/module-index-handler';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\n\n/**\n * Handler to treat links to label.\n */\n@Injectable()\nexport class AddonModLabelLinkHandler extends CoreContentLinksModuleIndexHandler {\n    name = 'AddonModLabelLinkHandler';\n\n    constructor(courseHelper: CoreCourseHelperProvider) {\n        super(courseHelper, 'mmaModLabel', 'label');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/label/providers/link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonModResourceComponentsModule } from './components/components.module';\nimport { AddonModResourceModuleHandler } from './providers/module-handler';\nimport { AddonModResourceProvider } from './providers/resource';\nimport { AddonModResourcePrefetchHandler } from './providers/prefetch-handler';\nimport { AddonModResourceLinkHandler } from './providers/link-handler';\nimport { AddonModResourcePluginFileHandler } from './providers/pluginfile-handler';\nimport { AddonModResourceHelperProvider } from './providers/helper';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreCourseModuleDelegate } from '@core/course/providers/module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@core/course/providers/module-prefetch-delegate';\nimport { CorePluginFileDelegate } from '@providers/plugin-file-delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        AddonModResourceComponentsModule\n    ],\n    providers: [\n        AddonModResourceProvider,\n        AddonModResourceModuleHandler,\n        AddonModResourceHelperProvider,\n        AddonModResourcePrefetchHandler,\n        AddonModResourceLinkHandler,\n        AddonModResourcePluginFileHandler\n    ]\n})\nexport class AddonModResourceModule {\n    constructor(moduleDelegate: CoreCourseModuleDelegate, moduleHandler: AddonModResourceModuleHandler,\n            prefetchDelegate: CoreCourseModulePrefetchDelegate, prefetchHandler: AddonModResourcePrefetchHandler,\n            contentLinksDelegate: CoreContentLinksDelegate, linkHandler: AddonModResourceLinkHandler,\n            pluginfileDelegate: CorePluginFileDelegate, pluginfileHandler: AddonModResourcePluginFileHandler) {\n        moduleDelegate.registerHandler(moduleHandler);\n        prefetchDelegate.registerHandler(prefetchHandler);\n        contentLinksDelegate.registerHandler(linkHandler);\n        pluginfileDelegate.registerHandler(pluginfileHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/resource.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { NavController, NavOptions } from 'ionic-angular';\nimport { AddonModResourceProvider } from './resource';\nimport { AddonModResourceHelperProvider } from './helper';\nimport { AddonModResourceIndexComponent } from '../components/index/index';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@core/course/providers/module-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { CoreMimetypeUtilsProvider } from '@providers/utils/mimetype';\n\n/**\n * Handler to support resource modules.\n */\n@Injectable()\nexport class AddonModResourceModuleHandler implements CoreCourseModuleHandler {\n    name = 'resource';\n\n    constructor(protected resourceProvider: AddonModResourceProvider, private courseProvider: CoreCourseProvider,\n            protected mimetypeUtils: CoreMimetypeUtilsProvider, private resourceHelper: AddonModResourceHelperProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.resourceProvider.isPluginEnabled();\n    }\n\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getData(module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData {\n        const handlerData = {\n            icon: this.courseProvider.getModuleIconSrc('resource'),\n            title: module.name,\n            class: 'addon-mod_resource-handler',\n            showDownloadButton: true,\n            action(event: Event, navCtrl: NavController, module: any, courseId: number, options: NavOptions): void {\n                navCtrl.push('AddonModResourceIndexPage', {module: module, courseId: courseId}, options);\n            },\n            buttons: [ {\n                hidden: !this.resourceHelper.isDisplayedInIframe(module),\n                icon: 'document',\n                label: 'addon.mod_resource.openthefile',\n                action: (event: Event, navCtrl: NavController, module: any, courseId: number): void => {\n                    this.hideOpenButton(module, courseId).then((hide) => {\n                        if (!hide) {\n                            this.resourceHelper.openModuleFile(module, courseId);\n                        }\n                    });\n                }\n            } ]\n        };\n\n        this.getIcon(module, courseId).then((icon) => {\n            handlerData.icon = icon;\n        });\n\n        this.hideOpenButton(module, courseId).then((hideOpenButton) => {\n            handlerData.buttons[0].hidden = hideOpenButton;\n        });\n\n        return handlerData;\n    }\n\n    /**\n     * Returns if contents are loaded to show open button.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @return {Promise<boolean>} Resolved when done.\n     */\n    protected hideOpenButton(module: any, courseId: number): Promise<boolean> {\n        return this.courseProvider.loadModuleContents(module, courseId).then(() => {\n            return this.resourceHelper.isDisplayedInIframe(module);\n        });\n    }\n\n    /**\n     * Returns the activity icon.\n     *\n     * @param {any} module        The module object.\n     * @param {number} courseId   The course ID.\n     * @return {Promise<string>}  Icon URL.\n     */\n    protected getIcon(module: any, courseId: number): Promise<string> {\n        return this.courseProvider.loadModuleContents(module, courseId).then(() => {\n            if (module.contents.length) {\n                const filename = module.contents[0].filename,\n                    extension = this.mimetypeUtils.getFileExtension(filename);\n                if (module.contents.length == 1 || (extension != 'html' && extension != 'htm')) {\n                    return this.mimetypeUtils.getFileIcon(filename);\n                }\n            }\n\n            return this.courseProvider.getModuleIconSrc('resource');\n        });\n    }\n\n    /**\n     * Get the component to render the module. This is needed to support singleactivity course format.\n     * The component returned must implement CoreCourseModuleMainComponent.\n     *\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {any} The component to use, undefined if not found.\n     */\n    getMainComponent(course: any, module: any): any {\n        return AddonModResourceIndexComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/providers/module-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksModuleIndexHandler } from '@core/contentlinks/classes/module-index-handler';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { AddonModResourceProvider } from './resource';\n\n/**\n * Handler to treat links to resource.\n */\n@Injectable()\nexport class AddonModResourceLinkHandler extends CoreContentLinksModuleIndexHandler {\n    name = 'AddonModResourceLinkHandler';\n\n    constructor(courseHelper: CoreCourseHelperProvider) {\n        super(courseHelper, AddonModResourceProvider.COMPONENT, 'resource');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/providers/link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CorePluginFileHandler } from '@providers/plugin-file-delegate';\n\n/**\n * Handler to treat links to resource.\n */\n@Injectable()\nexport class AddonModResourcePluginFileHandler implements CorePluginFileHandler {\n    name = 'AddonModResourcePluginFileHandler';\n\n    /**\n     * Return the RegExp to match the revision on pluginfile URLs.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {RegExp} RegExp to match the revision on pluginfile URLs.\n     */\n    getComponentRevisionRegExp(args: string[]): RegExp {\n        // Check filearea.\n        if (args[2] == 'content') {\n            // Component + Filearea + Revision\n            return new RegExp('/mod_resource/content/([0-9]+)/');\n        }\n    }\n\n    /**\n     * Should return the string to remove the revision on pluginfile url.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {string} String to remove the revision on pluginfile url.\n     */\n    getComponentRevisionReplace(args: string[]): string {\n        // Component + Filearea + Revision\n        return '/mod_resource/content/0/';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/resource/providers/pluginfile-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonModFolderProvider } from './providers/folder';\nimport { AddonModFolderHelperProvider } from './providers/helper';\nimport { AddonModFolderModuleHandler } from './providers/module-handler';\nimport { CoreCourseModuleDelegate } from '@core/course/providers/module-delegate';\nimport { AddonModFolderComponentsModule } from './components/components.module';\nimport { AddonModFolderPrefetchHandler } from './providers/prefetch-handler';\nimport { AddonModFolderLinkHandler } from './providers/link-handler';\nimport { AddonModFolderPluginFileHandler } from './providers/pluginfile-handler';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@core/course/providers/module-prefetch-delegate';\nimport { CorePluginFileDelegate } from '@providers/plugin-file-delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        AddonModFolderComponentsModule\n    ],\n    providers: [\n        AddonModFolderProvider,\n        AddonModFolderHelperProvider,\n        AddonModFolderModuleHandler,\n        AddonModFolderPrefetchHandler,\n        AddonModFolderLinkHandler,\n        AddonModFolderPluginFileHandler\n    ]\n})\nexport class AddonModFolderModule {\n    constructor(moduleDelegate: CoreCourseModuleDelegate, moduleHandler: AddonModFolderModuleHandler,\n            prefetchDelegate: CoreCourseModulePrefetchDelegate, prefetchHandler: AddonModFolderPrefetchHandler,\n            contentLinksDelegate: CoreContentLinksDelegate, linkHandler: AddonModFolderLinkHandler,\n            pluginfileDelegate: CorePluginFileDelegate, pluginfileHandler: AddonModFolderPluginFileHandler) {\n        moduleDelegate.registerHandler(moduleHandler);\n        prefetchDelegate.registerHandler(prefetchHandler);\n        contentLinksDelegate.registerHandler(linkHandler);\n        pluginfileDelegate.registerHandler(pluginfileHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/folder.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { NavController, NavOptions } from 'ionic-angular';\nimport { AddonModFolderIndexComponent } from '../components/index/index';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@core/course/providers/module-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Handler to support folder modules.\n */\n@Injectable()\nexport class AddonModFolderModuleHandler implements CoreCourseModuleHandler {\n    name = 'folder';\n\n    constructor(private courseProvider: CoreCourseProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return true;\n    }\n\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getData(module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData {\n        return {\n            icon: this.courseProvider.getModuleIconSrc('folder'),\n            title: module.name,\n            class: 'addon-mod_folder-handler',\n            showDownloadButton: true,\n            action(event: Event, navCtrl: NavController, module: any, courseId: number, options: NavOptions): void {\n                navCtrl.push('AddonModFolderIndexPage', {module: module, courseId: courseId}, options);\n            }\n        };\n    }\n\n    /**\n     * Get the component to render the module. This is needed to support singleactivity course format.\n     * The component returned must implement CoreCourseModuleMainComponent.\n     *\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {any} The component to use, undefined if not found.\n     */\n    getMainComponent(course: any, module: any): any {\n        return AddonModFolderIndexComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/providers/module-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable, Injector } from '@angular/core';\nimport { CoreCourseModulePrefetchHandlerBase } from '@core/course/classes/module-prefetch-handler';\nimport { AddonModFolderProvider } from './folder';\n\n/**\n * Handler to prefetch folders.\n */\n@Injectable()\nexport class AddonModFolderPrefetchHandler extends CoreCourseModulePrefetchHandlerBase {\n    name = 'folder';\n    component = AddonModFolderProvider.COMPONENT;\n    isResource = true;\n\n    constructor(injector: Injector, protected folderProvider: AddonModFolderProvider) {\n        super(injector);\n    }\n\n    /**\n     * Download or prefetch the content.\n     *\n     * @param {any} module The module object returned by WS.\n     * @param {number} courseId Course ID.\n     * @param {boolean} [prefetch] True to prefetch, false to download right away.\n     * @param {string} [dirPath] Path of the directory where to store all the content files. This is to keep the files\n     *                           relative paths and make the package work in an iframe. Undefined to download the files\n     *                           in the filepool root folder.\n     * @return {Promise<any>} Promise resolved when all content is downloaded. Data returned is not reliable.\n     */\n    downloadOrPrefetch(module: any, courseId: number, prefetch?: boolean, dirPath?: string): Promise<any> {\n        const promises = [];\n\n        promises.push(super.downloadOrPrefetch(module, courseId, prefetch));\n\n        if (this.folderProvider.isGetFolderWSAvailable()) {\n            promises.push(this.folderProvider.getFolder(courseId, module.id));\n        }\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * Invalidate the prefetched content.\n     *\n     * @param {number} moduleId The module ID.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when the data is invalidated.\n     */\n    invalidateContent(moduleId: number, courseId: number): Promise<any> {\n        return this.folderProvider.invalidateContent(moduleId, courseId);\n    }\n\n    /**\n     * Invalidate WS calls needed to determine module status.\n     *\n     * @param {any} module Module.\n     * @param {number} courseId Course ID the module belongs to.\n     * @return {Promise<any>} Promise resolved when invalidated.\n     */\n    invalidateModule(module: any, courseId: number): Promise<any> {\n        const promises = [];\n\n        promises.push(this.folderProvider.invalidateFolderData(courseId));\n        promises.push(this.courseProvider.invalidateModule(module.id));\n\n        return Promise.all(promises);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/providers/prefetch-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksModuleIndexHandler } from '@core/contentlinks/classes/module-index-handler';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { AddonModFolderProvider } from './folder';\n\n/**\n * Handler to treat links to resource.\n */\n@Injectable()\nexport class AddonModFolderLinkHandler extends CoreContentLinksModuleIndexHandler {\n    name = 'AddonModFolderLinkHandler';\n\n    constructor(courseHelper: CoreCourseHelperProvider) {\n        super(courseHelper, AddonModFolderProvider.COMPONENT, 'folder');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/providers/link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CorePluginFileHandler } from '@providers/plugin-file-delegate';\n\n/**\n * Handler to treat links to folder.\n */\n@Injectable()\nexport class AddonModFolderPluginFileHandler implements CorePluginFileHandler {\n    name = 'AddonModFolderPluginFileHandler';\n\n    /**\n     * Return the RegExp to match the revision on pluginfile URLs.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {RegExp} RegExp to match the revision on pluginfile URLs.\n     */\n    getComponentRevisionRegExp(args: string[]): RegExp {\n        // Check filearea.\n        if (args[2] == 'content') {\n            // Component + Filearea + Revision\n            return new RegExp('/mod_folder/content/([0-9]+)/');\n        }\n    }\n\n    /**\n     * Should return the string to remove the revision on pluginfile url.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {string} String to remove the revision on pluginfile url.\n     */\n    getComponentRevisionReplace(args: string[]): string {\n        // Component + Filearea + Revision\n        return '/mod_folder/content/0/';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/folder/providers/pluginfile-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonModPageComponentsModule } from './components/components.module';\nimport { AddonModPageModuleHandler } from './providers/module-handler';\nimport { AddonModPageProvider } from './providers/page';\nimport { AddonModPagePrefetchHandler } from './providers/prefetch-handler';\nimport { AddonModPageLinkHandler } from './providers/link-handler';\nimport { AddonModPagePluginFileHandler } from './providers/pluginfile-handler';\nimport { AddonModPageHelperProvider } from './providers/helper';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreCourseModuleDelegate } from '@core/course/providers/module-delegate';\nimport { CoreCourseModulePrefetchDelegate } from '@core/course/providers/module-prefetch-delegate';\nimport { CorePluginFileDelegate } from '@providers/plugin-file-delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        AddonModPageComponentsModule\n    ],\n    providers: [\n        AddonModPageProvider,\n        AddonModPageModuleHandler,\n        AddonModPageHelperProvider,\n        AddonModPagePrefetchHandler,\n        AddonModPageLinkHandler,\n        AddonModPagePluginFileHandler\n    ]\n})\nexport class AddonModPageModule {\n    constructor(moduleDelegate: CoreCourseModuleDelegate, moduleHandler: AddonModPageModuleHandler,\n            prefetchDelegate: CoreCourseModulePrefetchDelegate, prefetchHandler: AddonModPagePrefetchHandler,\n            contentLinksDelegate: CoreContentLinksDelegate, linkHandler: AddonModPageLinkHandler,\n            pluginfileDelegate: CorePluginFileDelegate, pluginfileHandler: AddonModPagePluginFileHandler) {\n        moduleDelegate.registerHandler(moduleHandler);\n        prefetchDelegate.registerHandler(prefetchHandler);\n        contentLinksDelegate.registerHandler(linkHandler);\n        pluginfileDelegate.registerHandler(pluginfileHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/page.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { NavController, NavOptions } from 'ionic-angular';\nimport { AddonModPageProvider } from './page';\nimport { AddonModPageIndexComponent } from '../components/index/index';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@core/course/providers/module-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\n\n/**\n * Handler to support page modules.\n */\n@Injectable()\nexport class AddonModPageModuleHandler implements CoreCourseModuleHandler {\n    name = 'page';\n\n    constructor(private courseProvider: CoreCourseProvider, protected pageProvider: AddonModPageProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean|Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.pageProvider.isPluginEnabled();\n    }\n\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getData(module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData {\n        return {\n            icon: this.courseProvider.getModuleIconSrc('page'),\n            title: module.name,\n            class: 'addon-mod_page-handler',\n            showDownloadButton: true,\n            action(event: Event, navCtrl: NavController, module: any, courseId: number, options: NavOptions): void {\n                navCtrl.push('AddonModPageIndexPage', {module: module, courseId: courseId}, options);\n            }\n        };\n    }\n\n    /**\n     * Get the component to render the module. This is needed to support singleactivity course format.\n     * The component returned must implement CoreCourseModuleMainComponent.\n     *\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {any} The component to use, undefined if not found.\n     */\n    getMainComponent(course: any, module: any): any {\n        return AddonModPageIndexComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/providers/module-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksModuleIndexHandler } from '@core/contentlinks/classes/module-index-handler';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { AddonModPageProvider } from './page';\n\n/**\n * Handler to treat links to resource.\n */\n@Injectable()\nexport class AddonModPageLinkHandler extends CoreContentLinksModuleIndexHandler {\n    name = 'AddonModPageLinkHandler';\n\n    constructor(courseHelper: CoreCourseHelperProvider) {\n        super(courseHelper, AddonModPageProvider.COMPONENT, 'page');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/providers/link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CorePluginFileHandler } from '@providers/plugin-file-delegate';\n\n/**\n * Handler to treat links to page.\n */\n@Injectable()\nexport class AddonModPagePluginFileHandler implements CorePluginFileHandler {\n    name = 'AddonModPagePluginFileHandler';\n\n    /**\n     * Return the RegExp to match the revision on pluginfile URLs.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {RegExp} RegExp to match the revision on pluginfile URLs.\n     */\n    getComponentRevisionRegExp(args: string[]): RegExp {\n        // Check filearea.\n        if (args[2] == 'content') {\n            // Component + Filearea + Revision\n            return new RegExp('/mod_page/content/([0-9]+)/');\n        }\n    }\n\n    /**\n     * Should return the string to remove the revision on pluginfile url.\n     *\n     * @param {string[]} args Arguments of the pluginfile URL defining component and filearea at least.\n     * @return {string} String to remove the revision on pluginfile url.\n     */\n    getComponentRevisionReplace(args: string[]): string {\n        // Component + Filearea + Revision\n        return '/mod_page/content/0/';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/page/providers/pluginfile-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonModUrlComponentsModule } from './components/components.module';\nimport { AddonModUrlModuleHandler } from './providers/module-handler';\nimport { AddonModUrlProvider } from './providers/url';\nimport { AddonModUrlLinkHandler } from './providers/link-handler';\nimport { AddonModUrlHelperProvider } from './providers/helper';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreCourseModuleDelegate } from '@core/course/providers/module-delegate';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n        AddonModUrlComponentsModule\n    ],\n    providers: [\n        AddonModUrlProvider,\n        AddonModUrlModuleHandler,\n        AddonModUrlHelperProvider,\n        AddonModUrlLinkHandler\n    ]\n})\nexport class AddonModUrlModule {\n    constructor(moduleDelegate: CoreCourseModuleDelegate, moduleHandler: AddonModUrlModuleHandler,\n            contentLinksDelegate: CoreContentLinksDelegate, linkHandler: AddonModUrlLinkHandler) {\n        moduleDelegate.registerHandler(moduleHandler);\n        contentLinksDelegate.registerHandler(linkHandler);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/url/url.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { NavController, NavOptions } from 'ionic-angular';\nimport { AddonModUrlIndexComponent } from '../components/index/index';\nimport { CoreCourseModuleHandler, CoreCourseModuleHandlerData } from '@core/course/providers/module-delegate';\nimport { CoreCourseProvider } from '@core/course/providers/course';\nimport { AddonModUrlProvider } from './url';\nimport { AddonModUrlHelperProvider } from './helper';\n\n/**\n * Handler to support url modules.\n */\n@Injectable()\nexport class AddonModUrlModuleHandler implements CoreCourseModuleHandler {\n    name = 'url';\n\n    constructor(private courseProvider: CoreCourseProvider, private urlProvider: AddonModUrlProvider,\n        private urlHelper: AddonModUrlHelperProvider) { }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /**\n     * Get the data required to display the module in the course contents view.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @param {number} sectionId The section ID.\n     * @return {CoreCourseModuleHandlerData} Data to render the module.\n     */\n    getData(module: any, courseId: number, sectionId: number): CoreCourseModuleHandlerData {\n        const handlerData = {\n            icon: this.courseProvider.getModuleIconSrc('url'),\n            title: module.name,\n            class: 'addon-mod_url-handler',\n            showDownloadButton: false,\n            action(event: Event, navCtrl: NavController, module: any, courseId: number, options: NavOptions): void {\n                navCtrl.push('AddonModUrlIndexPage', {module: module, courseId: courseId}, options);\n            },\n            buttons: [ {\n                hidden: !(module.contents && module.contents[0] && module.contents[0].fileurl),\n                icon: 'link',\n                label: 'core.openinbrowser',\n                action: (event: Event, navCtrl: NavController, module: any, courseId: number): void => {\n                    this.hideLinkButton(module, courseId).then((hide) => {\n                        if (!hide) {\n                            this.urlProvider.logView(module.instance).then(() => {\n                                this.courseProvider.checkModuleCompletion(courseId, module.completionstatus);\n                            });\n                            this.urlHelper.open(module.contents[0].fileurl);\n                        }\n                    });\n                }\n            } ]\n        };\n\n        this.hideLinkButton(module, courseId).then((hideButton) => {\n            handlerData.buttons[0].hidden = hideButton;\n        });\n\n        return handlerData;\n    }\n\n    /**\n     * Returns if contents are loaded to show link button.\n     *\n     * @param {any} module The module object.\n     * @param {number} courseId The course ID.\n     * @return {Promise<boolean>} Resolved when done.\n     */\n    protected hideLinkButton(module: any, courseId: number): Promise<boolean> {\n        return this.courseProvider.loadModuleContents(module, courseId).then(() => {\n            return !(module.contents && module.contents[0] && module.contents[0].fileurl);\n        });\n    }\n\n    /**\n     * Get the component to render the module. This is needed to support singleactivity course format.\n     * The component returned must implement CoreCourseModuleMainComponent.\n     *\n     * @param {any} course The course object.\n     * @param {any} module The module object.\n     * @return {any} The component to use, undefined if not found.\n     */\n    getMainComponent(course: any, module: any): any {\n        return AddonModUrlIndexComponent;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/url/providers/module-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksModuleIndexHandler } from '@core/contentlinks/classes/module-index-handler';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { AddonModUrlProvider } from './url';\n\n/**\n * Handler to treat links to url.\n */\n@Injectable()\nexport class AddonModUrlLinkHandler extends CoreContentLinksModuleIndexHandler {\n    name = 'AddonModUrlLinkHandler';\n\n    constructor(courseHelper: CoreCourseHelperProvider) {\n        super(courseHelper, AddonModUrlProvider.COMPONENT, 'url');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/url/providers/link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { Network } from '@ionic-native/network';\nimport { AddonMessagesProvider } from './providers/messages';\nimport { AddonMessagesOfflineProvider } from './providers/messages-offline';\nimport { AddonMessagesSyncProvider } from './providers/sync';\nimport { AddonMessagesMainMenuHandler } from './providers/mainmenu-handler';\nimport { CoreMainMenuDelegate } from '@core/mainmenu/providers/delegate';\nimport { CoreContentLinksDelegate } from '@core/contentlinks/providers/delegate';\nimport { CoreUserDelegate } from '@core/user/providers/user-delegate';\nimport { CoreCronDelegate } from '@providers/cron';\nimport { AddonMessagesSendMessageUserHandler } from './providers/user-send-message-handler';\nimport { AddonMessagesAddContactUserHandler } from './providers/user-add-contact-handler';\nimport { AddonMessagesBlockContactUserHandler } from './providers/user-block-contact-handler';\nimport { AddonMessagesDiscussionLinkHandler } from './providers/discussion-link-handler';\nimport { AddonMessagesIndexLinkHandler } from './providers/index-link-handler';\nimport { AddonMessagesSyncCronHandler } from './providers/sync-cron-handler';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { CoreSettingsDelegate } from '@core/settings/providers/delegate';\nimport { AddonMessagesSettingsHandler } from './providers/settings-handler';\nimport { AddonPushNotificationsDelegate } from '@addon/pushnotifications/providers/delegate';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        AddonMessagesProvider,\n        AddonMessagesOfflineProvider,\n        AddonMessagesSyncProvider,\n        AddonMessagesMainMenuHandler,\n        AddonMessagesSendMessageUserHandler,\n        AddonMessagesAddContactUserHandler,\n        AddonMessagesBlockContactUserHandler,\n        AddonMessagesDiscussionLinkHandler,\n        AddonMessagesIndexLinkHandler,\n        AddonMessagesSyncCronHandler,\n        AddonMessagesSettingsHandler\n    ]\n})\nexport class AddonMessagesModule {\n    constructor(mainMenuDelegate: CoreMainMenuDelegate, mainmenuHandler: AddonMessagesMainMenuHandler,\n            contentLinksDelegate: CoreContentLinksDelegate, indexLinkHandler: AddonMessagesIndexLinkHandler,\n            discussionLinkHandler: AddonMessagesDiscussionLinkHandler, sendMessageHandler: AddonMessagesSendMessageUserHandler,\n            userDelegate: CoreUserDelegate, cronDelegate: CoreCronDelegate, syncHandler: AddonMessagesSyncCronHandler,\n            network: Network, messagesSync: AddonMessagesSyncProvider, appProvider: CoreAppProvider,\n            localNotifications: CoreLocalNotificationsProvider, messagesProvider: AddonMessagesProvider,\n            sitesProvider: CoreSitesProvider, linkHelper: CoreContentLinksHelperProvider,\n            settingsHandler: AddonMessagesSettingsHandler, settingsDelegate: CoreSettingsDelegate,\n            pushNotificationsDelegate: AddonPushNotificationsDelegate, utils: CoreUtilsProvider,\n            addContactHandler: AddonMessagesAddContactUserHandler, blockContactHandler: AddonMessagesBlockContactUserHandler) {\n        // Register handlers.\n        mainMenuDelegate.registerHandler(mainmenuHandler);\n        contentLinksDelegate.registerHandler(indexLinkHandler);\n        contentLinksDelegate.registerHandler(discussionLinkHandler);\n        userDelegate.registerHandler(sendMessageHandler);\n        userDelegate.registerHandler(addContactHandler);\n        userDelegate.registerHandler(blockContactHandler);\n        cronDelegate.register(syncHandler);\n        cronDelegate.register(mainmenuHandler);\n        settingsDelegate.registerHandler(settingsHandler);\n\n        // Sync some discussions when device goes online.\n        network.onConnect().subscribe(() => {\n            messagesSync.syncAllDiscussions(undefined, true);\n        });\n\n        const notificationClicked = (notification: any): void => {\n            messagesProvider.isMessagingEnabledForSite(notification.site).then(() => {\n                sitesProvider.isFeatureDisabled('$mmSideMenuDelegate_mmaMessages', notification.site).then((disabled) => {\n                    if (disabled) {\n                        // Messages are disabled, stop.\n                        return;\n                    }\n\n                    messagesProvider.invalidateDiscussionsCache().finally(() => {\n                        linkHelper.goInSite(undefined, 'AddonMessagesIndexPage', undefined, notification.site);\n                    });\n                });\n            });\n        };\n\n        if (appProvider.isDesktop()) {\n            // Listen for clicks in simulated push notifications.\n            localNotifications.registerClick(AddonMessagesProvider.PUSH_SIMULATION_COMPONENT, notificationClicked);\n        }\n\n        // Register push notification clicks.\n        pushNotificationsDelegate.on('click').subscribe((notification) => {\n            if (utils.isFalseOrZero(notification.notif)) {\n                notificationClicked(notification);\n\n                return true;\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/messages.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { AddonMessagesProvider } from './messages';\nimport { CoreMainMenuHandler, CoreMainMenuHandlerToDisplay } from '@core/mainmenu/providers/delegate';\nimport { CoreCronHandler } from '@providers/cron';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\nimport { AddonPushNotificationsProvider } from '@addon/pushnotifications/providers/pushnotifications';\nimport { AddonPushNotificationsDelegate } from '@addon/pushnotifications/providers/delegate';\n\n/**\n * Handler to inject an option into main menu.\n */\n@Injectable()\nexport class AddonMessagesMainMenuHandler implements CoreMainMenuHandler, CoreCronHandler {\n    name = 'AddonMessages';\n    priority = 800;\n    protected handler: CoreMainMenuHandlerToDisplay = {\n        icon: 'chatbubbles',\n        title: 'addon.messages.messages',\n        page: 'AddonMessagesIndexPage',\n        class: 'addon-messages-handler',\n        showBadge: true, // Do not check isMessageCountEnabled because we'll use fallback it not enabled.\n        badge: '',\n        loading: true\n    };\n\n    constructor(private messagesProvider: AddonMessagesProvider, private sitesProvider: CoreSitesProvider,\n            private eventsProvider: CoreEventsProvider, private appProvider: CoreAppProvider,\n            private localNotificationsProvider: CoreLocalNotificationsProvider, private textUtils: CoreTextUtilsProvider,\n            private pushNotificationsProvider: AddonPushNotificationsProvider, utils: CoreUtilsProvider,\n            pushNotificationsDelegate: AddonPushNotificationsDelegate) {\n\n        eventsProvider.on(AddonMessagesProvider.READ_CHANGED_EVENT, (data) => {\n            this.updateBadge(data.siteId);\n        });\n\n        eventsProvider.on(AddonMessagesProvider.READ_CRON_EVENT, (data) => {\n            this.updateBadge(data.siteId);\n        });\n\n        // Reset info on logout.\n        eventsProvider.on(CoreEventsProvider.LOGOUT, (data) => {\n            this.handler.badge = '';\n            this.handler.loading = true;\n        });\n\n        // If a message push notification is received, refresh the count.\n        pushNotificationsDelegate.on('receive').subscribe((notification) => {\n            // New message received. If it's from current site, refresh the data.\n            if (utils.isFalseOrZero(notification.notif) && this.sitesProvider.isCurrentSite(notification.site)) {\n                this.updateBadge(notification.site);\n            }\n        });\n\n        // Register Badge counter.\n        pushNotificationsDelegate.registerCounterHandler('AddonMessages');\n    }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.messagesProvider.isPluginEnabled();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreMainMenuHandlerToDisplay} Data needed to render the handler.\n     */\n    getDisplayData(): CoreMainMenuHandlerToDisplay {\n        if (this.handler.loading) {\n            this.updateBadge();\n        }\n\n        return this.handler;\n    }\n\n    /**\n     * Triggers an update for the badge number and loading status. Mandatory if showBadge is enabled.\n     *\n     * @param {string} siteId Site ID or current Site if undefined.\n     */\n    updateBadge(siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n        if (!siteId) {\n            return;\n        }\n\n        this.messagesProvider.getUnreadConversationsCount(undefined, siteId).then((unread) => {\n            // Leave badge enter if there is a 0+ or a 0.\n            this.handler.badge = parseInt(unread, 10) > 0 ? unread : '';\n            // Update badge.\n            this.pushNotificationsProvider.updateAddonCounter('AddonMessages', unread, siteId);\n        }).catch(() => {\n            this.handler.badge = '';\n        }).finally(() => {\n            this.handler.loading = false;\n        });\n    }\n\n    /**\n     * Execute the process.\n     * Receives the ID of the site affected, undefined for all sites.\n     *\n     * @param  {string} [siteId] ID of the site affected, undefined for all sites.\n     * @return {Promise<any>}         Promise resolved when done, rejected if failure.\n     */\n    execute(siteId?: string): Promise<any> {\n        if (this.sitesProvider.isCurrentSite(siteId)) {\n            this.eventsProvider.trigger(AddonMessagesProvider.READ_CRON_EVENT, undefined, siteId);\n        }\n\n        if (this.appProvider.isDesktop() && this.localNotificationsProvider.isAvailable()) {\n            // @todo\n            /*$mmEmulatorHelper.checkNewNotifications(\n                    AddonMessagesProvider.PUSH_SIMULATION_COMPONENT, this.fetchMessages, this.getTitleAndText, siteId);*/\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Get the time between consecutive executions.\n     *\n     * @return {number} Time between consecutive executions (in ms).\n     */\n    getInterval(): number {\n        return this.appProvider.isDesktop() ? 60000 : 600000; // 1 or 10 minutes.\n    }\n\n    /**\n     * Whether it's a synchronization process or not.\n     *\n     * @return {boolean} True if is a sync process, false otherwise.\n     */\n    isSync(): boolean {\n        // This is done to use only wifi if using the fallback function.\n        // In desktop it is always sync, since it fetches messages to see if there's a new one.\n        return !this.messagesProvider.isMessageCountEnabled() || this.appProvider.isDesktop();\n    }\n\n    /**\n     * Whether the process should be executed during a manual sync.\n     *\n     * @return {boolean} True if is a manual sync process, false otherwise.\n     */\n    canManualSync(): boolean {\n        return true;\n    }\n\n    /**\n     * Get the latest unread received messages from a site.\n     *\n     * @param  {string} [siteId] Site ID. Default current.\n     * @return {Promise<any>}    Promise resolved with the notifications.\n     */\n    protected fetchMessages(siteId?: string): Promise<any> {\n        return this.messagesProvider.getUnreadReceivedMessages(true, false, true, siteId).then((response) => {\n            return response.messages;\n        });\n    }\n\n    /**\n     * Given a message, return the title and the text for the message.\n     *\n     * @param  {any} message Message.\n     * @return {Promise<any>}        Promise resolved with an object with title and text.\n     */\n    protected getTitleAndText(message: any): Promise<any> {\n        const data = {\n            title: message.userfromfullname,\n        };\n\n        return this.textUtils.formatText(message.text, true, true).catch(() => {\n            return message.text;\n        }).then((formattedText) => {\n            data['text'] = formattedText;\n\n            return data;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/mainmenu-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreUserDelegate, CoreUserProfileHandler, CoreUserProfileHandlerData } from '@core/user/providers/user-delegate';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { AddonMessagesProvider } from './messages';\n\n/**\n * Profile send message handler.\n */\n@Injectable()\nexport class AddonMessagesSendMessageUserHandler implements CoreUserProfileHandler {\n    name = 'AddonMessages:sendMessage';\n    priority = 1000;\n    type = CoreUserDelegate.TYPE_COMMUNICATION;\n\n    constructor(private linkHelper: CoreContentLinksHelperProvider, protected sitesProvider: CoreSitesProvider,\n        private messagesProvider: AddonMessagesProvider) { }\n\n    /**\n     * Check if handler is enabled.\n     *\n     * @return {Promise<any>} Promise resolved with true if enabled, rejected or resolved with false otherwise.\n     */\n    isEnabled(): Promise<any> {\n        return this.messagesProvider.isPluginEnabled();\n    }\n\n    /**\n     * Check if handler is enabled for this user in this context.\n     *\n     * @param {any} user          User to check.\n     * @param {number} courseId   Course ID.\n     * @param  {any} [navOptions] Course navigation options for current user. See $mmCourses#getUserNavigationOptions.\n     * @param  {any} [admOptions] Course admin options for current user. See $mmCourses#getUserAdministrationOptions.\n     * @return  {boolean|Promise<boolean>}   Promise resolved with true if enabled, resolved with false otherwise.\n     */\n    isEnabledForUser(user: any, courseId: number, navOptions?: any, admOptions?: any): boolean | Promise<boolean> {\n        return user.id != this.sitesProvider.getCurrentSiteUserId();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreUserProfileHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(user: any, courseId: number): CoreUserProfileHandlerData {\n        return {\n            icon: 'send',\n            title: 'addon.messages.message',\n            class: 'addon-messages-send-message-handler',\n            action: (event, navCtrl, user, courseId): void => {\n                event.preventDefault();\n                event.stopPropagation();\n                const pageParams = {\n                    showKeyboard: true,\n                    userId: user.id\n                };\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.linkHelper.goInSite(navCtrl, 'AddonMessagesDiscussionPage', pageParams);\n            }\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/user-send-message-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { AddonMessagesProvider } from './messages';\nimport { CoreSitesProvider } from '@providers/sites';\n\n/**\n * Content links handler for a discussion.\n * Match message index URL with params id, user1 or user2.\n */\n@Injectable()\nexport class AddonMessagesDiscussionLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'AddonMessagesDiscussionLinkHandler';\n    pattern = /\\/message\\/index\\.php.*([\\?\\&](id|user1|user2)=\\d+)/;\n\n    constructor(private linkHelper: CoreContentLinksHelperProvider, private messagesProvider: AddonMessagesProvider,\n            private sitesProvider: CoreSitesProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId, navCtrl?): void => {\n                const stateParams = {\n                    userId: parseInt(params.id || params.user2, 10)\n                };\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.linkHelper.goInSite(navCtrl, 'AddonMessagesDiscussionPage', stateParams, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        return this.messagesProvider.isPluginEnabled(siteId).then((enabled) => {\n            if (!enabled) {\n                return false;\n            }\n\n            if (typeof params.id == 'undefined' && typeof params.user2 == 'undefined') {\n                // Other user not defined, cannot treat the URL.\n                return false;\n            }\n\n            if (typeof params.user1 != 'undefined') {\n                // Check if user1 is the current user, since the app only supports current user.\n                return this.sitesProvider.getSite(siteId).then((site) => {\n                    return parseInt(params.user1, 10) == site.getUserId();\n                });\n            }\n\n            return true;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/discussion-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreContentLinksHandlerBase } from '@core/contentlinks/classes/base-handler';\nimport { CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\nimport { CoreContentLinksHelperProvider } from '@core/contentlinks/providers/helper';\nimport { AddonMessagesProvider } from './messages';\n\n/**\n * Content links handler for messaging index.\n * Match message index URL without params id, user1 or user2.\n */\n@Injectable()\nexport class AddonMessagesIndexLinkHandler extends CoreContentLinksHandlerBase {\n    name = 'AddonMessagesIndexLinkHandler';\n    pattern = /\\/message\\/index\\.php((?![\\?\\&](id|user1|user2)=\\d+).)*$/;\n\n    constructor(private linkHelper: CoreContentLinksHelperProvider, private messagesProvider: AddonMessagesProvider) {\n        super();\n    }\n\n    /**\n     * Get the list of actions for a link (url).\n     *\n     * @param {string[]} siteIds List of sites the URL belongs to.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {CoreContentLinksAction[]|Promise<CoreContentLinksAction[]>} List of (or promise resolved with list of) actions.\n     */\n    getActions(siteIds: string[], url: string, params: any, courseId?: number):\n            CoreContentLinksAction[] | Promise<CoreContentLinksAction[]> {\n        return [{\n            action: (siteId, navCtrl?): void => {\n                // Always use redirect to make it the new history root (to avoid \"loops\" in history).\n                this.linkHelper.goInSite(navCtrl, 'AddonMessagesIndexPage', undefined, siteId);\n            }\n        }];\n    }\n\n    /**\n     * Check if the handler is enabled for a certain site (site + user) and a URL.\n     * If not defined, defaults to true.\n     *\n     * @param {string} siteId The site ID.\n     * @param {string} url The URL to treat.\n     * @param {any} params The params of the URL. E.g. 'mysite.com?id=1' -> {id: 1}\n     * @param {number} [courseId] Course ID related to the URL. Optional but recommended.\n     * @return {boolean|Promise<boolean>} Whether the handler is enabled for the URL and site.\n     */\n    isEnabled(siteId: string, url: string, params: any, courseId?: number): boolean | Promise<boolean> {\n        return this.messagesProvider.isPluginEnabled(siteId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/index-link-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { CoreCronHandler } from '@providers/cron';\nimport { AddonMessagesSyncProvider } from './sync';\n\n/**\n * Synchronization cron handler.\n */\n@Injectable()\nexport class AddonMessagesSyncCronHandler implements CoreCronHandler {\n    name = 'AddonMessagesSyncCronHandler';\n\n    constructor(private messagesSync: AddonMessagesSyncProvider) {}\n\n    /**\n     * Execute the process.\n     * Receives the ID of the site affected, undefined for all sites.\n     *\n     * @param  {string} [siteId] ID of the site affected, undefined for all sites.\n     * @return {Promise<any>}         Promise resolved when done, rejected if failure.\n     */\n    execute(siteId?: string): Promise<any> {\n        return this.messagesSync.syncAllDiscussions(siteId);\n    }\n\n    /**\n     * Get the time between consecutive executions.\n     *\n     * @return {number} Time between consecutive executions (in ms).\n     */\n    getInterval(): number {\n        return 300000; // 5 minutes.\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/sync-cron-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { AddonMessagesProvider } from './messages';\nimport { CoreSettingsHandler, CoreSettingsHandlerData } from '@core/settings/providers/delegate';\n\n/**\n * Message settings handler.\n */\n@Injectable()\nexport class AddonMessagesSettingsHandler implements CoreSettingsHandler {\n    name = 'AddonMessages';\n    priority = 600;\n\n    constructor(private messagesProvider: AddonMessagesProvider) {\n    }\n\n    /**\n     * Check if the handler is enabled on a site level.\n     *\n     * @return {boolean | Promise<boolean>} Whether or not the handler is enabled on a site level.\n     */\n    isEnabled(): boolean | Promise<boolean> {\n        return this.messagesProvider.isMessagePreferencesEnabled();\n    }\n\n    /**\n     * Returns the data needed to render the handler.\n     *\n     * @return {CoreSettingsHandlerData} Data needed to render the handler.\n     */\n    getDisplayData(): CoreSettingsHandlerData {\n        return {\n            icon: 'chatbubbles',\n            title: 'addon.messages.messagepreferences',\n            page: 'AddonMessagesSettingsPage',\n            class: 'addon-messages-settings-handler'\n        };\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/providers/settings-handler.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { AddonPushNotificationsProvider } from './providers/pushnotifications';\nimport { AddonPushNotificationsDelegate } from './providers/delegate';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreLocalNotificationsProvider } from '@providers/local-notifications';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        AddonPushNotificationsProvider,\n        AddonPushNotificationsDelegate\n    ]\n})\nexport class AddonPushNotificationsModule {\n    constructor(platform: Platform, pushNotificationsProvider: AddonPushNotificationsProvider, eventsProvider: CoreEventsProvider,\n            localNotificationsProvider: CoreLocalNotificationsProvider, loggerProvider: CoreLoggerProvider) {\n\n        const logger = loggerProvider.getInstance('AddonPushNotificationsModule');\n\n        // Register device on GCM or APNS server.\n        platform.ready().then(() => {\n            pushNotificationsProvider.registerDevice();\n        });\n\n        eventsProvider.on(CoreEventsProvider.NOTIFICATION_SOUND_CHANGED, () => {\n            // Notification sound has changed, register the device again to update the sound setting.\n            pushNotificationsProvider.registerDevice();\n        });\n\n        // Register device on Moodle site when login.\n        eventsProvider.on(CoreEventsProvider.LOGIN, () => {\n            pushNotificationsProvider.registerDeviceOnMoodle().catch((error) => {\n                logger.warn('Can\\'t register device', error);\n            });\n        });\n\n        eventsProvider.on(CoreEventsProvider.SITE_DELETED, (site) => {\n            pushNotificationsProvider.unregisterDeviceOnMoodle(site).catch((error) => {\n                logger.warn('Can\\'t unregister device', error);\n            });\n            pushNotificationsProvider.cleanSiteCounters(site.id);\n        });\n\n        // Listen for local notification clicks (generated by the app).\n        localNotificationsProvider.registerClick(AddonPushNotificationsProvider.COMPONENT,\n            pushNotificationsProvider.notificationClicked);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/pushnotifications/pushnotifications.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { AddonRemoteThemesProvider } from './providers/remotethemes';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreInitDelegate } from '@providers/init';\nimport { CoreSitesProvider } from '@providers/sites';\n\n@NgModule({\n    declarations: [\n    ],\n    imports: [\n    ],\n    providers: [\n        AddonRemoteThemesProvider\n    ]\n})\nexport class AddonRemoteThemesModule {\n    constructor(initDelegate: CoreInitDelegate, remoteThemesProvider: AddonRemoteThemesProvider, eventsProvider: CoreEventsProvider,\n            sitesProvider: CoreSitesProvider) {\n\n        // Preload the current site styles.\n        initDelegate.registerProcess({\n            name: 'AddonRemoteThemesPreloadCurrent',\n            priority: CoreInitDelegate.MAX_RECOMMENDED_PRIORITY + 250,\n            blocking: true,\n            load: remoteThemesProvider.preloadCurrentSite.bind(remoteThemesProvider)\n        });\n\n        // Preload the styles of the rest of sites.\n        initDelegate.registerProcess({\n            name: 'AddonRemoteThemesPreload',\n            blocking: true,\n            load: remoteThemesProvider.preloadSites.bind(remoteThemesProvider)\n        });\n\n        let addingSite,\n            unloadTmpStyles;\n\n        // When a new site is added to the app, add its styles.\n        eventsProvider.on(CoreEventsProvider.SITE_ADDED, (data) => {\n            addingSite = data.siteId;\n\n            remoteThemesProvider.addSite(data.siteId).finally(() => {\n                if (addingSite == data.siteId) {\n                    addingSite = false;\n                }\n\n                if (unloadTmpStyles == data.siteId) {\n                    // This site had some tmp styles loaded, unload them.\n                    remoteThemesProvider.unloadTmpStyles();\n                }\n            });\n        });\n\n        // Update styles when current site is updated.\n        eventsProvider.on(CoreEventsProvider.SITE_UPDATED, (data) => {\n            if (data.siteId === sitesProvider.getCurrentSiteId()) {\n                remoteThemesProvider.load(data.siteId);\n            }\n        });\n\n        // Enable styles of current site on login.\n        eventsProvider.on(CoreEventsProvider.LOGIN, (data) => {\n            remoteThemesProvider.enable(data.siteId);\n        });\n\n        // Disable added styles on logout.\n        eventsProvider.on(CoreEventsProvider.LOGOUT, (data) => {\n            remoteThemesProvider.clear();\n        });\n\n        // Remove site styles when a site is deleted.\n        eventsProvider.on(CoreEventsProvider.SITE_DELETED, (site) => {\n            remoteThemesProvider.removeSite(site.id);\n        });\n\n        // Load temporary styles when site config is checked in login.\n        eventsProvider.on(CoreEventsProvider.LOGIN_SITE_CHECKED, (data) => {\n            remoteThemesProvider.loadTmpStyles(data.config.mobilecssurl);\n        });\n\n        // Unload temporary styles when site config is \"unchecked\" in login.\n        eventsProvider.on(CoreEventsProvider.LOGIN_SITE_UNCHECKED, (data) => {\n            if (data.siteId && data.siteid == addingSite) {\n                // The tmp styles are from a site that is being added permanently.\n                // Wait for the final site styles to be loaded before removing the tmp styles so there is no blink effect.\n                unloadTmpStyles = data.siteId;\n            } else {\n                // The tmp styles are from a site that wasn't added in the end. Just remove them.\n                remoteThemesProvider.unloadTmpStyles();\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/remotethemes/remotethemes.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { CoreFileProvider } from '@providers/file';\nimport { CoreFilepoolProvider } from '@providers/filepool';\nimport { CoreLoggerProvider } from '@providers/logger';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreConstants } from '@core/constants';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n/**\n * Service to handle remote themes. A remote theme is a CSS sheet stored in the site that allows customising the Mobile app.\n */\n@Injectable()\nexport class AddonRemoteThemesProvider {\n    static COMPONENT = 'mmaRemoteStyles';\n    protected SEPARATOR_35 = /\\/\\*\\*? *3\\.5(\\.0)? *styles? *\\*\\//i; // A comment like \"/* 3.5 styles */\".\n\n    protected logger;\n    protected stylesEls: {[siteId: string]: {element: HTMLStyleElement, hash: string}} = {};\n\n    constructor(logger: CoreLoggerProvider, private sitesProvider: CoreSitesProvider, private fileProvider: CoreFileProvider,\n            private filepoolProvider: CoreFilepoolProvider, private http: Http, private utils: CoreUtilsProvider,\n            private domUtils: CoreDomUtilsProvider, private textUtils: CoreTextUtilsProvider) {\n        this.logger = logger.getInstance('AddonRemoteThemesProvider');\n    }\n\n    /**\n     * Add a style element for a site and load the styles for that element. The style will be disabled.\n     *\n     * @param {string} siteId Site ID.\n     * @return {Promise<any>} Promise resolved when added and loaded.\n     */\n    addSite(siteId: string): Promise<any> {\n        if (!siteId || this.stylesEls[siteId]) {\n            // Invalid site ID or style already added.\n            return Promise.resolve();\n        }\n\n        // Create the style and add it to the header.\n        const styleEl = document.createElement('style');\n        styleEl.setAttribute('id', 'mobilecssurl-' + siteId);\n        this.disableElement(styleEl, true);\n\n        document.head.appendChild(styleEl);\n        this.stylesEls[siteId] = {\n            element: styleEl,\n            hash: ''\n        };\n\n        return this.load(siteId, true);\n    }\n\n    /**\n     * Clear styles added to the DOM, disabling them all.\n     */\n    clear(): void {\n        // Disable all the styles.\n        const styles = <HTMLStyleElement[]> Array.from(document.querySelectorAll('style[id*=mobilecssurl]'));\n        styles.forEach((style) => {\n            this.disableElement(style, true);\n        });\n    }\n\n    /**\n     * Enabled or disable a certain style element.\n     *\n     * @param {HTMLStyleElement} element The element to enable or disable.\n     * @param {boolean} disable Whether to disable or enable the element.\n     */\n    disableElement(element: HTMLStyleElement, disable: boolean): void {\n        // Setting disabled should be enough, but we also set the attribute so it can be seen in the DOM which ones are disabled.\n        if (disable) {\n            element.disabled = true;\n            element.setAttribute('disabled', 'disabled');\n        } else {\n            element.disabled = false;\n            element.removeAttribute('disabled');\n        }\n    }\n\n    /**\n     * Downloads a CSS file and remove old files if needed.\n     *\n     * @param {string} siteId Site ID.\n     * @param {string} url File URL.\n     * @return {Promise<any>} Promise resolved when the file is downloaded.\n     */\n    protected downloadFileAndRemoveOld(siteId: string, url: string): Promise<any> {\n        // Check if the file is downloaded.\n        return this.filepoolProvider.getFileStateByUrl(siteId, url).then((state) => {\n            return state !== CoreConstants.NOT_DOWNLOADED;\n        }).catch(() => {\n            return true; // An error occurred while getting state (shouldn't happen). Don't delete downloaded file.\n        }).then((isDownloaded) => {\n            if (!isDownloaded) {\n                // File not downloaded, URL has changed or first time. Delete downloaded CSS files.\n                return this.filepoolProvider.removeFilesByComponent(siteId, AddonRemoteThemesProvider.COMPONENT, 1);\n            }\n        }).then(() => {\n\n            return this.filepoolProvider.downloadUrl(siteId, url, false, AddonRemoteThemesProvider.COMPONENT, 1);\n        });\n    }\n\n    /**\n     * Enable the styles of a certain site.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     */\n    enable(siteId?: string): void {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        if (this.stylesEls[siteId]) {\n            this.disableElement(this.stylesEls[siteId].element, false);\n        }\n    }\n\n    /**\n     * Get remote styles of a certain site.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @return {Promise<{fileUrl: string, styles: string}>} Promise resolved with the styles and the URL of the CSS file.\n     */\n    get(siteId?: string): Promise<{fileUrl: string, styles: string}> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n\n        let fileUrl;\n\n        return this.sitesProvider.getSite(siteId).then((site) => {\n            const infos = site.getInfo();\n            if (infos && infos.mobilecssurl) {\n                fileUrl = infos.mobilecssurl;\n\n                if (this.fileProvider.isAvailable()) {\n                    // The file system is available. Download the file and remove old CSS files if needed.\n                    return this.downloadFileAndRemoveOld(siteId, fileUrl);\n                } else {\n                    // Return the online URL.\n                    return fileUrl;\n                }\n            } else {\n                if (infos && infos.mobilecssurl === '') {\n                    // CSS URL is empty. Delete downloaded files (if any).\n                    this.filepoolProvider.removeFilesByComponent(siteId, AddonRemoteThemesProvider.COMPONENT, 1);\n                }\n\n                return Promise.reject(null);\n            }\n        }).then((url) => {\n            this.logger.debug('Loading styles from: ', url);\n\n            // Get the CSS content using HTTP because we will treat the styles before saving them in the file.\n            return this.http.get(url).toPromise();\n        }).then((response): any => {\n            const text = response && response.text();\n            if (typeof text == 'string') {\n                return {fileUrl: fileUrl, styles: this.get35Styles(text)};\n            } else {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Check if the CSS code has a separator for 3.5 styles. If it does, get only the styles after the separator.\n     *\n     * @param {string} cssCode The CSS code to check.\n     * @return {string} The filtered styles.\n     */\n    protected get35Styles(cssCode: string): string {\n        const separatorPos = cssCode.search(this.SEPARATOR_35);\n        if (separatorPos > -1) {\n            return cssCode.substr(separatorPos).replace(this.SEPARATOR_35, '');\n        }\n\n        return cssCode;\n    }\n\n    /**\n     * Load styles for a certain site.\n     *\n     * @param {string} [siteId] Site ID. If not defined, current site.\n     * @param {boolean} [disabled] Whether loaded styles should be disabled.\n     * @return {Promise<any>} Promise resolved when styles are loaded.\n     */\n    load(siteId?: string, disabled?: boolean): Promise<any> {\n        siteId = siteId || this.sitesProvider.getCurrentSiteId();\n        disabled = !!disabled;\n\n        this.logger.debug('Load site', siteId, disabled);\n\n        if (siteId && this.stylesEls[siteId]) {\n            // Enable or disable the styles.\n            this.disableElement(this.stylesEls[siteId].element, disabled);\n\n            return this.get(siteId).then((data) => {\n                const hash = <string> Md5.hashAsciiStr(data.styles);\n\n                // Update the styles only if they have changed.\n                if (this.stylesEls[siteId].hash !== hash) {\n                    this.stylesEls[siteId].element.innerHTML = data.styles;\n                    this.stylesEls[siteId].hash = hash;\n\n                    // Adding styles to a style element automatically enables it. Disable it again.\n                    if (disabled) {\n                        this.disableElement(this.stylesEls[siteId].element, true);\n                    }\n                }\n\n                // Styles have been loaded, now treat the CSS.\n                this.treatCSSCode(siteId, data.fileUrl, data.styles).catch(() => {\n                    // Ignore errors.\n                });\n            });\n        }\n\n        return Promise.reject(null);\n    }\n\n    /**\n     * Load styles for a temporary site. These styles aren't prefetched.\n     *\n     * @param {string} url URL to get the styles from.\n     * @return {Promise<any>} Promise resolved when loaded.\n     */\n    loadTmpStyles(url: string): Promise<any> {\n        if (!url) {\n            return Promise.resolve();\n        }\n\n        return this.http.get(url).toPromise().then((response) => {\n            let text = response && response.text();\n            if (typeof text == 'string') {\n                text = this.get35Styles(text);\n\n                const styleEl = document.createElement('style');\n                styleEl.setAttribute('id', 'mobilecssurl-tmpsite');\n                styleEl.innerHTML = text;\n\n                document.head.appendChild(styleEl);\n                this.stylesEls.tmpsite = {\n                    element: styleEl,\n                    hash: ''\n                };\n            } else {\n                return Promise.reject(null);\n            }\n        });\n    }\n\n    /**\n     * Preload the styles of the current site (stored in DB).\n     *\n     * @return {Promise<any>} Promise resolved when loaded.\n     */\n    preloadCurrentSite(): Promise<any> {\n        return this.sitesProvider.getStoredCurrentSiteId().then((siteId) => {\n            return this.addSite(siteId);\n        });\n    }\n\n    /**\n     * Preload the styles of all the stored sites.\n     *\n     * @return {Promise<any>} Promise resolved when loaded.\n     */\n    preloadSites(): Promise<any> {\n        return this.sitesProvider.getSitesIds().then((ids) => {\n            const promises = [];\n            ids.forEach((siteId) => {\n                promises.push(this.addSite(siteId));\n            });\n\n            return this.utils.allPromises(promises);\n        });\n    }\n\n    /**\n     * Remove the styles of a certain site.\n     *\n     * @param {string} siteId Site ID.\n     */\n    removeSite(siteId: string): void {\n        if (siteId && this.stylesEls[siteId]) {\n            document.head.removeChild(this.stylesEls[siteId].element);\n            delete this.stylesEls[siteId];\n        }\n    }\n\n    /**\n     * Search for files in a CSS code and try to download them. Once downloaded, replace their URLs\n     * and store the result in the CSS file.\n     *\n     * @param {string} siteId  Site ID.\n     * @param {string} fileUrl CSS file URL.\n     * @param {string} cssCode CSS code.\n     * @return {Promise<string>} Promise resolved with the CSS code.\n     */\n    protected treatCSSCode(siteId: string, fileUrl: string, cssCode: string): Promise<string> {\n        if (!this.fileProvider.isAvailable()) {\n            return Promise.reject(null);\n        }\n\n        const urls = this.domUtils.extractUrlsFromCSS(cssCode),\n            promises = [];\n        let filePath,\n            updated = false;\n\n        // Get the path of the CSS file.\n        promises.push(this.filepoolProvider.getFilePathByUrl(siteId, fileUrl).then((path) => {\n            filePath = path;\n        }));\n\n        urls.forEach((url) => {\n            // Download the file only if it's an online URL.\n            if (url.indexOf('http') == 0) {\n                promises.push(this.filepoolProvider.downloadUrl(siteId, url, false, AddonRemoteThemesProvider.COMPONENT, 2)\n                        .then((fileUrl) => {\n                    if (fileUrl != url) {\n                        cssCode = cssCode.replace(new RegExp(this.textUtils.escapeForRegex(url), 'g'), fileUrl);\n                        updated = true;\n                    }\n                }).catch((error) => {\n                    // It shouldn't happen. Ignore errors.\n                    this.logger.warn('Error treating file ', url, error);\n                }));\n            }\n        });\n\n        return Promise.all(promises).then(() => {\n            // All files downloaded. Store the result if it has changed.\n            if (updated) {\n                return this.fileProvider.writeFile(filePath, cssCode);\n            }\n        }).then(() => {\n            return cssCode;\n        });\n    }\n\n    /**\n     * Unload styles for a temporary site.\n     */\n    unloadTmpStyles(): void {\n        return this.removeSite('tmpsite');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/remotethemes/providers/remotethemes.ts"],"sourceRoot":""}